steps:

# Setup SSH
# These are required before dep
- name: gcr.io/cloud-builders/gcloud
  args:
  - kms
  - decrypt
  - --ciphertext-file=ci/id_rsa.enc
  - --plaintext-file=/root/.ssh/id_rsa
  - --location=global
  - --keyring=build
  - --key=build-key
  volumes:
  - name: 'ssh'
    path: /root/.ssh
  id: 'get-ssh-key'
- name: 'gcr.io/cloud-builders/git'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    chmod 600 /root/.ssh/id_rsa
    cat <<EOF >/root/.ssh/config
    Hostname github.com
    IdentityFile /root/.ssh/id_rsa
    EOF
    mv ./ci/github_known_hosts /root/.ssh/known_hosts
    git config --global url."ssh://git@github.com/solo-io".insteadOf https://github.com/solo-io
  volumes:
  - name: 'ssh'
    path: /root/.ssh
  id: 'configure-git'

# Can create a dep cache by running 'gcloud builds submit . --config=cloudbuild-cache.yaml'
- name: gcr.io/cloud-builders/gsutil
  entrypoint: 'bash'
  args: ['-c', 'mkdir -p ./gopath/pkg/dep && gsutil cat gs://gloo-ee-cache/solo-projects/solo-projects-dep.tar.gz | tar -xzf -']
  id: 'download-untar-dep-cache'

# Using dep container from github.com/solo-io/cloud-builders/dep
# This copies files into the proper workspace layout and so must be run before other tasks
# Subsequent steps should set GOPATH variable to avoid setting up unnecessary sym link
- name: 'gcr.io/$PROJECT_ID/dep'
  args: ['ensure']
  env: ['PROJECT_ROOT=github.com/solo-io/solo-projects']
  volumes:
  - name: 'ssh'
    path: /root/.ssh
  id: 'dep'

# Run some basic checks on the repo
# 1) check formatting of go files
# 2) ensure that make generated-code produces a clean diff

# e2e-ginkgo is produced from https://github.com/solo-io/cloud-builders/e2e-ginkgo
# Must set the GOPATH to tell the container the workspace has already been set up (by the dep step above)
- name: 'gcr.io/$PROJECT_ID/e2e-ginkgo'
  env:
  - 'PROJECT_ROOT=github.com/solo-io/solo-projects'
  - 'GOPATH=/workspace/gopath'
  dir: './gopath/src/github.com/solo-io/solo-projects'
  entrypoint: make
  args: ['check-format']
  waitFor: ['dep']
  id: 'check-format'
- name: node:12.13.1
  env:
  - 'PROJECT_ROOT=github.com/solo-io/solo-projects'
  - 'GOPATH=/workspace/gopath'
  dir: './gopath/src/github.com/solo-io/solo-projects/projects/gloo-ui'
  entrypoint: yarn
  args: ['install']
  id: yarn-install
  waitFor: ['dep']
- name: 'gcr.io/$PROJECT_ID/go-make:0.1.13'
  entrypoint: 'bash'
  args: ['ci/check-code-gen.sh']
  env:
  - 'PROJECT_ROOT=github.com/solo-io/solo-projects'
  - 'GOPATH=/workspace/gopath'
  - 'TAGGED_VERSION=$TAG_NAME'
  dir: './gopath/src/github.com/solo-io/solo-projects'
  volumes:
  - name: 'ssh'
    path: /root/.ssh
  waitFor: ['dep', 'yarn-install']
  id: 'check-code-gen'
- name: 'gcr.io/cloud-builders/yarn'
  args: ['build']
  dir: './gopath/src/github.com/solo-io/solo-projects/projects/gloo-ui'
  id: 'yarn-build'
  waitFor: ['yarn-install','check-code-gen']

# Helm related setup
- name: gcr.io/cloud-builders/gsutil
  entrypoint: mkdir
  args: ['-p', './_output/helm']
  dir: './gopath/src/github.com/solo-io/solo-projects'
  id: 'create-helm-dir'
- name: 'gcr.io/$PROJECT_ID/go-make:0.1.17'
  args: ['fetch-helm']
  env:
    - 'PROJECT_ROOT=github.com/solo-io/solo-projects'
    - 'GOPATH=/workspace/gopath'
    - 'TAGGED_VERSION=$TAG_NAME'
  dir: './gopath/src/github.com/solo-io/solo-projects'
  id: 'fetch-helm'
# Setup and run e2es
- name: gcr.io/cloud-builders/gsutil
  entrypoint: 'bash'
  args:
  - '-ce'
  - |
    ENVOY_VERSION=v$$(head -n1 ./cmd/envoyinit/Dockerfile|cut -d: -f2)
    gsutil cp gs://artifacts.solo.io/envoy/$$ENVOY_VERSION/envoy.stripped /workspace/envoy
    chmod +x /workspace/envoy
  dir: './gopath/src/github.com/solo-io/solo-projects'
  waitFor: ['dep']
  id: 'get-envoy'
- name: gcr.io/cloud-builders/gcloud
  args:
  - kms
  - decrypt
  - --ciphertext-file=./gopath/src/github.com/solo-io/solo-projects/ci/aws_credentials.enc
  - --plaintext-file=/workspace/aws_credentials
  - --location=global
  - --keyring=build
  - --key=build-key
  waitFor: ['dep']
  id: 'setup-aws-creds'

# e2e-ginkgo is produced from https://github.com/solo-io/cloud-builders/e2e-ginkgo
# sets up redis, consul, kubectl, go with required environment variables
# need to use the provided entrypoint
# This step HAS to run after codegen, because codegen also runs `go generate` and might overwrite existing plugin files.
- name: 'gcr.io/$PROJECT_ID/e2e-ginkgo:0.1.17'
  dir: './gopath/src/github.com/solo-io/solo-projects'
  entrypoint: 'bash'
  args:
  - '-ce'
  - |
    go generate ./test/extauth/plugins/... ./projects/extauth/plugins/...
    /builder/bin/ginkgo.bash -r -failFast -trace -progress
  env:
  - 'PROJECT_ROOT=github.com/solo-io/solo-projects'
  - 'ENVOY_BINARY=/workspace/envoy'
  - 'AWS_SHARED_CREDENTIALS_FILE=/workspace/aws_credentials'
  - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
  - 'CLOUDSDK_CONTAINER_CLUSTER=test-cluster'
  - 'RUN_KUBE_TESTS=1'
  - 'CLOUD_BUILD=1'
  - 'GOPATH=/workspace/gopath'
  - 'HELM_HOME=/root/.helm'
  waitFor: ['dep', 'get-envoy', 'setup-aws-creds', 'fetch-helm', 'check-code-gen']
  id: 'test'

- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args: ['-c', 'docker login quay.io --username "solo-io+solobot" --password $$QUAY_IO_PASSWORD']
  secretEnv: ['QUAY_IO_PASSWORD']
  waitFor: ['-']
  id: 'docker-login'

- name: 'gcr.io/$PROJECT_ID/e2e-ginkgo'
  entrypoint: 'bash'
  args: ['-c', 'curl -sL https://run.solo.io/gloo/install | GLOO_VERSION=$(go run get_gloo_version.go) sh && mkdir -p _output && mv ~/.gloo/bin/glooctl _output/glooctl-linux-amd64']
  dir: './gopath/src/github.com/solo-io/solo-projects'
  waitFor: ['test']
  id: 'download-cli'

- name: 'gcr.io/$PROJECT_ID/go-make:0.1.13'
  args: ['docker']
  env:
    - 'TAGGED_VERSION=$TAG_NAME'
    - 'PROJECT_ROOT=github.com/solo-io/solo-projects'
    - 'GOPATH=/workspace/gopath'
    - 'BUILD_ID=$BUILD_ID'
    - 'GCLOUD_PROJECT_ID=$PROJECT_ID'
  dir: './gopath/src/github.com/solo-io/solo-projects'
  secretEnv: ['GITHUB_TOKEN', 'QUAY_IO_PASSWORD']
  waitFor: ['dep','yarn-build', 'fetch-helm']
  id: 'build-images'

  # Run regression tests
- name: 'gcr.io/$PROJECT_ID/go-make:0.1.17'
  args: ['build-test-assets']
  env:
    - 'PROJECT_ROOT=github.com/solo-io/solo-projects'
    - 'GOPATH=/workspace/gopath'
    - 'BUILD_ID=$BUILD_ID'
    - 'GCLOUD_PROJECT_ID=$PROJECT_ID'
    - 'HELM_HOME=/root/.helm'
    - 'TAGGED_VERSION=$TAG_NAME'
  dir: './gopath/src/github.com/solo-io/solo-projects'
  waitFor: ['download-cli', 'build-images', 'docker-login', 'test']
  id: 'build-test-assets'
- name: gcr.io/cloud-builders/gcloud
  args: ['config', 'set', 'compute/zone', 'us-central1-a']
  id: 'set-zone-regression'
- name: gcr.io/cloud-builders/gcloud
  args: ['container', 'clusters', 'get-credentials', 'solo-projects-regression']
  id: 'get-credentials-regression'
- name: 'gcr.io/$PROJECT_ID/e2e-ginkgo:0.1.17'
  env:
    - 'PROJECT_ROOT=github.com/solo-io/solo-projects'
    - 'GOPATH=/workspace/gopath'
    - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
    - 'CLOUDSDK_CONTAINER_CLUSTER=solo-projects-regressions'
    - 'RUN_KUBE2E_TESTS=1'
  dir: './gopath/src/github.com/solo-io/solo-projects'
  args: ['-r', '-failFast', '-trace', '-progress', 'test/regressions']
  waitFor: ['build-test-assets', 'get-credentials-regression']
  id: 'regression-tests'

- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args: ['-c', 'docker login quay.io --username "solo-io+solobot" --password $$QUAY_IO_PASSWORD']
  secretEnv: ['QUAY_IO_PASSWORD']
  waitFor: ['regression-tests']
  id: 'docker-login-push'

- name: 'gcr.io/$PROJECT_ID/go-make:0.1.17'
  args: ['--jobs=4', 'docker-push']
  env:
    - 'TAGGED_VERSION=$TAG_NAME'
    - 'PROJECT_ROOT=github.com/solo-io/solo-projects'
    - 'GOPATH=/workspace/gopath'
  dir: './gopath/src/github.com/solo-io/solo-projects'
  secretEnv: ['GITHUB_TOKEN', 'QUAY_IO_PASSWORD']
  waitFor: ['docker-login-push']
  id: 'push-docker-images'

# go-make is produced from https://github.com/solo-io/cloud-builders/go-make
- name: 'gcr.io/$PROJECT_ID/go-make:0.1.17'
  args: ['manifest', 'upload-github-release-assets', 'upload-changelog', 'publish-dependencies']
  env:
  - 'TAGGED_VERSION=$TAG_NAME'
  - 'PROJECT_ROOT=github.com/solo-io/solo-projects'
  - 'GOPATH=/workspace/gopath'
  - 'HELM_HOME=/root/.helm' # tell helm where to find data
  dir: './gopath/src/github.com/solo-io/solo-projects'
  secretEnv: ['GITHUB_TOKEN', 'QUAY_IO_PASSWORD']
  id: 'release'

- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args: ['-c', 'docker logout']
  id: 'docker-logout'

- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args: ['-c', 'docker login quay.io --username "solo-io+solobot" --password $$QUAY_IO_PASSWORD']
  secretEnv: ['QUAY_IO_PASSWORD']
  id: 'docker-login-again'

  # Sync helm chart data back to google storage bucket
- name: 'gcr.io/$PROJECT_ID/go-make:0.1.17'
  args: ['save-helm']
  env:
    - 'PROJECT_ROOT=github.com/solo-io/solo-projects'
    - 'GOPATH=/workspace/gopath'
    - 'TAGGED_VERSION=$TAG_NAME'
  dir: './gopath/src/github.com/solo-io/solo-projects'
  id: 'save-helm-chart'

secrets:
- kmsKeyName: projects/gloo-ee/locations/global/keyRings/build/cryptoKeys/build-key
  secretEnv:
    GITHUB_TOKEN: CiQAwdWthrSJ1uI5Ao/LnmX8OzXmA5TNCtDpeV6JdNouaGh5vpwSUQD5SXFIkCBvnu/wYDSGwgWNJaQV75wP/kDephn5GGuGCe0EGFXXE54zyH8iHRL45Uq0s39SoHEyYoZXF2Qla8IbKGAKswPRViYSChPthQILdA==
    QUAY_IO_PASSWORD: CiQAwdWthknPPz3v+xcbHWaCRhuSisUqPrkn6sQJxbo7SaI9iucSaQD5SXFILt6uY5C4xcuuzDcZXml2FXnRBg9Uk6BDJebycORdyslJz9iVEWeTrFZoOyHh5aDTLQhuNEmW4znFnleICVdasJtwFE9VIJCU5OGCgkTFdfGGvMx8up37ST9MwDYUPCB1vqLL1w==

# Overall build timeout of 30m. The release builds take extra time for uploading and pushing artifacts. We can
# set timeouts on specific steps (dep, tests, etc) if we want to limit the time in sections, but want a forgiving
# timeout for the final step, and the default (10m) is not enough.
timeout: 3600s

tags: ['solo-projects']
options:
  machineType: 'N1_HIGHCPU_32'
