steps:
- name: gcr.io/cloud-builders/gcloud
  args:
  - kms
  - decrypt
  - --ciphertext-file=ci/id_rsa.enc
  - --plaintext-file=/root/.ssh/id_rsa
  - --location=global
  - --keyring=build
  - --key=build-key
  volumes:
  - name: 'ssh'
    path: /root/.ssh
- name: 'gcr.io/cloud-builders/git'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    chmod 600 /root/.ssh/id_rsa
    cat <<EOF >/root/.ssh/config
    Hostname github.com
    IdentityFile /root/.ssh/id_rsa
    EOF
    mv ./ci/github_known_hosts /root/.ssh/known_hosts
    git config --global url."ssh://git@github.com/solo-io".insteadOf https://github.com/solo-io
  volumes:
  - name: 'ssh'
    path: /root/.ssh
- name: 'soloio/dep'
  args: ['ensure']
  env: ['PROJECT_ROOT=github.com/solo-io/solo-projects']
  volumes:
  - name: 'ssh'
    path: /root/.ssh
  id: 'dep'

- name: gcr.io/cloud-builders/gsutil
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    gsutil cp gs://artifacts.solo.io/envoy/265f5f50b0b17b42442bcc8d7f7572a9b47a073a/envoy.stripped /workspace/envoy
    chmod +x /workspace/envoy
  waitFor: ['-']
  id: 'get-envoy'

- name: gcr.io/cloud-builders/gcloud
  args:
  - kms
  - decrypt
  - --ciphertext-file=ci/aws_credentials.enc
  - --plaintext-file=/workspace/aws_credentials
  - --location=global
  - --keyring=build
  - --key=build-key
  waitFor: ['-']
  id: 'setup-aws-creds'

- name: gcr.io/cloud-builders/gcloud
  args:
    - kms
    - decrypt
    - --ciphertext-file=ci/keygen_creds.json.enc
    - --plaintext-file=/workspace/keygen_creds.json
    - --location=global
    - --keyring=build
    - --key=build-key
  waitFor: ['-']
  id: 'setup-keygen-creds'


# e2e-go is produced from https://github.com/solo-io/cloud-builders/e2e-go
# sets up redis, consul, kubectl, go with required environment variables
# need to use the provided entrypoint
- name: 'gcr.io/$PROJECT_ID/e2e-go'
  env:
  - 'PROJECT_ROOT=github.com/solo-io/solo-projects'
  - 'ENVOY_BINARY=/workspace/envoy'
  - 'AWS_SHARED_CREDENTIALS_FILE=/workspace/aws_credentials'
  - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
  - 'CLOUDSDK_CONTAINER_CLUSTER=test-cluster'
  - 'RUN_KUBE_TESTS=1'
  args: ['test', '-v', 'github.com/solo-io/solo-projects/test/e2e']
  waitFor: ['dep', 'get-envoy', 'setup-aws-creds']

- name: 'gcr.io/cloud-builders/go'
  args: ['build', '-o', 'hypergloo', 'github.com/solo-io/solo-projects/projects/hypergloo']
  env: ['PROJECT_ROOT=github.com/solo-io/solo-projects']

- name: 'gcr.io/cloud-builders/go'
  args: ['build', '-o', 'sqoop-linux-amd64', 'github.com/solo-io/solo-projects/projects/sqoop/cmd']
  env: ['PROJECT_ROOT=github.com/solo-io/solo-projects']

- name: 'gcr.io/cloud-builders/go'
  args: ['build', '-o', 'licensing-server', 'github.com/solo-io/solo-projects/projects/licensingserver/cmd']
  env: ['PROJECT_ROOT=github.com/solo-io/solo-projects']

- name: 'gcr.io/cloud-builders/go'
  args:
    - 'test'
    - 'github.com/solo-io/solo-projects/projects/licensingserver/test/unit'
    - 'github.com/solo-io/solo-projects/projects/licensingserver/test/keygen'
  env:
    - 'CLOUD_BUILD=1'
    - 'KEYGEN_CREDENTIALS_FILE=/workspace/keygen_creds.json'
    - 'PROJECT_ROOT=github.com/solo-io/solo-projects'

  waitFor: ['setup-keygen-creds', 'dep']

artifacts:
  objects:
    location: 'gs://artifacts.solo.io/'
    paths: ['sqoop-linux-amd64', 'hypergloo']
