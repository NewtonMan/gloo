steps:

# These are required before dep
- name: gcr.io/cloud-builders/gcloud
  args:
  - kms
  - decrypt
  - --ciphertext-file=ci/id_rsa.enc
  - --plaintext-file=/root/.ssh/id_rsa
  - --location=global
  - --keyring=build
  - --key=build-key
  volumes:
  - name: 'ssh'
    path: /root/.ssh

- name: 'gcr.io/cloud-builders/git'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    chmod 600 /root/.ssh/id_rsa
    cat <<EOF >/root/.ssh/config
    Hostname github.com
    IdentityFile /root/.ssh/id_rsa
    EOF
    mv ./ci/github_known_hosts /root/.ssh/known_hosts
    git config --global url."ssh://git@github.com/solo-io".insteadOf https://github.com/solo-io
  volumes:
  - name: 'ssh'
    path: /root/.ssh

# Using dep container from github.com/solo-io/cloud-builders/dep
# This copies files into the proper workspace layout and so must be run before other tasks
# Subsequent steps should set GOPATH variable to avoid setting up unnecessary sym link
- name: 'gcr.io/$PROJECT_ID/dep'
  args: ['ensure']
  env: ['PROJECT_ROOT=github.com/solo-io/solo-projects']
  volumes:
  - name: 'ssh'
    path: /root/.ssh
  id: 'dep'

# Run some basic checks on the repo
# 1) check formatting of go files
# 2) ensure that make generated-code produces a clean diff
# 3) ensure that the site is generated with no warnings (strict = true in mkdocs)

# e2e-ginkgo is produced from https://github.com/solo-io/cloud-builders/e2e-ginkgo
# Must set the GOPATH to tell the container the workspace has already been set up (by the dep step above)
- name: 'gcr.io/$PROJECT_ID/e2e-ginkgo'
  env:
  - 'PROJECT_ROOT=github.com/solo-io/solo-projects'
  - 'GOPATH=/workspace/gopath'
  dir: './gopath/src/github.com/solo-io/solo-projects'
  entrypoint: make
  args: ['check-format']
  waitFor: ['dep']
  id: 'check-format'
- name: 'gcr.io/$PROJECT_ID/go-make'
  entrypoint: 'bash'
  args: ['ci/check-code-and-docs-gen.sh']
  env:
  - 'PROJECT_ROOT=github.com/solo-io/solo-projects'
  - 'GOPATH=/workspace/gopath'
  - 'TAGGED_VERSION=$TAG_NAME'
  dir: './gopath/src/github.com/solo-io/solo-projects'
  waitFor: ['dep']
  id: 'check-code-and-docs-gen'

# Helm related setup
- name: gcr.io/cloud-builders/gsutil
  entrypoint: mkdir
  args: ['-p', './_output/helm']
  dir: './gopath/src/github.com/solo-io/solo-projects'
# sync helm repo data from google cloud bucket
- name: gcr.io/cloud-builders/gsutil
  args:
    - rsync
    - -r
    - gs://gloo-ee-helm/
    - './_output/helm'
  dir: './gopath/src/github.com/solo-io/solo-projects'

# Setup keygen creds
- name: gcr.io/cloud-builders/gcloud
  args:
    - kms
    - decrypt
    - --ciphertext-file=./gopath/src/github.com/solo-io/solo-projects/ci/keygen_creds.json.enc
    - --plaintext-file=/workspace/keygen_creds.json
    - --location=global
    - --keyring=build
    - --key=build-key
  waitFor: ['dep']
  id: 'setup-keygen-creds'

# Setup and run e2es
- name: gcr.io/cloud-builders/gsutil
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    gsutil cp gs://artifacts.solo.io/envoy/265f5f50b0b17b42442bcc8d7f7572a9b47a073a/envoy.stripped /workspace/envoy
    chmod +x /workspace/envoy
  waitFor: ['dep']
  id: 'get-envoy'
- name: gcr.io/cloud-builders/gcloud
  args:
  - kms
  - decrypt
  - --ciphertext-file=./gopath/src/github.com/solo-io/solo-projects/ci/aws_credentials.enc
  - --plaintext-file=/workspace/aws_credentials
  - --location=global
  - --keyring=build
  - --key=build-key
  waitFor: ['dep']
  id: 'setup-aws-creds'

# e2e-ginkgo is produced from https://github.com/solo-io/cloud-builders/e2e-ginkgo
# sets up redis, consul, kubectl, go with required environment variables
# need to use the provided entrypoint
- name: 'gcr.io/$PROJECT_ID/e2e-ginkgo'
  dir: './gopath/src/github.com/solo-io/solo-projects'
  env:
  - 'PROJECT_ROOT=github.com/solo-io/solo-projects'
  - 'ENVOY_BINARY=/workspace/envoy'
  - 'AWS_SHARED_CREDENTIALS_FILE=/workspace/aws_credentials'
  - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
  - 'CLOUDSDK_CONTAINER_CLUSTER=test-cluster'
  - 'RUN_KUBE_TESTS=1'
  - 'CLOUD_BUILD=1'
  - 'KEYGEN_CREDENTIALS_FILE=/workspace/keygen_creds.json'
  - 'GOPATH=/workspace/gopath'
  args: ['-r']
  waitFor: ['dep', 'get-envoy', 'setup-aws-creds', 'setup-keygen-creds']

- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args: ['-c', 'docker login --username soloiobot --password $$DOCKER_HUB_PASSWORD']
  secretEnv: ['DOCKER_HUB_PASSWORD']

- name: 'gcr.io/$PROJECT_ID/go-make'
  args: ['docker']
  env:
    - 'TAGGED_VERSION=$TAG_NAME'
    - 'PROJECT_ROOT=github.com/solo-io/solo-projects'
    - 'GOPATH=/workspace/gopath'
  dir: './gopath/src/github.com/solo-io/solo-projects'
  secretEnv: ['GITHUB_TOKEN']

# go-make is produced from https://github.com/solo-io/cloud-builders/go-make
- name: 'gcr.io/$PROJECT_ID/go-make'
  args: ['docker-push', 'manifest', 'release']
  env:
  - 'TAGGED_VERSION=$TAG_NAME'
  - 'PROJECT_ROOT=github.com/solo-io/solo-projects'
  - 'GOPATH=/workspace/gopath'
  - 'HELM_HOME=/root/.helm' # tell helm where to find data
  dir: './gopath/src/github.com/solo-io/solo-projects'
  secretEnv: ['GITHUB_TOKEN']

  # Sync helm chart data back to google storage bucket
- name: gcr.io/cloud-builders/gsutil
  args:
    - rsync
    - -r
    - './_output/helm'
    - gs://gloo-ee-helm/
  dir: './gopath/src/github.com/solo-io/solo-projects'
  id: 'set-helm-chart'

# go-make is produced from https://github.com/solo-io/cloud-builders/go-make
- name: 'gcr.io/$PROJECT_ID/go-make'
  args: ['deploy-site']
  env:
  - 'TAGGED_VERSION=$TAG_NAME'
  - 'PROJECT_ROOT=github.com/solo-io/solo-projects'
  - 'GOPATH=/workspace/gopath'
  dir: './gopath/src/github.com/solo-io/solo-projects/projects/gloo/doc'
  secretEnv: ['FIREBASE_TOKEN']

secrets:
- kmsKeyName: projects/gloo-ee/locations/global/keyRings/build/cryptoKeys/build-key
  secretEnv:
    GITHUB_TOKEN: CiQAwdWthppXCatGZZrcHgwEcPXq0J1UVsTgGxHBVeS08sMZV/gSUgD5SXFIMJqfBsZflgeqMpC4hkszp8q8aeBh6oMuPRJRHKZRCIlJhHiaamm49VmFHROd9rG7b8y0MTVb5BOaQPN9MQ1j9tIXI8XoHlI9JHfpgLs=
    DOCKER_HUB_PASSWORD: CiQAwdWthnPx474iTBxC0Wn3IqXOtKE9GKcwo6BzRLFjsDEpybsSTgD5SXFIkjIL4U5PvBc7GqCg3SLHbxktlFByfWa0qSWE6RVMJoTbeOi0iNj1gLQifb9PeQwLIlJiv0D4TUWV8nvL7DbNSxsjdOvFeV/Vpw==
    FIREBASE_TOKEN: CiQAwdWthjhACaGIgkXZBr7vY1fXPf2JOVYB0MM2ZYuhJhn2V90SVwD5SXFIhTrx6gnp45XMlTChRmReaf6qVMq+RkI+2mFxcXCb3wWtBaf9HEgaJyNGFV1h9Jh6nDp1OC+VtLmihBznpAZVWqhEOYy1Yq+a7SLDKKH19xpusg==

# Overall build timeout of 30m. The release builds take extra time for uploading and pushing artifacts. We can
# set timeouts on specific steps (dep, tests, etc) if we want to limit the time in sections, but want a forgiving
# timeout for the final step, and the default (10m) is not enough.
timeout: 1800s
