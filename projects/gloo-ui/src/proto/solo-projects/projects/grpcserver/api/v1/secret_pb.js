/* eslint-disable */
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var gogoproto_gogo_pb = require('../../../../../gogoproto/gogo_pb.js');
var gloo_projects_gloo_api_v1_secret_pb = require('../../../../../gloo/projects/gloo/api/v1/secret_pb.js');
var solo$kit_api_v1_ref_pb = require('../../../../../solo-kit/api/v1/ref_pb.js');
goog.exportSymbol('proto.glooeeapi.solo.io.CreateSecretRequest', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.CreateSecretResponse', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.DeleteSecretRequest', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.DeleteSecretResponse', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.GetSecretRequest', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.GetSecretResponse', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.ListSecretsRequest', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.ListSecretsResponse', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.UpdateSecretRequest', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.UpdateSecretResponse', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.GetSecretRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.GetSecretRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.GetSecretRequest.displayName = 'proto.glooeeapi.solo.io.GetSecretRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.GetSecretRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.GetSecretRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.GetSecretRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.GetSecretRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    ref: (f = msg.getRef()) && solo$kit_api_v1_ref_pb.ResourceRef.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.GetSecretRequest}
 */
proto.glooeeapi.solo.io.GetSecretRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.GetSecretRequest;
  return proto.glooeeapi.solo.io.GetSecretRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.GetSecretRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.GetSecretRequest}
 */
proto.glooeeapi.solo.io.GetSecretRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new solo$kit_api_v1_ref_pb.ResourceRef;
      reader.readMessage(value,solo$kit_api_v1_ref_pb.ResourceRef.deserializeBinaryFromReader);
      msg.setRef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.GetSecretRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.GetSecretRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.GetSecretRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.GetSecretRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRef();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      solo$kit_api_v1_ref_pb.ResourceRef.serializeBinaryToWriter
    );
  }
};


/**
 * optional core.solo.io.ResourceRef ref = 1;
 * @return {?proto.core.solo.io.ResourceRef}
 */
proto.glooeeapi.solo.io.GetSecretRequest.prototype.getRef = function() {
  return /** @type{?proto.core.solo.io.ResourceRef} */ (
    jspb.Message.getWrapperField(this, solo$kit_api_v1_ref_pb.ResourceRef, 1));
};


/** @param {?proto.core.solo.io.ResourceRef|undefined} value */
proto.glooeeapi.solo.io.GetSecretRequest.prototype.setRef = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.glooeeapi.solo.io.GetSecretRequest.prototype.clearRef = function() {
  this.setRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.GetSecretRequest.prototype.hasRef = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.GetSecretResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.GetSecretResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.GetSecretResponse.displayName = 'proto.glooeeapi.solo.io.GetSecretResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.GetSecretResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.GetSecretResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.GetSecretResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.GetSecretResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    secret: (f = msg.getSecret()) && gloo_projects_gloo_api_v1_secret_pb.Secret.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.GetSecretResponse}
 */
proto.glooeeapi.solo.io.GetSecretResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.GetSecretResponse;
  return proto.glooeeapi.solo.io.GetSecretResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.GetSecretResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.GetSecretResponse}
 */
proto.glooeeapi.solo.io.GetSecretResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new gloo_projects_gloo_api_v1_secret_pb.Secret;
      reader.readMessage(value,gloo_projects_gloo_api_v1_secret_pb.Secret.deserializeBinaryFromReader);
      msg.setSecret(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.GetSecretResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.GetSecretResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.GetSecretResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.GetSecretResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSecret();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      gloo_projects_gloo_api_v1_secret_pb.Secret.serializeBinaryToWriter
    );
  }
};


/**
 * optional gloo.solo.io.Secret secret = 1;
 * @return {?proto.gloo.solo.io.Secret}
 */
proto.glooeeapi.solo.io.GetSecretResponse.prototype.getSecret = function() {
  return /** @type{?proto.gloo.solo.io.Secret} */ (
    jspb.Message.getWrapperField(this, gloo_projects_gloo_api_v1_secret_pb.Secret, 1));
};


/** @param {?proto.gloo.solo.io.Secret|undefined} value */
proto.glooeeapi.solo.io.GetSecretResponse.prototype.setSecret = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.glooeeapi.solo.io.GetSecretResponse.prototype.clearSecret = function() {
  this.setSecret(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.GetSecretResponse.prototype.hasSecret = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.ListSecretsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.ListSecretsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.ListSecretsRequest.displayName = 'proto.glooeeapi.solo.io.ListSecretsRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.ListSecretsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.ListSecretsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.ListSecretsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.ListSecretsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.ListSecretsRequest}
 */
proto.glooeeapi.solo.io.ListSecretsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.ListSecretsRequest;
  return proto.glooeeapi.solo.io.ListSecretsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.ListSecretsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.ListSecretsRequest}
 */
proto.glooeeapi.solo.io.ListSecretsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.ListSecretsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.ListSecretsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.ListSecretsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.ListSecretsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.ListSecretsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.glooeeapi.solo.io.ListSecretsResponse.repeatedFields_, null);
};
goog.inherits(proto.glooeeapi.solo.io.ListSecretsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.ListSecretsResponse.displayName = 'proto.glooeeapi.solo.io.ListSecretsResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.glooeeapi.solo.io.ListSecretsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.ListSecretsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.ListSecretsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.ListSecretsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.ListSecretsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    secretsList: jspb.Message.toObjectList(msg.getSecretsList(),
    gloo_projects_gloo_api_v1_secret_pb.Secret.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.ListSecretsResponse}
 */
proto.glooeeapi.solo.io.ListSecretsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.ListSecretsResponse;
  return proto.glooeeapi.solo.io.ListSecretsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.ListSecretsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.ListSecretsResponse}
 */
proto.glooeeapi.solo.io.ListSecretsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new gloo_projects_gloo_api_v1_secret_pb.Secret;
      reader.readMessage(value,gloo_projects_gloo_api_v1_secret_pb.Secret.deserializeBinaryFromReader);
      msg.addSecrets(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.ListSecretsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.ListSecretsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.ListSecretsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.ListSecretsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSecretsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      gloo_projects_gloo_api_v1_secret_pb.Secret.serializeBinaryToWriter
    );
  }
};


/**
 * repeated gloo.solo.io.Secret secrets = 1;
 * @return {!Array<!proto.gloo.solo.io.Secret>}
 */
proto.glooeeapi.solo.io.ListSecretsResponse.prototype.getSecretsList = function() {
  return /** @type{!Array<!proto.gloo.solo.io.Secret>} */ (
    jspb.Message.getRepeatedWrapperField(this, gloo_projects_gloo_api_v1_secret_pb.Secret, 1));
};


/** @param {!Array<!proto.gloo.solo.io.Secret>} value */
proto.glooeeapi.solo.io.ListSecretsResponse.prototype.setSecretsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.gloo.solo.io.Secret=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gloo.solo.io.Secret}
 */
proto.glooeeapi.solo.io.ListSecretsResponse.prototype.addSecrets = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.gloo.solo.io.Secret, opt_index);
};


proto.glooeeapi.solo.io.ListSecretsResponse.prototype.clearSecretsList = function() {
  this.setSecretsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.CreateSecretRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.CreateSecretRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.CreateSecretRequest.displayName = 'proto.glooeeapi.solo.io.CreateSecretRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.CreateSecretRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.CreateSecretRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.CreateSecretRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.CreateSecretRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    secret: (f = msg.getSecret()) && gloo_projects_gloo_api_v1_secret_pb.Secret.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.CreateSecretRequest}
 */
proto.glooeeapi.solo.io.CreateSecretRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.CreateSecretRequest;
  return proto.glooeeapi.solo.io.CreateSecretRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.CreateSecretRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.CreateSecretRequest}
 */
proto.glooeeapi.solo.io.CreateSecretRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 6:
      var value = new gloo_projects_gloo_api_v1_secret_pb.Secret;
      reader.readMessage(value,gloo_projects_gloo_api_v1_secret_pb.Secret.deserializeBinaryFromReader);
      msg.setSecret(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.CreateSecretRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.CreateSecretRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.CreateSecretRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.CreateSecretRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSecret();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      gloo_projects_gloo_api_v1_secret_pb.Secret.serializeBinaryToWriter
    );
  }
};


/**
 * optional gloo.solo.io.Secret secret = 6;
 * @return {?proto.gloo.solo.io.Secret}
 */
proto.glooeeapi.solo.io.CreateSecretRequest.prototype.getSecret = function() {
  return /** @type{?proto.gloo.solo.io.Secret} */ (
    jspb.Message.getWrapperField(this, gloo_projects_gloo_api_v1_secret_pb.Secret, 6));
};


/** @param {?proto.gloo.solo.io.Secret|undefined} value */
proto.glooeeapi.solo.io.CreateSecretRequest.prototype.setSecret = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.glooeeapi.solo.io.CreateSecretRequest.prototype.clearSecret = function() {
  this.setSecret(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.CreateSecretRequest.prototype.hasSecret = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.CreateSecretResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.CreateSecretResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.CreateSecretResponse.displayName = 'proto.glooeeapi.solo.io.CreateSecretResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.CreateSecretResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.CreateSecretResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.CreateSecretResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.CreateSecretResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    secret: (f = msg.getSecret()) && gloo_projects_gloo_api_v1_secret_pb.Secret.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.CreateSecretResponse}
 */
proto.glooeeapi.solo.io.CreateSecretResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.CreateSecretResponse;
  return proto.glooeeapi.solo.io.CreateSecretResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.CreateSecretResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.CreateSecretResponse}
 */
proto.glooeeapi.solo.io.CreateSecretResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new gloo_projects_gloo_api_v1_secret_pb.Secret;
      reader.readMessage(value,gloo_projects_gloo_api_v1_secret_pb.Secret.deserializeBinaryFromReader);
      msg.setSecret(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.CreateSecretResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.CreateSecretResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.CreateSecretResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.CreateSecretResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSecret();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      gloo_projects_gloo_api_v1_secret_pb.Secret.serializeBinaryToWriter
    );
  }
};


/**
 * optional gloo.solo.io.Secret secret = 1;
 * @return {?proto.gloo.solo.io.Secret}
 */
proto.glooeeapi.solo.io.CreateSecretResponse.prototype.getSecret = function() {
  return /** @type{?proto.gloo.solo.io.Secret} */ (
    jspb.Message.getWrapperField(this, gloo_projects_gloo_api_v1_secret_pb.Secret, 1));
};


/** @param {?proto.gloo.solo.io.Secret|undefined} value */
proto.glooeeapi.solo.io.CreateSecretResponse.prototype.setSecret = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.glooeeapi.solo.io.CreateSecretResponse.prototype.clearSecret = function() {
  this.setSecret(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.CreateSecretResponse.prototype.hasSecret = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.UpdateSecretRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.UpdateSecretRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.UpdateSecretRequest.displayName = 'proto.glooeeapi.solo.io.UpdateSecretRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.UpdateSecretRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.UpdateSecretRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.UpdateSecretRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.UpdateSecretRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    secret: (f = msg.getSecret()) && gloo_projects_gloo_api_v1_secret_pb.Secret.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.UpdateSecretRequest}
 */
proto.glooeeapi.solo.io.UpdateSecretRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.UpdateSecretRequest;
  return proto.glooeeapi.solo.io.UpdateSecretRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.UpdateSecretRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.UpdateSecretRequest}
 */
proto.glooeeapi.solo.io.UpdateSecretRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 6:
      var value = new gloo_projects_gloo_api_v1_secret_pb.Secret;
      reader.readMessage(value,gloo_projects_gloo_api_v1_secret_pb.Secret.deserializeBinaryFromReader);
      msg.setSecret(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.UpdateSecretRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.UpdateSecretRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.UpdateSecretRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.UpdateSecretRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSecret();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      gloo_projects_gloo_api_v1_secret_pb.Secret.serializeBinaryToWriter
    );
  }
};


/**
 * optional gloo.solo.io.Secret secret = 6;
 * @return {?proto.gloo.solo.io.Secret}
 */
proto.glooeeapi.solo.io.UpdateSecretRequest.prototype.getSecret = function() {
  return /** @type{?proto.gloo.solo.io.Secret} */ (
    jspb.Message.getWrapperField(this, gloo_projects_gloo_api_v1_secret_pb.Secret, 6));
};


/** @param {?proto.gloo.solo.io.Secret|undefined} value */
proto.glooeeapi.solo.io.UpdateSecretRequest.prototype.setSecret = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.glooeeapi.solo.io.UpdateSecretRequest.prototype.clearSecret = function() {
  this.setSecret(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.UpdateSecretRequest.prototype.hasSecret = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.UpdateSecretResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.UpdateSecretResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.UpdateSecretResponse.displayName = 'proto.glooeeapi.solo.io.UpdateSecretResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.UpdateSecretResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.UpdateSecretResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.UpdateSecretResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.UpdateSecretResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    secret: (f = msg.getSecret()) && gloo_projects_gloo_api_v1_secret_pb.Secret.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.UpdateSecretResponse}
 */
proto.glooeeapi.solo.io.UpdateSecretResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.UpdateSecretResponse;
  return proto.glooeeapi.solo.io.UpdateSecretResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.UpdateSecretResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.UpdateSecretResponse}
 */
proto.glooeeapi.solo.io.UpdateSecretResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new gloo_projects_gloo_api_v1_secret_pb.Secret;
      reader.readMessage(value,gloo_projects_gloo_api_v1_secret_pb.Secret.deserializeBinaryFromReader);
      msg.setSecret(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.UpdateSecretResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.UpdateSecretResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.UpdateSecretResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.UpdateSecretResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSecret();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      gloo_projects_gloo_api_v1_secret_pb.Secret.serializeBinaryToWriter
    );
  }
};


/**
 * optional gloo.solo.io.Secret secret = 1;
 * @return {?proto.gloo.solo.io.Secret}
 */
proto.glooeeapi.solo.io.UpdateSecretResponse.prototype.getSecret = function() {
  return /** @type{?proto.gloo.solo.io.Secret} */ (
    jspb.Message.getWrapperField(this, gloo_projects_gloo_api_v1_secret_pb.Secret, 1));
};


/** @param {?proto.gloo.solo.io.Secret|undefined} value */
proto.glooeeapi.solo.io.UpdateSecretResponse.prototype.setSecret = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.glooeeapi.solo.io.UpdateSecretResponse.prototype.clearSecret = function() {
  this.setSecret(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.UpdateSecretResponse.prototype.hasSecret = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.DeleteSecretRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.DeleteSecretRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.DeleteSecretRequest.displayName = 'proto.glooeeapi.solo.io.DeleteSecretRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.DeleteSecretRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.DeleteSecretRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.DeleteSecretRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.DeleteSecretRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    ref: (f = msg.getRef()) && solo$kit_api_v1_ref_pb.ResourceRef.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.DeleteSecretRequest}
 */
proto.glooeeapi.solo.io.DeleteSecretRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.DeleteSecretRequest;
  return proto.glooeeapi.solo.io.DeleteSecretRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.DeleteSecretRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.DeleteSecretRequest}
 */
proto.glooeeapi.solo.io.DeleteSecretRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new solo$kit_api_v1_ref_pb.ResourceRef;
      reader.readMessage(value,solo$kit_api_v1_ref_pb.ResourceRef.deserializeBinaryFromReader);
      msg.setRef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.DeleteSecretRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.DeleteSecretRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.DeleteSecretRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.DeleteSecretRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRef();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      solo$kit_api_v1_ref_pb.ResourceRef.serializeBinaryToWriter
    );
  }
};


/**
 * optional core.solo.io.ResourceRef ref = 1;
 * @return {?proto.core.solo.io.ResourceRef}
 */
proto.glooeeapi.solo.io.DeleteSecretRequest.prototype.getRef = function() {
  return /** @type{?proto.core.solo.io.ResourceRef} */ (
    jspb.Message.getWrapperField(this, solo$kit_api_v1_ref_pb.ResourceRef, 1));
};


/** @param {?proto.core.solo.io.ResourceRef|undefined} value */
proto.glooeeapi.solo.io.DeleteSecretRequest.prototype.setRef = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.glooeeapi.solo.io.DeleteSecretRequest.prototype.clearRef = function() {
  this.setRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.DeleteSecretRequest.prototype.hasRef = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.DeleteSecretResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.DeleteSecretResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.DeleteSecretResponse.displayName = 'proto.glooeeapi.solo.io.DeleteSecretResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.DeleteSecretResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.DeleteSecretResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.DeleteSecretResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.DeleteSecretResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.DeleteSecretResponse}
 */
proto.glooeeapi.solo.io.DeleteSecretResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.DeleteSecretResponse;
  return proto.glooeeapi.solo.io.DeleteSecretResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.DeleteSecretResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.DeleteSecretResponse}
 */
proto.glooeeapi.solo.io.DeleteSecretResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.DeleteSecretResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.DeleteSecretResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.DeleteSecretResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.DeleteSecretResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.glooeeapi.solo.io);
