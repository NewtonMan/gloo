/* eslint-disable */
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var gogoproto_gogo_pb = require('../../../../../gogoproto/gogo_pb.js');
var solo$projects_projects_grpcserver_api_v1_types_pb = require('../../../../../solo-projects/projects/grpcserver/api/v1/types_pb.js');
goog.exportSymbol('proto.glooeeapi.solo.io.EnvoyDetails', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.ListEnvoyDetailsRequest', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.ListEnvoyDetailsResponse', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.EnvoyDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.EnvoyDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.EnvoyDetails.displayName = 'proto.glooeeapi.solo.io.EnvoyDetails';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.EnvoyDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.EnvoyDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.EnvoyDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.EnvoyDetails.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    raw: (f = msg.getRaw()) && solo$projects_projects_grpcserver_api_v1_types_pb.Raw.toObject(includeInstance, f),
    status: (f = msg.getStatus()) && solo$projects_projects_grpcserver_api_v1_types_pb.Status.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.EnvoyDetails}
 */
proto.glooeeapi.solo.io.EnvoyDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.EnvoyDetails;
  return proto.glooeeapi.solo.io.EnvoyDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.EnvoyDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.EnvoyDetails}
 */
proto.glooeeapi.solo.io.EnvoyDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new solo$projects_projects_grpcserver_api_v1_types_pb.Raw;
      reader.readMessage(value,solo$projects_projects_grpcserver_api_v1_types_pb.Raw.deserializeBinaryFromReader);
      msg.setRaw(value);
      break;
    case 3:
      var value = new solo$projects_projects_grpcserver_api_v1_types_pb.Status;
      reader.readMessage(value,solo$projects_projects_grpcserver_api_v1_types_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.EnvoyDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.EnvoyDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.EnvoyDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.EnvoyDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRaw();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      solo$projects_projects_grpcserver_api_v1_types_pb.Raw.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      solo$projects_projects_grpcserver_api_v1_types_pb.Status.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.glooeeapi.solo.io.EnvoyDetails.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.glooeeapi.solo.io.EnvoyDetails.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Raw raw = 2;
 * @return {?proto.glooeeapi.solo.io.Raw}
 */
proto.glooeeapi.solo.io.EnvoyDetails.prototype.getRaw = function() {
  return /** @type{?proto.glooeeapi.solo.io.Raw} */ (
    jspb.Message.getWrapperField(this, solo$projects_projects_grpcserver_api_v1_types_pb.Raw, 2));
};


/** @param {?proto.glooeeapi.solo.io.Raw|undefined} value */
proto.glooeeapi.solo.io.EnvoyDetails.prototype.setRaw = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.glooeeapi.solo.io.EnvoyDetails.prototype.clearRaw = function() {
  this.setRaw(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.EnvoyDetails.prototype.hasRaw = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Status status = 3;
 * @return {?proto.glooeeapi.solo.io.Status}
 */
proto.glooeeapi.solo.io.EnvoyDetails.prototype.getStatus = function() {
  return /** @type{?proto.glooeeapi.solo.io.Status} */ (
    jspb.Message.getWrapperField(this, solo$projects_projects_grpcserver_api_v1_types_pb.Status, 3));
};


/** @param {?proto.glooeeapi.solo.io.Status|undefined} value */
proto.glooeeapi.solo.io.EnvoyDetails.prototype.setStatus = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.glooeeapi.solo.io.EnvoyDetails.prototype.clearStatus = function() {
  this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.EnvoyDetails.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.ListEnvoyDetailsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.ListEnvoyDetailsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.ListEnvoyDetailsRequest.displayName = 'proto.glooeeapi.solo.io.ListEnvoyDetailsRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.ListEnvoyDetailsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.ListEnvoyDetailsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.ListEnvoyDetailsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.ListEnvoyDetailsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.ListEnvoyDetailsRequest}
 */
proto.glooeeapi.solo.io.ListEnvoyDetailsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.ListEnvoyDetailsRequest;
  return proto.glooeeapi.solo.io.ListEnvoyDetailsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.ListEnvoyDetailsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.ListEnvoyDetailsRequest}
 */
proto.glooeeapi.solo.io.ListEnvoyDetailsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.ListEnvoyDetailsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.ListEnvoyDetailsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.ListEnvoyDetailsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.ListEnvoyDetailsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.ListEnvoyDetailsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.glooeeapi.solo.io.ListEnvoyDetailsResponse.repeatedFields_, null);
};
goog.inherits(proto.glooeeapi.solo.io.ListEnvoyDetailsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.ListEnvoyDetailsResponse.displayName = 'proto.glooeeapi.solo.io.ListEnvoyDetailsResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.glooeeapi.solo.io.ListEnvoyDetailsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.ListEnvoyDetailsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.ListEnvoyDetailsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.ListEnvoyDetailsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.ListEnvoyDetailsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    envoyDetailsList: jspb.Message.toObjectList(msg.getEnvoyDetailsList(),
    proto.glooeeapi.solo.io.EnvoyDetails.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.ListEnvoyDetailsResponse}
 */
proto.glooeeapi.solo.io.ListEnvoyDetailsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.ListEnvoyDetailsResponse;
  return proto.glooeeapi.solo.io.ListEnvoyDetailsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.ListEnvoyDetailsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.ListEnvoyDetailsResponse}
 */
proto.glooeeapi.solo.io.ListEnvoyDetailsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.glooeeapi.solo.io.EnvoyDetails;
      reader.readMessage(value,proto.glooeeapi.solo.io.EnvoyDetails.deserializeBinaryFromReader);
      msg.addEnvoyDetails(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.ListEnvoyDetailsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.ListEnvoyDetailsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.ListEnvoyDetailsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.ListEnvoyDetailsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnvoyDetailsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.glooeeapi.solo.io.EnvoyDetails.serializeBinaryToWriter
    );
  }
};


/**
 * repeated EnvoyDetails envoy_details = 1;
 * @return {!Array<!proto.glooeeapi.solo.io.EnvoyDetails>}
 */
proto.glooeeapi.solo.io.ListEnvoyDetailsResponse.prototype.getEnvoyDetailsList = function() {
  return /** @type{!Array<!proto.glooeeapi.solo.io.EnvoyDetails>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.glooeeapi.solo.io.EnvoyDetails, 1));
};


/** @param {!Array<!proto.glooeeapi.solo.io.EnvoyDetails>} value */
proto.glooeeapi.solo.io.ListEnvoyDetailsResponse.prototype.setEnvoyDetailsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.glooeeapi.solo.io.EnvoyDetails=} opt_value
 * @param {number=} opt_index
 * @return {!proto.glooeeapi.solo.io.EnvoyDetails}
 */
proto.glooeeapi.solo.io.ListEnvoyDetailsResponse.prototype.addEnvoyDetails = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.glooeeapi.solo.io.EnvoyDetails, opt_index);
};


proto.glooeeapi.solo.io.ListEnvoyDetailsResponse.prototype.clearEnvoyDetailsList = function() {
  this.setEnvoyDetailsList([]);
};


goog.object.extend(exports, proto.glooeeapi.solo.io);
