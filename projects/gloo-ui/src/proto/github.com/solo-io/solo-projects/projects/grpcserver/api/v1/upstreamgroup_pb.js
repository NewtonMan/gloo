/* eslint-disable */
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var extproto_ext_pb = require('../../../../../../../extproto/ext_pb.js');
var github_com_solo$io_gloo_projects_gloo_api_v1_proxy_pb = require('../../../../../../../github.com/solo-io/gloo/projects/gloo/api/v1/proxy_pb.js');
var github_com_solo$io_solo$projects_projects_grpcserver_api_v1_types_pb = require('../../../../../../../github.com/solo-io/solo-projects/projects/grpcserver/api/v1/types_pb.js');
var github_com_solo$io_solo$kit_api_v1_ref_pb = require('../../../../../../../github.com/solo-io/solo-kit/api/v1/ref_pb.js');
goog.exportSymbol('proto.glooeeapi.solo.io.CreateUpstreamGroupRequest', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.CreateUpstreamGroupResponse', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.DeleteUpstreamGroupRequest', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.DeleteUpstreamGroupResponse', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.GetUpstreamGroupRequest', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.GetUpstreamGroupResponse', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.ListUpstreamGroupsRequest', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.ListUpstreamGroupsResponse', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.UpdateUpstreamGroupRequest', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.UpdateUpstreamGroupResponse', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.UpdateUpstreamGroupYamlRequest', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.UpstreamGroupDetails', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.UpstreamGroupDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.UpstreamGroupDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.UpstreamGroupDetails.displayName = 'proto.glooeeapi.solo.io.UpstreamGroupDetails';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.UpstreamGroupDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.UpstreamGroupDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.UpstreamGroupDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.UpstreamGroupDetails.toObject = function(includeInstance, msg) {
  var f, obj = {
    upstreamGroup: (f = msg.getUpstreamGroup()) && github_com_solo$io_gloo_projects_gloo_api_v1_proxy_pb.UpstreamGroup.toObject(includeInstance, f),
    raw: (f = msg.getRaw()) && github_com_solo$io_solo$projects_projects_grpcserver_api_v1_types_pb.Raw.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.UpstreamGroupDetails}
 */
proto.glooeeapi.solo.io.UpstreamGroupDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.UpstreamGroupDetails;
  return proto.glooeeapi.solo.io.UpstreamGroupDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.UpstreamGroupDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.UpstreamGroupDetails}
 */
proto.glooeeapi.solo.io.UpstreamGroupDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_gloo_projects_gloo_api_v1_proxy_pb.UpstreamGroup;
      reader.readMessage(value,github_com_solo$io_gloo_projects_gloo_api_v1_proxy_pb.UpstreamGroup.deserializeBinaryFromReader);
      msg.setUpstreamGroup(value);
      break;
    case 2:
      var value = new github_com_solo$io_solo$projects_projects_grpcserver_api_v1_types_pb.Raw;
      reader.readMessage(value,github_com_solo$io_solo$projects_projects_grpcserver_api_v1_types_pb.Raw.deserializeBinaryFromReader);
      msg.setRaw(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.UpstreamGroupDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.UpstreamGroupDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.UpstreamGroupDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.UpstreamGroupDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpstreamGroup();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_gloo_projects_gloo_api_v1_proxy_pb.UpstreamGroup.serializeBinaryToWriter
    );
  }
  f = message.getRaw();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      github_com_solo$io_solo$projects_projects_grpcserver_api_v1_types_pb.Raw.serializeBinaryToWriter
    );
  }
};


/**
 * optional gloo.solo.io.UpstreamGroup upstream_group = 1;
 * @return {?proto.gloo.solo.io.UpstreamGroup}
 */
proto.glooeeapi.solo.io.UpstreamGroupDetails.prototype.getUpstreamGroup = function() {
  return /** @type{?proto.gloo.solo.io.UpstreamGroup} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_gloo_projects_gloo_api_v1_proxy_pb.UpstreamGroup, 1));
};


/** @param {?proto.gloo.solo.io.UpstreamGroup|undefined} value */
proto.glooeeapi.solo.io.UpstreamGroupDetails.prototype.setUpstreamGroup = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.glooeeapi.solo.io.UpstreamGroupDetails.prototype.clearUpstreamGroup = function() {
  this.setUpstreamGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.UpstreamGroupDetails.prototype.hasUpstreamGroup = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Raw raw = 2;
 * @return {?proto.glooeeapi.solo.io.Raw}
 */
proto.glooeeapi.solo.io.UpstreamGroupDetails.prototype.getRaw = function() {
  return /** @type{?proto.glooeeapi.solo.io.Raw} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$projects_projects_grpcserver_api_v1_types_pb.Raw, 2));
};


/** @param {?proto.glooeeapi.solo.io.Raw|undefined} value */
proto.glooeeapi.solo.io.UpstreamGroupDetails.prototype.setRaw = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.glooeeapi.solo.io.UpstreamGroupDetails.prototype.clearRaw = function() {
  this.setRaw(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.UpstreamGroupDetails.prototype.hasRaw = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.GetUpstreamGroupRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.GetUpstreamGroupRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.GetUpstreamGroupRequest.displayName = 'proto.glooeeapi.solo.io.GetUpstreamGroupRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.GetUpstreamGroupRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.GetUpstreamGroupRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.GetUpstreamGroupRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.GetUpstreamGroupRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    ref: (f = msg.getRef()) && github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.GetUpstreamGroupRequest}
 */
proto.glooeeapi.solo.io.GetUpstreamGroupRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.GetUpstreamGroupRequest;
  return proto.glooeeapi.solo.io.GetUpstreamGroupRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.GetUpstreamGroupRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.GetUpstreamGroupRequest}
 */
proto.glooeeapi.solo.io.GetUpstreamGroupRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef;
      reader.readMessage(value,github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.deserializeBinaryFromReader);
      msg.setRef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.GetUpstreamGroupRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.GetUpstreamGroupRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.GetUpstreamGroupRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.GetUpstreamGroupRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRef();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.serializeBinaryToWriter
    );
  }
};


/**
 * optional core.solo.io.ResourceRef ref = 1;
 * @return {?proto.core.solo.io.ResourceRef}
 */
proto.glooeeapi.solo.io.GetUpstreamGroupRequest.prototype.getRef = function() {
  return /** @type{?proto.core.solo.io.ResourceRef} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef, 1));
};


/** @param {?proto.core.solo.io.ResourceRef|undefined} value */
proto.glooeeapi.solo.io.GetUpstreamGroupRequest.prototype.setRef = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.glooeeapi.solo.io.GetUpstreamGroupRequest.prototype.clearRef = function() {
  this.setRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.GetUpstreamGroupRequest.prototype.hasRef = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.GetUpstreamGroupResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.GetUpstreamGroupResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.GetUpstreamGroupResponse.displayName = 'proto.glooeeapi.solo.io.GetUpstreamGroupResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.GetUpstreamGroupResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.GetUpstreamGroupResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.GetUpstreamGroupResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.GetUpstreamGroupResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    upstreamGroupDetails: (f = msg.getUpstreamGroupDetails()) && proto.glooeeapi.solo.io.UpstreamGroupDetails.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.GetUpstreamGroupResponse}
 */
proto.glooeeapi.solo.io.GetUpstreamGroupResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.GetUpstreamGroupResponse;
  return proto.glooeeapi.solo.io.GetUpstreamGroupResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.GetUpstreamGroupResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.GetUpstreamGroupResponse}
 */
proto.glooeeapi.solo.io.GetUpstreamGroupResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.glooeeapi.solo.io.UpstreamGroupDetails;
      reader.readMessage(value,proto.glooeeapi.solo.io.UpstreamGroupDetails.deserializeBinaryFromReader);
      msg.setUpstreamGroupDetails(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.GetUpstreamGroupResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.GetUpstreamGroupResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.GetUpstreamGroupResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.GetUpstreamGroupResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpstreamGroupDetails();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.glooeeapi.solo.io.UpstreamGroupDetails.serializeBinaryToWriter
    );
  }
};


/**
 * optional UpstreamGroupDetails upstream_group_details = 1;
 * @return {?proto.glooeeapi.solo.io.UpstreamGroupDetails}
 */
proto.glooeeapi.solo.io.GetUpstreamGroupResponse.prototype.getUpstreamGroupDetails = function() {
  return /** @type{?proto.glooeeapi.solo.io.UpstreamGroupDetails} */ (
    jspb.Message.getWrapperField(this, proto.glooeeapi.solo.io.UpstreamGroupDetails, 1));
};


/** @param {?proto.glooeeapi.solo.io.UpstreamGroupDetails|undefined} value */
proto.glooeeapi.solo.io.GetUpstreamGroupResponse.prototype.setUpstreamGroupDetails = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.glooeeapi.solo.io.GetUpstreamGroupResponse.prototype.clearUpstreamGroupDetails = function() {
  this.setUpstreamGroupDetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.GetUpstreamGroupResponse.prototype.hasUpstreamGroupDetails = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.ListUpstreamGroupsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.ListUpstreamGroupsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.ListUpstreamGroupsRequest.displayName = 'proto.glooeeapi.solo.io.ListUpstreamGroupsRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.ListUpstreamGroupsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.ListUpstreamGroupsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.ListUpstreamGroupsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.ListUpstreamGroupsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.ListUpstreamGroupsRequest}
 */
proto.glooeeapi.solo.io.ListUpstreamGroupsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.ListUpstreamGroupsRequest;
  return proto.glooeeapi.solo.io.ListUpstreamGroupsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.ListUpstreamGroupsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.ListUpstreamGroupsRequest}
 */
proto.glooeeapi.solo.io.ListUpstreamGroupsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.ListUpstreamGroupsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.ListUpstreamGroupsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.ListUpstreamGroupsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.ListUpstreamGroupsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.ListUpstreamGroupsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.glooeeapi.solo.io.ListUpstreamGroupsResponse.repeatedFields_, null);
};
goog.inherits(proto.glooeeapi.solo.io.ListUpstreamGroupsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.ListUpstreamGroupsResponse.displayName = 'proto.glooeeapi.solo.io.ListUpstreamGroupsResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.glooeeapi.solo.io.ListUpstreamGroupsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.ListUpstreamGroupsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.ListUpstreamGroupsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.ListUpstreamGroupsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.ListUpstreamGroupsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    upstreamGroupDetailsList: jspb.Message.toObjectList(msg.getUpstreamGroupDetailsList(),
    proto.glooeeapi.solo.io.UpstreamGroupDetails.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.ListUpstreamGroupsResponse}
 */
proto.glooeeapi.solo.io.ListUpstreamGroupsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.ListUpstreamGroupsResponse;
  return proto.glooeeapi.solo.io.ListUpstreamGroupsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.ListUpstreamGroupsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.ListUpstreamGroupsResponse}
 */
proto.glooeeapi.solo.io.ListUpstreamGroupsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.glooeeapi.solo.io.UpstreamGroupDetails;
      reader.readMessage(value,proto.glooeeapi.solo.io.UpstreamGroupDetails.deserializeBinaryFromReader);
      msg.addUpstreamGroupDetails(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.ListUpstreamGroupsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.ListUpstreamGroupsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.ListUpstreamGroupsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.ListUpstreamGroupsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpstreamGroupDetailsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.glooeeapi.solo.io.UpstreamGroupDetails.serializeBinaryToWriter
    );
  }
};


/**
 * repeated UpstreamGroupDetails upstream_group_details = 1;
 * @return {!Array<!proto.glooeeapi.solo.io.UpstreamGroupDetails>}
 */
proto.glooeeapi.solo.io.ListUpstreamGroupsResponse.prototype.getUpstreamGroupDetailsList = function() {
  return /** @type{!Array<!proto.glooeeapi.solo.io.UpstreamGroupDetails>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.glooeeapi.solo.io.UpstreamGroupDetails, 1));
};


/** @param {!Array<!proto.glooeeapi.solo.io.UpstreamGroupDetails>} value */
proto.glooeeapi.solo.io.ListUpstreamGroupsResponse.prototype.setUpstreamGroupDetailsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.glooeeapi.solo.io.UpstreamGroupDetails=} opt_value
 * @param {number=} opt_index
 * @return {!proto.glooeeapi.solo.io.UpstreamGroupDetails}
 */
proto.glooeeapi.solo.io.ListUpstreamGroupsResponse.prototype.addUpstreamGroupDetails = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.glooeeapi.solo.io.UpstreamGroupDetails, opt_index);
};


proto.glooeeapi.solo.io.ListUpstreamGroupsResponse.prototype.clearUpstreamGroupDetailsList = function() {
  this.setUpstreamGroupDetailsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.CreateUpstreamGroupRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.CreateUpstreamGroupRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.CreateUpstreamGroupRequest.displayName = 'proto.glooeeapi.solo.io.CreateUpstreamGroupRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.CreateUpstreamGroupRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.CreateUpstreamGroupRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.CreateUpstreamGroupRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.CreateUpstreamGroupRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    upstreamGroup: (f = msg.getUpstreamGroup()) && github_com_solo$io_gloo_projects_gloo_api_v1_proxy_pb.UpstreamGroup.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.CreateUpstreamGroupRequest}
 */
proto.glooeeapi.solo.io.CreateUpstreamGroupRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.CreateUpstreamGroupRequest;
  return proto.glooeeapi.solo.io.CreateUpstreamGroupRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.CreateUpstreamGroupRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.CreateUpstreamGroupRequest}
 */
proto.glooeeapi.solo.io.CreateUpstreamGroupRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_gloo_projects_gloo_api_v1_proxy_pb.UpstreamGroup;
      reader.readMessage(value,github_com_solo$io_gloo_projects_gloo_api_v1_proxy_pb.UpstreamGroup.deserializeBinaryFromReader);
      msg.setUpstreamGroup(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.CreateUpstreamGroupRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.CreateUpstreamGroupRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.CreateUpstreamGroupRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.CreateUpstreamGroupRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpstreamGroup();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_gloo_projects_gloo_api_v1_proxy_pb.UpstreamGroup.serializeBinaryToWriter
    );
  }
};


/**
 * optional gloo.solo.io.UpstreamGroup upstream_group = 1;
 * @return {?proto.gloo.solo.io.UpstreamGroup}
 */
proto.glooeeapi.solo.io.CreateUpstreamGroupRequest.prototype.getUpstreamGroup = function() {
  return /** @type{?proto.gloo.solo.io.UpstreamGroup} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_gloo_projects_gloo_api_v1_proxy_pb.UpstreamGroup, 1));
};


/** @param {?proto.gloo.solo.io.UpstreamGroup|undefined} value */
proto.glooeeapi.solo.io.CreateUpstreamGroupRequest.prototype.setUpstreamGroup = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.glooeeapi.solo.io.CreateUpstreamGroupRequest.prototype.clearUpstreamGroup = function() {
  this.setUpstreamGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.CreateUpstreamGroupRequest.prototype.hasUpstreamGroup = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.CreateUpstreamGroupResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.CreateUpstreamGroupResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.CreateUpstreamGroupResponse.displayName = 'proto.glooeeapi.solo.io.CreateUpstreamGroupResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.CreateUpstreamGroupResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.CreateUpstreamGroupResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.CreateUpstreamGroupResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.CreateUpstreamGroupResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    upstreamGroupDetails: (f = msg.getUpstreamGroupDetails()) && proto.glooeeapi.solo.io.UpstreamGroupDetails.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.CreateUpstreamGroupResponse}
 */
proto.glooeeapi.solo.io.CreateUpstreamGroupResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.CreateUpstreamGroupResponse;
  return proto.glooeeapi.solo.io.CreateUpstreamGroupResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.CreateUpstreamGroupResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.CreateUpstreamGroupResponse}
 */
proto.glooeeapi.solo.io.CreateUpstreamGroupResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.glooeeapi.solo.io.UpstreamGroupDetails;
      reader.readMessage(value,proto.glooeeapi.solo.io.UpstreamGroupDetails.deserializeBinaryFromReader);
      msg.setUpstreamGroupDetails(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.CreateUpstreamGroupResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.CreateUpstreamGroupResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.CreateUpstreamGroupResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.CreateUpstreamGroupResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpstreamGroupDetails();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.glooeeapi.solo.io.UpstreamGroupDetails.serializeBinaryToWriter
    );
  }
};


/**
 * optional UpstreamGroupDetails upstream_group_details = 1;
 * @return {?proto.glooeeapi.solo.io.UpstreamGroupDetails}
 */
proto.glooeeapi.solo.io.CreateUpstreamGroupResponse.prototype.getUpstreamGroupDetails = function() {
  return /** @type{?proto.glooeeapi.solo.io.UpstreamGroupDetails} */ (
    jspb.Message.getWrapperField(this, proto.glooeeapi.solo.io.UpstreamGroupDetails, 1));
};


/** @param {?proto.glooeeapi.solo.io.UpstreamGroupDetails|undefined} value */
proto.glooeeapi.solo.io.CreateUpstreamGroupResponse.prototype.setUpstreamGroupDetails = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.glooeeapi.solo.io.CreateUpstreamGroupResponse.prototype.clearUpstreamGroupDetails = function() {
  this.setUpstreamGroupDetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.CreateUpstreamGroupResponse.prototype.hasUpstreamGroupDetails = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.UpdateUpstreamGroupRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.UpdateUpstreamGroupRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.UpdateUpstreamGroupRequest.displayName = 'proto.glooeeapi.solo.io.UpdateUpstreamGroupRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.UpdateUpstreamGroupRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.UpdateUpstreamGroupRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.UpdateUpstreamGroupRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.UpdateUpstreamGroupRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    upstreamGroup: (f = msg.getUpstreamGroup()) && github_com_solo$io_gloo_projects_gloo_api_v1_proxy_pb.UpstreamGroup.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.UpdateUpstreamGroupRequest}
 */
proto.glooeeapi.solo.io.UpdateUpstreamGroupRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.UpdateUpstreamGroupRequest;
  return proto.glooeeapi.solo.io.UpdateUpstreamGroupRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.UpdateUpstreamGroupRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.UpdateUpstreamGroupRequest}
 */
proto.glooeeapi.solo.io.UpdateUpstreamGroupRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_gloo_projects_gloo_api_v1_proxy_pb.UpstreamGroup;
      reader.readMessage(value,github_com_solo$io_gloo_projects_gloo_api_v1_proxy_pb.UpstreamGroup.deserializeBinaryFromReader);
      msg.setUpstreamGroup(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.UpdateUpstreamGroupRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.UpdateUpstreamGroupRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.UpdateUpstreamGroupRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.UpdateUpstreamGroupRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpstreamGroup();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_gloo_projects_gloo_api_v1_proxy_pb.UpstreamGroup.serializeBinaryToWriter
    );
  }
};


/**
 * optional gloo.solo.io.UpstreamGroup upstream_group = 1;
 * @return {?proto.gloo.solo.io.UpstreamGroup}
 */
proto.glooeeapi.solo.io.UpdateUpstreamGroupRequest.prototype.getUpstreamGroup = function() {
  return /** @type{?proto.gloo.solo.io.UpstreamGroup} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_gloo_projects_gloo_api_v1_proxy_pb.UpstreamGroup, 1));
};


/** @param {?proto.gloo.solo.io.UpstreamGroup|undefined} value */
proto.glooeeapi.solo.io.UpdateUpstreamGroupRequest.prototype.setUpstreamGroup = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.glooeeapi.solo.io.UpdateUpstreamGroupRequest.prototype.clearUpstreamGroup = function() {
  this.setUpstreamGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.UpdateUpstreamGroupRequest.prototype.hasUpstreamGroup = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.UpdateUpstreamGroupYamlRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.UpdateUpstreamGroupYamlRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.UpdateUpstreamGroupYamlRequest.displayName = 'proto.glooeeapi.solo.io.UpdateUpstreamGroupYamlRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.UpdateUpstreamGroupYamlRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.UpdateUpstreamGroupYamlRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.UpdateUpstreamGroupYamlRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.UpdateUpstreamGroupYamlRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    editedYamlData: (f = msg.getEditedYamlData()) && github_com_solo$io_solo$projects_projects_grpcserver_api_v1_types_pb.EditedResourceYaml.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.UpdateUpstreamGroupYamlRequest}
 */
proto.glooeeapi.solo.io.UpdateUpstreamGroupYamlRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.UpdateUpstreamGroupYamlRequest;
  return proto.glooeeapi.solo.io.UpdateUpstreamGroupYamlRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.UpdateUpstreamGroupYamlRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.UpdateUpstreamGroupYamlRequest}
 */
proto.glooeeapi.solo.io.UpdateUpstreamGroupYamlRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_solo$projects_projects_grpcserver_api_v1_types_pb.EditedResourceYaml;
      reader.readMessage(value,github_com_solo$io_solo$projects_projects_grpcserver_api_v1_types_pb.EditedResourceYaml.deserializeBinaryFromReader);
      msg.setEditedYamlData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.UpdateUpstreamGroupYamlRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.UpdateUpstreamGroupYamlRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.UpdateUpstreamGroupYamlRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.UpdateUpstreamGroupYamlRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEditedYamlData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_solo$projects_projects_grpcserver_api_v1_types_pb.EditedResourceYaml.serializeBinaryToWriter
    );
  }
};


/**
 * optional EditedResourceYaml edited_yaml_data = 1;
 * @return {?proto.glooeeapi.solo.io.EditedResourceYaml}
 */
proto.glooeeapi.solo.io.UpdateUpstreamGroupYamlRequest.prototype.getEditedYamlData = function() {
  return /** @type{?proto.glooeeapi.solo.io.EditedResourceYaml} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$projects_projects_grpcserver_api_v1_types_pb.EditedResourceYaml, 1));
};


/** @param {?proto.glooeeapi.solo.io.EditedResourceYaml|undefined} value */
proto.glooeeapi.solo.io.UpdateUpstreamGroupYamlRequest.prototype.setEditedYamlData = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.glooeeapi.solo.io.UpdateUpstreamGroupYamlRequest.prototype.clearEditedYamlData = function() {
  this.setEditedYamlData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.UpdateUpstreamGroupYamlRequest.prototype.hasEditedYamlData = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.UpdateUpstreamGroupResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.UpdateUpstreamGroupResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.UpdateUpstreamGroupResponse.displayName = 'proto.glooeeapi.solo.io.UpdateUpstreamGroupResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.UpdateUpstreamGroupResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.UpdateUpstreamGroupResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.UpdateUpstreamGroupResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.UpdateUpstreamGroupResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    upstreamGroupDetails: (f = msg.getUpstreamGroupDetails()) && proto.glooeeapi.solo.io.UpstreamGroupDetails.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.UpdateUpstreamGroupResponse}
 */
proto.glooeeapi.solo.io.UpdateUpstreamGroupResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.UpdateUpstreamGroupResponse;
  return proto.glooeeapi.solo.io.UpdateUpstreamGroupResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.UpdateUpstreamGroupResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.UpdateUpstreamGroupResponse}
 */
proto.glooeeapi.solo.io.UpdateUpstreamGroupResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.glooeeapi.solo.io.UpstreamGroupDetails;
      reader.readMessage(value,proto.glooeeapi.solo.io.UpstreamGroupDetails.deserializeBinaryFromReader);
      msg.setUpstreamGroupDetails(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.UpdateUpstreamGroupResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.UpdateUpstreamGroupResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.UpdateUpstreamGroupResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.UpdateUpstreamGroupResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpstreamGroupDetails();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.glooeeapi.solo.io.UpstreamGroupDetails.serializeBinaryToWriter
    );
  }
};


/**
 * optional UpstreamGroupDetails upstream_group_details = 1;
 * @return {?proto.glooeeapi.solo.io.UpstreamGroupDetails}
 */
proto.glooeeapi.solo.io.UpdateUpstreamGroupResponse.prototype.getUpstreamGroupDetails = function() {
  return /** @type{?proto.glooeeapi.solo.io.UpstreamGroupDetails} */ (
    jspb.Message.getWrapperField(this, proto.glooeeapi.solo.io.UpstreamGroupDetails, 1));
};


/** @param {?proto.glooeeapi.solo.io.UpstreamGroupDetails|undefined} value */
proto.glooeeapi.solo.io.UpdateUpstreamGroupResponse.prototype.setUpstreamGroupDetails = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.glooeeapi.solo.io.UpdateUpstreamGroupResponse.prototype.clearUpstreamGroupDetails = function() {
  this.setUpstreamGroupDetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.UpdateUpstreamGroupResponse.prototype.hasUpstreamGroupDetails = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.DeleteUpstreamGroupRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.DeleteUpstreamGroupRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.DeleteUpstreamGroupRequest.displayName = 'proto.glooeeapi.solo.io.DeleteUpstreamGroupRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.DeleteUpstreamGroupRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.DeleteUpstreamGroupRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.DeleteUpstreamGroupRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.DeleteUpstreamGroupRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    ref: (f = msg.getRef()) && github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.DeleteUpstreamGroupRequest}
 */
proto.glooeeapi.solo.io.DeleteUpstreamGroupRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.DeleteUpstreamGroupRequest;
  return proto.glooeeapi.solo.io.DeleteUpstreamGroupRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.DeleteUpstreamGroupRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.DeleteUpstreamGroupRequest}
 */
proto.glooeeapi.solo.io.DeleteUpstreamGroupRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef;
      reader.readMessage(value,github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.deserializeBinaryFromReader);
      msg.setRef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.DeleteUpstreamGroupRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.DeleteUpstreamGroupRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.DeleteUpstreamGroupRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.DeleteUpstreamGroupRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRef();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.serializeBinaryToWriter
    );
  }
};


/**
 * optional core.solo.io.ResourceRef ref = 1;
 * @return {?proto.core.solo.io.ResourceRef}
 */
proto.glooeeapi.solo.io.DeleteUpstreamGroupRequest.prototype.getRef = function() {
  return /** @type{?proto.core.solo.io.ResourceRef} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef, 1));
};


/** @param {?proto.core.solo.io.ResourceRef|undefined} value */
proto.glooeeapi.solo.io.DeleteUpstreamGroupRequest.prototype.setRef = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.glooeeapi.solo.io.DeleteUpstreamGroupRequest.prototype.clearRef = function() {
  this.setRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.DeleteUpstreamGroupRequest.prototype.hasRef = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.DeleteUpstreamGroupResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.DeleteUpstreamGroupResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.DeleteUpstreamGroupResponse.displayName = 'proto.glooeeapi.solo.io.DeleteUpstreamGroupResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.DeleteUpstreamGroupResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.DeleteUpstreamGroupResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.DeleteUpstreamGroupResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.DeleteUpstreamGroupResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.DeleteUpstreamGroupResponse}
 */
proto.glooeeapi.solo.io.DeleteUpstreamGroupResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.DeleteUpstreamGroupResponse;
  return proto.glooeeapi.solo.io.DeleteUpstreamGroupResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.DeleteUpstreamGroupResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.DeleteUpstreamGroupResponse}
 */
proto.glooeeapi.solo.io.DeleteUpstreamGroupResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.DeleteUpstreamGroupResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.DeleteUpstreamGroupResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.DeleteUpstreamGroupResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.DeleteUpstreamGroupResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.glooeeapi.solo.io);
