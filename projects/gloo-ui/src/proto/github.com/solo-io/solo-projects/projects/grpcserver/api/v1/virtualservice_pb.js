/* eslint-disable */
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var gogoproto_gogo_pb = require('../../../../../../../gogoproto/gogo_pb.js');
var github_com_solo$io_gloo_projects_gateway_api_v1_virtual_service_pb = require('../../../../../../../github.com/solo-io/gloo/projects/gateway/api/v1/virtual_service_pb.js');
var github_com_solo$io_gloo_projects_gloo_api_v1_proxy_pb = require('../../../../../../../github.com/solo-io/gloo/projects/gloo/api/v1/proxy_pb.js');
var github_com_solo$io_solo$projects_projects_gloo_api_v1_plugins_extauth_extauth_pb = require('../../../../../../../github.com/solo-io/solo-projects/projects/gloo/api/v1/plugins/extauth/extauth_pb.js');
var github_com_solo$io_solo$projects_projects_gloo_api_v1_plugins_ratelimit_ratelimit_pb = require('../../../../../../../github.com/solo-io/solo-projects/projects/gloo/api/v1/plugins/ratelimit/ratelimit_pb.js');
var github_com_solo$io_solo$kit_api_v1_ref_pb = require('../../../../../../../github.com/solo-io/solo-kit/api/v1/ref_pb.js');
goog.exportSymbol('proto.glooeeapi.solo.io.CreateRouteRequest', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.CreateRouteResponse', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.CreateVirtualServiceRequest', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.CreateVirtualServiceResponse', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.DeleteRouteRequest', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.DeleteRouteResponse', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.DeleteVirtualServiceRequest', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.DeleteVirtualServiceResponse', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.GetVirtualServiceRequest', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.GetVirtualServiceResponse', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.ListVirtualServicesRequest', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.ListVirtualServicesResponse', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.RouteInput', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.ShiftRoutesRequest', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.ShiftRoutesResponse', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.StreamVirtualServiceListRequest', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.StreamVirtualServiceListResponse', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.SwapRoutesRequest', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.SwapRoutesResponse', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.UpdateRouteRequest', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.UpdateRouteResponse', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.UpdateVirtualServiceRequest', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.UpdateVirtualServiceResponse', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.VirtualServiceInput', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.VirtualServiceInput.BasicAuthInput', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.GetVirtualServiceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.GetVirtualServiceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.GetVirtualServiceRequest.displayName = 'proto.glooeeapi.solo.io.GetVirtualServiceRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.GetVirtualServiceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.GetVirtualServiceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.GetVirtualServiceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.GetVirtualServiceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    ref: (f = msg.getRef()) && github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.GetVirtualServiceRequest}
 */
proto.glooeeapi.solo.io.GetVirtualServiceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.GetVirtualServiceRequest;
  return proto.glooeeapi.solo.io.GetVirtualServiceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.GetVirtualServiceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.GetVirtualServiceRequest}
 */
proto.glooeeapi.solo.io.GetVirtualServiceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef;
      reader.readMessage(value,github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.deserializeBinaryFromReader);
      msg.setRef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.GetVirtualServiceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.GetVirtualServiceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.GetVirtualServiceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.GetVirtualServiceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRef();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.serializeBinaryToWriter
    );
  }
};


/**
 * optional core.solo.io.ResourceRef ref = 1;
 * @return {?proto.core.solo.io.ResourceRef}
 */
proto.glooeeapi.solo.io.GetVirtualServiceRequest.prototype.getRef = function() {
  return /** @type{?proto.core.solo.io.ResourceRef} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef, 1));
};


/** @param {?proto.core.solo.io.ResourceRef|undefined} value */
proto.glooeeapi.solo.io.GetVirtualServiceRequest.prototype.setRef = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.glooeeapi.solo.io.GetVirtualServiceRequest.prototype.clearRef = function() {
  this.setRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.GetVirtualServiceRequest.prototype.hasRef = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.GetVirtualServiceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.GetVirtualServiceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.GetVirtualServiceResponse.displayName = 'proto.glooeeapi.solo.io.GetVirtualServiceResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.GetVirtualServiceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.GetVirtualServiceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.GetVirtualServiceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.GetVirtualServiceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    virtualService: (f = msg.getVirtualService()) && github_com_solo$io_gloo_projects_gateway_api_v1_virtual_service_pb.VirtualService.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.GetVirtualServiceResponse}
 */
proto.glooeeapi.solo.io.GetVirtualServiceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.GetVirtualServiceResponse;
  return proto.glooeeapi.solo.io.GetVirtualServiceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.GetVirtualServiceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.GetVirtualServiceResponse}
 */
proto.glooeeapi.solo.io.GetVirtualServiceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_gloo_projects_gateway_api_v1_virtual_service_pb.VirtualService;
      reader.readMessage(value,github_com_solo$io_gloo_projects_gateway_api_v1_virtual_service_pb.VirtualService.deserializeBinaryFromReader);
      msg.setVirtualService(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.GetVirtualServiceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.GetVirtualServiceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.GetVirtualServiceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.GetVirtualServiceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVirtualService();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_gloo_projects_gateway_api_v1_virtual_service_pb.VirtualService.serializeBinaryToWriter
    );
  }
};


/**
 * optional gateway.solo.io.VirtualService virtual_service = 1;
 * @return {?proto.gateway.solo.io.VirtualService}
 */
proto.glooeeapi.solo.io.GetVirtualServiceResponse.prototype.getVirtualService = function() {
  return /** @type{?proto.gateway.solo.io.VirtualService} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_gloo_projects_gateway_api_v1_virtual_service_pb.VirtualService, 1));
};


/** @param {?proto.gateway.solo.io.VirtualService|undefined} value */
proto.glooeeapi.solo.io.GetVirtualServiceResponse.prototype.setVirtualService = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.glooeeapi.solo.io.GetVirtualServiceResponse.prototype.clearVirtualService = function() {
  this.setVirtualService(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.GetVirtualServiceResponse.prototype.hasVirtualService = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.ListVirtualServicesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.glooeeapi.solo.io.ListVirtualServicesRequest.repeatedFields_, null);
};
goog.inherits(proto.glooeeapi.solo.io.ListVirtualServicesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.ListVirtualServicesRequest.displayName = 'proto.glooeeapi.solo.io.ListVirtualServicesRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.glooeeapi.solo.io.ListVirtualServicesRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.ListVirtualServicesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.ListVirtualServicesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.ListVirtualServicesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.ListVirtualServicesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    namespaceListList: jspb.Message.getRepeatedField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.ListVirtualServicesRequest}
 */
proto.glooeeapi.solo.io.ListVirtualServicesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.ListVirtualServicesRequest;
  return proto.glooeeapi.solo.io.ListVirtualServicesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.ListVirtualServicesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.ListVirtualServicesRequest}
 */
proto.glooeeapi.solo.io.ListVirtualServicesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addNamespaceList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.ListVirtualServicesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.ListVirtualServicesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.ListVirtualServicesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.ListVirtualServicesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNamespaceListList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string namespace_list = 1;
 * @return {!Array<string>}
 */
proto.glooeeapi.solo.io.ListVirtualServicesRequest.prototype.getNamespaceListList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array<string>} value */
proto.glooeeapi.solo.io.ListVirtualServicesRequest.prototype.setNamespaceListList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.glooeeapi.solo.io.ListVirtualServicesRequest.prototype.addNamespaceList = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.glooeeapi.solo.io.ListVirtualServicesRequest.prototype.clearNamespaceListList = function() {
  this.setNamespaceListList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.ListVirtualServicesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.glooeeapi.solo.io.ListVirtualServicesResponse.repeatedFields_, null);
};
goog.inherits(proto.glooeeapi.solo.io.ListVirtualServicesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.ListVirtualServicesResponse.displayName = 'proto.glooeeapi.solo.io.ListVirtualServicesResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.glooeeapi.solo.io.ListVirtualServicesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.ListVirtualServicesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.ListVirtualServicesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.ListVirtualServicesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.ListVirtualServicesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    virtualServiceList: jspb.Message.toObjectList(msg.getVirtualServiceList(),
    github_com_solo$io_gloo_projects_gateway_api_v1_virtual_service_pb.VirtualService.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.ListVirtualServicesResponse}
 */
proto.glooeeapi.solo.io.ListVirtualServicesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.ListVirtualServicesResponse;
  return proto.glooeeapi.solo.io.ListVirtualServicesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.ListVirtualServicesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.ListVirtualServicesResponse}
 */
proto.glooeeapi.solo.io.ListVirtualServicesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_gloo_projects_gateway_api_v1_virtual_service_pb.VirtualService;
      reader.readMessage(value,github_com_solo$io_gloo_projects_gateway_api_v1_virtual_service_pb.VirtualService.deserializeBinaryFromReader);
      msg.addVirtualService(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.ListVirtualServicesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.ListVirtualServicesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.ListVirtualServicesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.ListVirtualServicesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVirtualServiceList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      github_com_solo$io_gloo_projects_gateway_api_v1_virtual_service_pb.VirtualService.serializeBinaryToWriter
    );
  }
};


/**
 * repeated gateway.solo.io.VirtualService virtual_service = 1;
 * @return {!Array<!proto.gateway.solo.io.VirtualService>}
 */
proto.glooeeapi.solo.io.ListVirtualServicesResponse.prototype.getVirtualServiceList = function() {
  return /** @type{!Array<!proto.gateway.solo.io.VirtualService>} */ (
    jspb.Message.getRepeatedWrapperField(this, github_com_solo$io_gloo_projects_gateway_api_v1_virtual_service_pb.VirtualService, 1));
};


/** @param {!Array<!proto.gateway.solo.io.VirtualService>} value */
proto.glooeeapi.solo.io.ListVirtualServicesResponse.prototype.setVirtualServiceList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.gateway.solo.io.VirtualService=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gateway.solo.io.VirtualService}
 */
proto.glooeeapi.solo.io.ListVirtualServicesResponse.prototype.addVirtualService = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.gateway.solo.io.VirtualService, opt_index);
};


proto.glooeeapi.solo.io.ListVirtualServicesResponse.prototype.clearVirtualServiceList = function() {
  this.setVirtualServiceList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.StreamVirtualServiceListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.StreamVirtualServiceListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.StreamVirtualServiceListRequest.displayName = 'proto.glooeeapi.solo.io.StreamVirtualServiceListRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.StreamVirtualServiceListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.StreamVirtualServiceListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.StreamVirtualServiceListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.StreamVirtualServiceListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    namespace: jspb.Message.getFieldWithDefault(msg, 1, ""),
    selectorMap: (f = msg.getSelectorMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.StreamVirtualServiceListRequest}
 */
proto.glooeeapi.solo.io.StreamVirtualServiceListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.StreamVirtualServiceListRequest;
  return proto.glooeeapi.solo.io.StreamVirtualServiceListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.StreamVirtualServiceListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.StreamVirtualServiceListRequest}
 */
proto.glooeeapi.solo.io.StreamVirtualServiceListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    case 2:
      var value = msg.getSelectorMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.StreamVirtualServiceListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.StreamVirtualServiceListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.StreamVirtualServiceListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.StreamVirtualServiceListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSelectorMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string namespace = 1;
 * @return {string}
 */
proto.glooeeapi.solo.io.StreamVirtualServiceListRequest.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.glooeeapi.solo.io.StreamVirtualServiceListRequest.prototype.setNamespace = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * map<string, string> selector = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.glooeeapi.solo.io.StreamVirtualServiceListRequest.prototype.getSelectorMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


proto.glooeeapi.solo.io.StreamVirtualServiceListRequest.prototype.clearSelectorMap = function() {
  this.getSelectorMap().clear();
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.StreamVirtualServiceListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.StreamVirtualServiceListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.StreamVirtualServiceListResponse.displayName = 'proto.glooeeapi.solo.io.StreamVirtualServiceListResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.StreamVirtualServiceListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.StreamVirtualServiceListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.StreamVirtualServiceListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.StreamVirtualServiceListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    virtualService: (f = msg.getVirtualService()) && github_com_solo$io_gloo_projects_gateway_api_v1_virtual_service_pb.VirtualService.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.StreamVirtualServiceListResponse}
 */
proto.glooeeapi.solo.io.StreamVirtualServiceListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.StreamVirtualServiceListResponse;
  return proto.glooeeapi.solo.io.StreamVirtualServiceListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.StreamVirtualServiceListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.StreamVirtualServiceListResponse}
 */
proto.glooeeapi.solo.io.StreamVirtualServiceListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_gloo_projects_gateway_api_v1_virtual_service_pb.VirtualService;
      reader.readMessage(value,github_com_solo$io_gloo_projects_gateway_api_v1_virtual_service_pb.VirtualService.deserializeBinaryFromReader);
      msg.setVirtualService(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.StreamVirtualServiceListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.StreamVirtualServiceListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.StreamVirtualServiceListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.StreamVirtualServiceListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVirtualService();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_gloo_projects_gateway_api_v1_virtual_service_pb.VirtualService.serializeBinaryToWriter
    );
  }
};


/**
 * optional gateway.solo.io.VirtualService virtual_service = 1;
 * @return {?proto.gateway.solo.io.VirtualService}
 */
proto.glooeeapi.solo.io.StreamVirtualServiceListResponse.prototype.getVirtualService = function() {
  return /** @type{?proto.gateway.solo.io.VirtualService} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_gloo_projects_gateway_api_v1_virtual_service_pb.VirtualService, 1));
};


/** @param {?proto.gateway.solo.io.VirtualService|undefined} value */
proto.glooeeapi.solo.io.StreamVirtualServiceListResponse.prototype.setVirtualService = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.glooeeapi.solo.io.StreamVirtualServiceListResponse.prototype.clearVirtualService = function() {
  this.setVirtualService(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.StreamVirtualServiceListResponse.prototype.hasVirtualService = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.VirtualServiceInput = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.glooeeapi.solo.io.VirtualServiceInput.repeatedFields_, proto.glooeeapi.solo.io.VirtualServiceInput.oneofGroups_);
};
goog.inherits(proto.glooeeapi.solo.io.VirtualServiceInput, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.VirtualServiceInput.displayName = 'proto.glooeeapi.solo.io.VirtualServiceInput';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.glooeeapi.solo.io.VirtualServiceInput.repeatedFields_ = [3,4];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.glooeeapi.solo.io.VirtualServiceInput.oneofGroups_ = [[7,8,9]];

/**
 * @enum {number}
 */
proto.glooeeapi.solo.io.VirtualServiceInput.ExtAuthConfigCase = {
  EXT_AUTH_CONFIG_NOT_SET: 0,
  BASIC_AUTH: 7,
  OAUTH: 8,
  CUSTOM_AUTH: 9
};

/**
 * @return {proto.glooeeapi.solo.io.VirtualServiceInput.ExtAuthConfigCase}
 */
proto.glooeeapi.solo.io.VirtualServiceInput.prototype.getExtAuthConfigCase = function() {
  return /** @type {proto.glooeeapi.solo.io.VirtualServiceInput.ExtAuthConfigCase} */(jspb.Message.computeOneofCase(this, proto.glooeeapi.solo.io.VirtualServiceInput.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.VirtualServiceInput.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.VirtualServiceInput.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.VirtualServiceInput} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.VirtualServiceInput.toObject = function(includeInstance, msg) {
  var f, obj = {
    ref: (f = msg.getRef()) && github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.toObject(includeInstance, f),
    displayName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    domainsList: jspb.Message.getRepeatedField(msg, 3),
    routesList: jspb.Message.toObjectList(msg.getRoutesList(),
    github_com_solo$io_gloo_projects_gloo_api_v1_proxy_pb.Route.toObject, includeInstance),
    secretRef: (f = msg.getSecretRef()) && github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.toObject(includeInstance, f),
    rateLimitConfig: (f = msg.getRateLimitConfig()) && github_com_solo$io_solo$projects_projects_gloo_api_v1_plugins_ratelimit_ratelimit_pb.IngressRateLimit.toObject(includeInstance, f),
    basicAuth: (f = msg.getBasicAuth()) && proto.glooeeapi.solo.io.VirtualServiceInput.BasicAuthInput.toObject(includeInstance, f),
    oauth: (f = msg.getOauth()) && github_com_solo$io_solo$projects_projects_gloo_api_v1_plugins_extauth_extauth_pb.OAuth.toObject(includeInstance, f),
    customAuth: (f = msg.getCustomAuth()) && github_com_solo$io_solo$projects_projects_gloo_api_v1_plugins_extauth_extauth_pb.CustomAuth.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.VirtualServiceInput}
 */
proto.glooeeapi.solo.io.VirtualServiceInput.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.VirtualServiceInput;
  return proto.glooeeapi.solo.io.VirtualServiceInput.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.VirtualServiceInput} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.VirtualServiceInput}
 */
proto.glooeeapi.solo.io.VirtualServiceInput.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef;
      reader.readMessage(value,github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.deserializeBinaryFromReader);
      msg.setRef(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addDomains(value);
      break;
    case 4:
      var value = new github_com_solo$io_gloo_projects_gloo_api_v1_proxy_pb.Route;
      reader.readMessage(value,github_com_solo$io_gloo_projects_gloo_api_v1_proxy_pb.Route.deserializeBinaryFromReader);
      msg.addRoutes(value);
      break;
    case 5:
      var value = new github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef;
      reader.readMessage(value,github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.deserializeBinaryFromReader);
      msg.setSecretRef(value);
      break;
    case 6:
      var value = new github_com_solo$io_solo$projects_projects_gloo_api_v1_plugins_ratelimit_ratelimit_pb.IngressRateLimit;
      reader.readMessage(value,github_com_solo$io_solo$projects_projects_gloo_api_v1_plugins_ratelimit_ratelimit_pb.IngressRateLimit.deserializeBinaryFromReader);
      msg.setRateLimitConfig(value);
      break;
    case 7:
      var value = new proto.glooeeapi.solo.io.VirtualServiceInput.BasicAuthInput;
      reader.readMessage(value,proto.glooeeapi.solo.io.VirtualServiceInput.BasicAuthInput.deserializeBinaryFromReader);
      msg.setBasicAuth(value);
      break;
    case 8:
      var value = new github_com_solo$io_solo$projects_projects_gloo_api_v1_plugins_extauth_extauth_pb.OAuth;
      reader.readMessage(value,github_com_solo$io_solo$projects_projects_gloo_api_v1_plugins_extauth_extauth_pb.OAuth.deserializeBinaryFromReader);
      msg.setOauth(value);
      break;
    case 9:
      var value = new github_com_solo$io_solo$projects_projects_gloo_api_v1_plugins_extauth_extauth_pb.CustomAuth;
      reader.readMessage(value,github_com_solo$io_solo$projects_projects_gloo_api_v1_plugins_extauth_extauth_pb.CustomAuth.deserializeBinaryFromReader);
      msg.setCustomAuth(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.VirtualServiceInput.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.VirtualServiceInput.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.VirtualServiceInput} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.VirtualServiceInput.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRef();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.serializeBinaryToWriter
    );
  }
  f = message.getDisplayName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDomainsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getRoutesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      github_com_solo$io_gloo_projects_gloo_api_v1_proxy_pb.Route.serializeBinaryToWriter
    );
  }
  f = message.getSecretRef();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.serializeBinaryToWriter
    );
  }
  f = message.getRateLimitConfig();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      github_com_solo$io_solo$projects_projects_gloo_api_v1_plugins_ratelimit_ratelimit_pb.IngressRateLimit.serializeBinaryToWriter
    );
  }
  f = message.getBasicAuth();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.glooeeapi.solo.io.VirtualServiceInput.BasicAuthInput.serializeBinaryToWriter
    );
  }
  f = message.getOauth();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      github_com_solo$io_solo$projects_projects_gloo_api_v1_plugins_extauth_extauth_pb.OAuth.serializeBinaryToWriter
    );
  }
  f = message.getCustomAuth();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      github_com_solo$io_solo$projects_projects_gloo_api_v1_plugins_extauth_extauth_pb.CustomAuth.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.VirtualServiceInput.BasicAuthInput = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.VirtualServiceInput.BasicAuthInput, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.VirtualServiceInput.BasicAuthInput.displayName = 'proto.glooeeapi.solo.io.VirtualServiceInput.BasicAuthInput';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.VirtualServiceInput.BasicAuthInput.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.VirtualServiceInput.BasicAuthInput.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.VirtualServiceInput.BasicAuthInput} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.VirtualServiceInput.BasicAuthInput.toObject = function(includeInstance, msg) {
  var f, obj = {
    realm: jspb.Message.getFieldWithDefault(msg, 1, ""),
    specCsv: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.VirtualServiceInput.BasicAuthInput}
 */
proto.glooeeapi.solo.io.VirtualServiceInput.BasicAuthInput.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.VirtualServiceInput.BasicAuthInput;
  return proto.glooeeapi.solo.io.VirtualServiceInput.BasicAuthInput.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.VirtualServiceInput.BasicAuthInput} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.VirtualServiceInput.BasicAuthInput}
 */
proto.glooeeapi.solo.io.VirtualServiceInput.BasicAuthInput.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRealm(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSpecCsv(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.VirtualServiceInput.BasicAuthInput.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.VirtualServiceInput.BasicAuthInput.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.VirtualServiceInput.BasicAuthInput} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.VirtualServiceInput.BasicAuthInput.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRealm();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSpecCsv();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string realm = 1;
 * @return {string}
 */
proto.glooeeapi.solo.io.VirtualServiceInput.BasicAuthInput.prototype.getRealm = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.glooeeapi.solo.io.VirtualServiceInput.BasicAuthInput.prototype.setRealm = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string spec_csv = 2;
 * @return {string}
 */
proto.glooeeapi.solo.io.VirtualServiceInput.BasicAuthInput.prototype.getSpecCsv = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.glooeeapi.solo.io.VirtualServiceInput.BasicAuthInput.prototype.setSpecCsv = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional core.solo.io.ResourceRef ref = 1;
 * @return {?proto.core.solo.io.ResourceRef}
 */
proto.glooeeapi.solo.io.VirtualServiceInput.prototype.getRef = function() {
  return /** @type{?proto.core.solo.io.ResourceRef} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef, 1));
};


/** @param {?proto.core.solo.io.ResourceRef|undefined} value */
proto.glooeeapi.solo.io.VirtualServiceInput.prototype.setRef = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.glooeeapi.solo.io.VirtualServiceInput.prototype.clearRef = function() {
  this.setRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.VirtualServiceInput.prototype.hasRef = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string display_name = 2;
 * @return {string}
 */
proto.glooeeapi.solo.io.VirtualServiceInput.prototype.getDisplayName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.glooeeapi.solo.io.VirtualServiceInput.prototype.setDisplayName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string domains = 3;
 * @return {!Array<string>}
 */
proto.glooeeapi.solo.io.VirtualServiceInput.prototype.getDomainsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array<string>} value */
proto.glooeeapi.solo.io.VirtualServiceInput.prototype.setDomainsList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.glooeeapi.solo.io.VirtualServiceInput.prototype.addDomains = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.glooeeapi.solo.io.VirtualServiceInput.prototype.clearDomainsList = function() {
  this.setDomainsList([]);
};


/**
 * repeated gloo.solo.io.Route routes = 4;
 * @return {!Array<!proto.gloo.solo.io.Route>}
 */
proto.glooeeapi.solo.io.VirtualServiceInput.prototype.getRoutesList = function() {
  return /** @type{!Array<!proto.gloo.solo.io.Route>} */ (
    jspb.Message.getRepeatedWrapperField(this, github_com_solo$io_gloo_projects_gloo_api_v1_proxy_pb.Route, 4));
};


/** @param {!Array<!proto.gloo.solo.io.Route>} value */
proto.glooeeapi.solo.io.VirtualServiceInput.prototype.setRoutesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.gloo.solo.io.Route=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gloo.solo.io.Route}
 */
proto.glooeeapi.solo.io.VirtualServiceInput.prototype.addRoutes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.gloo.solo.io.Route, opt_index);
};


proto.glooeeapi.solo.io.VirtualServiceInput.prototype.clearRoutesList = function() {
  this.setRoutesList([]);
};


/**
 * optional core.solo.io.ResourceRef secret_ref = 5;
 * @return {?proto.core.solo.io.ResourceRef}
 */
proto.glooeeapi.solo.io.VirtualServiceInput.prototype.getSecretRef = function() {
  return /** @type{?proto.core.solo.io.ResourceRef} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef, 5));
};


/** @param {?proto.core.solo.io.ResourceRef|undefined} value */
proto.glooeeapi.solo.io.VirtualServiceInput.prototype.setSecretRef = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.glooeeapi.solo.io.VirtualServiceInput.prototype.clearSecretRef = function() {
  this.setSecretRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.VirtualServiceInput.prototype.hasSecretRef = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ratelimit.plugins.gloo.solo.io.IngressRateLimit rate_limit_config = 6;
 * @return {?proto.ratelimit.plugins.gloo.solo.io.IngressRateLimit}
 */
proto.glooeeapi.solo.io.VirtualServiceInput.prototype.getRateLimitConfig = function() {
  return /** @type{?proto.ratelimit.plugins.gloo.solo.io.IngressRateLimit} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$projects_projects_gloo_api_v1_plugins_ratelimit_ratelimit_pb.IngressRateLimit, 6));
};


/** @param {?proto.ratelimit.plugins.gloo.solo.io.IngressRateLimit|undefined} value */
proto.glooeeapi.solo.io.VirtualServiceInput.prototype.setRateLimitConfig = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.glooeeapi.solo.io.VirtualServiceInput.prototype.clearRateLimitConfig = function() {
  this.setRateLimitConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.VirtualServiceInput.prototype.hasRateLimitConfig = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional BasicAuthInput basic_auth = 7;
 * @return {?proto.glooeeapi.solo.io.VirtualServiceInput.BasicAuthInput}
 */
proto.glooeeapi.solo.io.VirtualServiceInput.prototype.getBasicAuth = function() {
  return /** @type{?proto.glooeeapi.solo.io.VirtualServiceInput.BasicAuthInput} */ (
    jspb.Message.getWrapperField(this, proto.glooeeapi.solo.io.VirtualServiceInput.BasicAuthInput, 7));
};


/** @param {?proto.glooeeapi.solo.io.VirtualServiceInput.BasicAuthInput|undefined} value */
proto.glooeeapi.solo.io.VirtualServiceInput.prototype.setBasicAuth = function(value) {
  jspb.Message.setOneofWrapperField(this, 7, proto.glooeeapi.solo.io.VirtualServiceInput.oneofGroups_[0], value);
};


proto.glooeeapi.solo.io.VirtualServiceInput.prototype.clearBasicAuth = function() {
  this.setBasicAuth(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.VirtualServiceInput.prototype.hasBasicAuth = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional extauth.plugins.gloo.solo.io.OAuth oauth = 8;
 * @return {?proto.extauth.plugins.gloo.solo.io.OAuth}
 */
proto.glooeeapi.solo.io.VirtualServiceInput.prototype.getOauth = function() {
  return /** @type{?proto.extauth.plugins.gloo.solo.io.OAuth} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$projects_projects_gloo_api_v1_plugins_extauth_extauth_pb.OAuth, 8));
};


/** @param {?proto.extauth.plugins.gloo.solo.io.OAuth|undefined} value */
proto.glooeeapi.solo.io.VirtualServiceInput.prototype.setOauth = function(value) {
  jspb.Message.setOneofWrapperField(this, 8, proto.glooeeapi.solo.io.VirtualServiceInput.oneofGroups_[0], value);
};


proto.glooeeapi.solo.io.VirtualServiceInput.prototype.clearOauth = function() {
  this.setOauth(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.VirtualServiceInput.prototype.hasOauth = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional extauth.plugins.gloo.solo.io.CustomAuth custom_auth = 9;
 * @return {?proto.extauth.plugins.gloo.solo.io.CustomAuth}
 */
proto.glooeeapi.solo.io.VirtualServiceInput.prototype.getCustomAuth = function() {
  return /** @type{?proto.extauth.plugins.gloo.solo.io.CustomAuth} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$projects_projects_gloo_api_v1_plugins_extauth_extauth_pb.CustomAuth, 9));
};


/** @param {?proto.extauth.plugins.gloo.solo.io.CustomAuth|undefined} value */
proto.glooeeapi.solo.io.VirtualServiceInput.prototype.setCustomAuth = function(value) {
  jspb.Message.setOneofWrapperField(this, 9, proto.glooeeapi.solo.io.VirtualServiceInput.oneofGroups_[0], value);
};


proto.glooeeapi.solo.io.VirtualServiceInput.prototype.clearCustomAuth = function() {
  this.setCustomAuth(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.VirtualServiceInput.prototype.hasCustomAuth = function() {
  return jspb.Message.getField(this, 9) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.CreateVirtualServiceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.CreateVirtualServiceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.CreateVirtualServiceRequest.displayName = 'proto.glooeeapi.solo.io.CreateVirtualServiceRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.CreateVirtualServiceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.CreateVirtualServiceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.CreateVirtualServiceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.CreateVirtualServiceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    input: (f = msg.getInput()) && proto.glooeeapi.solo.io.VirtualServiceInput.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.CreateVirtualServiceRequest}
 */
proto.glooeeapi.solo.io.CreateVirtualServiceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.CreateVirtualServiceRequest;
  return proto.glooeeapi.solo.io.CreateVirtualServiceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.CreateVirtualServiceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.CreateVirtualServiceRequest}
 */
proto.glooeeapi.solo.io.CreateVirtualServiceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.glooeeapi.solo.io.VirtualServiceInput;
      reader.readMessage(value,proto.glooeeapi.solo.io.VirtualServiceInput.deserializeBinaryFromReader);
      msg.setInput(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.CreateVirtualServiceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.CreateVirtualServiceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.CreateVirtualServiceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.CreateVirtualServiceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInput();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.glooeeapi.solo.io.VirtualServiceInput.serializeBinaryToWriter
    );
  }
};


/**
 * optional VirtualServiceInput input = 1;
 * @return {?proto.glooeeapi.solo.io.VirtualServiceInput}
 */
proto.glooeeapi.solo.io.CreateVirtualServiceRequest.prototype.getInput = function() {
  return /** @type{?proto.glooeeapi.solo.io.VirtualServiceInput} */ (
    jspb.Message.getWrapperField(this, proto.glooeeapi.solo.io.VirtualServiceInput, 1));
};


/** @param {?proto.glooeeapi.solo.io.VirtualServiceInput|undefined} value */
proto.glooeeapi.solo.io.CreateVirtualServiceRequest.prototype.setInput = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.glooeeapi.solo.io.CreateVirtualServiceRequest.prototype.clearInput = function() {
  this.setInput(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.CreateVirtualServiceRequest.prototype.hasInput = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.CreateVirtualServiceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.CreateVirtualServiceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.CreateVirtualServiceResponse.displayName = 'proto.glooeeapi.solo.io.CreateVirtualServiceResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.CreateVirtualServiceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.CreateVirtualServiceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.CreateVirtualServiceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.CreateVirtualServiceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    virtualService: (f = msg.getVirtualService()) && github_com_solo$io_gloo_projects_gateway_api_v1_virtual_service_pb.VirtualService.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.CreateVirtualServiceResponse}
 */
proto.glooeeapi.solo.io.CreateVirtualServiceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.CreateVirtualServiceResponse;
  return proto.glooeeapi.solo.io.CreateVirtualServiceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.CreateVirtualServiceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.CreateVirtualServiceResponse}
 */
proto.glooeeapi.solo.io.CreateVirtualServiceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_gloo_projects_gateway_api_v1_virtual_service_pb.VirtualService;
      reader.readMessage(value,github_com_solo$io_gloo_projects_gateway_api_v1_virtual_service_pb.VirtualService.deserializeBinaryFromReader);
      msg.setVirtualService(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.CreateVirtualServiceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.CreateVirtualServiceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.CreateVirtualServiceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.CreateVirtualServiceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVirtualService();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_gloo_projects_gateway_api_v1_virtual_service_pb.VirtualService.serializeBinaryToWriter
    );
  }
};


/**
 * optional gateway.solo.io.VirtualService virtual_service = 1;
 * @return {?proto.gateway.solo.io.VirtualService}
 */
proto.glooeeapi.solo.io.CreateVirtualServiceResponse.prototype.getVirtualService = function() {
  return /** @type{?proto.gateway.solo.io.VirtualService} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_gloo_projects_gateway_api_v1_virtual_service_pb.VirtualService, 1));
};


/** @param {?proto.gateway.solo.io.VirtualService|undefined} value */
proto.glooeeapi.solo.io.CreateVirtualServiceResponse.prototype.setVirtualService = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.glooeeapi.solo.io.CreateVirtualServiceResponse.prototype.clearVirtualService = function() {
  this.setVirtualService(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.CreateVirtualServiceResponse.prototype.hasVirtualService = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.UpdateVirtualServiceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.UpdateVirtualServiceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.UpdateVirtualServiceRequest.displayName = 'proto.glooeeapi.solo.io.UpdateVirtualServiceRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.UpdateVirtualServiceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.UpdateVirtualServiceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.UpdateVirtualServiceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.UpdateVirtualServiceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    input: (f = msg.getInput()) && proto.glooeeapi.solo.io.VirtualServiceInput.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.UpdateVirtualServiceRequest}
 */
proto.glooeeapi.solo.io.UpdateVirtualServiceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.UpdateVirtualServiceRequest;
  return proto.glooeeapi.solo.io.UpdateVirtualServiceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.UpdateVirtualServiceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.UpdateVirtualServiceRequest}
 */
proto.glooeeapi.solo.io.UpdateVirtualServiceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.glooeeapi.solo.io.VirtualServiceInput;
      reader.readMessage(value,proto.glooeeapi.solo.io.VirtualServiceInput.deserializeBinaryFromReader);
      msg.setInput(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.UpdateVirtualServiceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.UpdateVirtualServiceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.UpdateVirtualServiceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.UpdateVirtualServiceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInput();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.glooeeapi.solo.io.VirtualServiceInput.serializeBinaryToWriter
    );
  }
};


/**
 * optional VirtualServiceInput input = 1;
 * @return {?proto.glooeeapi.solo.io.VirtualServiceInput}
 */
proto.glooeeapi.solo.io.UpdateVirtualServiceRequest.prototype.getInput = function() {
  return /** @type{?proto.glooeeapi.solo.io.VirtualServiceInput} */ (
    jspb.Message.getWrapperField(this, proto.glooeeapi.solo.io.VirtualServiceInput, 1));
};


/** @param {?proto.glooeeapi.solo.io.VirtualServiceInput|undefined} value */
proto.glooeeapi.solo.io.UpdateVirtualServiceRequest.prototype.setInput = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.glooeeapi.solo.io.UpdateVirtualServiceRequest.prototype.clearInput = function() {
  this.setInput(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.UpdateVirtualServiceRequest.prototype.hasInput = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.UpdateVirtualServiceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.UpdateVirtualServiceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.UpdateVirtualServiceResponse.displayName = 'proto.glooeeapi.solo.io.UpdateVirtualServiceResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.UpdateVirtualServiceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.UpdateVirtualServiceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.UpdateVirtualServiceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.UpdateVirtualServiceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    virtualService: (f = msg.getVirtualService()) && github_com_solo$io_gloo_projects_gateway_api_v1_virtual_service_pb.VirtualService.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.UpdateVirtualServiceResponse}
 */
proto.glooeeapi.solo.io.UpdateVirtualServiceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.UpdateVirtualServiceResponse;
  return proto.glooeeapi.solo.io.UpdateVirtualServiceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.UpdateVirtualServiceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.UpdateVirtualServiceResponse}
 */
proto.glooeeapi.solo.io.UpdateVirtualServiceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_gloo_projects_gateway_api_v1_virtual_service_pb.VirtualService;
      reader.readMessage(value,github_com_solo$io_gloo_projects_gateway_api_v1_virtual_service_pb.VirtualService.deserializeBinaryFromReader);
      msg.setVirtualService(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.UpdateVirtualServiceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.UpdateVirtualServiceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.UpdateVirtualServiceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.UpdateVirtualServiceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVirtualService();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_gloo_projects_gateway_api_v1_virtual_service_pb.VirtualService.serializeBinaryToWriter
    );
  }
};


/**
 * optional gateway.solo.io.VirtualService virtual_service = 1;
 * @return {?proto.gateway.solo.io.VirtualService}
 */
proto.glooeeapi.solo.io.UpdateVirtualServiceResponse.prototype.getVirtualService = function() {
  return /** @type{?proto.gateway.solo.io.VirtualService} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_gloo_projects_gateway_api_v1_virtual_service_pb.VirtualService, 1));
};


/** @param {?proto.gateway.solo.io.VirtualService|undefined} value */
proto.glooeeapi.solo.io.UpdateVirtualServiceResponse.prototype.setVirtualService = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.glooeeapi.solo.io.UpdateVirtualServiceResponse.prototype.clearVirtualService = function() {
  this.setVirtualService(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.UpdateVirtualServiceResponse.prototype.hasVirtualService = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.DeleteVirtualServiceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.DeleteVirtualServiceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.DeleteVirtualServiceRequest.displayName = 'proto.glooeeapi.solo.io.DeleteVirtualServiceRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.DeleteVirtualServiceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.DeleteVirtualServiceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.DeleteVirtualServiceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.DeleteVirtualServiceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    ref: (f = msg.getRef()) && github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.DeleteVirtualServiceRequest}
 */
proto.glooeeapi.solo.io.DeleteVirtualServiceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.DeleteVirtualServiceRequest;
  return proto.glooeeapi.solo.io.DeleteVirtualServiceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.DeleteVirtualServiceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.DeleteVirtualServiceRequest}
 */
proto.glooeeapi.solo.io.DeleteVirtualServiceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef;
      reader.readMessage(value,github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.deserializeBinaryFromReader);
      msg.setRef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.DeleteVirtualServiceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.DeleteVirtualServiceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.DeleteVirtualServiceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.DeleteVirtualServiceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRef();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.serializeBinaryToWriter
    );
  }
};


/**
 * optional core.solo.io.ResourceRef ref = 1;
 * @return {?proto.core.solo.io.ResourceRef}
 */
proto.glooeeapi.solo.io.DeleteVirtualServiceRequest.prototype.getRef = function() {
  return /** @type{?proto.core.solo.io.ResourceRef} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef, 1));
};


/** @param {?proto.core.solo.io.ResourceRef|undefined} value */
proto.glooeeapi.solo.io.DeleteVirtualServiceRequest.prototype.setRef = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.glooeeapi.solo.io.DeleteVirtualServiceRequest.prototype.clearRef = function() {
  this.setRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.DeleteVirtualServiceRequest.prototype.hasRef = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.DeleteVirtualServiceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.DeleteVirtualServiceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.DeleteVirtualServiceResponse.displayName = 'proto.glooeeapi.solo.io.DeleteVirtualServiceResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.DeleteVirtualServiceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.DeleteVirtualServiceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.DeleteVirtualServiceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.DeleteVirtualServiceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.DeleteVirtualServiceResponse}
 */
proto.glooeeapi.solo.io.DeleteVirtualServiceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.DeleteVirtualServiceResponse;
  return proto.glooeeapi.solo.io.DeleteVirtualServiceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.DeleteVirtualServiceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.DeleteVirtualServiceResponse}
 */
proto.glooeeapi.solo.io.DeleteVirtualServiceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.DeleteVirtualServiceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.DeleteVirtualServiceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.DeleteVirtualServiceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.DeleteVirtualServiceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.RouteInput = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.RouteInput, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.RouteInput.displayName = 'proto.glooeeapi.solo.io.RouteInput';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.RouteInput.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.RouteInput.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.RouteInput} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.RouteInput.toObject = function(includeInstance, msg) {
  var f, obj = {
    virtualServiceRef: (f = msg.getVirtualServiceRef()) && github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.toObject(includeInstance, f),
    index: jspb.Message.getFieldWithDefault(msg, 2, 0),
    route: (f = msg.getRoute()) && github_com_solo$io_gloo_projects_gloo_api_v1_proxy_pb.Route.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.RouteInput}
 */
proto.glooeeapi.solo.io.RouteInput.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.RouteInput;
  return proto.glooeeapi.solo.io.RouteInput.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.RouteInput} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.RouteInput}
 */
proto.glooeeapi.solo.io.RouteInput.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef;
      reader.readMessage(value,github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.deserializeBinaryFromReader);
      msg.setVirtualServiceRef(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIndex(value);
      break;
    case 3:
      var value = new github_com_solo$io_gloo_projects_gloo_api_v1_proxy_pb.Route;
      reader.readMessage(value,github_com_solo$io_gloo_projects_gloo_api_v1_proxy_pb.Route.deserializeBinaryFromReader);
      msg.setRoute(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.RouteInput.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.RouteInput.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.RouteInput} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.RouteInput.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVirtualServiceRef();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.serializeBinaryToWriter
    );
  }
  f = message.getIndex();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getRoute();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      github_com_solo$io_gloo_projects_gloo_api_v1_proxy_pb.Route.serializeBinaryToWriter
    );
  }
};


/**
 * optional core.solo.io.ResourceRef virtual_service_ref = 1;
 * @return {?proto.core.solo.io.ResourceRef}
 */
proto.glooeeapi.solo.io.RouteInput.prototype.getVirtualServiceRef = function() {
  return /** @type{?proto.core.solo.io.ResourceRef} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef, 1));
};


/** @param {?proto.core.solo.io.ResourceRef|undefined} value */
proto.glooeeapi.solo.io.RouteInput.prototype.setVirtualServiceRef = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.glooeeapi.solo.io.RouteInput.prototype.clearVirtualServiceRef = function() {
  this.setVirtualServiceRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.RouteInput.prototype.hasVirtualServiceRef = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 index = 2;
 * @return {number}
 */
proto.glooeeapi.solo.io.RouteInput.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.glooeeapi.solo.io.RouteInput.prototype.setIndex = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional gloo.solo.io.Route route = 3;
 * @return {?proto.gloo.solo.io.Route}
 */
proto.glooeeapi.solo.io.RouteInput.prototype.getRoute = function() {
  return /** @type{?proto.gloo.solo.io.Route} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_gloo_projects_gloo_api_v1_proxy_pb.Route, 3));
};


/** @param {?proto.gloo.solo.io.Route|undefined} value */
proto.glooeeapi.solo.io.RouteInput.prototype.setRoute = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.glooeeapi.solo.io.RouteInput.prototype.clearRoute = function() {
  this.setRoute(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.RouteInput.prototype.hasRoute = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.CreateRouteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.CreateRouteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.CreateRouteRequest.displayName = 'proto.glooeeapi.solo.io.CreateRouteRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.CreateRouteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.CreateRouteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.CreateRouteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.CreateRouteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    input: (f = msg.getInput()) && proto.glooeeapi.solo.io.RouteInput.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.CreateRouteRequest}
 */
proto.glooeeapi.solo.io.CreateRouteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.CreateRouteRequest;
  return proto.glooeeapi.solo.io.CreateRouteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.CreateRouteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.CreateRouteRequest}
 */
proto.glooeeapi.solo.io.CreateRouteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.glooeeapi.solo.io.RouteInput;
      reader.readMessage(value,proto.glooeeapi.solo.io.RouteInput.deserializeBinaryFromReader);
      msg.setInput(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.CreateRouteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.CreateRouteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.CreateRouteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.CreateRouteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInput();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.glooeeapi.solo.io.RouteInput.serializeBinaryToWriter
    );
  }
};


/**
 * optional RouteInput input = 1;
 * @return {?proto.glooeeapi.solo.io.RouteInput}
 */
proto.glooeeapi.solo.io.CreateRouteRequest.prototype.getInput = function() {
  return /** @type{?proto.glooeeapi.solo.io.RouteInput} */ (
    jspb.Message.getWrapperField(this, proto.glooeeapi.solo.io.RouteInput, 1));
};


/** @param {?proto.glooeeapi.solo.io.RouteInput|undefined} value */
proto.glooeeapi.solo.io.CreateRouteRequest.prototype.setInput = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.glooeeapi.solo.io.CreateRouteRequest.prototype.clearInput = function() {
  this.setInput(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.CreateRouteRequest.prototype.hasInput = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.CreateRouteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.CreateRouteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.CreateRouteResponse.displayName = 'proto.glooeeapi.solo.io.CreateRouteResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.CreateRouteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.CreateRouteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.CreateRouteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.CreateRouteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    virtualService: (f = msg.getVirtualService()) && github_com_solo$io_gloo_projects_gateway_api_v1_virtual_service_pb.VirtualService.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.CreateRouteResponse}
 */
proto.glooeeapi.solo.io.CreateRouteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.CreateRouteResponse;
  return proto.glooeeapi.solo.io.CreateRouteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.CreateRouteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.CreateRouteResponse}
 */
proto.glooeeapi.solo.io.CreateRouteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_gloo_projects_gateway_api_v1_virtual_service_pb.VirtualService;
      reader.readMessage(value,github_com_solo$io_gloo_projects_gateway_api_v1_virtual_service_pb.VirtualService.deserializeBinaryFromReader);
      msg.setVirtualService(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.CreateRouteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.CreateRouteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.CreateRouteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.CreateRouteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVirtualService();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_gloo_projects_gateway_api_v1_virtual_service_pb.VirtualService.serializeBinaryToWriter
    );
  }
};


/**
 * optional gateway.solo.io.VirtualService virtual_service = 1;
 * @return {?proto.gateway.solo.io.VirtualService}
 */
proto.glooeeapi.solo.io.CreateRouteResponse.prototype.getVirtualService = function() {
  return /** @type{?proto.gateway.solo.io.VirtualService} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_gloo_projects_gateway_api_v1_virtual_service_pb.VirtualService, 1));
};


/** @param {?proto.gateway.solo.io.VirtualService|undefined} value */
proto.glooeeapi.solo.io.CreateRouteResponse.prototype.setVirtualService = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.glooeeapi.solo.io.CreateRouteResponse.prototype.clearVirtualService = function() {
  this.setVirtualService(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.CreateRouteResponse.prototype.hasVirtualService = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.UpdateRouteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.UpdateRouteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.UpdateRouteRequest.displayName = 'proto.glooeeapi.solo.io.UpdateRouteRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.UpdateRouteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.UpdateRouteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.UpdateRouteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.UpdateRouteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    input: (f = msg.getInput()) && proto.glooeeapi.solo.io.RouteInput.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.UpdateRouteRequest}
 */
proto.glooeeapi.solo.io.UpdateRouteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.UpdateRouteRequest;
  return proto.glooeeapi.solo.io.UpdateRouteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.UpdateRouteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.UpdateRouteRequest}
 */
proto.glooeeapi.solo.io.UpdateRouteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.glooeeapi.solo.io.RouteInput;
      reader.readMessage(value,proto.glooeeapi.solo.io.RouteInput.deserializeBinaryFromReader);
      msg.setInput(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.UpdateRouteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.UpdateRouteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.UpdateRouteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.UpdateRouteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInput();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.glooeeapi.solo.io.RouteInput.serializeBinaryToWriter
    );
  }
};


/**
 * optional RouteInput input = 1;
 * @return {?proto.glooeeapi.solo.io.RouteInput}
 */
proto.glooeeapi.solo.io.UpdateRouteRequest.prototype.getInput = function() {
  return /** @type{?proto.glooeeapi.solo.io.RouteInput} */ (
    jspb.Message.getWrapperField(this, proto.glooeeapi.solo.io.RouteInput, 1));
};


/** @param {?proto.glooeeapi.solo.io.RouteInput|undefined} value */
proto.glooeeapi.solo.io.UpdateRouteRequest.prototype.setInput = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.glooeeapi.solo.io.UpdateRouteRequest.prototype.clearInput = function() {
  this.setInput(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.UpdateRouteRequest.prototype.hasInput = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.UpdateRouteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.UpdateRouteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.UpdateRouteResponse.displayName = 'proto.glooeeapi.solo.io.UpdateRouteResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.UpdateRouteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.UpdateRouteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.UpdateRouteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.UpdateRouteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    virtualService: (f = msg.getVirtualService()) && github_com_solo$io_gloo_projects_gateway_api_v1_virtual_service_pb.VirtualService.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.UpdateRouteResponse}
 */
proto.glooeeapi.solo.io.UpdateRouteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.UpdateRouteResponse;
  return proto.glooeeapi.solo.io.UpdateRouteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.UpdateRouteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.UpdateRouteResponse}
 */
proto.glooeeapi.solo.io.UpdateRouteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_gloo_projects_gateway_api_v1_virtual_service_pb.VirtualService;
      reader.readMessage(value,github_com_solo$io_gloo_projects_gateway_api_v1_virtual_service_pb.VirtualService.deserializeBinaryFromReader);
      msg.setVirtualService(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.UpdateRouteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.UpdateRouteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.UpdateRouteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.UpdateRouteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVirtualService();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_gloo_projects_gateway_api_v1_virtual_service_pb.VirtualService.serializeBinaryToWriter
    );
  }
};


/**
 * optional gateway.solo.io.VirtualService virtual_service = 1;
 * @return {?proto.gateway.solo.io.VirtualService}
 */
proto.glooeeapi.solo.io.UpdateRouteResponse.prototype.getVirtualService = function() {
  return /** @type{?proto.gateway.solo.io.VirtualService} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_gloo_projects_gateway_api_v1_virtual_service_pb.VirtualService, 1));
};


/** @param {?proto.gateway.solo.io.VirtualService|undefined} value */
proto.glooeeapi.solo.io.UpdateRouteResponse.prototype.setVirtualService = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.glooeeapi.solo.io.UpdateRouteResponse.prototype.clearVirtualService = function() {
  this.setVirtualService(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.UpdateRouteResponse.prototype.hasVirtualService = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.DeleteRouteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.DeleteRouteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.DeleteRouteRequest.displayName = 'proto.glooeeapi.solo.io.DeleteRouteRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.DeleteRouteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.DeleteRouteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.DeleteRouteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.DeleteRouteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    virtualServiceRef: (f = msg.getVirtualServiceRef()) && github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.toObject(includeInstance, f),
    index: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.DeleteRouteRequest}
 */
proto.glooeeapi.solo.io.DeleteRouteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.DeleteRouteRequest;
  return proto.glooeeapi.solo.io.DeleteRouteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.DeleteRouteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.DeleteRouteRequest}
 */
proto.glooeeapi.solo.io.DeleteRouteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef;
      reader.readMessage(value,github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.deserializeBinaryFromReader);
      msg.setVirtualServiceRef(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIndex(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.DeleteRouteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.DeleteRouteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.DeleteRouteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.DeleteRouteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVirtualServiceRef();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.serializeBinaryToWriter
    );
  }
  f = message.getIndex();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional core.solo.io.ResourceRef virtual_service_ref = 1;
 * @return {?proto.core.solo.io.ResourceRef}
 */
proto.glooeeapi.solo.io.DeleteRouteRequest.prototype.getVirtualServiceRef = function() {
  return /** @type{?proto.core.solo.io.ResourceRef} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef, 1));
};


/** @param {?proto.core.solo.io.ResourceRef|undefined} value */
proto.glooeeapi.solo.io.DeleteRouteRequest.prototype.setVirtualServiceRef = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.glooeeapi.solo.io.DeleteRouteRequest.prototype.clearVirtualServiceRef = function() {
  this.setVirtualServiceRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.DeleteRouteRequest.prototype.hasVirtualServiceRef = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 index = 2;
 * @return {number}
 */
proto.glooeeapi.solo.io.DeleteRouteRequest.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.glooeeapi.solo.io.DeleteRouteRequest.prototype.setIndex = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.DeleteRouteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.DeleteRouteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.DeleteRouteResponse.displayName = 'proto.glooeeapi.solo.io.DeleteRouteResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.DeleteRouteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.DeleteRouteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.DeleteRouteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.DeleteRouteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    virtualService: (f = msg.getVirtualService()) && github_com_solo$io_gloo_projects_gateway_api_v1_virtual_service_pb.VirtualService.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.DeleteRouteResponse}
 */
proto.glooeeapi.solo.io.DeleteRouteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.DeleteRouteResponse;
  return proto.glooeeapi.solo.io.DeleteRouteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.DeleteRouteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.DeleteRouteResponse}
 */
proto.glooeeapi.solo.io.DeleteRouteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_gloo_projects_gateway_api_v1_virtual_service_pb.VirtualService;
      reader.readMessage(value,github_com_solo$io_gloo_projects_gateway_api_v1_virtual_service_pb.VirtualService.deserializeBinaryFromReader);
      msg.setVirtualService(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.DeleteRouteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.DeleteRouteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.DeleteRouteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.DeleteRouteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVirtualService();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_gloo_projects_gateway_api_v1_virtual_service_pb.VirtualService.serializeBinaryToWriter
    );
  }
};


/**
 * optional gateway.solo.io.VirtualService virtual_service = 1;
 * @return {?proto.gateway.solo.io.VirtualService}
 */
proto.glooeeapi.solo.io.DeleteRouteResponse.prototype.getVirtualService = function() {
  return /** @type{?proto.gateway.solo.io.VirtualService} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_gloo_projects_gateway_api_v1_virtual_service_pb.VirtualService, 1));
};


/** @param {?proto.gateway.solo.io.VirtualService|undefined} value */
proto.glooeeapi.solo.io.DeleteRouteResponse.prototype.setVirtualService = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.glooeeapi.solo.io.DeleteRouteResponse.prototype.clearVirtualService = function() {
  this.setVirtualService(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.DeleteRouteResponse.prototype.hasVirtualService = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.SwapRoutesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.SwapRoutesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.SwapRoutesRequest.displayName = 'proto.glooeeapi.solo.io.SwapRoutesRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.SwapRoutesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.SwapRoutesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.SwapRoutesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.SwapRoutesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    virtualServiceRef: (f = msg.getVirtualServiceRef()) && github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.toObject(includeInstance, f),
    index1: jspb.Message.getFieldWithDefault(msg, 2, 0),
    index2: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.SwapRoutesRequest}
 */
proto.glooeeapi.solo.io.SwapRoutesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.SwapRoutesRequest;
  return proto.glooeeapi.solo.io.SwapRoutesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.SwapRoutesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.SwapRoutesRequest}
 */
proto.glooeeapi.solo.io.SwapRoutesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef;
      reader.readMessage(value,github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.deserializeBinaryFromReader);
      msg.setVirtualServiceRef(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIndex1(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIndex2(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.SwapRoutesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.SwapRoutesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.SwapRoutesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.SwapRoutesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVirtualServiceRef();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.serializeBinaryToWriter
    );
  }
  f = message.getIndex1();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getIndex2();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional core.solo.io.ResourceRef virtual_service_ref = 1;
 * @return {?proto.core.solo.io.ResourceRef}
 */
proto.glooeeapi.solo.io.SwapRoutesRequest.prototype.getVirtualServiceRef = function() {
  return /** @type{?proto.core.solo.io.ResourceRef} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef, 1));
};


/** @param {?proto.core.solo.io.ResourceRef|undefined} value */
proto.glooeeapi.solo.io.SwapRoutesRequest.prototype.setVirtualServiceRef = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.glooeeapi.solo.io.SwapRoutesRequest.prototype.clearVirtualServiceRef = function() {
  this.setVirtualServiceRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.SwapRoutesRequest.prototype.hasVirtualServiceRef = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 index1 = 2;
 * @return {number}
 */
proto.glooeeapi.solo.io.SwapRoutesRequest.prototype.getIndex1 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.glooeeapi.solo.io.SwapRoutesRequest.prototype.setIndex1 = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 index2 = 3;
 * @return {number}
 */
proto.glooeeapi.solo.io.SwapRoutesRequest.prototype.getIndex2 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.glooeeapi.solo.io.SwapRoutesRequest.prototype.setIndex2 = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.SwapRoutesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.SwapRoutesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.SwapRoutesResponse.displayName = 'proto.glooeeapi.solo.io.SwapRoutesResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.SwapRoutesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.SwapRoutesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.SwapRoutesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.SwapRoutesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    virtualService: (f = msg.getVirtualService()) && github_com_solo$io_gloo_projects_gateway_api_v1_virtual_service_pb.VirtualService.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.SwapRoutesResponse}
 */
proto.glooeeapi.solo.io.SwapRoutesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.SwapRoutesResponse;
  return proto.glooeeapi.solo.io.SwapRoutesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.SwapRoutesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.SwapRoutesResponse}
 */
proto.glooeeapi.solo.io.SwapRoutesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_gloo_projects_gateway_api_v1_virtual_service_pb.VirtualService;
      reader.readMessage(value,github_com_solo$io_gloo_projects_gateway_api_v1_virtual_service_pb.VirtualService.deserializeBinaryFromReader);
      msg.setVirtualService(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.SwapRoutesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.SwapRoutesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.SwapRoutesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.SwapRoutesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVirtualService();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_gloo_projects_gateway_api_v1_virtual_service_pb.VirtualService.serializeBinaryToWriter
    );
  }
};


/**
 * optional gateway.solo.io.VirtualService virtual_service = 1;
 * @return {?proto.gateway.solo.io.VirtualService}
 */
proto.glooeeapi.solo.io.SwapRoutesResponse.prototype.getVirtualService = function() {
  return /** @type{?proto.gateway.solo.io.VirtualService} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_gloo_projects_gateway_api_v1_virtual_service_pb.VirtualService, 1));
};


/** @param {?proto.gateway.solo.io.VirtualService|undefined} value */
proto.glooeeapi.solo.io.SwapRoutesResponse.prototype.setVirtualService = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.glooeeapi.solo.io.SwapRoutesResponse.prototype.clearVirtualService = function() {
  this.setVirtualService(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.SwapRoutesResponse.prototype.hasVirtualService = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.ShiftRoutesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.ShiftRoutesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.ShiftRoutesRequest.displayName = 'proto.glooeeapi.solo.io.ShiftRoutesRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.ShiftRoutesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.ShiftRoutesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.ShiftRoutesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.ShiftRoutesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    virtualServiceRef: (f = msg.getVirtualServiceRef()) && github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.toObject(includeInstance, f),
    fromIndex: jspb.Message.getFieldWithDefault(msg, 2, 0),
    toIndex: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.ShiftRoutesRequest}
 */
proto.glooeeapi.solo.io.ShiftRoutesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.ShiftRoutesRequest;
  return proto.glooeeapi.solo.io.ShiftRoutesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.ShiftRoutesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.ShiftRoutesRequest}
 */
proto.glooeeapi.solo.io.ShiftRoutesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef;
      reader.readMessage(value,github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.deserializeBinaryFromReader);
      msg.setVirtualServiceRef(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFromIndex(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setToIndex(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.ShiftRoutesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.ShiftRoutesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.ShiftRoutesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.ShiftRoutesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVirtualServiceRef();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.serializeBinaryToWriter
    );
  }
  f = message.getFromIndex();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getToIndex();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional core.solo.io.ResourceRef virtual_service_ref = 1;
 * @return {?proto.core.solo.io.ResourceRef}
 */
proto.glooeeapi.solo.io.ShiftRoutesRequest.prototype.getVirtualServiceRef = function() {
  return /** @type{?proto.core.solo.io.ResourceRef} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef, 1));
};


/** @param {?proto.core.solo.io.ResourceRef|undefined} value */
proto.glooeeapi.solo.io.ShiftRoutesRequest.prototype.setVirtualServiceRef = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.glooeeapi.solo.io.ShiftRoutesRequest.prototype.clearVirtualServiceRef = function() {
  this.setVirtualServiceRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.ShiftRoutesRequest.prototype.hasVirtualServiceRef = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 from_index = 2;
 * @return {number}
 */
proto.glooeeapi.solo.io.ShiftRoutesRequest.prototype.getFromIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.glooeeapi.solo.io.ShiftRoutesRequest.prototype.setFromIndex = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 to_index = 3;
 * @return {number}
 */
proto.glooeeapi.solo.io.ShiftRoutesRequest.prototype.getToIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.glooeeapi.solo.io.ShiftRoutesRequest.prototype.setToIndex = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.ShiftRoutesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.ShiftRoutesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.ShiftRoutesResponse.displayName = 'proto.glooeeapi.solo.io.ShiftRoutesResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.ShiftRoutesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.ShiftRoutesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.ShiftRoutesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.ShiftRoutesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    virtualService: (f = msg.getVirtualService()) && github_com_solo$io_gloo_projects_gateway_api_v1_virtual_service_pb.VirtualService.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.ShiftRoutesResponse}
 */
proto.glooeeapi.solo.io.ShiftRoutesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.ShiftRoutesResponse;
  return proto.glooeeapi.solo.io.ShiftRoutesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.ShiftRoutesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.ShiftRoutesResponse}
 */
proto.glooeeapi.solo.io.ShiftRoutesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_gloo_projects_gateway_api_v1_virtual_service_pb.VirtualService;
      reader.readMessage(value,github_com_solo$io_gloo_projects_gateway_api_v1_virtual_service_pb.VirtualService.deserializeBinaryFromReader);
      msg.setVirtualService(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.ShiftRoutesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.ShiftRoutesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.ShiftRoutesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.ShiftRoutesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVirtualService();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_gloo_projects_gateway_api_v1_virtual_service_pb.VirtualService.serializeBinaryToWriter
    );
  }
};


/**
 * optional gateway.solo.io.VirtualService virtual_service = 1;
 * @return {?proto.gateway.solo.io.VirtualService}
 */
proto.glooeeapi.solo.io.ShiftRoutesResponse.prototype.getVirtualService = function() {
  return /** @type{?proto.gateway.solo.io.VirtualService} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_gloo_projects_gateway_api_v1_virtual_service_pb.VirtualService, 1));
};


/** @param {?proto.gateway.solo.io.VirtualService|undefined} value */
proto.glooeeapi.solo.io.ShiftRoutesResponse.prototype.setVirtualService = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.glooeeapi.solo.io.ShiftRoutesResponse.prototype.clearVirtualService = function() {
  this.setVirtualService(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.ShiftRoutesResponse.prototype.hasVirtualService = function() {
  return jspb.Message.getField(this, 1) != null;
};


goog.object.extend(exports, proto.glooeeapi.solo.io);
