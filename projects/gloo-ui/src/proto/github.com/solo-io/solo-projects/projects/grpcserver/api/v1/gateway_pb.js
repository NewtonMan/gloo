/* eslint-disable */
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var gogoproto_gogo_pb = require('../../../../../../gogo/protobuf/gogoproto/gogo_pb.js');
var github_com_solo$io_gloo_projects_gateway_api_v2_gateway_pb = require('../../../../../../../github.com/solo-io/gloo/projects/gateway/api/v2/gateway_pb.js');
var github_com_solo$io_solo$kit_api_v1_ref_pb = require('../../../../../../../github.com/solo-io/solo-kit/api/v1/ref_pb.js');
var github_com_solo$io_solo$projects_projects_grpcserver_api_v1_types_pb = require('../../../../../../../github.com/solo-io/solo-projects/projects/grpcserver/api/v1/types_pb.js');
goog.exportSymbol('proto.glooeeapi.solo.io.GatewayDetails', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.GetGatewayRequest', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.GetGatewayResponse', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.ListGatewaysRequest', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.ListGatewaysResponse', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.UpdateGatewayRequest', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.UpdateGatewayResponse', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.UpdateGatewayYamlRequest', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.GatewayDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.GatewayDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.GatewayDetails.displayName = 'proto.glooeeapi.solo.io.GatewayDetails';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.GatewayDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.GatewayDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.GatewayDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.GatewayDetails.toObject = function(includeInstance, msg) {
  var f, obj = {
    gateway: (f = msg.getGateway()) && github_com_solo$io_gloo_projects_gateway_api_v2_gateway_pb.Gateway.toObject(includeInstance, f),
    raw: (f = msg.getRaw()) && github_com_solo$io_solo$projects_projects_grpcserver_api_v1_types_pb.Raw.toObject(includeInstance, f),
    status: (f = msg.getStatus()) && github_com_solo$io_solo$projects_projects_grpcserver_api_v1_types_pb.Status.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.GatewayDetails}
 */
proto.glooeeapi.solo.io.GatewayDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.GatewayDetails;
  return proto.glooeeapi.solo.io.GatewayDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.GatewayDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.GatewayDetails}
 */
proto.glooeeapi.solo.io.GatewayDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_gloo_projects_gateway_api_v2_gateway_pb.Gateway;
      reader.readMessage(value,github_com_solo$io_gloo_projects_gateway_api_v2_gateway_pb.Gateway.deserializeBinaryFromReader);
      msg.setGateway(value);
      break;
    case 2:
      var value = new github_com_solo$io_solo$projects_projects_grpcserver_api_v1_types_pb.Raw;
      reader.readMessage(value,github_com_solo$io_solo$projects_projects_grpcserver_api_v1_types_pb.Raw.deserializeBinaryFromReader);
      msg.setRaw(value);
      break;
    case 3:
      var value = new github_com_solo$io_solo$projects_projects_grpcserver_api_v1_types_pb.Status;
      reader.readMessage(value,github_com_solo$io_solo$projects_projects_grpcserver_api_v1_types_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.GatewayDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.GatewayDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.GatewayDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.GatewayDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGateway();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_gloo_projects_gateway_api_v2_gateway_pb.Gateway.serializeBinaryToWriter
    );
  }
  f = message.getRaw();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      github_com_solo$io_solo$projects_projects_grpcserver_api_v1_types_pb.Raw.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      github_com_solo$io_solo$projects_projects_grpcserver_api_v1_types_pb.Status.serializeBinaryToWriter
    );
  }
};


/**
 * optional gateway.solo.io.v2.Gateway gateway = 1;
 * @return {?proto.gateway.solo.io.v2.Gateway}
 */
proto.glooeeapi.solo.io.GatewayDetails.prototype.getGateway = function() {
  return /** @type{?proto.gateway.solo.io.v2.Gateway} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_gloo_projects_gateway_api_v2_gateway_pb.Gateway, 1));
};


/** @param {?proto.gateway.solo.io.v2.Gateway|undefined} value */
proto.glooeeapi.solo.io.GatewayDetails.prototype.setGateway = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.glooeeapi.solo.io.GatewayDetails.prototype.clearGateway = function() {
  this.setGateway(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.GatewayDetails.prototype.hasGateway = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Raw raw = 2;
 * @return {?proto.glooeeapi.solo.io.Raw}
 */
proto.glooeeapi.solo.io.GatewayDetails.prototype.getRaw = function() {
  return /** @type{?proto.glooeeapi.solo.io.Raw} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$projects_projects_grpcserver_api_v1_types_pb.Raw, 2));
};


/** @param {?proto.glooeeapi.solo.io.Raw|undefined} value */
proto.glooeeapi.solo.io.GatewayDetails.prototype.setRaw = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.glooeeapi.solo.io.GatewayDetails.prototype.clearRaw = function() {
  this.setRaw(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.GatewayDetails.prototype.hasRaw = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Status status = 3;
 * @return {?proto.glooeeapi.solo.io.Status}
 */
proto.glooeeapi.solo.io.GatewayDetails.prototype.getStatus = function() {
  return /** @type{?proto.glooeeapi.solo.io.Status} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$projects_projects_grpcserver_api_v1_types_pb.Status, 3));
};


/** @param {?proto.glooeeapi.solo.io.Status|undefined} value */
proto.glooeeapi.solo.io.GatewayDetails.prototype.setStatus = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.glooeeapi.solo.io.GatewayDetails.prototype.clearStatus = function() {
  this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.GatewayDetails.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.GetGatewayRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.GetGatewayRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.GetGatewayRequest.displayName = 'proto.glooeeapi.solo.io.GetGatewayRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.GetGatewayRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.GetGatewayRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.GetGatewayRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.GetGatewayRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    ref: (f = msg.getRef()) && github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.GetGatewayRequest}
 */
proto.glooeeapi.solo.io.GetGatewayRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.GetGatewayRequest;
  return proto.glooeeapi.solo.io.GetGatewayRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.GetGatewayRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.GetGatewayRequest}
 */
proto.glooeeapi.solo.io.GetGatewayRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef;
      reader.readMessage(value,github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.deserializeBinaryFromReader);
      msg.setRef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.GetGatewayRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.GetGatewayRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.GetGatewayRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.GetGatewayRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRef();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.serializeBinaryToWriter
    );
  }
};


/**
 * optional core.solo.io.ResourceRef ref = 1;
 * @return {?proto.core.solo.io.ResourceRef}
 */
proto.glooeeapi.solo.io.GetGatewayRequest.prototype.getRef = function() {
  return /** @type{?proto.core.solo.io.ResourceRef} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef, 1));
};


/** @param {?proto.core.solo.io.ResourceRef|undefined} value */
proto.glooeeapi.solo.io.GetGatewayRequest.prototype.setRef = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.glooeeapi.solo.io.GetGatewayRequest.prototype.clearRef = function() {
  this.setRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.GetGatewayRequest.prototype.hasRef = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.GetGatewayResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.GetGatewayResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.GetGatewayResponse.displayName = 'proto.glooeeapi.solo.io.GetGatewayResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.GetGatewayResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.GetGatewayResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.GetGatewayResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.GetGatewayResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    gatewayDetails: (f = msg.getGatewayDetails()) && proto.glooeeapi.solo.io.GatewayDetails.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.GetGatewayResponse}
 */
proto.glooeeapi.solo.io.GetGatewayResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.GetGatewayResponse;
  return proto.glooeeapi.solo.io.GetGatewayResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.GetGatewayResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.GetGatewayResponse}
 */
proto.glooeeapi.solo.io.GetGatewayResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.glooeeapi.solo.io.GatewayDetails;
      reader.readMessage(value,proto.glooeeapi.solo.io.GatewayDetails.deserializeBinaryFromReader);
      msg.setGatewayDetails(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.GetGatewayResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.GetGatewayResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.GetGatewayResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.GetGatewayResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGatewayDetails();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.glooeeapi.solo.io.GatewayDetails.serializeBinaryToWriter
    );
  }
};


/**
 * optional GatewayDetails gateway_details = 1;
 * @return {?proto.glooeeapi.solo.io.GatewayDetails}
 */
proto.glooeeapi.solo.io.GetGatewayResponse.prototype.getGatewayDetails = function() {
  return /** @type{?proto.glooeeapi.solo.io.GatewayDetails} */ (
    jspb.Message.getWrapperField(this, proto.glooeeapi.solo.io.GatewayDetails, 1));
};


/** @param {?proto.glooeeapi.solo.io.GatewayDetails|undefined} value */
proto.glooeeapi.solo.io.GetGatewayResponse.prototype.setGatewayDetails = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.glooeeapi.solo.io.GetGatewayResponse.prototype.clearGatewayDetails = function() {
  this.setGatewayDetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.GetGatewayResponse.prototype.hasGatewayDetails = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.ListGatewaysRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.glooeeapi.solo.io.ListGatewaysRequest.repeatedFields_, null);
};
goog.inherits(proto.glooeeapi.solo.io.ListGatewaysRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.ListGatewaysRequest.displayName = 'proto.glooeeapi.solo.io.ListGatewaysRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.glooeeapi.solo.io.ListGatewaysRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.ListGatewaysRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.ListGatewaysRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.ListGatewaysRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.ListGatewaysRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    namespacesList: jspb.Message.getRepeatedField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.ListGatewaysRequest}
 */
proto.glooeeapi.solo.io.ListGatewaysRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.ListGatewaysRequest;
  return proto.glooeeapi.solo.io.ListGatewaysRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.ListGatewaysRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.ListGatewaysRequest}
 */
proto.glooeeapi.solo.io.ListGatewaysRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addNamespaces(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.ListGatewaysRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.ListGatewaysRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.ListGatewaysRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.ListGatewaysRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNamespacesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string namespaces = 1;
 * @return {!Array<string>}
 */
proto.glooeeapi.solo.io.ListGatewaysRequest.prototype.getNamespacesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array<string>} value */
proto.glooeeapi.solo.io.ListGatewaysRequest.prototype.setNamespacesList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.glooeeapi.solo.io.ListGatewaysRequest.prototype.addNamespaces = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.glooeeapi.solo.io.ListGatewaysRequest.prototype.clearNamespacesList = function() {
  this.setNamespacesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.ListGatewaysResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.glooeeapi.solo.io.ListGatewaysResponse.repeatedFields_, null);
};
goog.inherits(proto.glooeeapi.solo.io.ListGatewaysResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.ListGatewaysResponse.displayName = 'proto.glooeeapi.solo.io.ListGatewaysResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.glooeeapi.solo.io.ListGatewaysResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.ListGatewaysResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.ListGatewaysResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.ListGatewaysResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.ListGatewaysResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    gatewayDetailsList: jspb.Message.toObjectList(msg.getGatewayDetailsList(),
    proto.glooeeapi.solo.io.GatewayDetails.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.ListGatewaysResponse}
 */
proto.glooeeapi.solo.io.ListGatewaysResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.ListGatewaysResponse;
  return proto.glooeeapi.solo.io.ListGatewaysResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.ListGatewaysResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.ListGatewaysResponse}
 */
proto.glooeeapi.solo.io.ListGatewaysResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.glooeeapi.solo.io.GatewayDetails;
      reader.readMessage(value,proto.glooeeapi.solo.io.GatewayDetails.deserializeBinaryFromReader);
      msg.addGatewayDetails(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.ListGatewaysResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.ListGatewaysResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.ListGatewaysResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.ListGatewaysResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGatewayDetailsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.glooeeapi.solo.io.GatewayDetails.serializeBinaryToWriter
    );
  }
};


/**
 * repeated GatewayDetails gateway_details = 1;
 * @return {!Array<!proto.glooeeapi.solo.io.GatewayDetails>}
 */
proto.glooeeapi.solo.io.ListGatewaysResponse.prototype.getGatewayDetailsList = function() {
  return /** @type{!Array<!proto.glooeeapi.solo.io.GatewayDetails>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.glooeeapi.solo.io.GatewayDetails, 1));
};


/** @param {!Array<!proto.glooeeapi.solo.io.GatewayDetails>} value */
proto.glooeeapi.solo.io.ListGatewaysResponse.prototype.setGatewayDetailsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.glooeeapi.solo.io.GatewayDetails=} opt_value
 * @param {number=} opt_index
 * @return {!proto.glooeeapi.solo.io.GatewayDetails}
 */
proto.glooeeapi.solo.io.ListGatewaysResponse.prototype.addGatewayDetails = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.glooeeapi.solo.io.GatewayDetails, opt_index);
};


proto.glooeeapi.solo.io.ListGatewaysResponse.prototype.clearGatewayDetailsList = function() {
  this.setGatewayDetailsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.UpdateGatewayRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.UpdateGatewayRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.UpdateGatewayRequest.displayName = 'proto.glooeeapi.solo.io.UpdateGatewayRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.UpdateGatewayRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.UpdateGatewayRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.UpdateGatewayRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.UpdateGatewayRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    gateway: (f = msg.getGateway()) && github_com_solo$io_gloo_projects_gateway_api_v2_gateway_pb.Gateway.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.UpdateGatewayRequest}
 */
proto.glooeeapi.solo.io.UpdateGatewayRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.UpdateGatewayRequest;
  return proto.glooeeapi.solo.io.UpdateGatewayRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.UpdateGatewayRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.UpdateGatewayRequest}
 */
proto.glooeeapi.solo.io.UpdateGatewayRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_gloo_projects_gateway_api_v2_gateway_pb.Gateway;
      reader.readMessage(value,github_com_solo$io_gloo_projects_gateway_api_v2_gateway_pb.Gateway.deserializeBinaryFromReader);
      msg.setGateway(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.UpdateGatewayRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.UpdateGatewayRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.UpdateGatewayRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.UpdateGatewayRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGateway();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_gloo_projects_gateway_api_v2_gateway_pb.Gateway.serializeBinaryToWriter
    );
  }
};


/**
 * optional gateway.solo.io.v2.Gateway gateway = 1;
 * @return {?proto.gateway.solo.io.v2.Gateway}
 */
proto.glooeeapi.solo.io.UpdateGatewayRequest.prototype.getGateway = function() {
  return /** @type{?proto.gateway.solo.io.v2.Gateway} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_gloo_projects_gateway_api_v2_gateway_pb.Gateway, 1));
};


/** @param {?proto.gateway.solo.io.v2.Gateway|undefined} value */
proto.glooeeapi.solo.io.UpdateGatewayRequest.prototype.setGateway = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.glooeeapi.solo.io.UpdateGatewayRequest.prototype.clearGateway = function() {
  this.setGateway(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.UpdateGatewayRequest.prototype.hasGateway = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.UpdateGatewayYamlRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.UpdateGatewayYamlRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.UpdateGatewayYamlRequest.displayName = 'proto.glooeeapi.solo.io.UpdateGatewayYamlRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.UpdateGatewayYamlRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.UpdateGatewayYamlRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.UpdateGatewayYamlRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.UpdateGatewayYamlRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    editedYamlData: (f = msg.getEditedYamlData()) && github_com_solo$io_solo$projects_projects_grpcserver_api_v1_types_pb.EditedResourceYaml.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.UpdateGatewayYamlRequest}
 */
proto.glooeeapi.solo.io.UpdateGatewayYamlRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.UpdateGatewayYamlRequest;
  return proto.glooeeapi.solo.io.UpdateGatewayYamlRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.UpdateGatewayYamlRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.UpdateGatewayYamlRequest}
 */
proto.glooeeapi.solo.io.UpdateGatewayYamlRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_solo$projects_projects_grpcserver_api_v1_types_pb.EditedResourceYaml;
      reader.readMessage(value,github_com_solo$io_solo$projects_projects_grpcserver_api_v1_types_pb.EditedResourceYaml.deserializeBinaryFromReader);
      msg.setEditedYamlData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.UpdateGatewayYamlRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.UpdateGatewayYamlRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.UpdateGatewayYamlRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.UpdateGatewayYamlRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEditedYamlData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_solo$projects_projects_grpcserver_api_v1_types_pb.EditedResourceYaml.serializeBinaryToWriter
    );
  }
};


/**
 * optional EditedResourceYaml edited_yaml_data = 1;
 * @return {?proto.glooeeapi.solo.io.EditedResourceYaml}
 */
proto.glooeeapi.solo.io.UpdateGatewayYamlRequest.prototype.getEditedYamlData = function() {
  return /** @type{?proto.glooeeapi.solo.io.EditedResourceYaml} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$projects_projects_grpcserver_api_v1_types_pb.EditedResourceYaml, 1));
};


/** @param {?proto.glooeeapi.solo.io.EditedResourceYaml|undefined} value */
proto.glooeeapi.solo.io.UpdateGatewayYamlRequest.prototype.setEditedYamlData = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.glooeeapi.solo.io.UpdateGatewayYamlRequest.prototype.clearEditedYamlData = function() {
  this.setEditedYamlData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.UpdateGatewayYamlRequest.prototype.hasEditedYamlData = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.UpdateGatewayResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.UpdateGatewayResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.UpdateGatewayResponse.displayName = 'proto.glooeeapi.solo.io.UpdateGatewayResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.UpdateGatewayResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.UpdateGatewayResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.UpdateGatewayResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.UpdateGatewayResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    gatewayDetails: (f = msg.getGatewayDetails()) && proto.glooeeapi.solo.io.GatewayDetails.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.UpdateGatewayResponse}
 */
proto.glooeeapi.solo.io.UpdateGatewayResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.UpdateGatewayResponse;
  return proto.glooeeapi.solo.io.UpdateGatewayResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.UpdateGatewayResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.UpdateGatewayResponse}
 */
proto.glooeeapi.solo.io.UpdateGatewayResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.glooeeapi.solo.io.GatewayDetails;
      reader.readMessage(value,proto.glooeeapi.solo.io.GatewayDetails.deserializeBinaryFromReader);
      msg.setGatewayDetails(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.UpdateGatewayResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.UpdateGatewayResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.UpdateGatewayResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.UpdateGatewayResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGatewayDetails();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.glooeeapi.solo.io.GatewayDetails.serializeBinaryToWriter
    );
  }
};


/**
 * optional GatewayDetails gateway_details = 1;
 * @return {?proto.glooeeapi.solo.io.GatewayDetails}
 */
proto.glooeeapi.solo.io.UpdateGatewayResponse.prototype.getGatewayDetails = function() {
  return /** @type{?proto.glooeeapi.solo.io.GatewayDetails} */ (
    jspb.Message.getWrapperField(this, proto.glooeeapi.solo.io.GatewayDetails, 1));
};


/** @param {?proto.glooeeapi.solo.io.GatewayDetails|undefined} value */
proto.glooeeapi.solo.io.UpdateGatewayResponse.prototype.setGatewayDetails = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.glooeeapi.solo.io.UpdateGatewayResponse.prototype.clearGatewayDetails = function() {
  this.setGatewayDetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.UpdateGatewayResponse.prototype.hasGatewayDetails = function() {
  return jspb.Message.getField(this, 1) != null;
};


goog.object.extend(exports, proto.glooeeapi.solo.io);
