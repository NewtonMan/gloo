/* eslint-disable */
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var extproto_ext_pb = require('../../../../../../../extproto/ext_pb.js');
var github_com_solo$io_gloo_projects_gloo_api_v1_artifact_pb = require('../../../../../../../github.com/solo-io/gloo/projects/gloo/api/v1/artifact_pb.js');
var github_com_solo$io_solo$kit_api_v1_ref_pb = require('../../../../../../../github.com/solo-io/solo-kit/api/v1/ref_pb.js');
goog.exportSymbol('proto.glooeeapi.solo.io.CreateArtifactRequest', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.CreateArtifactResponse', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.DeleteArtifactRequest', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.DeleteArtifactResponse', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.GetArtifactRequest', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.GetArtifactResponse', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.ListArtifactsRequest', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.ListArtifactsResponse', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.UpdateArtifactRequest', null, global);
goog.exportSymbol('proto.glooeeapi.solo.io.UpdateArtifactResponse', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.GetArtifactRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.GetArtifactRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.GetArtifactRequest.displayName = 'proto.glooeeapi.solo.io.GetArtifactRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.GetArtifactRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.GetArtifactRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.GetArtifactRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.GetArtifactRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    ref: (f = msg.getRef()) && github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.GetArtifactRequest}
 */
proto.glooeeapi.solo.io.GetArtifactRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.GetArtifactRequest;
  return proto.glooeeapi.solo.io.GetArtifactRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.GetArtifactRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.GetArtifactRequest}
 */
proto.glooeeapi.solo.io.GetArtifactRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef;
      reader.readMessage(value,github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.deserializeBinaryFromReader);
      msg.setRef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.GetArtifactRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.GetArtifactRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.GetArtifactRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.GetArtifactRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRef();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.serializeBinaryToWriter
    );
  }
};


/**
 * optional core.solo.io.ResourceRef ref = 1;
 * @return {?proto.core.solo.io.ResourceRef}
 */
proto.glooeeapi.solo.io.GetArtifactRequest.prototype.getRef = function() {
  return /** @type{?proto.core.solo.io.ResourceRef} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef, 1));
};


/** @param {?proto.core.solo.io.ResourceRef|undefined} value */
proto.glooeeapi.solo.io.GetArtifactRequest.prototype.setRef = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.glooeeapi.solo.io.GetArtifactRequest.prototype.clearRef = function() {
  this.setRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.GetArtifactRequest.prototype.hasRef = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.GetArtifactResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.GetArtifactResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.GetArtifactResponse.displayName = 'proto.glooeeapi.solo.io.GetArtifactResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.GetArtifactResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.GetArtifactResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.GetArtifactResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.GetArtifactResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    artifact: (f = msg.getArtifact()) && github_com_solo$io_gloo_projects_gloo_api_v1_artifact_pb.Artifact.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.GetArtifactResponse}
 */
proto.glooeeapi.solo.io.GetArtifactResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.GetArtifactResponse;
  return proto.glooeeapi.solo.io.GetArtifactResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.GetArtifactResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.GetArtifactResponse}
 */
proto.glooeeapi.solo.io.GetArtifactResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_gloo_projects_gloo_api_v1_artifact_pb.Artifact;
      reader.readMessage(value,github_com_solo$io_gloo_projects_gloo_api_v1_artifact_pb.Artifact.deserializeBinaryFromReader);
      msg.setArtifact(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.GetArtifactResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.GetArtifactResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.GetArtifactResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.GetArtifactResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getArtifact();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_gloo_projects_gloo_api_v1_artifact_pb.Artifact.serializeBinaryToWriter
    );
  }
};


/**
 * optional gloo.solo.io.Artifact artifact = 1;
 * @return {?proto.gloo.solo.io.Artifact}
 */
proto.glooeeapi.solo.io.GetArtifactResponse.prototype.getArtifact = function() {
  return /** @type{?proto.gloo.solo.io.Artifact} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_gloo_projects_gloo_api_v1_artifact_pb.Artifact, 1));
};


/** @param {?proto.gloo.solo.io.Artifact|undefined} value */
proto.glooeeapi.solo.io.GetArtifactResponse.prototype.setArtifact = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.glooeeapi.solo.io.GetArtifactResponse.prototype.clearArtifact = function() {
  this.setArtifact(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.GetArtifactResponse.prototype.hasArtifact = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.ListArtifactsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.ListArtifactsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.ListArtifactsRequest.displayName = 'proto.glooeeapi.solo.io.ListArtifactsRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.ListArtifactsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.ListArtifactsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.ListArtifactsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.ListArtifactsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.ListArtifactsRequest}
 */
proto.glooeeapi.solo.io.ListArtifactsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.ListArtifactsRequest;
  return proto.glooeeapi.solo.io.ListArtifactsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.ListArtifactsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.ListArtifactsRequest}
 */
proto.glooeeapi.solo.io.ListArtifactsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.ListArtifactsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.ListArtifactsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.ListArtifactsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.ListArtifactsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.ListArtifactsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.glooeeapi.solo.io.ListArtifactsResponse.repeatedFields_, null);
};
goog.inherits(proto.glooeeapi.solo.io.ListArtifactsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.ListArtifactsResponse.displayName = 'proto.glooeeapi.solo.io.ListArtifactsResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.glooeeapi.solo.io.ListArtifactsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.ListArtifactsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.ListArtifactsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.ListArtifactsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.ListArtifactsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    artifactsList: jspb.Message.toObjectList(msg.getArtifactsList(),
    github_com_solo$io_gloo_projects_gloo_api_v1_artifact_pb.Artifact.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.ListArtifactsResponse}
 */
proto.glooeeapi.solo.io.ListArtifactsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.ListArtifactsResponse;
  return proto.glooeeapi.solo.io.ListArtifactsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.ListArtifactsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.ListArtifactsResponse}
 */
proto.glooeeapi.solo.io.ListArtifactsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_gloo_projects_gloo_api_v1_artifact_pb.Artifact;
      reader.readMessage(value,github_com_solo$io_gloo_projects_gloo_api_v1_artifact_pb.Artifact.deserializeBinaryFromReader);
      msg.addArtifacts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.ListArtifactsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.ListArtifactsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.ListArtifactsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.ListArtifactsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getArtifactsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      github_com_solo$io_gloo_projects_gloo_api_v1_artifact_pb.Artifact.serializeBinaryToWriter
    );
  }
};


/**
 * repeated gloo.solo.io.Artifact artifacts = 1;
 * @return {!Array<!proto.gloo.solo.io.Artifact>}
 */
proto.glooeeapi.solo.io.ListArtifactsResponse.prototype.getArtifactsList = function() {
  return /** @type{!Array<!proto.gloo.solo.io.Artifact>} */ (
    jspb.Message.getRepeatedWrapperField(this, github_com_solo$io_gloo_projects_gloo_api_v1_artifact_pb.Artifact, 1));
};


/** @param {!Array<!proto.gloo.solo.io.Artifact>} value */
proto.glooeeapi.solo.io.ListArtifactsResponse.prototype.setArtifactsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.gloo.solo.io.Artifact=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gloo.solo.io.Artifact}
 */
proto.glooeeapi.solo.io.ListArtifactsResponse.prototype.addArtifacts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.gloo.solo.io.Artifact, opt_index);
};


proto.glooeeapi.solo.io.ListArtifactsResponse.prototype.clearArtifactsList = function() {
  this.setArtifactsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.CreateArtifactRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.CreateArtifactRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.CreateArtifactRequest.displayName = 'proto.glooeeapi.solo.io.CreateArtifactRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.CreateArtifactRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.CreateArtifactRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.CreateArtifactRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.CreateArtifactRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    artifact: (f = msg.getArtifact()) && github_com_solo$io_gloo_projects_gloo_api_v1_artifact_pb.Artifact.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.CreateArtifactRequest}
 */
proto.glooeeapi.solo.io.CreateArtifactRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.CreateArtifactRequest;
  return proto.glooeeapi.solo.io.CreateArtifactRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.CreateArtifactRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.CreateArtifactRequest}
 */
proto.glooeeapi.solo.io.CreateArtifactRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = new github_com_solo$io_gloo_projects_gloo_api_v1_artifact_pb.Artifact;
      reader.readMessage(value,github_com_solo$io_gloo_projects_gloo_api_v1_artifact_pb.Artifact.deserializeBinaryFromReader);
      msg.setArtifact(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.CreateArtifactRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.CreateArtifactRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.CreateArtifactRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.CreateArtifactRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getArtifact();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      github_com_solo$io_gloo_projects_gloo_api_v1_artifact_pb.Artifact.serializeBinaryToWriter
    );
  }
};


/**
 * optional gloo.solo.io.Artifact artifact = 3;
 * @return {?proto.gloo.solo.io.Artifact}
 */
proto.glooeeapi.solo.io.CreateArtifactRequest.prototype.getArtifact = function() {
  return /** @type{?proto.gloo.solo.io.Artifact} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_gloo_projects_gloo_api_v1_artifact_pb.Artifact, 3));
};


/** @param {?proto.gloo.solo.io.Artifact|undefined} value */
proto.glooeeapi.solo.io.CreateArtifactRequest.prototype.setArtifact = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.glooeeapi.solo.io.CreateArtifactRequest.prototype.clearArtifact = function() {
  this.setArtifact(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.CreateArtifactRequest.prototype.hasArtifact = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.CreateArtifactResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.CreateArtifactResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.CreateArtifactResponse.displayName = 'proto.glooeeapi.solo.io.CreateArtifactResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.CreateArtifactResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.CreateArtifactResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.CreateArtifactResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.CreateArtifactResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    artifact: (f = msg.getArtifact()) && github_com_solo$io_gloo_projects_gloo_api_v1_artifact_pb.Artifact.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.CreateArtifactResponse}
 */
proto.glooeeapi.solo.io.CreateArtifactResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.CreateArtifactResponse;
  return proto.glooeeapi.solo.io.CreateArtifactResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.CreateArtifactResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.CreateArtifactResponse}
 */
proto.glooeeapi.solo.io.CreateArtifactResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_gloo_projects_gloo_api_v1_artifact_pb.Artifact;
      reader.readMessage(value,github_com_solo$io_gloo_projects_gloo_api_v1_artifact_pb.Artifact.deserializeBinaryFromReader);
      msg.setArtifact(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.CreateArtifactResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.CreateArtifactResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.CreateArtifactResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.CreateArtifactResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getArtifact();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_gloo_projects_gloo_api_v1_artifact_pb.Artifact.serializeBinaryToWriter
    );
  }
};


/**
 * optional gloo.solo.io.Artifact artifact = 1;
 * @return {?proto.gloo.solo.io.Artifact}
 */
proto.glooeeapi.solo.io.CreateArtifactResponse.prototype.getArtifact = function() {
  return /** @type{?proto.gloo.solo.io.Artifact} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_gloo_projects_gloo_api_v1_artifact_pb.Artifact, 1));
};


/** @param {?proto.gloo.solo.io.Artifact|undefined} value */
proto.glooeeapi.solo.io.CreateArtifactResponse.prototype.setArtifact = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.glooeeapi.solo.io.CreateArtifactResponse.prototype.clearArtifact = function() {
  this.setArtifact(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.CreateArtifactResponse.prototype.hasArtifact = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.UpdateArtifactRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.UpdateArtifactRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.UpdateArtifactRequest.displayName = 'proto.glooeeapi.solo.io.UpdateArtifactRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.UpdateArtifactRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.UpdateArtifactRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.UpdateArtifactRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.UpdateArtifactRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    artifact: (f = msg.getArtifact()) && github_com_solo$io_gloo_projects_gloo_api_v1_artifact_pb.Artifact.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.UpdateArtifactRequest}
 */
proto.glooeeapi.solo.io.UpdateArtifactRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.UpdateArtifactRequest;
  return proto.glooeeapi.solo.io.UpdateArtifactRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.UpdateArtifactRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.UpdateArtifactRequest}
 */
proto.glooeeapi.solo.io.UpdateArtifactRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = new github_com_solo$io_gloo_projects_gloo_api_v1_artifact_pb.Artifact;
      reader.readMessage(value,github_com_solo$io_gloo_projects_gloo_api_v1_artifact_pb.Artifact.deserializeBinaryFromReader);
      msg.setArtifact(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.UpdateArtifactRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.UpdateArtifactRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.UpdateArtifactRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.UpdateArtifactRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getArtifact();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      github_com_solo$io_gloo_projects_gloo_api_v1_artifact_pb.Artifact.serializeBinaryToWriter
    );
  }
};


/**
 * optional gloo.solo.io.Artifact artifact = 3;
 * @return {?proto.gloo.solo.io.Artifact}
 */
proto.glooeeapi.solo.io.UpdateArtifactRequest.prototype.getArtifact = function() {
  return /** @type{?proto.gloo.solo.io.Artifact} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_gloo_projects_gloo_api_v1_artifact_pb.Artifact, 3));
};


/** @param {?proto.gloo.solo.io.Artifact|undefined} value */
proto.glooeeapi.solo.io.UpdateArtifactRequest.prototype.setArtifact = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.glooeeapi.solo.io.UpdateArtifactRequest.prototype.clearArtifact = function() {
  this.setArtifact(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.UpdateArtifactRequest.prototype.hasArtifact = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.UpdateArtifactResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.UpdateArtifactResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.UpdateArtifactResponse.displayName = 'proto.glooeeapi.solo.io.UpdateArtifactResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.UpdateArtifactResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.UpdateArtifactResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.UpdateArtifactResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.UpdateArtifactResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    artifact: (f = msg.getArtifact()) && github_com_solo$io_gloo_projects_gloo_api_v1_artifact_pb.Artifact.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.UpdateArtifactResponse}
 */
proto.glooeeapi.solo.io.UpdateArtifactResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.UpdateArtifactResponse;
  return proto.glooeeapi.solo.io.UpdateArtifactResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.UpdateArtifactResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.UpdateArtifactResponse}
 */
proto.glooeeapi.solo.io.UpdateArtifactResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_gloo_projects_gloo_api_v1_artifact_pb.Artifact;
      reader.readMessage(value,github_com_solo$io_gloo_projects_gloo_api_v1_artifact_pb.Artifact.deserializeBinaryFromReader);
      msg.setArtifact(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.UpdateArtifactResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.UpdateArtifactResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.UpdateArtifactResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.UpdateArtifactResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getArtifact();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_gloo_projects_gloo_api_v1_artifact_pb.Artifact.serializeBinaryToWriter
    );
  }
};


/**
 * optional gloo.solo.io.Artifact artifact = 1;
 * @return {?proto.gloo.solo.io.Artifact}
 */
proto.glooeeapi.solo.io.UpdateArtifactResponse.prototype.getArtifact = function() {
  return /** @type{?proto.gloo.solo.io.Artifact} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_gloo_projects_gloo_api_v1_artifact_pb.Artifact, 1));
};


/** @param {?proto.gloo.solo.io.Artifact|undefined} value */
proto.glooeeapi.solo.io.UpdateArtifactResponse.prototype.setArtifact = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.glooeeapi.solo.io.UpdateArtifactResponse.prototype.clearArtifact = function() {
  this.setArtifact(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.UpdateArtifactResponse.prototype.hasArtifact = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.DeleteArtifactRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.DeleteArtifactRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.DeleteArtifactRequest.displayName = 'proto.glooeeapi.solo.io.DeleteArtifactRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.DeleteArtifactRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.DeleteArtifactRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.DeleteArtifactRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.DeleteArtifactRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    ref: (f = msg.getRef()) && github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.DeleteArtifactRequest}
 */
proto.glooeeapi.solo.io.DeleteArtifactRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.DeleteArtifactRequest;
  return proto.glooeeapi.solo.io.DeleteArtifactRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.DeleteArtifactRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.DeleteArtifactRequest}
 */
proto.glooeeapi.solo.io.DeleteArtifactRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef;
      reader.readMessage(value,github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.deserializeBinaryFromReader);
      msg.setRef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.DeleteArtifactRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.DeleteArtifactRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.DeleteArtifactRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.DeleteArtifactRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRef();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.serializeBinaryToWriter
    );
  }
};


/**
 * optional core.solo.io.ResourceRef ref = 1;
 * @return {?proto.core.solo.io.ResourceRef}
 */
proto.glooeeapi.solo.io.DeleteArtifactRequest.prototype.getRef = function() {
  return /** @type{?proto.core.solo.io.ResourceRef} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef, 1));
};


/** @param {?proto.core.solo.io.ResourceRef|undefined} value */
proto.glooeeapi.solo.io.DeleteArtifactRequest.prototype.setRef = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.glooeeapi.solo.io.DeleteArtifactRequest.prototype.clearRef = function() {
  this.setRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.glooeeapi.solo.io.DeleteArtifactRequest.prototype.hasRef = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.glooeeapi.solo.io.DeleteArtifactResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.glooeeapi.solo.io.DeleteArtifactResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.glooeeapi.solo.io.DeleteArtifactResponse.displayName = 'proto.glooeeapi.solo.io.DeleteArtifactResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.glooeeapi.solo.io.DeleteArtifactResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.glooeeapi.solo.io.DeleteArtifactResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.glooeeapi.solo.io.DeleteArtifactResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.DeleteArtifactResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.glooeeapi.solo.io.DeleteArtifactResponse}
 */
proto.glooeeapi.solo.io.DeleteArtifactResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.glooeeapi.solo.io.DeleteArtifactResponse;
  return proto.glooeeapi.solo.io.DeleteArtifactResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.glooeeapi.solo.io.DeleteArtifactResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.glooeeapi.solo.io.DeleteArtifactResponse}
 */
proto.glooeeapi.solo.io.DeleteArtifactResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.glooeeapi.solo.io.DeleteArtifactResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.glooeeapi.solo.io.DeleteArtifactResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.glooeeapi.solo.io.DeleteArtifactResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.glooeeapi.solo.io.DeleteArtifactResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.glooeeapi.solo.io);
