/* eslint-disable */
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var github_com_solo$io_gloo_projects_gloo_api_v1_options_lbhash_lbhash_pb = require('../../../../../../../github.com/solo-io/gloo/projects/gloo/api/v1/options/lbhash/lbhash_pb.js');
var gogoproto_gogo_pb = require('../../../../../../gogo/protobuf/gogoproto/gogo_pb.js');
var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.exportSymbol('proto.gloo.solo.io.LoadBalancerConfig', null, global);
goog.exportSymbol('proto.gloo.solo.io.LoadBalancerConfig.LeastRequest', null, global);
goog.exportSymbol('proto.gloo.solo.io.LoadBalancerConfig.Maglev', null, global);
goog.exportSymbol('proto.gloo.solo.io.LoadBalancerConfig.Random', null, global);
goog.exportSymbol('proto.gloo.solo.io.LoadBalancerConfig.RingHash', null, global);
goog.exportSymbol('proto.gloo.solo.io.LoadBalancerConfig.RingHashConfig', null, global);
goog.exportSymbol('proto.gloo.solo.io.LoadBalancerConfig.RoundRobin', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.LoadBalancerConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.gloo.solo.io.LoadBalancerConfig.oneofGroups_);
};
goog.inherits(proto.gloo.solo.io.LoadBalancerConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.LoadBalancerConfig.displayName = 'proto.gloo.solo.io.LoadBalancerConfig';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.gloo.solo.io.LoadBalancerConfig.oneofGroups_ = [[3,4,5,6,7]];

/**
 * @enum {number}
 */
proto.gloo.solo.io.LoadBalancerConfig.TypeCase = {
  TYPE_NOT_SET: 0,
  ROUND_ROBIN: 3,
  LEAST_REQUEST: 4,
  RANDOM: 5,
  RING_HASH: 6,
  MAGLEV: 7
};

/**
 * @return {proto.gloo.solo.io.LoadBalancerConfig.TypeCase}
 */
proto.gloo.solo.io.LoadBalancerConfig.prototype.getTypeCase = function() {
  return /** @type {proto.gloo.solo.io.LoadBalancerConfig.TypeCase} */(jspb.Message.computeOneofCase(this, proto.gloo.solo.io.LoadBalancerConfig.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.LoadBalancerConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.LoadBalancerConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.LoadBalancerConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.LoadBalancerConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    healthyPanicThreshold: (f = msg.getHealthyPanicThreshold()) && google_protobuf_wrappers_pb.DoubleValue.toObject(includeInstance, f),
    updateMergeWindow: (f = msg.getUpdateMergeWindow()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    roundRobin: (f = msg.getRoundRobin()) && proto.gloo.solo.io.LoadBalancerConfig.RoundRobin.toObject(includeInstance, f),
    leastRequest: (f = msg.getLeastRequest()) && proto.gloo.solo.io.LoadBalancerConfig.LeastRequest.toObject(includeInstance, f),
    random: (f = msg.getRandom()) && proto.gloo.solo.io.LoadBalancerConfig.Random.toObject(includeInstance, f),
    ringHash: (f = msg.getRingHash()) && proto.gloo.solo.io.LoadBalancerConfig.RingHash.toObject(includeInstance, f),
    maglev: (f = msg.getMaglev()) && proto.gloo.solo.io.LoadBalancerConfig.Maglev.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.LoadBalancerConfig}
 */
proto.gloo.solo.io.LoadBalancerConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.LoadBalancerConfig;
  return proto.gloo.solo.io.LoadBalancerConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.LoadBalancerConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.LoadBalancerConfig}
 */
proto.gloo.solo.io.LoadBalancerConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_wrappers_pb.DoubleValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.DoubleValue.deserializeBinaryFromReader);
      msg.setHealthyPanicThreshold(value);
      break;
    case 2:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setUpdateMergeWindow(value);
      break;
    case 3:
      var value = new proto.gloo.solo.io.LoadBalancerConfig.RoundRobin;
      reader.readMessage(value,proto.gloo.solo.io.LoadBalancerConfig.RoundRobin.deserializeBinaryFromReader);
      msg.setRoundRobin(value);
      break;
    case 4:
      var value = new proto.gloo.solo.io.LoadBalancerConfig.LeastRequest;
      reader.readMessage(value,proto.gloo.solo.io.LoadBalancerConfig.LeastRequest.deserializeBinaryFromReader);
      msg.setLeastRequest(value);
      break;
    case 5:
      var value = new proto.gloo.solo.io.LoadBalancerConfig.Random;
      reader.readMessage(value,proto.gloo.solo.io.LoadBalancerConfig.Random.deserializeBinaryFromReader);
      msg.setRandom(value);
      break;
    case 6:
      var value = new proto.gloo.solo.io.LoadBalancerConfig.RingHash;
      reader.readMessage(value,proto.gloo.solo.io.LoadBalancerConfig.RingHash.deserializeBinaryFromReader);
      msg.setRingHash(value);
      break;
    case 7:
      var value = new proto.gloo.solo.io.LoadBalancerConfig.Maglev;
      reader.readMessage(value,proto.gloo.solo.io.LoadBalancerConfig.Maglev.deserializeBinaryFromReader);
      msg.setMaglev(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.LoadBalancerConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.LoadBalancerConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.LoadBalancerConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.LoadBalancerConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHealthyPanicThreshold();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_wrappers_pb.DoubleValue.serializeBinaryToWriter
    );
  }
  f = message.getUpdateMergeWindow();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getRoundRobin();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.gloo.solo.io.LoadBalancerConfig.RoundRobin.serializeBinaryToWriter
    );
  }
  f = message.getLeastRequest();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.gloo.solo.io.LoadBalancerConfig.LeastRequest.serializeBinaryToWriter
    );
  }
  f = message.getRandom();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.gloo.solo.io.LoadBalancerConfig.Random.serializeBinaryToWriter
    );
  }
  f = message.getRingHash();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.gloo.solo.io.LoadBalancerConfig.RingHash.serializeBinaryToWriter
    );
  }
  f = message.getMaglev();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.gloo.solo.io.LoadBalancerConfig.Maglev.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.LoadBalancerConfig.RoundRobin = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gloo.solo.io.LoadBalancerConfig.RoundRobin, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.LoadBalancerConfig.RoundRobin.displayName = 'proto.gloo.solo.io.LoadBalancerConfig.RoundRobin';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.LoadBalancerConfig.RoundRobin.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.LoadBalancerConfig.RoundRobin.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.LoadBalancerConfig.RoundRobin} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.LoadBalancerConfig.RoundRobin.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.LoadBalancerConfig.RoundRobin}
 */
proto.gloo.solo.io.LoadBalancerConfig.RoundRobin.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.LoadBalancerConfig.RoundRobin;
  return proto.gloo.solo.io.LoadBalancerConfig.RoundRobin.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.LoadBalancerConfig.RoundRobin} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.LoadBalancerConfig.RoundRobin}
 */
proto.gloo.solo.io.LoadBalancerConfig.RoundRobin.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.LoadBalancerConfig.RoundRobin.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.LoadBalancerConfig.RoundRobin.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.LoadBalancerConfig.RoundRobin} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.LoadBalancerConfig.RoundRobin.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.LoadBalancerConfig.LeastRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gloo.solo.io.LoadBalancerConfig.LeastRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.LoadBalancerConfig.LeastRequest.displayName = 'proto.gloo.solo.io.LoadBalancerConfig.LeastRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.LoadBalancerConfig.LeastRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.LoadBalancerConfig.LeastRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.LoadBalancerConfig.LeastRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.LoadBalancerConfig.LeastRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    choiceCount: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.LoadBalancerConfig.LeastRequest}
 */
proto.gloo.solo.io.LoadBalancerConfig.LeastRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.LoadBalancerConfig.LeastRequest;
  return proto.gloo.solo.io.LoadBalancerConfig.LeastRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.LoadBalancerConfig.LeastRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.LoadBalancerConfig.LeastRequest}
 */
proto.gloo.solo.io.LoadBalancerConfig.LeastRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setChoiceCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.LoadBalancerConfig.LeastRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.LoadBalancerConfig.LeastRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.LoadBalancerConfig.LeastRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.LoadBalancerConfig.LeastRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChoiceCount();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 choice_count = 1;
 * @return {number}
 */
proto.gloo.solo.io.LoadBalancerConfig.LeastRequest.prototype.getChoiceCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.gloo.solo.io.LoadBalancerConfig.LeastRequest.prototype.setChoiceCount = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.LoadBalancerConfig.Random = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gloo.solo.io.LoadBalancerConfig.Random, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.LoadBalancerConfig.Random.displayName = 'proto.gloo.solo.io.LoadBalancerConfig.Random';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.LoadBalancerConfig.Random.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.LoadBalancerConfig.Random.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.LoadBalancerConfig.Random} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.LoadBalancerConfig.Random.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.LoadBalancerConfig.Random}
 */
proto.gloo.solo.io.LoadBalancerConfig.Random.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.LoadBalancerConfig.Random;
  return proto.gloo.solo.io.LoadBalancerConfig.Random.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.LoadBalancerConfig.Random} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.LoadBalancerConfig.Random}
 */
proto.gloo.solo.io.LoadBalancerConfig.Random.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.LoadBalancerConfig.Random.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.LoadBalancerConfig.Random.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.LoadBalancerConfig.Random} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.LoadBalancerConfig.Random.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.LoadBalancerConfig.RingHashConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gloo.solo.io.LoadBalancerConfig.RingHashConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.LoadBalancerConfig.RingHashConfig.displayName = 'proto.gloo.solo.io.LoadBalancerConfig.RingHashConfig';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.LoadBalancerConfig.RingHashConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.LoadBalancerConfig.RingHashConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.LoadBalancerConfig.RingHashConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.LoadBalancerConfig.RingHashConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    minimumRingSize: jspb.Message.getFieldWithDefault(msg, 1, 0),
    maximumRingSize: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.LoadBalancerConfig.RingHashConfig}
 */
proto.gloo.solo.io.LoadBalancerConfig.RingHashConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.LoadBalancerConfig.RingHashConfig;
  return proto.gloo.solo.io.LoadBalancerConfig.RingHashConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.LoadBalancerConfig.RingHashConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.LoadBalancerConfig.RingHashConfig}
 */
proto.gloo.solo.io.LoadBalancerConfig.RingHashConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMinimumRingSize(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMaximumRingSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.LoadBalancerConfig.RingHashConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.LoadBalancerConfig.RingHashConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.LoadBalancerConfig.RingHashConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.LoadBalancerConfig.RingHashConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMinimumRingSize();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getMaximumRingSize();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional uint64 minimum_ring_size = 1;
 * @return {number}
 */
proto.gloo.solo.io.LoadBalancerConfig.RingHashConfig.prototype.getMinimumRingSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.gloo.solo.io.LoadBalancerConfig.RingHashConfig.prototype.setMinimumRingSize = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 maximum_ring_size = 2;
 * @return {number}
 */
proto.gloo.solo.io.LoadBalancerConfig.RingHashConfig.prototype.getMaximumRingSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.gloo.solo.io.LoadBalancerConfig.RingHashConfig.prototype.setMaximumRingSize = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.LoadBalancerConfig.RingHash = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gloo.solo.io.LoadBalancerConfig.RingHash, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.LoadBalancerConfig.RingHash.displayName = 'proto.gloo.solo.io.LoadBalancerConfig.RingHash';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.LoadBalancerConfig.RingHash.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.LoadBalancerConfig.RingHash.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.LoadBalancerConfig.RingHash} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.LoadBalancerConfig.RingHash.toObject = function(includeInstance, msg) {
  var f, obj = {
    ringHashConfig: (f = msg.getRingHashConfig()) && proto.gloo.solo.io.LoadBalancerConfig.RingHashConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.LoadBalancerConfig.RingHash}
 */
proto.gloo.solo.io.LoadBalancerConfig.RingHash.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.LoadBalancerConfig.RingHash;
  return proto.gloo.solo.io.LoadBalancerConfig.RingHash.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.LoadBalancerConfig.RingHash} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.LoadBalancerConfig.RingHash}
 */
proto.gloo.solo.io.LoadBalancerConfig.RingHash.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gloo.solo.io.LoadBalancerConfig.RingHashConfig;
      reader.readMessage(value,proto.gloo.solo.io.LoadBalancerConfig.RingHashConfig.deserializeBinaryFromReader);
      msg.setRingHashConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.LoadBalancerConfig.RingHash.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.LoadBalancerConfig.RingHash.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.LoadBalancerConfig.RingHash} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.LoadBalancerConfig.RingHash.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRingHashConfig();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.gloo.solo.io.LoadBalancerConfig.RingHashConfig.serializeBinaryToWriter
    );
  }
};


/**
 * optional RingHashConfig ring_hash_config = 1;
 * @return {?proto.gloo.solo.io.LoadBalancerConfig.RingHashConfig}
 */
proto.gloo.solo.io.LoadBalancerConfig.RingHash.prototype.getRingHashConfig = function() {
  return /** @type{?proto.gloo.solo.io.LoadBalancerConfig.RingHashConfig} */ (
    jspb.Message.getWrapperField(this, proto.gloo.solo.io.LoadBalancerConfig.RingHashConfig, 1));
};


/** @param {?proto.gloo.solo.io.LoadBalancerConfig.RingHashConfig|undefined} value */
proto.gloo.solo.io.LoadBalancerConfig.RingHash.prototype.setRingHashConfig = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.gloo.solo.io.LoadBalancerConfig.RingHash.prototype.clearRingHashConfig = function() {
  this.setRingHashConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.LoadBalancerConfig.RingHash.prototype.hasRingHashConfig = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.LoadBalancerConfig.Maglev = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gloo.solo.io.LoadBalancerConfig.Maglev, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.LoadBalancerConfig.Maglev.displayName = 'proto.gloo.solo.io.LoadBalancerConfig.Maglev';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.LoadBalancerConfig.Maglev.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.LoadBalancerConfig.Maglev.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.LoadBalancerConfig.Maglev} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.LoadBalancerConfig.Maglev.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.LoadBalancerConfig.Maglev}
 */
proto.gloo.solo.io.LoadBalancerConfig.Maglev.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.LoadBalancerConfig.Maglev;
  return proto.gloo.solo.io.LoadBalancerConfig.Maglev.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.LoadBalancerConfig.Maglev} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.LoadBalancerConfig.Maglev}
 */
proto.gloo.solo.io.LoadBalancerConfig.Maglev.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.LoadBalancerConfig.Maglev.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.LoadBalancerConfig.Maglev.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.LoadBalancerConfig.Maglev} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.LoadBalancerConfig.Maglev.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * optional google.protobuf.DoubleValue healthy_panic_threshold = 1;
 * @return {?proto.google.protobuf.DoubleValue}
 */
proto.gloo.solo.io.LoadBalancerConfig.prototype.getHealthyPanicThreshold = function() {
  return /** @type{?proto.google.protobuf.DoubleValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.DoubleValue, 1));
};


/** @param {?proto.google.protobuf.DoubleValue|undefined} value */
proto.gloo.solo.io.LoadBalancerConfig.prototype.setHealthyPanicThreshold = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.gloo.solo.io.LoadBalancerConfig.prototype.clearHealthyPanicThreshold = function() {
  this.setHealthyPanicThreshold(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.LoadBalancerConfig.prototype.hasHealthyPanicThreshold = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Duration update_merge_window = 2;
 * @return {?proto.google.protobuf.Duration}
 */
proto.gloo.solo.io.LoadBalancerConfig.prototype.getUpdateMergeWindow = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 2));
};


/** @param {?proto.google.protobuf.Duration|undefined} value */
proto.gloo.solo.io.LoadBalancerConfig.prototype.setUpdateMergeWindow = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.gloo.solo.io.LoadBalancerConfig.prototype.clearUpdateMergeWindow = function() {
  this.setUpdateMergeWindow(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.LoadBalancerConfig.prototype.hasUpdateMergeWindow = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional RoundRobin round_robin = 3;
 * @return {?proto.gloo.solo.io.LoadBalancerConfig.RoundRobin}
 */
proto.gloo.solo.io.LoadBalancerConfig.prototype.getRoundRobin = function() {
  return /** @type{?proto.gloo.solo.io.LoadBalancerConfig.RoundRobin} */ (
    jspb.Message.getWrapperField(this, proto.gloo.solo.io.LoadBalancerConfig.RoundRobin, 3));
};


/** @param {?proto.gloo.solo.io.LoadBalancerConfig.RoundRobin|undefined} value */
proto.gloo.solo.io.LoadBalancerConfig.prototype.setRoundRobin = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.gloo.solo.io.LoadBalancerConfig.oneofGroups_[0], value);
};


proto.gloo.solo.io.LoadBalancerConfig.prototype.clearRoundRobin = function() {
  this.setRoundRobin(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.LoadBalancerConfig.prototype.hasRoundRobin = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional LeastRequest least_request = 4;
 * @return {?proto.gloo.solo.io.LoadBalancerConfig.LeastRequest}
 */
proto.gloo.solo.io.LoadBalancerConfig.prototype.getLeastRequest = function() {
  return /** @type{?proto.gloo.solo.io.LoadBalancerConfig.LeastRequest} */ (
    jspb.Message.getWrapperField(this, proto.gloo.solo.io.LoadBalancerConfig.LeastRequest, 4));
};


/** @param {?proto.gloo.solo.io.LoadBalancerConfig.LeastRequest|undefined} value */
proto.gloo.solo.io.LoadBalancerConfig.prototype.setLeastRequest = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.gloo.solo.io.LoadBalancerConfig.oneofGroups_[0], value);
};


proto.gloo.solo.io.LoadBalancerConfig.prototype.clearLeastRequest = function() {
  this.setLeastRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.LoadBalancerConfig.prototype.hasLeastRequest = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Random random = 5;
 * @return {?proto.gloo.solo.io.LoadBalancerConfig.Random}
 */
proto.gloo.solo.io.LoadBalancerConfig.prototype.getRandom = function() {
  return /** @type{?proto.gloo.solo.io.LoadBalancerConfig.Random} */ (
    jspb.Message.getWrapperField(this, proto.gloo.solo.io.LoadBalancerConfig.Random, 5));
};


/** @param {?proto.gloo.solo.io.LoadBalancerConfig.Random|undefined} value */
proto.gloo.solo.io.LoadBalancerConfig.prototype.setRandom = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.gloo.solo.io.LoadBalancerConfig.oneofGroups_[0], value);
};


proto.gloo.solo.io.LoadBalancerConfig.prototype.clearRandom = function() {
  this.setRandom(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.LoadBalancerConfig.prototype.hasRandom = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional RingHash ring_hash = 6;
 * @return {?proto.gloo.solo.io.LoadBalancerConfig.RingHash}
 */
proto.gloo.solo.io.LoadBalancerConfig.prototype.getRingHash = function() {
  return /** @type{?proto.gloo.solo.io.LoadBalancerConfig.RingHash} */ (
    jspb.Message.getWrapperField(this, proto.gloo.solo.io.LoadBalancerConfig.RingHash, 6));
};


/** @param {?proto.gloo.solo.io.LoadBalancerConfig.RingHash|undefined} value */
proto.gloo.solo.io.LoadBalancerConfig.prototype.setRingHash = function(value) {
  jspb.Message.setOneofWrapperField(this, 6, proto.gloo.solo.io.LoadBalancerConfig.oneofGroups_[0], value);
};


proto.gloo.solo.io.LoadBalancerConfig.prototype.clearRingHash = function() {
  this.setRingHash(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.LoadBalancerConfig.prototype.hasRingHash = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Maglev maglev = 7;
 * @return {?proto.gloo.solo.io.LoadBalancerConfig.Maglev}
 */
proto.gloo.solo.io.LoadBalancerConfig.prototype.getMaglev = function() {
  return /** @type{?proto.gloo.solo.io.LoadBalancerConfig.Maglev} */ (
    jspb.Message.getWrapperField(this, proto.gloo.solo.io.LoadBalancerConfig.Maglev, 7));
};


/** @param {?proto.gloo.solo.io.LoadBalancerConfig.Maglev|undefined} value */
proto.gloo.solo.io.LoadBalancerConfig.prototype.setMaglev = function(value) {
  jspb.Message.setOneofWrapperField(this, 7, proto.gloo.solo.io.LoadBalancerConfig.oneofGroups_[0], value);
};


proto.gloo.solo.io.LoadBalancerConfig.prototype.clearMaglev = function() {
  this.setMaglev(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.LoadBalancerConfig.prototype.hasMaglev = function() {
  return jspb.Message.getField(this, 7) != null;
};


goog.object.extend(exports, proto.gloo.solo.io);
