/* eslint-disable */
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var gogoproto_gogo_pb = require('../../../../../../gogo/protobuf/gogoproto/gogo_pb.js');
var github_com_solo$io_solo$kit_api_v1_metadata_pb = require('../../../../../../../github.com/solo-io/solo-kit/api/v1/metadata_pb.js');
var github_com_solo$io_solo$kit_api_v1_status_pb = require('../../../../../../../github.com/solo-io/solo-kit/api/v1/status_pb.js');
var github_com_solo$io_solo$kit_api_v1_ref_pb = require('../../../../../../../github.com/solo-io/solo-kit/api/v1/ref_pb.js');
var github_com_solo$io_solo$kit_api_v1_solo$kit_pb = require('../../../../../../../github.com/solo-io/solo-kit/api/v1/solo-kit_pb.js');
var github_com_solo$io_gloo_projects_gloo_api_v1_ssl_pb = require('../../../../../../../github.com/solo-io/gloo/projects/gloo/api/v1/ssl_pb.js');
var github_com_solo$io_gloo_projects_gloo_api_v1_proxy_pb = require('../../../../../../../github.com/solo-io/gloo/projects/gloo/api/v1/proxy_pb.js');
var github_com_solo$io_gloo_projects_gloo_api_v1_plugins_pb = require('../../../../../../../github.com/solo-io/gloo/projects/gloo/api/v1/plugins_pb.js');
goog.exportSymbol('proto.gateway.solo.io.Route', null, global);
goog.exportSymbol('proto.gateway.solo.io.VirtualHost', null, global);
goog.exportSymbol('proto.gateway.solo.io.VirtualService', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gateway.solo.io.VirtualService = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gateway.solo.io.VirtualService, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gateway.solo.io.VirtualService.displayName = 'proto.gateway.solo.io.VirtualService';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gateway.solo.io.VirtualService.prototype.toObject = function(opt_includeInstance) {
  return proto.gateway.solo.io.VirtualService.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gateway.solo.io.VirtualService} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gateway.solo.io.VirtualService.toObject = function(includeInstance, msg) {
  var f, obj = {
    virtualHost: (f = msg.getVirtualHost()) && proto.gateway.solo.io.VirtualHost.toObject(includeInstance, f),
    sslConfig: (f = msg.getSslConfig()) && github_com_solo$io_gloo_projects_gloo_api_v1_ssl_pb.SslConfig.toObject(includeInstance, f),
    displayName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    status: (f = msg.getStatus()) && github_com_solo$io_solo$kit_api_v1_status_pb.Status.toObject(includeInstance, f),
    metadata: (f = msg.getMetadata()) && github_com_solo$io_solo$kit_api_v1_metadata_pb.Metadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gateway.solo.io.VirtualService}
 */
proto.gateway.solo.io.VirtualService.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gateway.solo.io.VirtualService;
  return proto.gateway.solo.io.VirtualService.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gateway.solo.io.VirtualService} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gateway.solo.io.VirtualService}
 */
proto.gateway.solo.io.VirtualService.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gateway.solo.io.VirtualHost;
      reader.readMessage(value,proto.gateway.solo.io.VirtualHost.deserializeBinaryFromReader);
      msg.setVirtualHost(value);
      break;
    case 2:
      var value = new github_com_solo$io_gloo_projects_gloo_api_v1_ssl_pb.SslConfig;
      reader.readMessage(value,github_com_solo$io_gloo_projects_gloo_api_v1_ssl_pb.SslConfig.deserializeBinaryFromReader);
      msg.setSslConfig(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayName(value);
      break;
    case 6:
      var value = new github_com_solo$io_solo$kit_api_v1_status_pb.Status;
      reader.readMessage(value,github_com_solo$io_solo$kit_api_v1_status_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 7:
      var value = new github_com_solo$io_solo$kit_api_v1_metadata_pb.Metadata;
      reader.readMessage(value,github_com_solo$io_solo$kit_api_v1_metadata_pb.Metadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gateway.solo.io.VirtualService.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gateway.solo.io.VirtualService.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gateway.solo.io.VirtualService} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gateway.solo.io.VirtualService.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVirtualHost();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.gateway.solo.io.VirtualHost.serializeBinaryToWriter
    );
  }
  f = message.getSslConfig();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      github_com_solo$io_gloo_projects_gloo_api_v1_ssl_pb.SslConfig.serializeBinaryToWriter
    );
  }
  f = message.getDisplayName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      github_com_solo$io_solo$kit_api_v1_status_pb.Status.serializeBinaryToWriter
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      github_com_solo$io_solo$kit_api_v1_metadata_pb.Metadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional VirtualHost virtual_host = 1;
 * @return {?proto.gateway.solo.io.VirtualHost}
 */
proto.gateway.solo.io.VirtualService.prototype.getVirtualHost = function() {
  return /** @type{?proto.gateway.solo.io.VirtualHost} */ (
    jspb.Message.getWrapperField(this, proto.gateway.solo.io.VirtualHost, 1));
};


/** @param {?proto.gateway.solo.io.VirtualHost|undefined} value */
proto.gateway.solo.io.VirtualService.prototype.setVirtualHost = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.gateway.solo.io.VirtualService.prototype.clearVirtualHost = function() {
  this.setVirtualHost(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gateway.solo.io.VirtualService.prototype.hasVirtualHost = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional gloo.solo.io.SslConfig ssl_config = 2;
 * @return {?proto.gloo.solo.io.SslConfig}
 */
proto.gateway.solo.io.VirtualService.prototype.getSslConfig = function() {
  return /** @type{?proto.gloo.solo.io.SslConfig} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_gloo_projects_gloo_api_v1_ssl_pb.SslConfig, 2));
};


/** @param {?proto.gloo.solo.io.SslConfig|undefined} value */
proto.gateway.solo.io.VirtualService.prototype.setSslConfig = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.gateway.solo.io.VirtualService.prototype.clearSslConfig = function() {
  this.setSslConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gateway.solo.io.VirtualService.prototype.hasSslConfig = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string display_name = 3;
 * @return {string}
 */
proto.gateway.solo.io.VirtualService.prototype.getDisplayName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.gateway.solo.io.VirtualService.prototype.setDisplayName = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional core.solo.io.Status status = 6;
 * @return {?proto.core.solo.io.Status}
 */
proto.gateway.solo.io.VirtualService.prototype.getStatus = function() {
  return /** @type{?proto.core.solo.io.Status} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$kit_api_v1_status_pb.Status, 6));
};


/** @param {?proto.core.solo.io.Status|undefined} value */
proto.gateway.solo.io.VirtualService.prototype.setStatus = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.gateway.solo.io.VirtualService.prototype.clearStatus = function() {
  this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gateway.solo.io.VirtualService.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional core.solo.io.Metadata metadata = 7;
 * @return {?proto.core.solo.io.Metadata}
 */
proto.gateway.solo.io.VirtualService.prototype.getMetadata = function() {
  return /** @type{?proto.core.solo.io.Metadata} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$kit_api_v1_metadata_pb.Metadata, 7));
};


/** @param {?proto.core.solo.io.Metadata|undefined} value */
proto.gateway.solo.io.VirtualService.prototype.setMetadata = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.gateway.solo.io.VirtualService.prototype.clearMetadata = function() {
  this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gateway.solo.io.VirtualService.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gateway.solo.io.VirtualHost = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gateway.solo.io.VirtualHost.repeatedFields_, null);
};
goog.inherits(proto.gateway.solo.io.VirtualHost, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gateway.solo.io.VirtualHost.displayName = 'proto.gateway.solo.io.VirtualHost';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gateway.solo.io.VirtualHost.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gateway.solo.io.VirtualHost.prototype.toObject = function(opt_includeInstance) {
  return proto.gateway.solo.io.VirtualHost.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gateway.solo.io.VirtualHost} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gateway.solo.io.VirtualHost.toObject = function(includeInstance, msg) {
  var f, obj = {
    domainsList: jspb.Message.getRepeatedField(msg, 2),
    routesList: jspb.Message.toObjectList(msg.getRoutesList(),
    proto.gateway.solo.io.Route.toObject, includeInstance),
    virtualHostPlugins: (f = msg.getVirtualHostPlugins()) && github_com_solo$io_gloo_projects_gloo_api_v1_plugins_pb.VirtualHostPlugins.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gateway.solo.io.VirtualHost}
 */
proto.gateway.solo.io.VirtualHost.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gateway.solo.io.VirtualHost;
  return proto.gateway.solo.io.VirtualHost.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gateway.solo.io.VirtualHost} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gateway.solo.io.VirtualHost}
 */
proto.gateway.solo.io.VirtualHost.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addDomains(value);
      break;
    case 3:
      var value = new proto.gateway.solo.io.Route;
      reader.readMessage(value,proto.gateway.solo.io.Route.deserializeBinaryFromReader);
      msg.addRoutes(value);
      break;
    case 4:
      var value = new github_com_solo$io_gloo_projects_gloo_api_v1_plugins_pb.VirtualHostPlugins;
      reader.readMessage(value,github_com_solo$io_gloo_projects_gloo_api_v1_plugins_pb.VirtualHostPlugins.deserializeBinaryFromReader);
      msg.setVirtualHostPlugins(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gateway.solo.io.VirtualHost.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gateway.solo.io.VirtualHost.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gateway.solo.io.VirtualHost} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gateway.solo.io.VirtualHost.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDomainsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getRoutesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.gateway.solo.io.Route.serializeBinaryToWriter
    );
  }
  f = message.getVirtualHostPlugins();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      github_com_solo$io_gloo_projects_gloo_api_v1_plugins_pb.VirtualHostPlugins.serializeBinaryToWriter
    );
  }
};


/**
 * repeated string domains = 2;
 * @return {!Array<string>}
 */
proto.gateway.solo.io.VirtualHost.prototype.getDomainsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array<string>} value */
proto.gateway.solo.io.VirtualHost.prototype.setDomainsList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.gateway.solo.io.VirtualHost.prototype.addDomains = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.gateway.solo.io.VirtualHost.prototype.clearDomainsList = function() {
  this.setDomainsList([]);
};


/**
 * repeated Route routes = 3;
 * @return {!Array<!proto.gateway.solo.io.Route>}
 */
proto.gateway.solo.io.VirtualHost.prototype.getRoutesList = function() {
  return /** @type{!Array<!proto.gateway.solo.io.Route>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gateway.solo.io.Route, 3));
};


/** @param {!Array<!proto.gateway.solo.io.Route>} value */
proto.gateway.solo.io.VirtualHost.prototype.setRoutesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.gateway.solo.io.Route=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gateway.solo.io.Route}
 */
proto.gateway.solo.io.VirtualHost.prototype.addRoutes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.gateway.solo.io.Route, opt_index);
};


proto.gateway.solo.io.VirtualHost.prototype.clearRoutesList = function() {
  this.setRoutesList([]);
};


/**
 * optional gloo.solo.io.VirtualHostPlugins virtual_host_plugins = 4;
 * @return {?proto.gloo.solo.io.VirtualHostPlugins}
 */
proto.gateway.solo.io.VirtualHost.prototype.getVirtualHostPlugins = function() {
  return /** @type{?proto.gloo.solo.io.VirtualHostPlugins} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_gloo_projects_gloo_api_v1_plugins_pb.VirtualHostPlugins, 4));
};


/** @param {?proto.gloo.solo.io.VirtualHostPlugins|undefined} value */
proto.gateway.solo.io.VirtualHost.prototype.setVirtualHostPlugins = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.gateway.solo.io.VirtualHost.prototype.clearVirtualHostPlugins = function() {
  this.setVirtualHostPlugins(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gateway.solo.io.VirtualHost.prototype.hasVirtualHostPlugins = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gateway.solo.io.Route = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.gateway.solo.io.Route.oneofGroups_);
};
goog.inherits(proto.gateway.solo.io.Route, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gateway.solo.io.Route.displayName = 'proto.gateway.solo.io.Route';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.gateway.solo.io.Route.oneofGroups_ = [[2,3,4,5]];

/**
 * @enum {number}
 */
proto.gateway.solo.io.Route.ActionCase = {
  ACTION_NOT_SET: 0,
  ROUTE_ACTION: 2,
  REDIRECT_ACTION: 3,
  DIRECT_RESPONSE_ACTION: 4,
  DELEGATE_ACTION: 5
};

/**
 * @return {proto.gateway.solo.io.Route.ActionCase}
 */
proto.gateway.solo.io.Route.prototype.getActionCase = function() {
  return /** @type {proto.gateway.solo.io.Route.ActionCase} */(jspb.Message.computeOneofCase(this, proto.gateway.solo.io.Route.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gateway.solo.io.Route.prototype.toObject = function(opt_includeInstance) {
  return proto.gateway.solo.io.Route.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gateway.solo.io.Route} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gateway.solo.io.Route.toObject = function(includeInstance, msg) {
  var f, obj = {
    matcher: (f = msg.getMatcher()) && github_com_solo$io_gloo_projects_gloo_api_v1_proxy_pb.Matcher.toObject(includeInstance, f),
    routeAction: (f = msg.getRouteAction()) && github_com_solo$io_gloo_projects_gloo_api_v1_proxy_pb.RouteAction.toObject(includeInstance, f),
    redirectAction: (f = msg.getRedirectAction()) && github_com_solo$io_gloo_projects_gloo_api_v1_proxy_pb.RedirectAction.toObject(includeInstance, f),
    directResponseAction: (f = msg.getDirectResponseAction()) && github_com_solo$io_gloo_projects_gloo_api_v1_proxy_pb.DirectResponseAction.toObject(includeInstance, f),
    delegateAction: (f = msg.getDelegateAction()) && github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.toObject(includeInstance, f),
    routePlugins: (f = msg.getRoutePlugins()) && github_com_solo$io_gloo_projects_gloo_api_v1_plugins_pb.RoutePlugins.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gateway.solo.io.Route}
 */
proto.gateway.solo.io.Route.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gateway.solo.io.Route;
  return proto.gateway.solo.io.Route.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gateway.solo.io.Route} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gateway.solo.io.Route}
 */
proto.gateway.solo.io.Route.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_gloo_projects_gloo_api_v1_proxy_pb.Matcher;
      reader.readMessage(value,github_com_solo$io_gloo_projects_gloo_api_v1_proxy_pb.Matcher.deserializeBinaryFromReader);
      msg.setMatcher(value);
      break;
    case 2:
      var value = new github_com_solo$io_gloo_projects_gloo_api_v1_proxy_pb.RouteAction;
      reader.readMessage(value,github_com_solo$io_gloo_projects_gloo_api_v1_proxy_pb.RouteAction.deserializeBinaryFromReader);
      msg.setRouteAction(value);
      break;
    case 3:
      var value = new github_com_solo$io_gloo_projects_gloo_api_v1_proxy_pb.RedirectAction;
      reader.readMessage(value,github_com_solo$io_gloo_projects_gloo_api_v1_proxy_pb.RedirectAction.deserializeBinaryFromReader);
      msg.setRedirectAction(value);
      break;
    case 4:
      var value = new github_com_solo$io_gloo_projects_gloo_api_v1_proxy_pb.DirectResponseAction;
      reader.readMessage(value,github_com_solo$io_gloo_projects_gloo_api_v1_proxy_pb.DirectResponseAction.deserializeBinaryFromReader);
      msg.setDirectResponseAction(value);
      break;
    case 5:
      var value = new github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef;
      reader.readMessage(value,github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.deserializeBinaryFromReader);
      msg.setDelegateAction(value);
      break;
    case 6:
      var value = new github_com_solo$io_gloo_projects_gloo_api_v1_plugins_pb.RoutePlugins;
      reader.readMessage(value,github_com_solo$io_gloo_projects_gloo_api_v1_plugins_pb.RoutePlugins.deserializeBinaryFromReader);
      msg.setRoutePlugins(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gateway.solo.io.Route.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gateway.solo.io.Route.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gateway.solo.io.Route} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gateway.solo.io.Route.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMatcher();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_gloo_projects_gloo_api_v1_proxy_pb.Matcher.serializeBinaryToWriter
    );
  }
  f = message.getRouteAction();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      github_com_solo$io_gloo_projects_gloo_api_v1_proxy_pb.RouteAction.serializeBinaryToWriter
    );
  }
  f = message.getRedirectAction();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      github_com_solo$io_gloo_projects_gloo_api_v1_proxy_pb.RedirectAction.serializeBinaryToWriter
    );
  }
  f = message.getDirectResponseAction();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      github_com_solo$io_gloo_projects_gloo_api_v1_proxy_pb.DirectResponseAction.serializeBinaryToWriter
    );
  }
  f = message.getDelegateAction();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.serializeBinaryToWriter
    );
  }
  f = message.getRoutePlugins();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      github_com_solo$io_gloo_projects_gloo_api_v1_plugins_pb.RoutePlugins.serializeBinaryToWriter
    );
  }
};


/**
 * optional gloo.solo.io.Matcher matcher = 1;
 * @return {?proto.gloo.solo.io.Matcher}
 */
proto.gateway.solo.io.Route.prototype.getMatcher = function() {
  return /** @type{?proto.gloo.solo.io.Matcher} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_gloo_projects_gloo_api_v1_proxy_pb.Matcher, 1));
};


/** @param {?proto.gloo.solo.io.Matcher|undefined} value */
proto.gateway.solo.io.Route.prototype.setMatcher = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.gateway.solo.io.Route.prototype.clearMatcher = function() {
  this.setMatcher(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gateway.solo.io.Route.prototype.hasMatcher = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional gloo.solo.io.RouteAction route_action = 2;
 * @return {?proto.gloo.solo.io.RouteAction}
 */
proto.gateway.solo.io.Route.prototype.getRouteAction = function() {
  return /** @type{?proto.gloo.solo.io.RouteAction} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_gloo_projects_gloo_api_v1_proxy_pb.RouteAction, 2));
};


/** @param {?proto.gloo.solo.io.RouteAction|undefined} value */
proto.gateway.solo.io.Route.prototype.setRouteAction = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.gateway.solo.io.Route.oneofGroups_[0], value);
};


proto.gateway.solo.io.Route.prototype.clearRouteAction = function() {
  this.setRouteAction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gateway.solo.io.Route.prototype.hasRouteAction = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional gloo.solo.io.RedirectAction redirect_action = 3;
 * @return {?proto.gloo.solo.io.RedirectAction}
 */
proto.gateway.solo.io.Route.prototype.getRedirectAction = function() {
  return /** @type{?proto.gloo.solo.io.RedirectAction} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_gloo_projects_gloo_api_v1_proxy_pb.RedirectAction, 3));
};


/** @param {?proto.gloo.solo.io.RedirectAction|undefined} value */
proto.gateway.solo.io.Route.prototype.setRedirectAction = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.gateway.solo.io.Route.oneofGroups_[0], value);
};


proto.gateway.solo.io.Route.prototype.clearRedirectAction = function() {
  this.setRedirectAction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gateway.solo.io.Route.prototype.hasRedirectAction = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional gloo.solo.io.DirectResponseAction direct_response_action = 4;
 * @return {?proto.gloo.solo.io.DirectResponseAction}
 */
proto.gateway.solo.io.Route.prototype.getDirectResponseAction = function() {
  return /** @type{?proto.gloo.solo.io.DirectResponseAction} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_gloo_projects_gloo_api_v1_proxy_pb.DirectResponseAction, 4));
};


/** @param {?proto.gloo.solo.io.DirectResponseAction|undefined} value */
proto.gateway.solo.io.Route.prototype.setDirectResponseAction = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.gateway.solo.io.Route.oneofGroups_[0], value);
};


proto.gateway.solo.io.Route.prototype.clearDirectResponseAction = function() {
  this.setDirectResponseAction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gateway.solo.io.Route.prototype.hasDirectResponseAction = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional core.solo.io.ResourceRef delegate_action = 5;
 * @return {?proto.core.solo.io.ResourceRef}
 */
proto.gateway.solo.io.Route.prototype.getDelegateAction = function() {
  return /** @type{?proto.core.solo.io.ResourceRef} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef, 5));
};


/** @param {?proto.core.solo.io.ResourceRef|undefined} value */
proto.gateway.solo.io.Route.prototype.setDelegateAction = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.gateway.solo.io.Route.oneofGroups_[0], value);
};


proto.gateway.solo.io.Route.prototype.clearDelegateAction = function() {
  this.setDelegateAction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gateway.solo.io.Route.prototype.hasDelegateAction = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional gloo.solo.io.RoutePlugins route_plugins = 6;
 * @return {?proto.gloo.solo.io.RoutePlugins}
 */
proto.gateway.solo.io.Route.prototype.getRoutePlugins = function() {
  return /** @type{?proto.gloo.solo.io.RoutePlugins} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_gloo_projects_gloo_api_v1_plugins_pb.RoutePlugins, 6));
};


/** @param {?proto.gloo.solo.io.RoutePlugins|undefined} value */
proto.gateway.solo.io.Route.prototype.setRoutePlugins = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.gateway.solo.io.Route.prototype.clearRoutePlugins = function() {
  this.setRoutePlugins(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gateway.solo.io.Route.prototype.hasRoutePlugins = function() {
  return jspb.Message.getField(this, 6) != null;
};


goog.object.extend(exports, proto.gateway.solo.io);
