/* eslint-disable */
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
var validate_validate_pb = require('../../../../../../../../../validate/validate_pb.js');
var extproto_ext_pb = require('../../../../../../../../../extproto/ext_pb.js');
goog.exportSymbol('proto.fault.options.gloo.solo.io.RouteAbort', null, global);
goog.exportSymbol('proto.fault.options.gloo.solo.io.RouteDelay', null, global);
goog.exportSymbol('proto.fault.options.gloo.solo.io.RouteFaults', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fault.options.gloo.solo.io.RouteAbort = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fault.options.gloo.solo.io.RouteAbort, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.fault.options.gloo.solo.io.RouteAbort.displayName = 'proto.fault.options.gloo.solo.io.RouteAbort';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fault.options.gloo.solo.io.RouteAbort.prototype.toObject = function(opt_includeInstance) {
  return proto.fault.options.gloo.solo.io.RouteAbort.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fault.options.gloo.solo.io.RouteAbort} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fault.options.gloo.solo.io.RouteAbort.toObject = function(includeInstance, msg) {
  var f, obj = {
    percentage: +jspb.Message.getFieldWithDefault(msg, 1, 0.0),
    httpStatus: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fault.options.gloo.solo.io.RouteAbort}
 */
proto.fault.options.gloo.solo.io.RouteAbort.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fault.options.gloo.solo.io.RouteAbort;
  return proto.fault.options.gloo.solo.io.RouteAbort.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fault.options.gloo.solo.io.RouteAbort} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fault.options.gloo.solo.io.RouteAbort}
 */
proto.fault.options.gloo.solo.io.RouteAbort.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setPercentage(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setHttpStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fault.options.gloo.solo.io.RouteAbort.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fault.options.gloo.solo.io.RouteAbort.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fault.options.gloo.solo.io.RouteAbort} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fault.options.gloo.solo.io.RouteAbort.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPercentage();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getHttpStatus();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional float percentage = 1;
 * @return {number}
 */
proto.fault.options.gloo.solo.io.RouteAbort.prototype.getPercentage = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.fault.options.gloo.solo.io.RouteAbort.prototype.setPercentage = function(value) {
  jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional uint32 http_status = 2;
 * @return {number}
 */
proto.fault.options.gloo.solo.io.RouteAbort.prototype.getHttpStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.fault.options.gloo.solo.io.RouteAbort.prototype.setHttpStatus = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fault.options.gloo.solo.io.RouteDelay = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fault.options.gloo.solo.io.RouteDelay, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.fault.options.gloo.solo.io.RouteDelay.displayName = 'proto.fault.options.gloo.solo.io.RouteDelay';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fault.options.gloo.solo.io.RouteDelay.prototype.toObject = function(opt_includeInstance) {
  return proto.fault.options.gloo.solo.io.RouteDelay.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fault.options.gloo.solo.io.RouteDelay} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fault.options.gloo.solo.io.RouteDelay.toObject = function(includeInstance, msg) {
  var f, obj = {
    percentage: +jspb.Message.getFieldWithDefault(msg, 1, 0.0),
    fixedDelay: (f = msg.getFixedDelay()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fault.options.gloo.solo.io.RouteDelay}
 */
proto.fault.options.gloo.solo.io.RouteDelay.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fault.options.gloo.solo.io.RouteDelay;
  return proto.fault.options.gloo.solo.io.RouteDelay.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fault.options.gloo.solo.io.RouteDelay} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fault.options.gloo.solo.io.RouteDelay}
 */
proto.fault.options.gloo.solo.io.RouteDelay.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setPercentage(value);
      break;
    case 2:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setFixedDelay(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fault.options.gloo.solo.io.RouteDelay.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fault.options.gloo.solo.io.RouteDelay.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fault.options.gloo.solo.io.RouteDelay} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fault.options.gloo.solo.io.RouteDelay.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPercentage();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getFixedDelay();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
};


/**
 * optional float percentage = 1;
 * @return {number}
 */
proto.fault.options.gloo.solo.io.RouteDelay.prototype.getPercentage = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.fault.options.gloo.solo.io.RouteDelay.prototype.setPercentage = function(value) {
  jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional google.protobuf.Duration fixed_delay = 2;
 * @return {?proto.google.protobuf.Duration}
 */
proto.fault.options.gloo.solo.io.RouteDelay.prototype.getFixedDelay = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 2));
};


/** @param {?proto.google.protobuf.Duration|undefined} value */
proto.fault.options.gloo.solo.io.RouteDelay.prototype.setFixedDelay = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.fault.options.gloo.solo.io.RouteDelay.prototype.clearFixedDelay = function() {
  this.setFixedDelay(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.fault.options.gloo.solo.io.RouteDelay.prototype.hasFixedDelay = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fault.options.gloo.solo.io.RouteFaults = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fault.options.gloo.solo.io.RouteFaults, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.fault.options.gloo.solo.io.RouteFaults.displayName = 'proto.fault.options.gloo.solo.io.RouteFaults';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fault.options.gloo.solo.io.RouteFaults.prototype.toObject = function(opt_includeInstance) {
  return proto.fault.options.gloo.solo.io.RouteFaults.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fault.options.gloo.solo.io.RouteFaults} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fault.options.gloo.solo.io.RouteFaults.toObject = function(includeInstance, msg) {
  var f, obj = {
    abort: (f = msg.getAbort()) && proto.fault.options.gloo.solo.io.RouteAbort.toObject(includeInstance, f),
    delay: (f = msg.getDelay()) && proto.fault.options.gloo.solo.io.RouteDelay.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fault.options.gloo.solo.io.RouteFaults}
 */
proto.fault.options.gloo.solo.io.RouteFaults.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fault.options.gloo.solo.io.RouteFaults;
  return proto.fault.options.gloo.solo.io.RouteFaults.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fault.options.gloo.solo.io.RouteFaults} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fault.options.gloo.solo.io.RouteFaults}
 */
proto.fault.options.gloo.solo.io.RouteFaults.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.fault.options.gloo.solo.io.RouteAbort;
      reader.readMessage(value,proto.fault.options.gloo.solo.io.RouteAbort.deserializeBinaryFromReader);
      msg.setAbort(value);
      break;
    case 2:
      var value = new proto.fault.options.gloo.solo.io.RouteDelay;
      reader.readMessage(value,proto.fault.options.gloo.solo.io.RouteDelay.deserializeBinaryFromReader);
      msg.setDelay(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fault.options.gloo.solo.io.RouteFaults.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fault.options.gloo.solo.io.RouteFaults.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fault.options.gloo.solo.io.RouteFaults} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fault.options.gloo.solo.io.RouteFaults.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAbort();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.fault.options.gloo.solo.io.RouteAbort.serializeBinaryToWriter
    );
  }
  f = message.getDelay();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.fault.options.gloo.solo.io.RouteDelay.serializeBinaryToWriter
    );
  }
};


/**
 * optional RouteAbort abort = 1;
 * @return {?proto.fault.options.gloo.solo.io.RouteAbort}
 */
proto.fault.options.gloo.solo.io.RouteFaults.prototype.getAbort = function() {
  return /** @type{?proto.fault.options.gloo.solo.io.RouteAbort} */ (
    jspb.Message.getWrapperField(this, proto.fault.options.gloo.solo.io.RouteAbort, 1));
};


/** @param {?proto.fault.options.gloo.solo.io.RouteAbort|undefined} value */
proto.fault.options.gloo.solo.io.RouteFaults.prototype.setAbort = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.fault.options.gloo.solo.io.RouteFaults.prototype.clearAbort = function() {
  this.setAbort(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.fault.options.gloo.solo.io.RouteFaults.prototype.hasAbort = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RouteDelay delay = 2;
 * @return {?proto.fault.options.gloo.solo.io.RouteDelay}
 */
proto.fault.options.gloo.solo.io.RouteFaults.prototype.getDelay = function() {
  return /** @type{?proto.fault.options.gloo.solo.io.RouteDelay} */ (
    jspb.Message.getWrapperField(this, proto.fault.options.gloo.solo.io.RouteDelay, 2));
};


/** @param {?proto.fault.options.gloo.solo.io.RouteDelay|undefined} value */
proto.fault.options.gloo.solo.io.RouteFaults.prototype.setDelay = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.fault.options.gloo.solo.io.RouteFaults.prototype.clearDelay = function() {
  this.setDelay(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.fault.options.gloo.solo.io.RouteFaults.prototype.hasDelay = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.fault.options.gloo.solo.io);
