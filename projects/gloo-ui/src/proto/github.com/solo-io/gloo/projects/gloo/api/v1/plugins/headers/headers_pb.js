/* eslint-disable */
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var gogoproto_gogo_pb = require('../../../../../../../../gogo/protobuf/gogoproto/gogo_pb.js');
var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.exportSymbol('proto.headers.plugins.gloo.solo.io.HeaderManipulation', null, global);
goog.exportSymbol('proto.headers.plugins.gloo.solo.io.HeaderValue', null, global);
goog.exportSymbol('proto.headers.plugins.gloo.solo.io.HeaderValueOption', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.headers.plugins.gloo.solo.io.HeaderManipulation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.headers.plugins.gloo.solo.io.HeaderManipulation.repeatedFields_, null);
};
goog.inherits(proto.headers.plugins.gloo.solo.io.HeaderManipulation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.headers.plugins.gloo.solo.io.HeaderManipulation.displayName = 'proto.headers.plugins.gloo.solo.io.HeaderManipulation';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.headers.plugins.gloo.solo.io.HeaderManipulation.repeatedFields_ = [1,2,3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.headers.plugins.gloo.solo.io.HeaderManipulation.prototype.toObject = function(opt_includeInstance) {
  return proto.headers.plugins.gloo.solo.io.HeaderManipulation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.headers.plugins.gloo.solo.io.HeaderManipulation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.headers.plugins.gloo.solo.io.HeaderManipulation.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestHeadersToAddList: jspb.Message.toObjectList(msg.getRequestHeadersToAddList(),
    proto.headers.plugins.gloo.solo.io.HeaderValueOption.toObject, includeInstance),
    requestHeadersToRemoveList: jspb.Message.getRepeatedField(msg, 2),
    responseHeadersToAddList: jspb.Message.toObjectList(msg.getResponseHeadersToAddList(),
    proto.headers.plugins.gloo.solo.io.HeaderValueOption.toObject, includeInstance),
    responseHeadersToRemoveList: jspb.Message.getRepeatedField(msg, 4)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.headers.plugins.gloo.solo.io.HeaderManipulation}
 */
proto.headers.plugins.gloo.solo.io.HeaderManipulation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.headers.plugins.gloo.solo.io.HeaderManipulation;
  return proto.headers.plugins.gloo.solo.io.HeaderManipulation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.headers.plugins.gloo.solo.io.HeaderManipulation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.headers.plugins.gloo.solo.io.HeaderManipulation}
 */
proto.headers.plugins.gloo.solo.io.HeaderManipulation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.headers.plugins.gloo.solo.io.HeaderValueOption;
      reader.readMessage(value,proto.headers.plugins.gloo.solo.io.HeaderValueOption.deserializeBinaryFromReader);
      msg.addRequestHeadersToAdd(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addRequestHeadersToRemove(value);
      break;
    case 3:
      var value = new proto.headers.plugins.gloo.solo.io.HeaderValueOption;
      reader.readMessage(value,proto.headers.plugins.gloo.solo.io.HeaderValueOption.deserializeBinaryFromReader);
      msg.addResponseHeadersToAdd(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addResponseHeadersToRemove(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.headers.plugins.gloo.solo.io.HeaderManipulation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.headers.plugins.gloo.solo.io.HeaderManipulation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.headers.plugins.gloo.solo.io.HeaderManipulation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.headers.plugins.gloo.solo.io.HeaderManipulation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestHeadersToAddList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.headers.plugins.gloo.solo.io.HeaderValueOption.serializeBinaryToWriter
    );
  }
  f = message.getRequestHeadersToRemoveList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getResponseHeadersToAddList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.headers.plugins.gloo.solo.io.HeaderValueOption.serializeBinaryToWriter
    );
  }
  f = message.getResponseHeadersToRemoveList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
};


/**
 * repeated HeaderValueOption request_headers_to_add = 1;
 * @return {!Array<!proto.headers.plugins.gloo.solo.io.HeaderValueOption>}
 */
proto.headers.plugins.gloo.solo.io.HeaderManipulation.prototype.getRequestHeadersToAddList = function() {
  return /** @type{!Array<!proto.headers.plugins.gloo.solo.io.HeaderValueOption>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.headers.plugins.gloo.solo.io.HeaderValueOption, 1));
};


/** @param {!Array<!proto.headers.plugins.gloo.solo.io.HeaderValueOption>} value */
proto.headers.plugins.gloo.solo.io.HeaderManipulation.prototype.setRequestHeadersToAddList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.headers.plugins.gloo.solo.io.HeaderValueOption=} opt_value
 * @param {number=} opt_index
 * @return {!proto.headers.plugins.gloo.solo.io.HeaderValueOption}
 */
proto.headers.plugins.gloo.solo.io.HeaderManipulation.prototype.addRequestHeadersToAdd = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.headers.plugins.gloo.solo.io.HeaderValueOption, opt_index);
};


proto.headers.plugins.gloo.solo.io.HeaderManipulation.prototype.clearRequestHeadersToAddList = function() {
  this.setRequestHeadersToAddList([]);
};


/**
 * repeated string request_headers_to_remove = 2;
 * @return {!Array<string>}
 */
proto.headers.plugins.gloo.solo.io.HeaderManipulation.prototype.getRequestHeadersToRemoveList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array<string>} value */
proto.headers.plugins.gloo.solo.io.HeaderManipulation.prototype.setRequestHeadersToRemoveList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.headers.plugins.gloo.solo.io.HeaderManipulation.prototype.addRequestHeadersToRemove = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.headers.plugins.gloo.solo.io.HeaderManipulation.prototype.clearRequestHeadersToRemoveList = function() {
  this.setRequestHeadersToRemoveList([]);
};


/**
 * repeated HeaderValueOption response_headers_to_add = 3;
 * @return {!Array<!proto.headers.plugins.gloo.solo.io.HeaderValueOption>}
 */
proto.headers.plugins.gloo.solo.io.HeaderManipulation.prototype.getResponseHeadersToAddList = function() {
  return /** @type{!Array<!proto.headers.plugins.gloo.solo.io.HeaderValueOption>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.headers.plugins.gloo.solo.io.HeaderValueOption, 3));
};


/** @param {!Array<!proto.headers.plugins.gloo.solo.io.HeaderValueOption>} value */
proto.headers.plugins.gloo.solo.io.HeaderManipulation.prototype.setResponseHeadersToAddList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.headers.plugins.gloo.solo.io.HeaderValueOption=} opt_value
 * @param {number=} opt_index
 * @return {!proto.headers.plugins.gloo.solo.io.HeaderValueOption}
 */
proto.headers.plugins.gloo.solo.io.HeaderManipulation.prototype.addResponseHeadersToAdd = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.headers.plugins.gloo.solo.io.HeaderValueOption, opt_index);
};


proto.headers.plugins.gloo.solo.io.HeaderManipulation.prototype.clearResponseHeadersToAddList = function() {
  this.setResponseHeadersToAddList([]);
};


/**
 * repeated string response_headers_to_remove = 4;
 * @return {!Array<string>}
 */
proto.headers.plugins.gloo.solo.io.HeaderManipulation.prototype.getResponseHeadersToRemoveList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/** @param {!Array<string>} value */
proto.headers.plugins.gloo.solo.io.HeaderManipulation.prototype.setResponseHeadersToRemoveList = function(value) {
  jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.headers.plugins.gloo.solo.io.HeaderManipulation.prototype.addResponseHeadersToRemove = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


proto.headers.plugins.gloo.solo.io.HeaderManipulation.prototype.clearResponseHeadersToRemoveList = function() {
  this.setResponseHeadersToRemoveList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.headers.plugins.gloo.solo.io.HeaderValueOption = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.headers.plugins.gloo.solo.io.HeaderValueOption, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.headers.plugins.gloo.solo.io.HeaderValueOption.displayName = 'proto.headers.plugins.gloo.solo.io.HeaderValueOption';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.headers.plugins.gloo.solo.io.HeaderValueOption.prototype.toObject = function(opt_includeInstance) {
  return proto.headers.plugins.gloo.solo.io.HeaderValueOption.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.headers.plugins.gloo.solo.io.HeaderValueOption} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.headers.plugins.gloo.solo.io.HeaderValueOption.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && proto.headers.plugins.gloo.solo.io.HeaderValue.toObject(includeInstance, f),
    append: (f = msg.getAppend()) && google_protobuf_wrappers_pb.BoolValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.headers.plugins.gloo.solo.io.HeaderValueOption}
 */
proto.headers.plugins.gloo.solo.io.HeaderValueOption.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.headers.plugins.gloo.solo.io.HeaderValueOption;
  return proto.headers.plugins.gloo.solo.io.HeaderValueOption.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.headers.plugins.gloo.solo.io.HeaderValueOption} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.headers.plugins.gloo.solo.io.HeaderValueOption}
 */
proto.headers.plugins.gloo.solo.io.HeaderValueOption.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.headers.plugins.gloo.solo.io.HeaderValue;
      reader.readMessage(value,proto.headers.plugins.gloo.solo.io.HeaderValue.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = new google_protobuf_wrappers_pb.BoolValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.BoolValue.deserializeBinaryFromReader);
      msg.setAppend(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.headers.plugins.gloo.solo.io.HeaderValueOption.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.headers.plugins.gloo.solo.io.HeaderValueOption.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.headers.plugins.gloo.solo.io.HeaderValueOption} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.headers.plugins.gloo.solo.io.HeaderValueOption.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.headers.plugins.gloo.solo.io.HeaderValue.serializeBinaryToWriter
    );
  }
  f = message.getAppend();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_wrappers_pb.BoolValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional HeaderValue header = 1;
 * @return {?proto.headers.plugins.gloo.solo.io.HeaderValue}
 */
proto.headers.plugins.gloo.solo.io.HeaderValueOption.prototype.getHeader = function() {
  return /** @type{?proto.headers.plugins.gloo.solo.io.HeaderValue} */ (
    jspb.Message.getWrapperField(this, proto.headers.plugins.gloo.solo.io.HeaderValue, 1));
};


/** @param {?proto.headers.plugins.gloo.solo.io.HeaderValue|undefined} value */
proto.headers.plugins.gloo.solo.io.HeaderValueOption.prototype.setHeader = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.headers.plugins.gloo.solo.io.HeaderValueOption.prototype.clearHeader = function() {
  this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.headers.plugins.gloo.solo.io.HeaderValueOption.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.BoolValue append = 2;
 * @return {?proto.google.protobuf.BoolValue}
 */
proto.headers.plugins.gloo.solo.io.HeaderValueOption.prototype.getAppend = function() {
  return /** @type{?proto.google.protobuf.BoolValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.BoolValue, 2));
};


/** @param {?proto.google.protobuf.BoolValue|undefined} value */
proto.headers.plugins.gloo.solo.io.HeaderValueOption.prototype.setAppend = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.headers.plugins.gloo.solo.io.HeaderValueOption.prototype.clearAppend = function() {
  this.setAppend(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.headers.plugins.gloo.solo.io.HeaderValueOption.prototype.hasAppend = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.headers.plugins.gloo.solo.io.HeaderValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.headers.plugins.gloo.solo.io.HeaderValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.headers.plugins.gloo.solo.io.HeaderValue.displayName = 'proto.headers.plugins.gloo.solo.io.HeaderValue';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.headers.plugins.gloo.solo.io.HeaderValue.prototype.toObject = function(opt_includeInstance) {
  return proto.headers.plugins.gloo.solo.io.HeaderValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.headers.plugins.gloo.solo.io.HeaderValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.headers.plugins.gloo.solo.io.HeaderValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.headers.plugins.gloo.solo.io.HeaderValue}
 */
proto.headers.plugins.gloo.solo.io.HeaderValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.headers.plugins.gloo.solo.io.HeaderValue;
  return proto.headers.plugins.gloo.solo.io.HeaderValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.headers.plugins.gloo.solo.io.HeaderValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.headers.plugins.gloo.solo.io.HeaderValue}
 */
proto.headers.plugins.gloo.solo.io.HeaderValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.headers.plugins.gloo.solo.io.HeaderValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.headers.plugins.gloo.solo.io.HeaderValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.headers.plugins.gloo.solo.io.HeaderValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.headers.plugins.gloo.solo.io.HeaderValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.headers.plugins.gloo.solo.io.HeaderValue.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.headers.plugins.gloo.solo.io.HeaderValue.prototype.setKey = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.headers.plugins.gloo.solo.io.HeaderValue.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.headers.plugins.gloo.solo.io.HeaderValue.prototype.setValue = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


goog.object.extend(exports, proto.headers.plugins.gloo.solo.io);
