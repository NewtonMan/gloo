/* eslint-disable */
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var gogoproto_gogo_pb = require('../../../../../../../../gogo/protobuf/gogoproto/gogo_pb.js');
var github_com_solo$io_gloo_projects_gloo_api_v1_options_transformation_parameters_pb = require('../../../../../../../../../github.com/solo-io/gloo/projects/gloo/api/v1/options/transformation/parameters_pb.js');
goog.exportSymbol('proto.grpc.options.gloo.solo.io.DestinationSpec', null, global);
goog.exportSymbol('proto.grpc.options.gloo.solo.io.ServiceSpec', null, global);
goog.exportSymbol('proto.grpc.options.gloo.solo.io.ServiceSpec.GrpcService', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpc.options.gloo.solo.io.ServiceSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.grpc.options.gloo.solo.io.ServiceSpec.repeatedFields_, null);
};
goog.inherits(proto.grpc.options.gloo.solo.io.ServiceSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.grpc.options.gloo.solo.io.ServiceSpec.displayName = 'proto.grpc.options.gloo.solo.io.ServiceSpec';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.grpc.options.gloo.solo.io.ServiceSpec.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpc.options.gloo.solo.io.ServiceSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.grpc.options.gloo.solo.io.ServiceSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpc.options.gloo.solo.io.ServiceSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpc.options.gloo.solo.io.ServiceSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    descriptors: msg.getDescriptors_asB64(),
    grpcServicesList: jspb.Message.toObjectList(msg.getGrpcServicesList(),
    proto.grpc.options.gloo.solo.io.ServiceSpec.GrpcService.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpc.options.gloo.solo.io.ServiceSpec}
 */
proto.grpc.options.gloo.solo.io.ServiceSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpc.options.gloo.solo.io.ServiceSpec;
  return proto.grpc.options.gloo.solo.io.ServiceSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpc.options.gloo.solo.io.ServiceSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpc.options.gloo.solo.io.ServiceSpec}
 */
proto.grpc.options.gloo.solo.io.ServiceSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setDescriptors(value);
      break;
    case 2:
      var value = new proto.grpc.options.gloo.solo.io.ServiceSpec.GrpcService;
      reader.readMessage(value,proto.grpc.options.gloo.solo.io.ServiceSpec.GrpcService.deserializeBinaryFromReader);
      msg.addGrpcServices(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpc.options.gloo.solo.io.ServiceSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpc.options.gloo.solo.io.ServiceSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpc.options.gloo.solo.io.ServiceSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpc.options.gloo.solo.io.ServiceSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDescriptors_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getGrpcServicesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.grpc.options.gloo.solo.io.ServiceSpec.GrpcService.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpc.options.gloo.solo.io.ServiceSpec.GrpcService = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.grpc.options.gloo.solo.io.ServiceSpec.GrpcService.repeatedFields_, null);
};
goog.inherits(proto.grpc.options.gloo.solo.io.ServiceSpec.GrpcService, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.grpc.options.gloo.solo.io.ServiceSpec.GrpcService.displayName = 'proto.grpc.options.gloo.solo.io.ServiceSpec.GrpcService';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.grpc.options.gloo.solo.io.ServiceSpec.GrpcService.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpc.options.gloo.solo.io.ServiceSpec.GrpcService.prototype.toObject = function(opt_includeInstance) {
  return proto.grpc.options.gloo.solo.io.ServiceSpec.GrpcService.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpc.options.gloo.solo.io.ServiceSpec.GrpcService} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpc.options.gloo.solo.io.ServiceSpec.GrpcService.toObject = function(includeInstance, msg) {
  var f, obj = {
    packageName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    serviceName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    functionNamesList: jspb.Message.getRepeatedField(msg, 3)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpc.options.gloo.solo.io.ServiceSpec.GrpcService}
 */
proto.grpc.options.gloo.solo.io.ServiceSpec.GrpcService.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpc.options.gloo.solo.io.ServiceSpec.GrpcService;
  return proto.grpc.options.gloo.solo.io.ServiceSpec.GrpcService.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpc.options.gloo.solo.io.ServiceSpec.GrpcService} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpc.options.gloo.solo.io.ServiceSpec.GrpcService}
 */
proto.grpc.options.gloo.solo.io.ServiceSpec.GrpcService.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPackageName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setServiceName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addFunctionNames(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpc.options.gloo.solo.io.ServiceSpec.GrpcService.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpc.options.gloo.solo.io.ServiceSpec.GrpcService.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpc.options.gloo.solo.io.ServiceSpec.GrpcService} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpc.options.gloo.solo.io.ServiceSpec.GrpcService.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPackageName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getServiceName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFunctionNamesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional string package_name = 1;
 * @return {string}
 */
proto.grpc.options.gloo.solo.io.ServiceSpec.GrpcService.prototype.getPackageName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.grpc.options.gloo.solo.io.ServiceSpec.GrpcService.prototype.setPackageName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string service_name = 2;
 * @return {string}
 */
proto.grpc.options.gloo.solo.io.ServiceSpec.GrpcService.prototype.getServiceName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.grpc.options.gloo.solo.io.ServiceSpec.GrpcService.prototype.setServiceName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string function_names = 3;
 * @return {!Array<string>}
 */
proto.grpc.options.gloo.solo.io.ServiceSpec.GrpcService.prototype.getFunctionNamesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array<string>} value */
proto.grpc.options.gloo.solo.io.ServiceSpec.GrpcService.prototype.setFunctionNamesList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.grpc.options.gloo.solo.io.ServiceSpec.GrpcService.prototype.addFunctionNames = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.grpc.options.gloo.solo.io.ServiceSpec.GrpcService.prototype.clearFunctionNamesList = function() {
  this.setFunctionNamesList([]);
};


/**
 * optional bytes descriptors = 1;
 * @return {!(string|Uint8Array)}
 */
proto.grpc.options.gloo.solo.io.ServiceSpec.prototype.getDescriptors = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes descriptors = 1;
 * This is a type-conversion wrapper around `getDescriptors()`
 * @return {string}
 */
proto.grpc.options.gloo.solo.io.ServiceSpec.prototype.getDescriptors_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getDescriptors()));
};


/**
 * optional bytes descriptors = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDescriptors()`
 * @return {!Uint8Array}
 */
proto.grpc.options.gloo.solo.io.ServiceSpec.prototype.getDescriptors_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getDescriptors()));
};


/** @param {!(string|Uint8Array)} value */
proto.grpc.options.gloo.solo.io.ServiceSpec.prototype.setDescriptors = function(value) {
  jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * repeated GrpcService grpc_services = 2;
 * @return {!Array<!proto.grpc.options.gloo.solo.io.ServiceSpec.GrpcService>}
 */
proto.grpc.options.gloo.solo.io.ServiceSpec.prototype.getGrpcServicesList = function() {
  return /** @type{!Array<!proto.grpc.options.gloo.solo.io.ServiceSpec.GrpcService>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.grpc.options.gloo.solo.io.ServiceSpec.GrpcService, 2));
};


/** @param {!Array<!proto.grpc.options.gloo.solo.io.ServiceSpec.GrpcService>} value */
proto.grpc.options.gloo.solo.io.ServiceSpec.prototype.setGrpcServicesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.grpc.options.gloo.solo.io.ServiceSpec.GrpcService=} opt_value
 * @param {number=} opt_index
 * @return {!proto.grpc.options.gloo.solo.io.ServiceSpec.GrpcService}
 */
proto.grpc.options.gloo.solo.io.ServiceSpec.prototype.addGrpcServices = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.grpc.options.gloo.solo.io.ServiceSpec.GrpcService, opt_index);
};


proto.grpc.options.gloo.solo.io.ServiceSpec.prototype.clearGrpcServicesList = function() {
  this.setGrpcServicesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpc.options.gloo.solo.io.DestinationSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpc.options.gloo.solo.io.DestinationSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.grpc.options.gloo.solo.io.DestinationSpec.displayName = 'proto.grpc.options.gloo.solo.io.DestinationSpec';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpc.options.gloo.solo.io.DestinationSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.grpc.options.gloo.solo.io.DestinationSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpc.options.gloo.solo.io.DestinationSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpc.options.gloo.solo.io.DestinationSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    pb_package: jspb.Message.getFieldWithDefault(msg, 1, ""),
    service: jspb.Message.getFieldWithDefault(msg, 2, ""),
    pb_function: jspb.Message.getFieldWithDefault(msg, 3, ""),
    parameters: (f = msg.getParameters()) && github_com_solo$io_gloo_projects_gloo_api_v1_options_transformation_parameters_pb.Parameters.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpc.options.gloo.solo.io.DestinationSpec}
 */
proto.grpc.options.gloo.solo.io.DestinationSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpc.options.gloo.solo.io.DestinationSpec;
  return proto.grpc.options.gloo.solo.io.DestinationSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpc.options.gloo.solo.io.DestinationSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpc.options.gloo.solo.io.DestinationSpec}
 */
proto.grpc.options.gloo.solo.io.DestinationSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPackage(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setService(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFunction(value);
      break;
    case 4:
      var value = new github_com_solo$io_gloo_projects_gloo_api_v1_options_transformation_parameters_pb.Parameters;
      reader.readMessage(value,github_com_solo$io_gloo_projects_gloo_api_v1_options_transformation_parameters_pb.Parameters.deserializeBinaryFromReader);
      msg.setParameters(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpc.options.gloo.solo.io.DestinationSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpc.options.gloo.solo.io.DestinationSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpc.options.gloo.solo.io.DestinationSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpc.options.gloo.solo.io.DestinationSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPackage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getService();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFunction();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getParameters();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      github_com_solo$io_gloo_projects_gloo_api_v1_options_transformation_parameters_pb.Parameters.serializeBinaryToWriter
    );
  }
};


/**
 * optional string package = 1;
 * @return {string}
 */
proto.grpc.options.gloo.solo.io.DestinationSpec.prototype.getPackage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.grpc.options.gloo.solo.io.DestinationSpec.prototype.setPackage = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string service = 2;
 * @return {string}
 */
proto.grpc.options.gloo.solo.io.DestinationSpec.prototype.getService = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.grpc.options.gloo.solo.io.DestinationSpec.prototype.setService = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string function = 3;
 * @return {string}
 */
proto.grpc.options.gloo.solo.io.DestinationSpec.prototype.getFunction = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.grpc.options.gloo.solo.io.DestinationSpec.prototype.setFunction = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional transformation.options.gloo.solo.io.Parameters parameters = 4;
 * @return {?proto.transformation.options.gloo.solo.io.Parameters}
 */
proto.grpc.options.gloo.solo.io.DestinationSpec.prototype.getParameters = function() {
  return /** @type{?proto.transformation.options.gloo.solo.io.Parameters} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_gloo_projects_gloo_api_v1_options_transformation_parameters_pb.Parameters, 4));
};


/** @param {?proto.transformation.options.gloo.solo.io.Parameters|undefined} value */
proto.grpc.options.gloo.solo.io.DestinationSpec.prototype.setParameters = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.grpc.options.gloo.solo.io.DestinationSpec.prototype.clearParameters = function() {
  this.setParameters(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.grpc.options.gloo.solo.io.DestinationSpec.prototype.hasParameters = function() {
  return jspb.Message.getField(this, 4) != null;
};


goog.object.extend(exports, proto.grpc.options.gloo.solo.io);
