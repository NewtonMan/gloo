/* eslint-disable */
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var gogoproto_gogo_pb = require('../../../../../../../../gogo/protobuf/gogoproto/gogo_pb.js');
var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.exportSymbol('proto.cors.plugins.gloo.solo.io.CorsPolicy', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cors.plugins.gloo.solo.io.CorsPolicy = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cors.plugins.gloo.solo.io.CorsPolicy.repeatedFields_, null);
};
goog.inherits(proto.cors.plugins.gloo.solo.io.CorsPolicy, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.cors.plugins.gloo.solo.io.CorsPolicy.displayName = 'proto.cors.plugins.gloo.solo.io.CorsPolicy';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cors.plugins.gloo.solo.io.CorsPolicy.repeatedFields_ = [1,2,3,4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cors.plugins.gloo.solo.io.CorsPolicy.prototype.toObject = function(opt_includeInstance) {
  return proto.cors.plugins.gloo.solo.io.CorsPolicy.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cors.plugins.gloo.solo.io.CorsPolicy} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cors.plugins.gloo.solo.io.CorsPolicy.toObject = function(includeInstance, msg) {
  var f, obj = {
    allowOriginList: jspb.Message.getRepeatedField(msg, 1),
    allowOriginRegexList: jspb.Message.getRepeatedField(msg, 2),
    allowMethodsList: jspb.Message.getRepeatedField(msg, 3),
    allowHeadersList: jspb.Message.getRepeatedField(msg, 4),
    exposeHeadersList: jspb.Message.getRepeatedField(msg, 5),
    maxAge: jspb.Message.getFieldWithDefault(msg, 6, ""),
    allowCredentials: jspb.Message.getFieldWithDefault(msg, 7, false),
    disableForRoute: jspb.Message.getFieldWithDefault(msg, 8, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cors.plugins.gloo.solo.io.CorsPolicy}
 */
proto.cors.plugins.gloo.solo.io.CorsPolicy.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cors.plugins.gloo.solo.io.CorsPolicy;
  return proto.cors.plugins.gloo.solo.io.CorsPolicy.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cors.plugins.gloo.solo.io.CorsPolicy} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cors.plugins.gloo.solo.io.CorsPolicy}
 */
proto.cors.plugins.gloo.solo.io.CorsPolicy.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addAllowOrigin(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addAllowOriginRegex(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addAllowMethods(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addAllowHeaders(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addExposeHeaders(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setMaxAge(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowCredentials(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDisableForRoute(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cors.plugins.gloo.solo.io.CorsPolicy.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cors.plugins.gloo.solo.io.CorsPolicy.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cors.plugins.gloo.solo.io.CorsPolicy} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cors.plugins.gloo.solo.io.CorsPolicy.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAllowOriginList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getAllowOriginRegexList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getAllowMethodsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getAllowHeadersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getExposeHeadersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getMaxAge();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAllowCredentials();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getDisableForRoute();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
};


/**
 * repeated string allow_origin = 1;
 * @return {!Array<string>}
 */
proto.cors.plugins.gloo.solo.io.CorsPolicy.prototype.getAllowOriginList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array<string>} value */
proto.cors.plugins.gloo.solo.io.CorsPolicy.prototype.setAllowOriginList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.cors.plugins.gloo.solo.io.CorsPolicy.prototype.addAllowOrigin = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.cors.plugins.gloo.solo.io.CorsPolicy.prototype.clearAllowOriginList = function() {
  this.setAllowOriginList([]);
};


/**
 * repeated string allow_origin_regex = 2;
 * @return {!Array<string>}
 */
proto.cors.plugins.gloo.solo.io.CorsPolicy.prototype.getAllowOriginRegexList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array<string>} value */
proto.cors.plugins.gloo.solo.io.CorsPolicy.prototype.setAllowOriginRegexList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.cors.plugins.gloo.solo.io.CorsPolicy.prototype.addAllowOriginRegex = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.cors.plugins.gloo.solo.io.CorsPolicy.prototype.clearAllowOriginRegexList = function() {
  this.setAllowOriginRegexList([]);
};


/**
 * repeated string allow_methods = 3;
 * @return {!Array<string>}
 */
proto.cors.plugins.gloo.solo.io.CorsPolicy.prototype.getAllowMethodsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array<string>} value */
proto.cors.plugins.gloo.solo.io.CorsPolicy.prototype.setAllowMethodsList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.cors.plugins.gloo.solo.io.CorsPolicy.prototype.addAllowMethods = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.cors.plugins.gloo.solo.io.CorsPolicy.prototype.clearAllowMethodsList = function() {
  this.setAllowMethodsList([]);
};


/**
 * repeated string allow_headers = 4;
 * @return {!Array<string>}
 */
proto.cors.plugins.gloo.solo.io.CorsPolicy.prototype.getAllowHeadersList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/** @param {!Array<string>} value */
proto.cors.plugins.gloo.solo.io.CorsPolicy.prototype.setAllowHeadersList = function(value) {
  jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.cors.plugins.gloo.solo.io.CorsPolicy.prototype.addAllowHeaders = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


proto.cors.plugins.gloo.solo.io.CorsPolicy.prototype.clearAllowHeadersList = function() {
  this.setAllowHeadersList([]);
};


/**
 * repeated string expose_headers = 5;
 * @return {!Array<string>}
 */
proto.cors.plugins.gloo.solo.io.CorsPolicy.prototype.getExposeHeadersList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/** @param {!Array<string>} value */
proto.cors.plugins.gloo.solo.io.CorsPolicy.prototype.setExposeHeadersList = function(value) {
  jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.cors.plugins.gloo.solo.io.CorsPolicy.prototype.addExposeHeaders = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


proto.cors.plugins.gloo.solo.io.CorsPolicy.prototype.clearExposeHeadersList = function() {
  this.setExposeHeadersList([]);
};


/**
 * optional string max_age = 6;
 * @return {string}
 */
proto.cors.plugins.gloo.solo.io.CorsPolicy.prototype.getMaxAge = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.cors.plugins.gloo.solo.io.CorsPolicy.prototype.setMaxAge = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional bool allow_credentials = 7;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.cors.plugins.gloo.solo.io.CorsPolicy.prototype.getAllowCredentials = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 7, false));
};


/** @param {boolean} value */
proto.cors.plugins.gloo.solo.io.CorsPolicy.prototype.setAllowCredentials = function(value) {
  jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool disable_for_route = 8;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.cors.plugins.gloo.solo.io.CorsPolicy.prototype.getDisableForRoute = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 8, false));
};


/** @param {boolean} value */
proto.cors.plugins.gloo.solo.io.CorsPolicy.prototype.setDisableForRoute = function(value) {
  jspb.Message.setProto3BooleanField(this, 8, value);
};


goog.object.extend(exports, proto.cors.plugins.gloo.solo.io);
