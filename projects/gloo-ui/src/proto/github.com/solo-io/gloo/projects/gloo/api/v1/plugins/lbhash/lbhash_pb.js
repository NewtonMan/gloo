/* eslint-disable */
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var gogoproto_gogo_pb = require('../../../../../../../../gogo/protobuf/gogoproto/gogo_pb.js');
var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.exportSymbol('proto.lbhash.plugins.gloo.solo.io.Cookie', null, global);
goog.exportSymbol('proto.lbhash.plugins.gloo.solo.io.HashPolicy', null, global);
goog.exportSymbol('proto.lbhash.plugins.gloo.solo.io.RouteActionHashConfig', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.lbhash.plugins.gloo.solo.io.RouteActionHashConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.lbhash.plugins.gloo.solo.io.RouteActionHashConfig.repeatedFields_, null);
};
goog.inherits(proto.lbhash.plugins.gloo.solo.io.RouteActionHashConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.lbhash.plugins.gloo.solo.io.RouteActionHashConfig.displayName = 'proto.lbhash.plugins.gloo.solo.io.RouteActionHashConfig';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.lbhash.plugins.gloo.solo.io.RouteActionHashConfig.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.lbhash.plugins.gloo.solo.io.RouteActionHashConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.lbhash.plugins.gloo.solo.io.RouteActionHashConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.lbhash.plugins.gloo.solo.io.RouteActionHashConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lbhash.plugins.gloo.solo.io.RouteActionHashConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    hashPoliciesList: jspb.Message.toObjectList(msg.getHashPoliciesList(),
    proto.lbhash.plugins.gloo.solo.io.HashPolicy.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.lbhash.plugins.gloo.solo.io.RouteActionHashConfig}
 */
proto.lbhash.plugins.gloo.solo.io.RouteActionHashConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.lbhash.plugins.gloo.solo.io.RouteActionHashConfig;
  return proto.lbhash.plugins.gloo.solo.io.RouteActionHashConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.lbhash.plugins.gloo.solo.io.RouteActionHashConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.lbhash.plugins.gloo.solo.io.RouteActionHashConfig}
 */
proto.lbhash.plugins.gloo.solo.io.RouteActionHashConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.lbhash.plugins.gloo.solo.io.HashPolicy;
      reader.readMessage(value,proto.lbhash.plugins.gloo.solo.io.HashPolicy.deserializeBinaryFromReader);
      msg.addHashPolicies(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.lbhash.plugins.gloo.solo.io.RouteActionHashConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.lbhash.plugins.gloo.solo.io.RouteActionHashConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.lbhash.plugins.gloo.solo.io.RouteActionHashConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lbhash.plugins.gloo.solo.io.RouteActionHashConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHashPoliciesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.lbhash.plugins.gloo.solo.io.HashPolicy.serializeBinaryToWriter
    );
  }
};


/**
 * repeated HashPolicy hash_policies = 1;
 * @return {!Array<!proto.lbhash.plugins.gloo.solo.io.HashPolicy>}
 */
proto.lbhash.plugins.gloo.solo.io.RouteActionHashConfig.prototype.getHashPoliciesList = function() {
  return /** @type{!Array<!proto.lbhash.plugins.gloo.solo.io.HashPolicy>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.lbhash.plugins.gloo.solo.io.HashPolicy, 1));
};


/** @param {!Array<!proto.lbhash.plugins.gloo.solo.io.HashPolicy>} value */
proto.lbhash.plugins.gloo.solo.io.RouteActionHashConfig.prototype.setHashPoliciesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.lbhash.plugins.gloo.solo.io.HashPolicy=} opt_value
 * @param {number=} opt_index
 * @return {!proto.lbhash.plugins.gloo.solo.io.HashPolicy}
 */
proto.lbhash.plugins.gloo.solo.io.RouteActionHashConfig.prototype.addHashPolicies = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.lbhash.plugins.gloo.solo.io.HashPolicy, opt_index);
};


proto.lbhash.plugins.gloo.solo.io.RouteActionHashConfig.prototype.clearHashPoliciesList = function() {
  this.setHashPoliciesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.lbhash.plugins.gloo.solo.io.Cookie = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.lbhash.plugins.gloo.solo.io.Cookie, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.lbhash.plugins.gloo.solo.io.Cookie.displayName = 'proto.lbhash.plugins.gloo.solo.io.Cookie';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.lbhash.plugins.gloo.solo.io.Cookie.prototype.toObject = function(opt_includeInstance) {
  return proto.lbhash.plugins.gloo.solo.io.Cookie.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.lbhash.plugins.gloo.solo.io.Cookie} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lbhash.plugins.gloo.solo.io.Cookie.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ttl: (f = msg.getTtl()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    path: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.lbhash.plugins.gloo.solo.io.Cookie}
 */
proto.lbhash.plugins.gloo.solo.io.Cookie.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.lbhash.plugins.gloo.solo.io.Cookie;
  return proto.lbhash.plugins.gloo.solo.io.Cookie.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.lbhash.plugins.gloo.solo.io.Cookie} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.lbhash.plugins.gloo.solo.io.Cookie}
 */
proto.lbhash.plugins.gloo.solo.io.Cookie.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setTtl(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.lbhash.plugins.gloo.solo.io.Cookie.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.lbhash.plugins.gloo.solo.io.Cookie.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.lbhash.plugins.gloo.solo.io.Cookie} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lbhash.plugins.gloo.solo.io.Cookie.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTtl();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.lbhash.plugins.gloo.solo.io.Cookie.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.lbhash.plugins.gloo.solo.io.Cookie.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Duration ttl = 2;
 * @return {?proto.google.protobuf.Duration}
 */
proto.lbhash.plugins.gloo.solo.io.Cookie.prototype.getTtl = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 2));
};


/** @param {?proto.google.protobuf.Duration|undefined} value */
proto.lbhash.plugins.gloo.solo.io.Cookie.prototype.setTtl = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.lbhash.plugins.gloo.solo.io.Cookie.prototype.clearTtl = function() {
  this.setTtl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.lbhash.plugins.gloo.solo.io.Cookie.prototype.hasTtl = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string path = 3;
 * @return {string}
 */
proto.lbhash.plugins.gloo.solo.io.Cookie.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.lbhash.plugins.gloo.solo.io.Cookie.prototype.setPath = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.lbhash.plugins.gloo.solo.io.HashPolicy = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.lbhash.plugins.gloo.solo.io.HashPolicy.oneofGroups_);
};
goog.inherits(proto.lbhash.plugins.gloo.solo.io.HashPolicy, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.lbhash.plugins.gloo.solo.io.HashPolicy.displayName = 'proto.lbhash.plugins.gloo.solo.io.HashPolicy';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.lbhash.plugins.gloo.solo.io.HashPolicy.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.lbhash.plugins.gloo.solo.io.HashPolicy.KeytypeCase = {
  KEYTYPE_NOT_SET: 0,
  HEADER: 1,
  COOKIE: 2,
  SOURCE_IP: 3
};

/**
 * @return {proto.lbhash.plugins.gloo.solo.io.HashPolicy.KeytypeCase}
 */
proto.lbhash.plugins.gloo.solo.io.HashPolicy.prototype.getKeytypeCase = function() {
  return /** @type {proto.lbhash.plugins.gloo.solo.io.HashPolicy.KeytypeCase} */(jspb.Message.computeOneofCase(this, proto.lbhash.plugins.gloo.solo.io.HashPolicy.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.lbhash.plugins.gloo.solo.io.HashPolicy.prototype.toObject = function(opt_includeInstance) {
  return proto.lbhash.plugins.gloo.solo.io.HashPolicy.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.lbhash.plugins.gloo.solo.io.HashPolicy} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lbhash.plugins.gloo.solo.io.HashPolicy.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: jspb.Message.getFieldWithDefault(msg, 1, ""),
    cookie: (f = msg.getCookie()) && proto.lbhash.plugins.gloo.solo.io.Cookie.toObject(includeInstance, f),
    sourceIp: jspb.Message.getFieldWithDefault(msg, 3, false),
    terminal: jspb.Message.getFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.lbhash.plugins.gloo.solo.io.HashPolicy}
 */
proto.lbhash.plugins.gloo.solo.io.HashPolicy.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.lbhash.plugins.gloo.solo.io.HashPolicy;
  return proto.lbhash.plugins.gloo.solo.io.HashPolicy.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.lbhash.plugins.gloo.solo.io.HashPolicy} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.lbhash.plugins.gloo.solo.io.HashPolicy}
 */
proto.lbhash.plugins.gloo.solo.io.HashPolicy.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHeader(value);
      break;
    case 2:
      var value = new proto.lbhash.plugins.gloo.solo.io.Cookie;
      reader.readMessage(value,proto.lbhash.plugins.gloo.solo.io.Cookie.deserializeBinaryFromReader);
      msg.setCookie(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSourceIp(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTerminal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.lbhash.plugins.gloo.solo.io.HashPolicy.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.lbhash.plugins.gloo.solo.io.HashPolicy.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.lbhash.plugins.gloo.solo.io.HashPolicy} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lbhash.plugins.gloo.solo.io.HashPolicy.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCookie();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.lbhash.plugins.gloo.solo.io.Cookie.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getTerminal();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional string header = 1;
 * @return {string}
 */
proto.lbhash.plugins.gloo.solo.io.HashPolicy.prototype.getHeader = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.lbhash.plugins.gloo.solo.io.HashPolicy.prototype.setHeader = function(value) {
  jspb.Message.setOneofField(this, 1, proto.lbhash.plugins.gloo.solo.io.HashPolicy.oneofGroups_[0], value);
};


proto.lbhash.plugins.gloo.solo.io.HashPolicy.prototype.clearHeader = function() {
  jspb.Message.setOneofField(this, 1, proto.lbhash.plugins.gloo.solo.io.HashPolicy.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.lbhash.plugins.gloo.solo.io.HashPolicy.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Cookie cookie = 2;
 * @return {?proto.lbhash.plugins.gloo.solo.io.Cookie}
 */
proto.lbhash.plugins.gloo.solo.io.HashPolicy.prototype.getCookie = function() {
  return /** @type{?proto.lbhash.plugins.gloo.solo.io.Cookie} */ (
    jspb.Message.getWrapperField(this, proto.lbhash.plugins.gloo.solo.io.Cookie, 2));
};


/** @param {?proto.lbhash.plugins.gloo.solo.io.Cookie|undefined} value */
proto.lbhash.plugins.gloo.solo.io.HashPolicy.prototype.setCookie = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.lbhash.plugins.gloo.solo.io.HashPolicy.oneofGroups_[0], value);
};


proto.lbhash.plugins.gloo.solo.io.HashPolicy.prototype.clearCookie = function() {
  this.setCookie(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.lbhash.plugins.gloo.solo.io.HashPolicy.prototype.hasCookie = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool source_ip = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.lbhash.plugins.gloo.solo.io.HashPolicy.prototype.getSourceIp = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.lbhash.plugins.gloo.solo.io.HashPolicy.prototype.setSourceIp = function(value) {
  jspb.Message.setOneofField(this, 3, proto.lbhash.plugins.gloo.solo.io.HashPolicy.oneofGroups_[0], value);
};


proto.lbhash.plugins.gloo.solo.io.HashPolicy.prototype.clearSourceIp = function() {
  jspb.Message.setOneofField(this, 3, proto.lbhash.plugins.gloo.solo.io.HashPolicy.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.lbhash.plugins.gloo.solo.io.HashPolicy.prototype.hasSourceIp = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool terminal = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.lbhash.plugins.gloo.solo.io.HashPolicy.prototype.getTerminal = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.lbhash.plugins.gloo.solo.io.HashPolicy.prototype.setTerminal = function(value) {
  jspb.Message.setProto3BooleanField(this, 4, value);
};


goog.object.extend(exports, proto.lbhash.plugins.gloo.solo.io);
