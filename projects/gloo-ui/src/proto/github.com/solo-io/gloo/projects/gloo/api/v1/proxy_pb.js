/* eslint-disable */
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
var gogoproto_gogo_pb = require('../../../../../../gogo/protobuf/gogoproto/gogo_pb.js');
var github_com_solo$io_solo$kit_api_v1_metadata_pb = require('../../../../../../../github.com/solo-io/solo-kit/api/v1/metadata_pb.js');
var github_com_solo$io_solo$kit_api_v1_status_pb = require('../../../../../../../github.com/solo-io/solo-kit/api/v1/status_pb.js');
var github_com_solo$io_solo$kit_api_v1_ref_pb = require('../../../../../../../github.com/solo-io/solo-kit/api/v1/ref_pb.js');
var github_com_solo$io_solo$kit_api_v1_solo$kit_pb = require('../../../../../../../github.com/solo-io/solo-kit/api/v1/solo-kit_pb.js');
var github_com_solo$io_gloo_projects_gloo_api_v1_ssl_pb = require('../../../../../../../github.com/solo-io/gloo/projects/gloo/api/v1/ssl_pb.js');
var github_com_solo$io_gloo_projects_gloo_api_v1_subset_pb = require('../../../../../../../github.com/solo-io/gloo/projects/gloo/api/v1/subset_pb.js');
var github_com_solo$io_gloo_projects_gloo_api_v1_plugins_pb = require('../../../../../../../github.com/solo-io/gloo/projects/gloo/api/v1/plugins_pb.js');
goog.exportSymbol('proto.gloo.solo.io.ConsulServiceDestination', null, global);
goog.exportSymbol('proto.gloo.solo.io.CorsPolicy', null, global);
goog.exportSymbol('proto.gloo.solo.io.Destination', null, global);
goog.exportSymbol('proto.gloo.solo.io.DirectResponseAction', null, global);
goog.exportSymbol('proto.gloo.solo.io.HeaderMatcher', null, global);
goog.exportSymbol('proto.gloo.solo.io.HttpListener', null, global);
goog.exportSymbol('proto.gloo.solo.io.KubernetesServiceDestination', null, global);
goog.exportSymbol('proto.gloo.solo.io.Listener', null, global);
goog.exportSymbol('proto.gloo.solo.io.Matcher', null, global);
goog.exportSymbol('proto.gloo.solo.io.MultiDestination', null, global);
goog.exportSymbol('proto.gloo.solo.io.Proxy', null, global);
goog.exportSymbol('proto.gloo.solo.io.QueryParameterMatcher', null, global);
goog.exportSymbol('proto.gloo.solo.io.RedirectAction', null, global);
goog.exportSymbol('proto.gloo.solo.io.RedirectAction.RedirectResponseCode', null, global);
goog.exportSymbol('proto.gloo.solo.io.Route', null, global);
goog.exportSymbol('proto.gloo.solo.io.RouteAction', null, global);
goog.exportSymbol('proto.gloo.solo.io.TcpHost', null, global);
goog.exportSymbol('proto.gloo.solo.io.TcpListener', null, global);
goog.exportSymbol('proto.gloo.solo.io.UpstreamGroup', null, global);
goog.exportSymbol('proto.gloo.solo.io.VirtualHost', null, global);
goog.exportSymbol('proto.gloo.solo.io.WeightedDestination', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.Proxy = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gloo.solo.io.Proxy.repeatedFields_, null);
};
goog.inherits(proto.gloo.solo.io.Proxy, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.Proxy.displayName = 'proto.gloo.solo.io.Proxy';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gloo.solo.io.Proxy.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.Proxy.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.Proxy.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.Proxy} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.Proxy.toObject = function(includeInstance, msg) {
  var f, obj = {
    listenersList: jspb.Message.toObjectList(msg.getListenersList(),
    proto.gloo.solo.io.Listener.toObject, includeInstance),
    status: (f = msg.getStatus()) && github_com_solo$io_solo$kit_api_v1_status_pb.Status.toObject(includeInstance, f),
    metadata: (f = msg.getMetadata()) && github_com_solo$io_solo$kit_api_v1_metadata_pb.Metadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.Proxy}
 */
proto.gloo.solo.io.Proxy.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.Proxy;
  return proto.gloo.solo.io.Proxy.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.Proxy} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.Proxy}
 */
proto.gloo.solo.io.Proxy.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new proto.gloo.solo.io.Listener;
      reader.readMessage(value,proto.gloo.solo.io.Listener.deserializeBinaryFromReader);
      msg.addListeners(value);
      break;
    case 6:
      var value = new github_com_solo$io_solo$kit_api_v1_status_pb.Status;
      reader.readMessage(value,github_com_solo$io_solo$kit_api_v1_status_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 7:
      var value = new github_com_solo$io_solo$kit_api_v1_metadata_pb.Metadata;
      reader.readMessage(value,github_com_solo$io_solo$kit_api_v1_metadata_pb.Metadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.Proxy.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.Proxy.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.Proxy} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.Proxy.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListenersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.gloo.solo.io.Listener.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      github_com_solo$io_solo$kit_api_v1_status_pb.Status.serializeBinaryToWriter
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      github_com_solo$io_solo$kit_api_v1_metadata_pb.Metadata.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Listener listeners = 2;
 * @return {!Array<!proto.gloo.solo.io.Listener>}
 */
proto.gloo.solo.io.Proxy.prototype.getListenersList = function() {
  return /** @type{!Array<!proto.gloo.solo.io.Listener>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gloo.solo.io.Listener, 2));
};


/** @param {!Array<!proto.gloo.solo.io.Listener>} value */
proto.gloo.solo.io.Proxy.prototype.setListenersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.gloo.solo.io.Listener=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gloo.solo.io.Listener}
 */
proto.gloo.solo.io.Proxy.prototype.addListeners = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.gloo.solo.io.Listener, opt_index);
};


proto.gloo.solo.io.Proxy.prototype.clearListenersList = function() {
  this.setListenersList([]);
};


/**
 * optional core.solo.io.Status status = 6;
 * @return {?proto.core.solo.io.Status}
 */
proto.gloo.solo.io.Proxy.prototype.getStatus = function() {
  return /** @type{?proto.core.solo.io.Status} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$kit_api_v1_status_pb.Status, 6));
};


/** @param {?proto.core.solo.io.Status|undefined} value */
proto.gloo.solo.io.Proxy.prototype.setStatus = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.gloo.solo.io.Proxy.prototype.clearStatus = function() {
  this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.Proxy.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional core.solo.io.Metadata metadata = 7;
 * @return {?proto.core.solo.io.Metadata}
 */
proto.gloo.solo.io.Proxy.prototype.getMetadata = function() {
  return /** @type{?proto.core.solo.io.Metadata} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$kit_api_v1_metadata_pb.Metadata, 7));
};


/** @param {?proto.core.solo.io.Metadata|undefined} value */
proto.gloo.solo.io.Proxy.prototype.setMetadata = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.gloo.solo.io.Proxy.prototype.clearMetadata = function() {
  this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.Proxy.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.Listener = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gloo.solo.io.Listener.repeatedFields_, proto.gloo.solo.io.Listener.oneofGroups_);
};
goog.inherits(proto.gloo.solo.io.Listener, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.Listener.displayName = 'proto.gloo.solo.io.Listener';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gloo.solo.io.Listener.repeatedFields_ = [6];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.gloo.solo.io.Listener.oneofGroups_ = [[4,5]];

/**
 * @enum {number}
 */
proto.gloo.solo.io.Listener.ListenertypeCase = {
  LISTENERTYPE_NOT_SET: 0,
  HTTP_LISTENER: 4,
  TCP_LISTENER: 5
};

/**
 * @return {proto.gloo.solo.io.Listener.ListenertypeCase}
 */
proto.gloo.solo.io.Listener.prototype.getListenertypeCase = function() {
  return /** @type {proto.gloo.solo.io.Listener.ListenertypeCase} */(jspb.Message.computeOneofCase(this, proto.gloo.solo.io.Listener.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.Listener.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.Listener.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.Listener} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.Listener.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    bindAddress: jspb.Message.getFieldWithDefault(msg, 2, ""),
    bindPort: jspb.Message.getFieldWithDefault(msg, 3, 0),
    httpListener: (f = msg.getHttpListener()) && proto.gloo.solo.io.HttpListener.toObject(includeInstance, f),
    tcpListener: (f = msg.getTcpListener()) && proto.gloo.solo.io.TcpListener.toObject(includeInstance, f),
    sslConfigurationsList: jspb.Message.toObjectList(msg.getSslConfigurationsList(),
    github_com_solo$io_gloo_projects_gloo_api_v1_ssl_pb.SslConfig.toObject, includeInstance),
    useProxyProto: (f = msg.getUseProxyProto()) && google_protobuf_wrappers_pb.BoolValue.toObject(includeInstance, f),
    plugins: (f = msg.getPlugins()) && github_com_solo$io_gloo_projects_gloo_api_v1_plugins_pb.ListenerPlugins.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.Listener}
 */
proto.gloo.solo.io.Listener.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.Listener;
  return proto.gloo.solo.io.Listener.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.Listener} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.Listener}
 */
proto.gloo.solo.io.Listener.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBindAddress(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBindPort(value);
      break;
    case 4:
      var value = new proto.gloo.solo.io.HttpListener;
      reader.readMessage(value,proto.gloo.solo.io.HttpListener.deserializeBinaryFromReader);
      msg.setHttpListener(value);
      break;
    case 5:
      var value = new proto.gloo.solo.io.TcpListener;
      reader.readMessage(value,proto.gloo.solo.io.TcpListener.deserializeBinaryFromReader);
      msg.setTcpListener(value);
      break;
    case 6:
      var value = new github_com_solo$io_gloo_projects_gloo_api_v1_ssl_pb.SslConfig;
      reader.readMessage(value,github_com_solo$io_gloo_projects_gloo_api_v1_ssl_pb.SslConfig.deserializeBinaryFromReader);
      msg.addSslConfigurations(value);
      break;
    case 7:
      var value = new google_protobuf_wrappers_pb.BoolValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.BoolValue.deserializeBinaryFromReader);
      msg.setUseProxyProto(value);
      break;
    case 8:
      var value = new github_com_solo$io_gloo_projects_gloo_api_v1_plugins_pb.ListenerPlugins;
      reader.readMessage(value,github_com_solo$io_gloo_projects_gloo_api_v1_plugins_pb.ListenerPlugins.deserializeBinaryFromReader);
      msg.setPlugins(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.Listener.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.Listener.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.Listener} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.Listener.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBindAddress();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBindPort();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getHttpListener();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.gloo.solo.io.HttpListener.serializeBinaryToWriter
    );
  }
  f = message.getTcpListener();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.gloo.solo.io.TcpListener.serializeBinaryToWriter
    );
  }
  f = message.getSslConfigurationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      github_com_solo$io_gloo_projects_gloo_api_v1_ssl_pb.SslConfig.serializeBinaryToWriter
    );
  }
  f = message.getUseProxyProto();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_wrappers_pb.BoolValue.serializeBinaryToWriter
    );
  }
  f = message.getPlugins();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      github_com_solo$io_gloo_projects_gloo_api_v1_plugins_pb.ListenerPlugins.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.gloo.solo.io.Listener.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.gloo.solo.io.Listener.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string bind_address = 2;
 * @return {string}
 */
proto.gloo.solo.io.Listener.prototype.getBindAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.gloo.solo.io.Listener.prototype.setBindAddress = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint32 bind_port = 3;
 * @return {number}
 */
proto.gloo.solo.io.Listener.prototype.getBindPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.gloo.solo.io.Listener.prototype.setBindPort = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional HttpListener http_listener = 4;
 * @return {?proto.gloo.solo.io.HttpListener}
 */
proto.gloo.solo.io.Listener.prototype.getHttpListener = function() {
  return /** @type{?proto.gloo.solo.io.HttpListener} */ (
    jspb.Message.getWrapperField(this, proto.gloo.solo.io.HttpListener, 4));
};


/** @param {?proto.gloo.solo.io.HttpListener|undefined} value */
proto.gloo.solo.io.Listener.prototype.setHttpListener = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.gloo.solo.io.Listener.oneofGroups_[0], value);
};


proto.gloo.solo.io.Listener.prototype.clearHttpListener = function() {
  this.setHttpListener(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.Listener.prototype.hasHttpListener = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional TcpListener tcp_listener = 5;
 * @return {?proto.gloo.solo.io.TcpListener}
 */
proto.gloo.solo.io.Listener.prototype.getTcpListener = function() {
  return /** @type{?proto.gloo.solo.io.TcpListener} */ (
    jspb.Message.getWrapperField(this, proto.gloo.solo.io.TcpListener, 5));
};


/** @param {?proto.gloo.solo.io.TcpListener|undefined} value */
proto.gloo.solo.io.Listener.prototype.setTcpListener = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.gloo.solo.io.Listener.oneofGroups_[0], value);
};


proto.gloo.solo.io.Listener.prototype.clearTcpListener = function() {
  this.setTcpListener(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.Listener.prototype.hasTcpListener = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated SslConfig ssl_configurations = 6;
 * @return {!Array<!proto.gloo.solo.io.SslConfig>}
 */
proto.gloo.solo.io.Listener.prototype.getSslConfigurationsList = function() {
  return /** @type{!Array<!proto.gloo.solo.io.SslConfig>} */ (
    jspb.Message.getRepeatedWrapperField(this, github_com_solo$io_gloo_projects_gloo_api_v1_ssl_pb.SslConfig, 6));
};


/** @param {!Array<!proto.gloo.solo.io.SslConfig>} value */
proto.gloo.solo.io.Listener.prototype.setSslConfigurationsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.gloo.solo.io.SslConfig=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gloo.solo.io.SslConfig}
 */
proto.gloo.solo.io.Listener.prototype.addSslConfigurations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.gloo.solo.io.SslConfig, opt_index);
};


proto.gloo.solo.io.Listener.prototype.clearSslConfigurationsList = function() {
  this.setSslConfigurationsList([]);
};


/**
 * optional google.protobuf.BoolValue use_proxy_proto = 7;
 * @return {?proto.google.protobuf.BoolValue}
 */
proto.gloo.solo.io.Listener.prototype.getUseProxyProto = function() {
  return /** @type{?proto.google.protobuf.BoolValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.BoolValue, 7));
};


/** @param {?proto.google.protobuf.BoolValue|undefined} value */
proto.gloo.solo.io.Listener.prototype.setUseProxyProto = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.gloo.solo.io.Listener.prototype.clearUseProxyProto = function() {
  this.setUseProxyProto(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.Listener.prototype.hasUseProxyProto = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional ListenerPlugins plugins = 8;
 * @return {?proto.gloo.solo.io.ListenerPlugins}
 */
proto.gloo.solo.io.Listener.prototype.getPlugins = function() {
  return /** @type{?proto.gloo.solo.io.ListenerPlugins} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_gloo_projects_gloo_api_v1_plugins_pb.ListenerPlugins, 8));
};


/** @param {?proto.gloo.solo.io.ListenerPlugins|undefined} value */
proto.gloo.solo.io.Listener.prototype.setPlugins = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.gloo.solo.io.Listener.prototype.clearPlugins = function() {
  this.setPlugins(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.Listener.prototype.hasPlugins = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.TcpListener = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gloo.solo.io.TcpListener.repeatedFields_, null);
};
goog.inherits(proto.gloo.solo.io.TcpListener, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.TcpListener.displayName = 'proto.gloo.solo.io.TcpListener';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gloo.solo.io.TcpListener.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.TcpListener.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.TcpListener.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.TcpListener} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.TcpListener.toObject = function(includeInstance, msg) {
  var f, obj = {
    tcpHostsList: jspb.Message.toObjectList(msg.getTcpHostsList(),
    proto.gloo.solo.io.TcpHost.toObject, includeInstance),
    plugins: (f = msg.getPlugins()) && github_com_solo$io_gloo_projects_gloo_api_v1_plugins_pb.TcpListenerPlugins.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.TcpListener}
 */
proto.gloo.solo.io.TcpListener.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.TcpListener;
  return proto.gloo.solo.io.TcpListener.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.TcpListener} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.TcpListener}
 */
proto.gloo.solo.io.TcpListener.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gloo.solo.io.TcpHost;
      reader.readMessage(value,proto.gloo.solo.io.TcpHost.deserializeBinaryFromReader);
      msg.addTcpHosts(value);
      break;
    case 8:
      var value = new github_com_solo$io_gloo_projects_gloo_api_v1_plugins_pb.TcpListenerPlugins;
      reader.readMessage(value,github_com_solo$io_gloo_projects_gloo_api_v1_plugins_pb.TcpListenerPlugins.deserializeBinaryFromReader);
      msg.setPlugins(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.TcpListener.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.TcpListener.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.TcpListener} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.TcpListener.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTcpHostsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.gloo.solo.io.TcpHost.serializeBinaryToWriter
    );
  }
  f = message.getPlugins();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      github_com_solo$io_gloo_projects_gloo_api_v1_plugins_pb.TcpListenerPlugins.serializeBinaryToWriter
    );
  }
};


/**
 * repeated TcpHost tcp_hosts = 1;
 * @return {!Array<!proto.gloo.solo.io.TcpHost>}
 */
proto.gloo.solo.io.TcpListener.prototype.getTcpHostsList = function() {
  return /** @type{!Array<!proto.gloo.solo.io.TcpHost>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gloo.solo.io.TcpHost, 1));
};


/** @param {!Array<!proto.gloo.solo.io.TcpHost>} value */
proto.gloo.solo.io.TcpListener.prototype.setTcpHostsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.gloo.solo.io.TcpHost=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gloo.solo.io.TcpHost}
 */
proto.gloo.solo.io.TcpListener.prototype.addTcpHosts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.gloo.solo.io.TcpHost, opt_index);
};


proto.gloo.solo.io.TcpListener.prototype.clearTcpHostsList = function() {
  this.setTcpHostsList([]);
};


/**
 * optional TcpListenerPlugins plugins = 8;
 * @return {?proto.gloo.solo.io.TcpListenerPlugins}
 */
proto.gloo.solo.io.TcpListener.prototype.getPlugins = function() {
  return /** @type{?proto.gloo.solo.io.TcpListenerPlugins} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_gloo_projects_gloo_api_v1_plugins_pb.TcpListenerPlugins, 8));
};


/** @param {?proto.gloo.solo.io.TcpListenerPlugins|undefined} value */
proto.gloo.solo.io.TcpListener.prototype.setPlugins = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.gloo.solo.io.TcpListener.prototype.clearPlugins = function() {
  this.setPlugins(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.TcpListener.prototype.hasPlugins = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.TcpHost = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gloo.solo.io.TcpHost, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.TcpHost.displayName = 'proto.gloo.solo.io.TcpHost';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.TcpHost.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.TcpHost.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.TcpHost} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.TcpHost.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    destination: (f = msg.getDestination()) && proto.gloo.solo.io.RouteAction.toObject(includeInstance, f),
    sslConfig: (f = msg.getSslConfig()) && github_com_solo$io_gloo_projects_gloo_api_v1_ssl_pb.SslConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.TcpHost}
 */
proto.gloo.solo.io.TcpHost.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.TcpHost;
  return proto.gloo.solo.io.TcpHost.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.TcpHost} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.TcpHost}
 */
proto.gloo.solo.io.TcpHost.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.gloo.solo.io.RouteAction;
      reader.readMessage(value,proto.gloo.solo.io.RouteAction.deserializeBinaryFromReader);
      msg.setDestination(value);
      break;
    case 3:
      var value = new github_com_solo$io_gloo_projects_gloo_api_v1_ssl_pb.SslConfig;
      reader.readMessage(value,github_com_solo$io_gloo_projects_gloo_api_v1_ssl_pb.SslConfig.deserializeBinaryFromReader);
      msg.setSslConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.TcpHost.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.TcpHost.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.TcpHost} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.TcpHost.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDestination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.gloo.solo.io.RouteAction.serializeBinaryToWriter
    );
  }
  f = message.getSslConfig();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      github_com_solo$io_gloo_projects_gloo_api_v1_ssl_pb.SslConfig.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.gloo.solo.io.TcpHost.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.gloo.solo.io.TcpHost.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional RouteAction destination = 2;
 * @return {?proto.gloo.solo.io.RouteAction}
 */
proto.gloo.solo.io.TcpHost.prototype.getDestination = function() {
  return /** @type{?proto.gloo.solo.io.RouteAction} */ (
    jspb.Message.getWrapperField(this, proto.gloo.solo.io.RouteAction, 2));
};


/** @param {?proto.gloo.solo.io.RouteAction|undefined} value */
proto.gloo.solo.io.TcpHost.prototype.setDestination = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.gloo.solo.io.TcpHost.prototype.clearDestination = function() {
  this.setDestination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.TcpHost.prototype.hasDestination = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional SslConfig ssl_config = 3;
 * @return {?proto.gloo.solo.io.SslConfig}
 */
proto.gloo.solo.io.TcpHost.prototype.getSslConfig = function() {
  return /** @type{?proto.gloo.solo.io.SslConfig} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_gloo_projects_gloo_api_v1_ssl_pb.SslConfig, 3));
};


/** @param {?proto.gloo.solo.io.SslConfig|undefined} value */
proto.gloo.solo.io.TcpHost.prototype.setSslConfig = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.gloo.solo.io.TcpHost.prototype.clearSslConfig = function() {
  this.setSslConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.TcpHost.prototype.hasSslConfig = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.HttpListener = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gloo.solo.io.HttpListener.repeatedFields_, null);
};
goog.inherits(proto.gloo.solo.io.HttpListener, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.HttpListener.displayName = 'proto.gloo.solo.io.HttpListener';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gloo.solo.io.HttpListener.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.HttpListener.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.HttpListener.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.HttpListener} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.HttpListener.toObject = function(includeInstance, msg) {
  var f, obj = {
    virtualHostsList: jspb.Message.toObjectList(msg.getVirtualHostsList(),
    proto.gloo.solo.io.VirtualHost.toObject, includeInstance),
    listenerPlugins: (f = msg.getListenerPlugins()) && github_com_solo$io_gloo_projects_gloo_api_v1_plugins_pb.HttpListenerPlugins.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.HttpListener}
 */
proto.gloo.solo.io.HttpListener.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.HttpListener;
  return proto.gloo.solo.io.HttpListener.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.HttpListener} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.HttpListener}
 */
proto.gloo.solo.io.HttpListener.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gloo.solo.io.VirtualHost;
      reader.readMessage(value,proto.gloo.solo.io.VirtualHost.deserializeBinaryFromReader);
      msg.addVirtualHosts(value);
      break;
    case 2:
      var value = new github_com_solo$io_gloo_projects_gloo_api_v1_plugins_pb.HttpListenerPlugins;
      reader.readMessage(value,github_com_solo$io_gloo_projects_gloo_api_v1_plugins_pb.HttpListenerPlugins.deserializeBinaryFromReader);
      msg.setListenerPlugins(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.HttpListener.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.HttpListener.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.HttpListener} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.HttpListener.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVirtualHostsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.gloo.solo.io.VirtualHost.serializeBinaryToWriter
    );
  }
  f = message.getListenerPlugins();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      github_com_solo$io_gloo_projects_gloo_api_v1_plugins_pb.HttpListenerPlugins.serializeBinaryToWriter
    );
  }
};


/**
 * repeated VirtualHost virtual_hosts = 1;
 * @return {!Array<!proto.gloo.solo.io.VirtualHost>}
 */
proto.gloo.solo.io.HttpListener.prototype.getVirtualHostsList = function() {
  return /** @type{!Array<!proto.gloo.solo.io.VirtualHost>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gloo.solo.io.VirtualHost, 1));
};


/** @param {!Array<!proto.gloo.solo.io.VirtualHost>} value */
proto.gloo.solo.io.HttpListener.prototype.setVirtualHostsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.gloo.solo.io.VirtualHost=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gloo.solo.io.VirtualHost}
 */
proto.gloo.solo.io.HttpListener.prototype.addVirtualHosts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.gloo.solo.io.VirtualHost, opt_index);
};


proto.gloo.solo.io.HttpListener.prototype.clearVirtualHostsList = function() {
  this.setVirtualHostsList([]);
};


/**
 * optional HttpListenerPlugins listener_plugins = 2;
 * @return {?proto.gloo.solo.io.HttpListenerPlugins}
 */
proto.gloo.solo.io.HttpListener.prototype.getListenerPlugins = function() {
  return /** @type{?proto.gloo.solo.io.HttpListenerPlugins} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_gloo_projects_gloo_api_v1_plugins_pb.HttpListenerPlugins, 2));
};


/** @param {?proto.gloo.solo.io.HttpListenerPlugins|undefined} value */
proto.gloo.solo.io.HttpListener.prototype.setListenerPlugins = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.gloo.solo.io.HttpListener.prototype.clearListenerPlugins = function() {
  this.setListenerPlugins(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.HttpListener.prototype.hasListenerPlugins = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.VirtualHost = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gloo.solo.io.VirtualHost.repeatedFields_, null);
};
goog.inherits(proto.gloo.solo.io.VirtualHost, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.VirtualHost.displayName = 'proto.gloo.solo.io.VirtualHost';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gloo.solo.io.VirtualHost.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.VirtualHost.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.VirtualHost.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.VirtualHost} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.VirtualHost.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    domainsList: jspb.Message.getRepeatedField(msg, 2),
    routesList: jspb.Message.toObjectList(msg.getRoutesList(),
    proto.gloo.solo.io.Route.toObject, includeInstance),
    virtualHostPlugins: (f = msg.getVirtualHostPlugins()) && github_com_solo$io_gloo_projects_gloo_api_v1_plugins_pb.VirtualHostPlugins.toObject(includeInstance, f),
    corsPolicy: (f = msg.getCorsPolicy()) && proto.gloo.solo.io.CorsPolicy.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.VirtualHost}
 */
proto.gloo.solo.io.VirtualHost.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.VirtualHost;
  return proto.gloo.solo.io.VirtualHost.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.VirtualHost} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.VirtualHost}
 */
proto.gloo.solo.io.VirtualHost.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addDomains(value);
      break;
    case 3:
      var value = new proto.gloo.solo.io.Route;
      reader.readMessage(value,proto.gloo.solo.io.Route.deserializeBinaryFromReader);
      msg.addRoutes(value);
      break;
    case 4:
      var value = new github_com_solo$io_gloo_projects_gloo_api_v1_plugins_pb.VirtualHostPlugins;
      reader.readMessage(value,github_com_solo$io_gloo_projects_gloo_api_v1_plugins_pb.VirtualHostPlugins.deserializeBinaryFromReader);
      msg.setVirtualHostPlugins(value);
      break;
    case 5:
      var value = new proto.gloo.solo.io.CorsPolicy;
      reader.readMessage(value,proto.gloo.solo.io.CorsPolicy.deserializeBinaryFromReader);
      msg.setCorsPolicy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.VirtualHost.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.VirtualHost.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.VirtualHost} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.VirtualHost.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDomainsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getRoutesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.gloo.solo.io.Route.serializeBinaryToWriter
    );
  }
  f = message.getVirtualHostPlugins();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      github_com_solo$io_gloo_projects_gloo_api_v1_plugins_pb.VirtualHostPlugins.serializeBinaryToWriter
    );
  }
  f = message.getCorsPolicy();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.gloo.solo.io.CorsPolicy.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.gloo.solo.io.VirtualHost.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.gloo.solo.io.VirtualHost.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string domains = 2;
 * @return {!Array<string>}
 */
proto.gloo.solo.io.VirtualHost.prototype.getDomainsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array<string>} value */
proto.gloo.solo.io.VirtualHost.prototype.setDomainsList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.gloo.solo.io.VirtualHost.prototype.addDomains = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.gloo.solo.io.VirtualHost.prototype.clearDomainsList = function() {
  this.setDomainsList([]);
};


/**
 * repeated Route routes = 3;
 * @return {!Array<!proto.gloo.solo.io.Route>}
 */
proto.gloo.solo.io.VirtualHost.prototype.getRoutesList = function() {
  return /** @type{!Array<!proto.gloo.solo.io.Route>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gloo.solo.io.Route, 3));
};


/** @param {!Array<!proto.gloo.solo.io.Route>} value */
proto.gloo.solo.io.VirtualHost.prototype.setRoutesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.gloo.solo.io.Route=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gloo.solo.io.Route}
 */
proto.gloo.solo.io.VirtualHost.prototype.addRoutes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.gloo.solo.io.Route, opt_index);
};


proto.gloo.solo.io.VirtualHost.prototype.clearRoutesList = function() {
  this.setRoutesList([]);
};


/**
 * optional VirtualHostPlugins virtual_host_plugins = 4;
 * @return {?proto.gloo.solo.io.VirtualHostPlugins}
 */
proto.gloo.solo.io.VirtualHost.prototype.getVirtualHostPlugins = function() {
  return /** @type{?proto.gloo.solo.io.VirtualHostPlugins} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_gloo_projects_gloo_api_v1_plugins_pb.VirtualHostPlugins, 4));
};


/** @param {?proto.gloo.solo.io.VirtualHostPlugins|undefined} value */
proto.gloo.solo.io.VirtualHost.prototype.setVirtualHostPlugins = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.gloo.solo.io.VirtualHost.prototype.clearVirtualHostPlugins = function() {
  this.setVirtualHostPlugins(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.VirtualHost.prototype.hasVirtualHostPlugins = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional CorsPolicy cors_policy = 5;
 * @return {?proto.gloo.solo.io.CorsPolicy}
 */
proto.gloo.solo.io.VirtualHost.prototype.getCorsPolicy = function() {
  return /** @type{?proto.gloo.solo.io.CorsPolicy} */ (
    jspb.Message.getWrapperField(this, proto.gloo.solo.io.CorsPolicy, 5));
};


/** @param {?proto.gloo.solo.io.CorsPolicy|undefined} value */
proto.gloo.solo.io.VirtualHost.prototype.setCorsPolicy = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.gloo.solo.io.VirtualHost.prototype.clearCorsPolicy = function() {
  this.setCorsPolicy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.VirtualHost.prototype.hasCorsPolicy = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.Route = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.gloo.solo.io.Route.oneofGroups_);
};
goog.inherits(proto.gloo.solo.io.Route, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.Route.displayName = 'proto.gloo.solo.io.Route';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.gloo.solo.io.Route.oneofGroups_ = [[2,3,4]];

/**
 * @enum {number}
 */
proto.gloo.solo.io.Route.ActionCase = {
  ACTION_NOT_SET: 0,
  ROUTE_ACTION: 2,
  REDIRECT_ACTION: 3,
  DIRECT_RESPONSE_ACTION: 4
};

/**
 * @return {proto.gloo.solo.io.Route.ActionCase}
 */
proto.gloo.solo.io.Route.prototype.getActionCase = function() {
  return /** @type {proto.gloo.solo.io.Route.ActionCase} */(jspb.Message.computeOneofCase(this, proto.gloo.solo.io.Route.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.Route.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.Route.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.Route} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.Route.toObject = function(includeInstance, msg) {
  var f, obj = {
    matcher: (f = msg.getMatcher()) && proto.gloo.solo.io.Matcher.toObject(includeInstance, f),
    routeAction: (f = msg.getRouteAction()) && proto.gloo.solo.io.RouteAction.toObject(includeInstance, f),
    redirectAction: (f = msg.getRedirectAction()) && proto.gloo.solo.io.RedirectAction.toObject(includeInstance, f),
    directResponseAction: (f = msg.getDirectResponseAction()) && proto.gloo.solo.io.DirectResponseAction.toObject(includeInstance, f),
    routePlugins: (f = msg.getRoutePlugins()) && github_com_solo$io_gloo_projects_gloo_api_v1_plugins_pb.RoutePlugins.toObject(includeInstance, f),
    routeMetadata: (f = msg.getRouteMetadata()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.Route}
 */
proto.gloo.solo.io.Route.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.Route;
  return proto.gloo.solo.io.Route.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.Route} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.Route}
 */
proto.gloo.solo.io.Route.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gloo.solo.io.Matcher;
      reader.readMessage(value,proto.gloo.solo.io.Matcher.deserializeBinaryFromReader);
      msg.setMatcher(value);
      break;
    case 2:
      var value = new proto.gloo.solo.io.RouteAction;
      reader.readMessage(value,proto.gloo.solo.io.RouteAction.deserializeBinaryFromReader);
      msg.setRouteAction(value);
      break;
    case 3:
      var value = new proto.gloo.solo.io.RedirectAction;
      reader.readMessage(value,proto.gloo.solo.io.RedirectAction.deserializeBinaryFromReader);
      msg.setRedirectAction(value);
      break;
    case 4:
      var value = new proto.gloo.solo.io.DirectResponseAction;
      reader.readMessage(value,proto.gloo.solo.io.DirectResponseAction.deserializeBinaryFromReader);
      msg.setDirectResponseAction(value);
      break;
    case 5:
      var value = new github_com_solo$io_gloo_projects_gloo_api_v1_plugins_pb.RoutePlugins;
      reader.readMessage(value,github_com_solo$io_gloo_projects_gloo_api_v1_plugins_pb.RoutePlugins.deserializeBinaryFromReader);
      msg.setRoutePlugins(value);
      break;
    case 6:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setRouteMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.Route.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.Route.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.Route} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.Route.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMatcher();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.gloo.solo.io.Matcher.serializeBinaryToWriter
    );
  }
  f = message.getRouteAction();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.gloo.solo.io.RouteAction.serializeBinaryToWriter
    );
  }
  f = message.getRedirectAction();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.gloo.solo.io.RedirectAction.serializeBinaryToWriter
    );
  }
  f = message.getDirectResponseAction();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.gloo.solo.io.DirectResponseAction.serializeBinaryToWriter
    );
  }
  f = message.getRoutePlugins();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      github_com_solo$io_gloo_projects_gloo_api_v1_plugins_pb.RoutePlugins.serializeBinaryToWriter
    );
  }
  f = message.getRouteMetadata();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional Matcher matcher = 1;
 * @return {?proto.gloo.solo.io.Matcher}
 */
proto.gloo.solo.io.Route.prototype.getMatcher = function() {
  return /** @type{?proto.gloo.solo.io.Matcher} */ (
    jspb.Message.getWrapperField(this, proto.gloo.solo.io.Matcher, 1));
};


/** @param {?proto.gloo.solo.io.Matcher|undefined} value */
proto.gloo.solo.io.Route.prototype.setMatcher = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.gloo.solo.io.Route.prototype.clearMatcher = function() {
  this.setMatcher(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.Route.prototype.hasMatcher = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RouteAction route_action = 2;
 * @return {?proto.gloo.solo.io.RouteAction}
 */
proto.gloo.solo.io.Route.prototype.getRouteAction = function() {
  return /** @type{?proto.gloo.solo.io.RouteAction} */ (
    jspb.Message.getWrapperField(this, proto.gloo.solo.io.RouteAction, 2));
};


/** @param {?proto.gloo.solo.io.RouteAction|undefined} value */
proto.gloo.solo.io.Route.prototype.setRouteAction = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.gloo.solo.io.Route.oneofGroups_[0], value);
};


proto.gloo.solo.io.Route.prototype.clearRouteAction = function() {
  this.setRouteAction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.Route.prototype.hasRouteAction = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional RedirectAction redirect_action = 3;
 * @return {?proto.gloo.solo.io.RedirectAction}
 */
proto.gloo.solo.io.Route.prototype.getRedirectAction = function() {
  return /** @type{?proto.gloo.solo.io.RedirectAction} */ (
    jspb.Message.getWrapperField(this, proto.gloo.solo.io.RedirectAction, 3));
};


/** @param {?proto.gloo.solo.io.RedirectAction|undefined} value */
proto.gloo.solo.io.Route.prototype.setRedirectAction = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.gloo.solo.io.Route.oneofGroups_[0], value);
};


proto.gloo.solo.io.Route.prototype.clearRedirectAction = function() {
  this.setRedirectAction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.Route.prototype.hasRedirectAction = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional DirectResponseAction direct_response_action = 4;
 * @return {?proto.gloo.solo.io.DirectResponseAction}
 */
proto.gloo.solo.io.Route.prototype.getDirectResponseAction = function() {
  return /** @type{?proto.gloo.solo.io.DirectResponseAction} */ (
    jspb.Message.getWrapperField(this, proto.gloo.solo.io.DirectResponseAction, 4));
};


/** @param {?proto.gloo.solo.io.DirectResponseAction|undefined} value */
proto.gloo.solo.io.Route.prototype.setDirectResponseAction = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.gloo.solo.io.Route.oneofGroups_[0], value);
};


proto.gloo.solo.io.Route.prototype.clearDirectResponseAction = function() {
  this.setDirectResponseAction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.Route.prototype.hasDirectResponseAction = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional RoutePlugins route_plugins = 5;
 * @return {?proto.gloo.solo.io.RoutePlugins}
 */
proto.gloo.solo.io.Route.prototype.getRoutePlugins = function() {
  return /** @type{?proto.gloo.solo.io.RoutePlugins} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_gloo_projects_gloo_api_v1_plugins_pb.RoutePlugins, 5));
};


/** @param {?proto.gloo.solo.io.RoutePlugins|undefined} value */
proto.gloo.solo.io.Route.prototype.setRoutePlugins = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.gloo.solo.io.Route.prototype.clearRoutePlugins = function() {
  this.setRoutePlugins(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.Route.prototype.hasRoutePlugins = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.Struct route_metadata = 6;
 * @return {?proto.google.protobuf.Struct}
 */
proto.gloo.solo.io.Route.prototype.getRouteMetadata = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 6));
};


/** @param {?proto.google.protobuf.Struct|undefined} value */
proto.gloo.solo.io.Route.prototype.setRouteMetadata = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.gloo.solo.io.Route.prototype.clearRouteMetadata = function() {
  this.setRouteMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.Route.prototype.hasRouteMetadata = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.Matcher = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gloo.solo.io.Matcher.repeatedFields_, proto.gloo.solo.io.Matcher.oneofGroups_);
};
goog.inherits(proto.gloo.solo.io.Matcher, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.Matcher.displayName = 'proto.gloo.solo.io.Matcher';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gloo.solo.io.Matcher.repeatedFields_ = [6,7,8];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.gloo.solo.io.Matcher.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.gloo.solo.io.Matcher.PathSpecifierCase = {
  PATH_SPECIFIER_NOT_SET: 0,
  PREFIX: 1,
  EXACT: 2,
  REGEX: 3
};

/**
 * @return {proto.gloo.solo.io.Matcher.PathSpecifierCase}
 */
proto.gloo.solo.io.Matcher.prototype.getPathSpecifierCase = function() {
  return /** @type {proto.gloo.solo.io.Matcher.PathSpecifierCase} */(jspb.Message.computeOneofCase(this, proto.gloo.solo.io.Matcher.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.Matcher.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.Matcher.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.Matcher} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.Matcher.toObject = function(includeInstance, msg) {
  var f, obj = {
    prefix: jspb.Message.getFieldWithDefault(msg, 1, ""),
    exact: jspb.Message.getFieldWithDefault(msg, 2, ""),
    regex: jspb.Message.getFieldWithDefault(msg, 3, ""),
    headersList: jspb.Message.toObjectList(msg.getHeadersList(),
    proto.gloo.solo.io.HeaderMatcher.toObject, includeInstance),
    queryParametersList: jspb.Message.toObjectList(msg.getQueryParametersList(),
    proto.gloo.solo.io.QueryParameterMatcher.toObject, includeInstance),
    methodsList: jspb.Message.getRepeatedField(msg, 8)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.Matcher}
 */
proto.gloo.solo.io.Matcher.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.Matcher;
  return proto.gloo.solo.io.Matcher.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.Matcher} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.Matcher}
 */
proto.gloo.solo.io.Matcher.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrefix(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setExact(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegex(value);
      break;
    case 6:
      var value = new proto.gloo.solo.io.HeaderMatcher;
      reader.readMessage(value,proto.gloo.solo.io.HeaderMatcher.deserializeBinaryFromReader);
      msg.addHeaders(value);
      break;
    case 7:
      var value = new proto.gloo.solo.io.QueryParameterMatcher;
      reader.readMessage(value,proto.gloo.solo.io.QueryParameterMatcher.deserializeBinaryFromReader);
      msg.addQueryParameters(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.addMethods(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.Matcher.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.Matcher.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.Matcher} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.Matcher.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getHeadersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.gloo.solo.io.HeaderMatcher.serializeBinaryToWriter
    );
  }
  f = message.getQueryParametersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.gloo.solo.io.QueryParameterMatcher.serializeBinaryToWriter
    );
  }
  f = message.getMethodsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f
    );
  }
};


/**
 * optional string prefix = 1;
 * @return {string}
 */
proto.gloo.solo.io.Matcher.prototype.getPrefix = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.gloo.solo.io.Matcher.prototype.setPrefix = function(value) {
  jspb.Message.setOneofField(this, 1, proto.gloo.solo.io.Matcher.oneofGroups_[0], value);
};


proto.gloo.solo.io.Matcher.prototype.clearPrefix = function() {
  jspb.Message.setOneofField(this, 1, proto.gloo.solo.io.Matcher.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.Matcher.prototype.hasPrefix = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string exact = 2;
 * @return {string}
 */
proto.gloo.solo.io.Matcher.prototype.getExact = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.gloo.solo.io.Matcher.prototype.setExact = function(value) {
  jspb.Message.setOneofField(this, 2, proto.gloo.solo.io.Matcher.oneofGroups_[0], value);
};


proto.gloo.solo.io.Matcher.prototype.clearExact = function() {
  jspb.Message.setOneofField(this, 2, proto.gloo.solo.io.Matcher.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.Matcher.prototype.hasExact = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string regex = 3;
 * @return {string}
 */
proto.gloo.solo.io.Matcher.prototype.getRegex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.gloo.solo.io.Matcher.prototype.setRegex = function(value) {
  jspb.Message.setOneofField(this, 3, proto.gloo.solo.io.Matcher.oneofGroups_[0], value);
};


proto.gloo.solo.io.Matcher.prototype.clearRegex = function() {
  jspb.Message.setOneofField(this, 3, proto.gloo.solo.io.Matcher.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.Matcher.prototype.hasRegex = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated HeaderMatcher headers = 6;
 * @return {!Array<!proto.gloo.solo.io.HeaderMatcher>}
 */
proto.gloo.solo.io.Matcher.prototype.getHeadersList = function() {
  return /** @type{!Array<!proto.gloo.solo.io.HeaderMatcher>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gloo.solo.io.HeaderMatcher, 6));
};


/** @param {!Array<!proto.gloo.solo.io.HeaderMatcher>} value */
proto.gloo.solo.io.Matcher.prototype.setHeadersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.gloo.solo.io.HeaderMatcher=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gloo.solo.io.HeaderMatcher}
 */
proto.gloo.solo.io.Matcher.prototype.addHeaders = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.gloo.solo.io.HeaderMatcher, opt_index);
};


proto.gloo.solo.io.Matcher.prototype.clearHeadersList = function() {
  this.setHeadersList([]);
};


/**
 * repeated QueryParameterMatcher query_parameters = 7;
 * @return {!Array<!proto.gloo.solo.io.QueryParameterMatcher>}
 */
proto.gloo.solo.io.Matcher.prototype.getQueryParametersList = function() {
  return /** @type{!Array<!proto.gloo.solo.io.QueryParameterMatcher>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gloo.solo.io.QueryParameterMatcher, 7));
};


/** @param {!Array<!proto.gloo.solo.io.QueryParameterMatcher>} value */
proto.gloo.solo.io.Matcher.prototype.setQueryParametersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.gloo.solo.io.QueryParameterMatcher=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gloo.solo.io.QueryParameterMatcher}
 */
proto.gloo.solo.io.Matcher.prototype.addQueryParameters = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.gloo.solo.io.QueryParameterMatcher, opt_index);
};


proto.gloo.solo.io.Matcher.prototype.clearQueryParametersList = function() {
  this.setQueryParametersList([]);
};


/**
 * repeated string methods = 8;
 * @return {!Array<string>}
 */
proto.gloo.solo.io.Matcher.prototype.getMethodsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 8));
};


/** @param {!Array<string>} value */
proto.gloo.solo.io.Matcher.prototype.setMethodsList = function(value) {
  jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.gloo.solo.io.Matcher.prototype.addMethods = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


proto.gloo.solo.io.Matcher.prototype.clearMethodsList = function() {
  this.setMethodsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.HeaderMatcher = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gloo.solo.io.HeaderMatcher, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.HeaderMatcher.displayName = 'proto.gloo.solo.io.HeaderMatcher';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.HeaderMatcher.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.HeaderMatcher.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.HeaderMatcher} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.HeaderMatcher.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: jspb.Message.getFieldWithDefault(msg, 2, ""),
    regex: jspb.Message.getFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.HeaderMatcher}
 */
proto.gloo.solo.io.HeaderMatcher.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.HeaderMatcher;
  return proto.gloo.solo.io.HeaderMatcher.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.HeaderMatcher} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.HeaderMatcher}
 */
proto.gloo.solo.io.HeaderMatcher.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRegex(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.HeaderMatcher.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.HeaderMatcher.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.HeaderMatcher} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.HeaderMatcher.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRegex();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.gloo.solo.io.HeaderMatcher.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.gloo.solo.io.HeaderMatcher.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.gloo.solo.io.HeaderMatcher.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.gloo.solo.io.HeaderMatcher.prototype.setValue = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool regex = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.gloo.solo.io.HeaderMatcher.prototype.getRegex = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.gloo.solo.io.HeaderMatcher.prototype.setRegex = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.QueryParameterMatcher = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gloo.solo.io.QueryParameterMatcher, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.QueryParameterMatcher.displayName = 'proto.gloo.solo.io.QueryParameterMatcher';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.QueryParameterMatcher.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.QueryParameterMatcher.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.QueryParameterMatcher} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.QueryParameterMatcher.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: jspb.Message.getFieldWithDefault(msg, 2, ""),
    regex: jspb.Message.getFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.QueryParameterMatcher}
 */
proto.gloo.solo.io.QueryParameterMatcher.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.QueryParameterMatcher;
  return proto.gloo.solo.io.QueryParameterMatcher.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.QueryParameterMatcher} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.QueryParameterMatcher}
 */
proto.gloo.solo.io.QueryParameterMatcher.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRegex(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.QueryParameterMatcher.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.QueryParameterMatcher.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.QueryParameterMatcher} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.QueryParameterMatcher.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRegex();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.gloo.solo.io.QueryParameterMatcher.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.gloo.solo.io.QueryParameterMatcher.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.gloo.solo.io.QueryParameterMatcher.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.gloo.solo.io.QueryParameterMatcher.prototype.setValue = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool regex = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.gloo.solo.io.QueryParameterMatcher.prototype.getRegex = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.gloo.solo.io.QueryParameterMatcher.prototype.setRegex = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.RouteAction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.gloo.solo.io.RouteAction.oneofGroups_);
};
goog.inherits(proto.gloo.solo.io.RouteAction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.RouteAction.displayName = 'proto.gloo.solo.io.RouteAction';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.gloo.solo.io.RouteAction.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.gloo.solo.io.RouteAction.DestinationCase = {
  DESTINATION_NOT_SET: 0,
  SINGLE: 1,
  MULTI: 2,
  UPSTREAM_GROUP: 3
};

/**
 * @return {proto.gloo.solo.io.RouteAction.DestinationCase}
 */
proto.gloo.solo.io.RouteAction.prototype.getDestinationCase = function() {
  return /** @type {proto.gloo.solo.io.RouteAction.DestinationCase} */(jspb.Message.computeOneofCase(this, proto.gloo.solo.io.RouteAction.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.RouteAction.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.RouteAction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.RouteAction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.RouteAction.toObject = function(includeInstance, msg) {
  var f, obj = {
    single: (f = msg.getSingle()) && proto.gloo.solo.io.Destination.toObject(includeInstance, f),
    multi: (f = msg.getMulti()) && proto.gloo.solo.io.MultiDestination.toObject(includeInstance, f),
    upstreamGroup: (f = msg.getUpstreamGroup()) && github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.RouteAction}
 */
proto.gloo.solo.io.RouteAction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.RouteAction;
  return proto.gloo.solo.io.RouteAction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.RouteAction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.RouteAction}
 */
proto.gloo.solo.io.RouteAction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gloo.solo.io.Destination;
      reader.readMessage(value,proto.gloo.solo.io.Destination.deserializeBinaryFromReader);
      msg.setSingle(value);
      break;
    case 2:
      var value = new proto.gloo.solo.io.MultiDestination;
      reader.readMessage(value,proto.gloo.solo.io.MultiDestination.deserializeBinaryFromReader);
      msg.setMulti(value);
      break;
    case 3:
      var value = new github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef;
      reader.readMessage(value,github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.deserializeBinaryFromReader);
      msg.setUpstreamGroup(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.RouteAction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.RouteAction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.RouteAction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.RouteAction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSingle();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.gloo.solo.io.Destination.serializeBinaryToWriter
    );
  }
  f = message.getMulti();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.gloo.solo.io.MultiDestination.serializeBinaryToWriter
    );
  }
  f = message.getUpstreamGroup();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.serializeBinaryToWriter
    );
  }
};


/**
 * optional Destination single = 1;
 * @return {?proto.gloo.solo.io.Destination}
 */
proto.gloo.solo.io.RouteAction.prototype.getSingle = function() {
  return /** @type{?proto.gloo.solo.io.Destination} */ (
    jspb.Message.getWrapperField(this, proto.gloo.solo.io.Destination, 1));
};


/** @param {?proto.gloo.solo.io.Destination|undefined} value */
proto.gloo.solo.io.RouteAction.prototype.setSingle = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.gloo.solo.io.RouteAction.oneofGroups_[0], value);
};


proto.gloo.solo.io.RouteAction.prototype.clearSingle = function() {
  this.setSingle(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.RouteAction.prototype.hasSingle = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional MultiDestination multi = 2;
 * @return {?proto.gloo.solo.io.MultiDestination}
 */
proto.gloo.solo.io.RouteAction.prototype.getMulti = function() {
  return /** @type{?proto.gloo.solo.io.MultiDestination} */ (
    jspb.Message.getWrapperField(this, proto.gloo.solo.io.MultiDestination, 2));
};


/** @param {?proto.gloo.solo.io.MultiDestination|undefined} value */
proto.gloo.solo.io.RouteAction.prototype.setMulti = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.gloo.solo.io.RouteAction.oneofGroups_[0], value);
};


proto.gloo.solo.io.RouteAction.prototype.clearMulti = function() {
  this.setMulti(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.RouteAction.prototype.hasMulti = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional core.solo.io.ResourceRef upstream_group = 3;
 * @return {?proto.core.solo.io.ResourceRef}
 */
proto.gloo.solo.io.RouteAction.prototype.getUpstreamGroup = function() {
  return /** @type{?proto.core.solo.io.ResourceRef} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef, 3));
};


/** @param {?proto.core.solo.io.ResourceRef|undefined} value */
proto.gloo.solo.io.RouteAction.prototype.setUpstreamGroup = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.gloo.solo.io.RouteAction.oneofGroups_[0], value);
};


proto.gloo.solo.io.RouteAction.prototype.clearUpstreamGroup = function() {
  this.setUpstreamGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.RouteAction.prototype.hasUpstreamGroup = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.Destination = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.gloo.solo.io.Destination.oneofGroups_);
};
goog.inherits(proto.gloo.solo.io.Destination, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.Destination.displayName = 'proto.gloo.solo.io.Destination';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.gloo.solo.io.Destination.oneofGroups_ = [[10,11,12]];

/**
 * @enum {number}
 */
proto.gloo.solo.io.Destination.DestinationTypeCase = {
  DESTINATION_TYPE_NOT_SET: 0,
  UPSTREAM: 10,
  KUBE: 11,
  CONSUL: 12
};

/**
 * @return {proto.gloo.solo.io.Destination.DestinationTypeCase}
 */
proto.gloo.solo.io.Destination.prototype.getDestinationTypeCase = function() {
  return /** @type {proto.gloo.solo.io.Destination.DestinationTypeCase} */(jspb.Message.computeOneofCase(this, proto.gloo.solo.io.Destination.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.Destination.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.Destination.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.Destination} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.Destination.toObject = function(includeInstance, msg) {
  var f, obj = {
    upstream: (f = msg.getUpstream()) && github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.toObject(includeInstance, f),
    kube: (f = msg.getKube()) && proto.gloo.solo.io.KubernetesServiceDestination.toObject(includeInstance, f),
    consul: (f = msg.getConsul()) && proto.gloo.solo.io.ConsulServiceDestination.toObject(includeInstance, f),
    destinationSpec: (f = msg.getDestinationSpec()) && github_com_solo$io_gloo_projects_gloo_api_v1_plugins_pb.DestinationSpec.toObject(includeInstance, f),
    subset: (f = msg.getSubset()) && github_com_solo$io_gloo_projects_gloo_api_v1_subset_pb.Subset.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.Destination}
 */
proto.gloo.solo.io.Destination.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.Destination;
  return proto.gloo.solo.io.Destination.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.Destination} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.Destination}
 */
proto.gloo.solo.io.Destination.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = new github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef;
      reader.readMessage(value,github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.deserializeBinaryFromReader);
      msg.setUpstream(value);
      break;
    case 11:
      var value = new proto.gloo.solo.io.KubernetesServiceDestination;
      reader.readMessage(value,proto.gloo.solo.io.KubernetesServiceDestination.deserializeBinaryFromReader);
      msg.setKube(value);
      break;
    case 12:
      var value = new proto.gloo.solo.io.ConsulServiceDestination;
      reader.readMessage(value,proto.gloo.solo.io.ConsulServiceDestination.deserializeBinaryFromReader);
      msg.setConsul(value);
      break;
    case 2:
      var value = new github_com_solo$io_gloo_projects_gloo_api_v1_plugins_pb.DestinationSpec;
      reader.readMessage(value,github_com_solo$io_gloo_projects_gloo_api_v1_plugins_pb.DestinationSpec.deserializeBinaryFromReader);
      msg.setDestinationSpec(value);
      break;
    case 3:
      var value = new github_com_solo$io_gloo_projects_gloo_api_v1_subset_pb.Subset;
      reader.readMessage(value,github_com_solo$io_gloo_projects_gloo_api_v1_subset_pb.Subset.deserializeBinaryFromReader);
      msg.setSubset(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.Destination.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.Destination.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.Destination} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.Destination.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpstream();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.serializeBinaryToWriter
    );
  }
  f = message.getKube();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.gloo.solo.io.KubernetesServiceDestination.serializeBinaryToWriter
    );
  }
  f = message.getConsul();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.gloo.solo.io.ConsulServiceDestination.serializeBinaryToWriter
    );
  }
  f = message.getDestinationSpec();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      github_com_solo$io_gloo_projects_gloo_api_v1_plugins_pb.DestinationSpec.serializeBinaryToWriter
    );
  }
  f = message.getSubset();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      github_com_solo$io_gloo_projects_gloo_api_v1_subset_pb.Subset.serializeBinaryToWriter
    );
  }
};


/**
 * optional core.solo.io.ResourceRef upstream = 10;
 * @return {?proto.core.solo.io.ResourceRef}
 */
proto.gloo.solo.io.Destination.prototype.getUpstream = function() {
  return /** @type{?proto.core.solo.io.ResourceRef} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef, 10));
};


/** @param {?proto.core.solo.io.ResourceRef|undefined} value */
proto.gloo.solo.io.Destination.prototype.setUpstream = function(value) {
  jspb.Message.setOneofWrapperField(this, 10, proto.gloo.solo.io.Destination.oneofGroups_[0], value);
};


proto.gloo.solo.io.Destination.prototype.clearUpstream = function() {
  this.setUpstream(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.Destination.prototype.hasUpstream = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional KubernetesServiceDestination kube = 11;
 * @return {?proto.gloo.solo.io.KubernetesServiceDestination}
 */
proto.gloo.solo.io.Destination.prototype.getKube = function() {
  return /** @type{?proto.gloo.solo.io.KubernetesServiceDestination} */ (
    jspb.Message.getWrapperField(this, proto.gloo.solo.io.KubernetesServiceDestination, 11));
};


/** @param {?proto.gloo.solo.io.KubernetesServiceDestination|undefined} value */
proto.gloo.solo.io.Destination.prototype.setKube = function(value) {
  jspb.Message.setOneofWrapperField(this, 11, proto.gloo.solo.io.Destination.oneofGroups_[0], value);
};


proto.gloo.solo.io.Destination.prototype.clearKube = function() {
  this.setKube(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.Destination.prototype.hasKube = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional ConsulServiceDestination consul = 12;
 * @return {?proto.gloo.solo.io.ConsulServiceDestination}
 */
proto.gloo.solo.io.Destination.prototype.getConsul = function() {
  return /** @type{?proto.gloo.solo.io.ConsulServiceDestination} */ (
    jspb.Message.getWrapperField(this, proto.gloo.solo.io.ConsulServiceDestination, 12));
};


/** @param {?proto.gloo.solo.io.ConsulServiceDestination|undefined} value */
proto.gloo.solo.io.Destination.prototype.setConsul = function(value) {
  jspb.Message.setOneofWrapperField(this, 12, proto.gloo.solo.io.Destination.oneofGroups_[0], value);
};


proto.gloo.solo.io.Destination.prototype.clearConsul = function() {
  this.setConsul(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.Destination.prototype.hasConsul = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional DestinationSpec destination_spec = 2;
 * @return {?proto.gloo.solo.io.DestinationSpec}
 */
proto.gloo.solo.io.Destination.prototype.getDestinationSpec = function() {
  return /** @type{?proto.gloo.solo.io.DestinationSpec} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_gloo_projects_gloo_api_v1_plugins_pb.DestinationSpec, 2));
};


/** @param {?proto.gloo.solo.io.DestinationSpec|undefined} value */
proto.gloo.solo.io.Destination.prototype.setDestinationSpec = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.gloo.solo.io.Destination.prototype.clearDestinationSpec = function() {
  this.setDestinationSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.Destination.prototype.hasDestinationSpec = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Subset subset = 3;
 * @return {?proto.gloo.solo.io.Subset}
 */
proto.gloo.solo.io.Destination.prototype.getSubset = function() {
  return /** @type{?proto.gloo.solo.io.Subset} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_gloo_projects_gloo_api_v1_subset_pb.Subset, 3));
};


/** @param {?proto.gloo.solo.io.Subset|undefined} value */
proto.gloo.solo.io.Destination.prototype.setSubset = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.gloo.solo.io.Destination.prototype.clearSubset = function() {
  this.setSubset(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.Destination.prototype.hasSubset = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.KubernetesServiceDestination = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gloo.solo.io.KubernetesServiceDestination, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.KubernetesServiceDestination.displayName = 'proto.gloo.solo.io.KubernetesServiceDestination';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.KubernetesServiceDestination.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.KubernetesServiceDestination.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.KubernetesServiceDestination} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.KubernetesServiceDestination.toObject = function(includeInstance, msg) {
  var f, obj = {
    ref: (f = msg.getRef()) && github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.toObject(includeInstance, f),
    port: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.KubernetesServiceDestination}
 */
proto.gloo.solo.io.KubernetesServiceDestination.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.KubernetesServiceDestination;
  return proto.gloo.solo.io.KubernetesServiceDestination.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.KubernetesServiceDestination} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.KubernetesServiceDestination}
 */
proto.gloo.solo.io.KubernetesServiceDestination.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef;
      reader.readMessage(value,github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.deserializeBinaryFromReader);
      msg.setRef(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPort(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.KubernetesServiceDestination.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.KubernetesServiceDestination.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.KubernetesServiceDestination} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.KubernetesServiceDestination.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRef();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.serializeBinaryToWriter
    );
  }
  f = message.getPort();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional core.solo.io.ResourceRef ref = 1;
 * @return {?proto.core.solo.io.ResourceRef}
 */
proto.gloo.solo.io.KubernetesServiceDestination.prototype.getRef = function() {
  return /** @type{?proto.core.solo.io.ResourceRef} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef, 1));
};


/** @param {?proto.core.solo.io.ResourceRef|undefined} value */
proto.gloo.solo.io.KubernetesServiceDestination.prototype.setRef = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.gloo.solo.io.KubernetesServiceDestination.prototype.clearRef = function() {
  this.setRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.KubernetesServiceDestination.prototype.hasRef = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 port = 2;
 * @return {number}
 */
proto.gloo.solo.io.KubernetesServiceDestination.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.gloo.solo.io.KubernetesServiceDestination.prototype.setPort = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.ConsulServiceDestination = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gloo.solo.io.ConsulServiceDestination.repeatedFields_, null);
};
goog.inherits(proto.gloo.solo.io.ConsulServiceDestination, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.ConsulServiceDestination.displayName = 'proto.gloo.solo.io.ConsulServiceDestination';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gloo.solo.io.ConsulServiceDestination.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.ConsulServiceDestination.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.ConsulServiceDestination.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.ConsulServiceDestination} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.ConsulServiceDestination.toObject = function(includeInstance, msg) {
  var f, obj = {
    serviceName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tagsList: jspb.Message.getRepeatedField(msg, 2),
    dataCentersList: jspb.Message.getRepeatedField(msg, 3)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.ConsulServiceDestination}
 */
proto.gloo.solo.io.ConsulServiceDestination.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.ConsulServiceDestination;
  return proto.gloo.solo.io.ConsulServiceDestination.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.ConsulServiceDestination} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.ConsulServiceDestination}
 */
proto.gloo.solo.io.ConsulServiceDestination.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setServiceName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addDataCenters(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.ConsulServiceDestination.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.ConsulServiceDestination.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.ConsulServiceDestination} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.ConsulServiceDestination.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServiceName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getDataCentersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional string service_name = 1;
 * @return {string}
 */
proto.gloo.solo.io.ConsulServiceDestination.prototype.getServiceName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.gloo.solo.io.ConsulServiceDestination.prototype.setServiceName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string tags = 2;
 * @return {!Array<string>}
 */
proto.gloo.solo.io.ConsulServiceDestination.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array<string>} value */
proto.gloo.solo.io.ConsulServiceDestination.prototype.setTagsList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.gloo.solo.io.ConsulServiceDestination.prototype.addTags = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.gloo.solo.io.ConsulServiceDestination.prototype.clearTagsList = function() {
  this.setTagsList([]);
};


/**
 * repeated string data_centers = 3;
 * @return {!Array<string>}
 */
proto.gloo.solo.io.ConsulServiceDestination.prototype.getDataCentersList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array<string>} value */
proto.gloo.solo.io.ConsulServiceDestination.prototype.setDataCentersList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.gloo.solo.io.ConsulServiceDestination.prototype.addDataCenters = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.gloo.solo.io.ConsulServiceDestination.prototype.clearDataCentersList = function() {
  this.setDataCentersList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.UpstreamGroup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gloo.solo.io.UpstreamGroup.repeatedFields_, null);
};
goog.inherits(proto.gloo.solo.io.UpstreamGroup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.UpstreamGroup.displayName = 'proto.gloo.solo.io.UpstreamGroup';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gloo.solo.io.UpstreamGroup.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.UpstreamGroup.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.UpstreamGroup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.UpstreamGroup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.UpstreamGroup.toObject = function(includeInstance, msg) {
  var f, obj = {
    destinationsList: jspb.Message.toObjectList(msg.getDestinationsList(),
    proto.gloo.solo.io.WeightedDestination.toObject, includeInstance),
    status: (f = msg.getStatus()) && github_com_solo$io_solo$kit_api_v1_status_pb.Status.toObject(includeInstance, f),
    metadata: (f = msg.getMetadata()) && github_com_solo$io_solo$kit_api_v1_metadata_pb.Metadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.UpstreamGroup}
 */
proto.gloo.solo.io.UpstreamGroup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.UpstreamGroup;
  return proto.gloo.solo.io.UpstreamGroup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.UpstreamGroup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.UpstreamGroup}
 */
proto.gloo.solo.io.UpstreamGroup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gloo.solo.io.WeightedDestination;
      reader.readMessage(value,proto.gloo.solo.io.WeightedDestination.deserializeBinaryFromReader);
      msg.addDestinations(value);
      break;
    case 6:
      var value = new github_com_solo$io_solo$kit_api_v1_status_pb.Status;
      reader.readMessage(value,github_com_solo$io_solo$kit_api_v1_status_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 7:
      var value = new github_com_solo$io_solo$kit_api_v1_metadata_pb.Metadata;
      reader.readMessage(value,github_com_solo$io_solo$kit_api_v1_metadata_pb.Metadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.UpstreamGroup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.UpstreamGroup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.UpstreamGroup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.UpstreamGroup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDestinationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.gloo.solo.io.WeightedDestination.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      github_com_solo$io_solo$kit_api_v1_status_pb.Status.serializeBinaryToWriter
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      github_com_solo$io_solo$kit_api_v1_metadata_pb.Metadata.serializeBinaryToWriter
    );
  }
};


/**
 * repeated WeightedDestination destinations = 1;
 * @return {!Array<!proto.gloo.solo.io.WeightedDestination>}
 */
proto.gloo.solo.io.UpstreamGroup.prototype.getDestinationsList = function() {
  return /** @type{!Array<!proto.gloo.solo.io.WeightedDestination>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gloo.solo.io.WeightedDestination, 1));
};


/** @param {!Array<!proto.gloo.solo.io.WeightedDestination>} value */
proto.gloo.solo.io.UpstreamGroup.prototype.setDestinationsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.gloo.solo.io.WeightedDestination=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gloo.solo.io.WeightedDestination}
 */
proto.gloo.solo.io.UpstreamGroup.prototype.addDestinations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.gloo.solo.io.WeightedDestination, opt_index);
};


proto.gloo.solo.io.UpstreamGroup.prototype.clearDestinationsList = function() {
  this.setDestinationsList([]);
};


/**
 * optional core.solo.io.Status status = 6;
 * @return {?proto.core.solo.io.Status}
 */
proto.gloo.solo.io.UpstreamGroup.prototype.getStatus = function() {
  return /** @type{?proto.core.solo.io.Status} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$kit_api_v1_status_pb.Status, 6));
};


/** @param {?proto.core.solo.io.Status|undefined} value */
proto.gloo.solo.io.UpstreamGroup.prototype.setStatus = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.gloo.solo.io.UpstreamGroup.prototype.clearStatus = function() {
  this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.UpstreamGroup.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional core.solo.io.Metadata metadata = 7;
 * @return {?proto.core.solo.io.Metadata}
 */
proto.gloo.solo.io.UpstreamGroup.prototype.getMetadata = function() {
  return /** @type{?proto.core.solo.io.Metadata} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$kit_api_v1_metadata_pb.Metadata, 7));
};


/** @param {?proto.core.solo.io.Metadata|undefined} value */
proto.gloo.solo.io.UpstreamGroup.prototype.setMetadata = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.gloo.solo.io.UpstreamGroup.prototype.clearMetadata = function() {
  this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.UpstreamGroup.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.MultiDestination = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gloo.solo.io.MultiDestination.repeatedFields_, null);
};
goog.inherits(proto.gloo.solo.io.MultiDestination, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.MultiDestination.displayName = 'proto.gloo.solo.io.MultiDestination';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gloo.solo.io.MultiDestination.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.MultiDestination.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.MultiDestination.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.MultiDestination} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.MultiDestination.toObject = function(includeInstance, msg) {
  var f, obj = {
    destinationsList: jspb.Message.toObjectList(msg.getDestinationsList(),
    proto.gloo.solo.io.WeightedDestination.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.MultiDestination}
 */
proto.gloo.solo.io.MultiDestination.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.MultiDestination;
  return proto.gloo.solo.io.MultiDestination.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.MultiDestination} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.MultiDestination}
 */
proto.gloo.solo.io.MultiDestination.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gloo.solo.io.WeightedDestination;
      reader.readMessage(value,proto.gloo.solo.io.WeightedDestination.deserializeBinaryFromReader);
      msg.addDestinations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.MultiDestination.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.MultiDestination.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.MultiDestination} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.MultiDestination.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDestinationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.gloo.solo.io.WeightedDestination.serializeBinaryToWriter
    );
  }
};


/**
 * repeated WeightedDestination destinations = 1;
 * @return {!Array<!proto.gloo.solo.io.WeightedDestination>}
 */
proto.gloo.solo.io.MultiDestination.prototype.getDestinationsList = function() {
  return /** @type{!Array<!proto.gloo.solo.io.WeightedDestination>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gloo.solo.io.WeightedDestination, 1));
};


/** @param {!Array<!proto.gloo.solo.io.WeightedDestination>} value */
proto.gloo.solo.io.MultiDestination.prototype.setDestinationsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.gloo.solo.io.WeightedDestination=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gloo.solo.io.WeightedDestination}
 */
proto.gloo.solo.io.MultiDestination.prototype.addDestinations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.gloo.solo.io.WeightedDestination, opt_index);
};


proto.gloo.solo.io.MultiDestination.prototype.clearDestinationsList = function() {
  this.setDestinationsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.WeightedDestination = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gloo.solo.io.WeightedDestination, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.WeightedDestination.displayName = 'proto.gloo.solo.io.WeightedDestination';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.WeightedDestination.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.WeightedDestination.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.WeightedDestination} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.WeightedDestination.toObject = function(includeInstance, msg) {
  var f, obj = {
    destination: (f = msg.getDestination()) && proto.gloo.solo.io.Destination.toObject(includeInstance, f),
    weight: jspb.Message.getFieldWithDefault(msg, 2, 0),
    weighedDestinationPlugins: (f = msg.getWeighedDestinationPlugins()) && github_com_solo$io_gloo_projects_gloo_api_v1_plugins_pb.WeightedDestinationPlugins.toObject(includeInstance, f),
    weightedDestinationPlugins: (f = msg.getWeightedDestinationPlugins()) && github_com_solo$io_gloo_projects_gloo_api_v1_plugins_pb.WeightedDestinationPlugins.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.WeightedDestination}
 */
proto.gloo.solo.io.WeightedDestination.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.WeightedDestination;
  return proto.gloo.solo.io.WeightedDestination.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.WeightedDestination} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.WeightedDestination}
 */
proto.gloo.solo.io.WeightedDestination.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gloo.solo.io.Destination;
      reader.readMessage(value,proto.gloo.solo.io.Destination.deserializeBinaryFromReader);
      msg.setDestination(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setWeight(value);
      break;
    case 3:
      var value = new github_com_solo$io_gloo_projects_gloo_api_v1_plugins_pb.WeightedDestinationPlugins;
      reader.readMessage(value,github_com_solo$io_gloo_projects_gloo_api_v1_plugins_pb.WeightedDestinationPlugins.deserializeBinaryFromReader);
      msg.setWeighedDestinationPlugins(value);
      break;
    case 4:
      var value = new github_com_solo$io_gloo_projects_gloo_api_v1_plugins_pb.WeightedDestinationPlugins;
      reader.readMessage(value,github_com_solo$io_gloo_projects_gloo_api_v1_plugins_pb.WeightedDestinationPlugins.deserializeBinaryFromReader);
      msg.setWeightedDestinationPlugins(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.WeightedDestination.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.WeightedDestination.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.WeightedDestination} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.WeightedDestination.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDestination();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.gloo.solo.io.Destination.serializeBinaryToWriter
    );
  }
  f = message.getWeight();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getWeighedDestinationPlugins();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      github_com_solo$io_gloo_projects_gloo_api_v1_plugins_pb.WeightedDestinationPlugins.serializeBinaryToWriter
    );
  }
  f = message.getWeightedDestinationPlugins();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      github_com_solo$io_gloo_projects_gloo_api_v1_plugins_pb.WeightedDestinationPlugins.serializeBinaryToWriter
    );
  }
};


/**
 * optional Destination destination = 1;
 * @return {?proto.gloo.solo.io.Destination}
 */
proto.gloo.solo.io.WeightedDestination.prototype.getDestination = function() {
  return /** @type{?proto.gloo.solo.io.Destination} */ (
    jspb.Message.getWrapperField(this, proto.gloo.solo.io.Destination, 1));
};


/** @param {?proto.gloo.solo.io.Destination|undefined} value */
proto.gloo.solo.io.WeightedDestination.prototype.setDestination = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.gloo.solo.io.WeightedDestination.prototype.clearDestination = function() {
  this.setDestination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.WeightedDestination.prototype.hasDestination = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 weight = 2;
 * @return {number}
 */
proto.gloo.solo.io.WeightedDestination.prototype.getWeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.gloo.solo.io.WeightedDestination.prototype.setWeight = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional WeightedDestinationPlugins weighed_destination_plugins = 3;
 * @return {?proto.gloo.solo.io.WeightedDestinationPlugins}
 */
proto.gloo.solo.io.WeightedDestination.prototype.getWeighedDestinationPlugins = function() {
  return /** @type{?proto.gloo.solo.io.WeightedDestinationPlugins} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_gloo_projects_gloo_api_v1_plugins_pb.WeightedDestinationPlugins, 3));
};


/** @param {?proto.gloo.solo.io.WeightedDestinationPlugins|undefined} value */
proto.gloo.solo.io.WeightedDestination.prototype.setWeighedDestinationPlugins = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.gloo.solo.io.WeightedDestination.prototype.clearWeighedDestinationPlugins = function() {
  this.setWeighedDestinationPlugins(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.WeightedDestination.prototype.hasWeighedDestinationPlugins = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional WeightedDestinationPlugins weighted_destination_plugins = 4;
 * @return {?proto.gloo.solo.io.WeightedDestinationPlugins}
 */
proto.gloo.solo.io.WeightedDestination.prototype.getWeightedDestinationPlugins = function() {
  return /** @type{?proto.gloo.solo.io.WeightedDestinationPlugins} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_gloo_projects_gloo_api_v1_plugins_pb.WeightedDestinationPlugins, 4));
};


/** @param {?proto.gloo.solo.io.WeightedDestinationPlugins|undefined} value */
proto.gloo.solo.io.WeightedDestination.prototype.setWeightedDestinationPlugins = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.gloo.solo.io.WeightedDestination.prototype.clearWeightedDestinationPlugins = function() {
  this.setWeightedDestinationPlugins(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.WeightedDestination.prototype.hasWeightedDestinationPlugins = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.RedirectAction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.gloo.solo.io.RedirectAction.oneofGroups_);
};
goog.inherits(proto.gloo.solo.io.RedirectAction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.RedirectAction.displayName = 'proto.gloo.solo.io.RedirectAction';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.gloo.solo.io.RedirectAction.oneofGroups_ = [[2,5]];

/**
 * @enum {number}
 */
proto.gloo.solo.io.RedirectAction.PathRewriteSpecifierCase = {
  PATH_REWRITE_SPECIFIER_NOT_SET: 0,
  PATH_REDIRECT: 2,
  PREFIX_REWRITE: 5
};

/**
 * @return {proto.gloo.solo.io.RedirectAction.PathRewriteSpecifierCase}
 */
proto.gloo.solo.io.RedirectAction.prototype.getPathRewriteSpecifierCase = function() {
  return /** @type {proto.gloo.solo.io.RedirectAction.PathRewriteSpecifierCase} */(jspb.Message.computeOneofCase(this, proto.gloo.solo.io.RedirectAction.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.RedirectAction.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.RedirectAction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.RedirectAction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.RedirectAction.toObject = function(includeInstance, msg) {
  var f, obj = {
    hostRedirect: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pathRedirect: jspb.Message.getFieldWithDefault(msg, 2, ""),
    prefixRewrite: jspb.Message.getFieldWithDefault(msg, 5, ""),
    responseCode: jspb.Message.getFieldWithDefault(msg, 3, 0),
    httpsRedirect: jspb.Message.getFieldWithDefault(msg, 4, false),
    stripQuery: jspb.Message.getFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.RedirectAction}
 */
proto.gloo.solo.io.RedirectAction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.RedirectAction;
  return proto.gloo.solo.io.RedirectAction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.RedirectAction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.RedirectAction}
 */
proto.gloo.solo.io.RedirectAction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHostRedirect(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPathRedirect(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrefixRewrite(value);
      break;
    case 3:
      var value = /** @type {!proto.gloo.solo.io.RedirectAction.RedirectResponseCode} */ (reader.readEnum());
      msg.setResponseCode(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHttpsRedirect(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStripQuery(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.RedirectAction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.RedirectAction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.RedirectAction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.RedirectAction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHostRedirect();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getResponseCode();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getHttpsRedirect();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getStripQuery();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.gloo.solo.io.RedirectAction.RedirectResponseCode = {
  MOVED_PERMANENTLY: 0,
  FOUND: 1,
  SEE_OTHER: 2,
  TEMPORARY_REDIRECT: 3,
  PERMANENT_REDIRECT: 4
};

/**
 * optional string host_redirect = 1;
 * @return {string}
 */
proto.gloo.solo.io.RedirectAction.prototype.getHostRedirect = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.gloo.solo.io.RedirectAction.prototype.setHostRedirect = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string path_redirect = 2;
 * @return {string}
 */
proto.gloo.solo.io.RedirectAction.prototype.getPathRedirect = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.gloo.solo.io.RedirectAction.prototype.setPathRedirect = function(value) {
  jspb.Message.setOneofField(this, 2, proto.gloo.solo.io.RedirectAction.oneofGroups_[0], value);
};


proto.gloo.solo.io.RedirectAction.prototype.clearPathRedirect = function() {
  jspb.Message.setOneofField(this, 2, proto.gloo.solo.io.RedirectAction.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.RedirectAction.prototype.hasPathRedirect = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string prefix_rewrite = 5;
 * @return {string}
 */
proto.gloo.solo.io.RedirectAction.prototype.getPrefixRewrite = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.gloo.solo.io.RedirectAction.prototype.setPrefixRewrite = function(value) {
  jspb.Message.setOneofField(this, 5, proto.gloo.solo.io.RedirectAction.oneofGroups_[0], value);
};


proto.gloo.solo.io.RedirectAction.prototype.clearPrefixRewrite = function() {
  jspb.Message.setOneofField(this, 5, proto.gloo.solo.io.RedirectAction.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.RedirectAction.prototype.hasPrefixRewrite = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional RedirectResponseCode response_code = 3;
 * @return {!proto.gloo.solo.io.RedirectAction.RedirectResponseCode}
 */
proto.gloo.solo.io.RedirectAction.prototype.getResponseCode = function() {
  return /** @type {!proto.gloo.solo.io.RedirectAction.RedirectResponseCode} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.gloo.solo.io.RedirectAction.RedirectResponseCode} value */
proto.gloo.solo.io.RedirectAction.prototype.setResponseCode = function(value) {
  jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional bool https_redirect = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.gloo.solo.io.RedirectAction.prototype.getHttpsRedirect = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.gloo.solo.io.RedirectAction.prototype.setHttpsRedirect = function(value) {
  jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool strip_query = 6;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.gloo.solo.io.RedirectAction.prototype.getStripQuery = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));
};


/** @param {boolean} value */
proto.gloo.solo.io.RedirectAction.prototype.setStripQuery = function(value) {
  jspb.Message.setProto3BooleanField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.DirectResponseAction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gloo.solo.io.DirectResponseAction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.DirectResponseAction.displayName = 'proto.gloo.solo.io.DirectResponseAction';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.DirectResponseAction.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.DirectResponseAction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.DirectResponseAction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.DirectResponseAction.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    body: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.DirectResponseAction}
 */
proto.gloo.solo.io.DirectResponseAction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.DirectResponseAction;
  return proto.gloo.solo.io.DirectResponseAction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.DirectResponseAction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.DirectResponseAction}
 */
proto.gloo.solo.io.DirectResponseAction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBody(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.DirectResponseAction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.DirectResponseAction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.DirectResponseAction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.DirectResponseAction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getBody();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint32 status = 1;
 * @return {number}
 */
proto.gloo.solo.io.DirectResponseAction.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.gloo.solo.io.DirectResponseAction.prototype.setStatus = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string body = 2;
 * @return {string}
 */
proto.gloo.solo.io.DirectResponseAction.prototype.getBody = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.gloo.solo.io.DirectResponseAction.prototype.setBody = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.CorsPolicy = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gloo.solo.io.CorsPolicy.repeatedFields_, null);
};
goog.inherits(proto.gloo.solo.io.CorsPolicy, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.CorsPolicy.displayName = 'proto.gloo.solo.io.CorsPolicy';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gloo.solo.io.CorsPolicy.repeatedFields_ = [1,2,3,4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.CorsPolicy.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.CorsPolicy.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.CorsPolicy} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.CorsPolicy.toObject = function(includeInstance, msg) {
  var f, obj = {
    allowOriginList: jspb.Message.getRepeatedField(msg, 1),
    allowOriginRegexList: jspb.Message.getRepeatedField(msg, 2),
    allowMethodsList: jspb.Message.getRepeatedField(msg, 3),
    allowHeadersList: jspb.Message.getRepeatedField(msg, 4),
    exposeHeadersList: jspb.Message.getRepeatedField(msg, 5),
    maxAge: jspb.Message.getFieldWithDefault(msg, 6, ""),
    allowCredentials: jspb.Message.getFieldWithDefault(msg, 7, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.CorsPolicy}
 */
proto.gloo.solo.io.CorsPolicy.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.CorsPolicy;
  return proto.gloo.solo.io.CorsPolicy.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.CorsPolicy} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.CorsPolicy}
 */
proto.gloo.solo.io.CorsPolicy.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addAllowOrigin(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addAllowOriginRegex(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addAllowMethods(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addAllowHeaders(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addExposeHeaders(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setMaxAge(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowCredentials(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.CorsPolicy.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.CorsPolicy.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.CorsPolicy} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.CorsPolicy.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAllowOriginList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getAllowOriginRegexList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getAllowMethodsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getAllowHeadersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getExposeHeadersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getMaxAge();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAllowCredentials();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * repeated string allow_origin = 1;
 * @return {!Array<string>}
 */
proto.gloo.solo.io.CorsPolicy.prototype.getAllowOriginList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array<string>} value */
proto.gloo.solo.io.CorsPolicy.prototype.setAllowOriginList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.gloo.solo.io.CorsPolicy.prototype.addAllowOrigin = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.gloo.solo.io.CorsPolicy.prototype.clearAllowOriginList = function() {
  this.setAllowOriginList([]);
};


/**
 * repeated string allow_origin_regex = 2;
 * @return {!Array<string>}
 */
proto.gloo.solo.io.CorsPolicy.prototype.getAllowOriginRegexList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array<string>} value */
proto.gloo.solo.io.CorsPolicy.prototype.setAllowOriginRegexList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.gloo.solo.io.CorsPolicy.prototype.addAllowOriginRegex = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.gloo.solo.io.CorsPolicy.prototype.clearAllowOriginRegexList = function() {
  this.setAllowOriginRegexList([]);
};


/**
 * repeated string allow_methods = 3;
 * @return {!Array<string>}
 */
proto.gloo.solo.io.CorsPolicy.prototype.getAllowMethodsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array<string>} value */
proto.gloo.solo.io.CorsPolicy.prototype.setAllowMethodsList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.gloo.solo.io.CorsPolicy.prototype.addAllowMethods = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.gloo.solo.io.CorsPolicy.prototype.clearAllowMethodsList = function() {
  this.setAllowMethodsList([]);
};


/**
 * repeated string allow_headers = 4;
 * @return {!Array<string>}
 */
proto.gloo.solo.io.CorsPolicy.prototype.getAllowHeadersList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/** @param {!Array<string>} value */
proto.gloo.solo.io.CorsPolicy.prototype.setAllowHeadersList = function(value) {
  jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.gloo.solo.io.CorsPolicy.prototype.addAllowHeaders = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


proto.gloo.solo.io.CorsPolicy.prototype.clearAllowHeadersList = function() {
  this.setAllowHeadersList([]);
};


/**
 * repeated string expose_headers = 5;
 * @return {!Array<string>}
 */
proto.gloo.solo.io.CorsPolicy.prototype.getExposeHeadersList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/** @param {!Array<string>} value */
proto.gloo.solo.io.CorsPolicy.prototype.setExposeHeadersList = function(value) {
  jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.gloo.solo.io.CorsPolicy.prototype.addExposeHeaders = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


proto.gloo.solo.io.CorsPolicy.prototype.clearExposeHeadersList = function() {
  this.setExposeHeadersList([]);
};


/**
 * optional string max_age = 6;
 * @return {string}
 */
proto.gloo.solo.io.CorsPolicy.prototype.getMaxAge = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.gloo.solo.io.CorsPolicy.prototype.setMaxAge = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional bool allow_credentials = 7;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.gloo.solo.io.CorsPolicy.prototype.getAllowCredentials = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 7, false));
};


/** @param {boolean} value */
proto.gloo.solo.io.CorsPolicy.prototype.setAllowCredentials = function(value) {
  jspb.Message.setProto3BooleanField(this, 7, value);
};


goog.object.extend(exports, proto.gloo.solo.io);
