/* eslint-disable */
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var dev$portal_api_dev$portal_v1_common_pb = require('../../../../dev-portal/api/dev-portal/v1/common_pb.js');
var gogoproto_gogo_pb = require('../../../../gogoproto/gogo_pb.js');
var extproto_ext_pb = require('../../../../protoc-gen-ext/extproto/ext_pb.js');
goog.exportSymbol('proto.devportal.solo.io.AccessLevel', null, global);
goog.exportSymbol('proto.devportal.solo.io.AccessLevelStatus', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.devportal.solo.io.AccessLevel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.devportal.solo.io.AccessLevel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.devportal.solo.io.AccessLevel.displayName = 'proto.devportal.solo.io.AccessLevel';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.devportal.solo.io.AccessLevel.prototype.toObject = function(opt_includeInstance) {
  return proto.devportal.solo.io.AccessLevel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.devportal.solo.io.AccessLevel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.devportal.solo.io.AccessLevel.toObject = function(includeInstance, msg) {
  var f, obj = {
    portalSelector: (f = msg.getPortalSelector()) && dev$portal_api_dev$portal_v1_common_pb.Selector.toObject(includeInstance, f),
    apiDocSelector: (f = msg.getApiDocSelector()) && dev$portal_api_dev$portal_v1_common_pb.Selector.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.devportal.solo.io.AccessLevel}
 */
proto.devportal.solo.io.AccessLevel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.devportal.solo.io.AccessLevel;
  return proto.devportal.solo.io.AccessLevel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.devportal.solo.io.AccessLevel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.devportal.solo.io.AccessLevel}
 */
proto.devportal.solo.io.AccessLevel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new dev$portal_api_dev$portal_v1_common_pb.Selector;
      reader.readMessage(value,dev$portal_api_dev$portal_v1_common_pb.Selector.deserializeBinaryFromReader);
      msg.setPortalSelector(value);
      break;
    case 3:
      var value = new dev$portal_api_dev$portal_v1_common_pb.Selector;
      reader.readMessage(value,dev$portal_api_dev$portal_v1_common_pb.Selector.deserializeBinaryFromReader);
      msg.setApiDocSelector(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.devportal.solo.io.AccessLevel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.devportal.solo.io.AccessLevel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.devportal.solo.io.AccessLevel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.devportal.solo.io.AccessLevel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPortalSelector();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      dev$portal_api_dev$portal_v1_common_pb.Selector.serializeBinaryToWriter
    );
  }
  f = message.getApiDocSelector();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      dev$portal_api_dev$portal_v1_common_pb.Selector.serializeBinaryToWriter
    );
  }
};


/**
 * optional Selector portal_selector = 2;
 * @return {?proto.devportal.solo.io.Selector}
 */
proto.devportal.solo.io.AccessLevel.prototype.getPortalSelector = function() {
  return /** @type{?proto.devportal.solo.io.Selector} */ (
    jspb.Message.getWrapperField(this, dev$portal_api_dev$portal_v1_common_pb.Selector, 2));
};


/** @param {?proto.devportal.solo.io.Selector|undefined} value */
proto.devportal.solo.io.AccessLevel.prototype.setPortalSelector = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.devportal.solo.io.AccessLevel.prototype.clearPortalSelector = function() {
  this.setPortalSelector(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.devportal.solo.io.AccessLevel.prototype.hasPortalSelector = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Selector api_doc_selector = 3;
 * @return {?proto.devportal.solo.io.Selector}
 */
proto.devportal.solo.io.AccessLevel.prototype.getApiDocSelector = function() {
  return /** @type{?proto.devportal.solo.io.Selector} */ (
    jspb.Message.getWrapperField(this, dev$portal_api_dev$portal_v1_common_pb.Selector, 3));
};


/** @param {?proto.devportal.solo.io.Selector|undefined} value */
proto.devportal.solo.io.AccessLevel.prototype.setApiDocSelector = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.devportal.solo.io.AccessLevel.prototype.clearApiDocSelector = function() {
  this.setApiDocSelector(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.devportal.solo.io.AccessLevel.prototype.hasApiDocSelector = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.devportal.solo.io.AccessLevelStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.devportal.solo.io.AccessLevelStatus.repeatedFields_, null);
};
goog.inherits(proto.devportal.solo.io.AccessLevelStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.devportal.solo.io.AccessLevelStatus.displayName = 'proto.devportal.solo.io.AccessLevelStatus';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.devportal.solo.io.AccessLevelStatus.repeatedFields_ = [3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.devportal.solo.io.AccessLevelStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.devportal.solo.io.AccessLevelStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.devportal.solo.io.AccessLevelStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.devportal.solo.io.AccessLevelStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    portalsList: jspb.Message.toObjectList(msg.getPortalsList(),
    dev$portal_api_dev$portal_v1_common_pb.ObjectRef.toObject, includeInstance),
    apiDocsList: jspb.Message.toObjectList(msg.getApiDocsList(),
    dev$portal_api_dev$portal_v1_common_pb.ObjectRef.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.devportal.solo.io.AccessLevelStatus}
 */
proto.devportal.solo.io.AccessLevelStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.devportal.solo.io.AccessLevelStatus;
  return proto.devportal.solo.io.AccessLevelStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.devportal.solo.io.AccessLevelStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.devportal.solo.io.AccessLevelStatus}
 */
proto.devportal.solo.io.AccessLevelStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = new dev$portal_api_dev$portal_v1_common_pb.ObjectRef;
      reader.readMessage(value,dev$portal_api_dev$portal_v1_common_pb.ObjectRef.deserializeBinaryFromReader);
      msg.addPortals(value);
      break;
    case 4:
      var value = new dev$portal_api_dev$portal_v1_common_pb.ObjectRef;
      reader.readMessage(value,dev$portal_api_dev$portal_v1_common_pb.ObjectRef.deserializeBinaryFromReader);
      msg.addApiDocs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.devportal.solo.io.AccessLevelStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.devportal.solo.io.AccessLevelStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.devportal.solo.io.AccessLevelStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.devportal.solo.io.AccessLevelStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPortalsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      dev$portal_api_dev$portal_v1_common_pb.ObjectRef.serializeBinaryToWriter
    );
  }
  f = message.getApiDocsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      dev$portal_api_dev$portal_v1_common_pb.ObjectRef.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ObjectRef portals = 3;
 * @return {!Array<!proto.devportal.solo.io.ObjectRef>}
 */
proto.devportal.solo.io.AccessLevelStatus.prototype.getPortalsList = function() {
  return /** @type{!Array<!proto.devportal.solo.io.ObjectRef>} */ (
    jspb.Message.getRepeatedWrapperField(this, dev$portal_api_dev$portal_v1_common_pb.ObjectRef, 3));
};


/** @param {!Array<!proto.devportal.solo.io.ObjectRef>} value */
proto.devportal.solo.io.AccessLevelStatus.prototype.setPortalsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.devportal.solo.io.ObjectRef=} opt_value
 * @param {number=} opt_index
 * @return {!proto.devportal.solo.io.ObjectRef}
 */
proto.devportal.solo.io.AccessLevelStatus.prototype.addPortals = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.devportal.solo.io.ObjectRef, opt_index);
};


proto.devportal.solo.io.AccessLevelStatus.prototype.clearPortalsList = function() {
  this.setPortalsList([]);
};


/**
 * repeated ObjectRef api_docs = 4;
 * @return {!Array<!proto.devportal.solo.io.ObjectRef>}
 */
proto.devportal.solo.io.AccessLevelStatus.prototype.getApiDocsList = function() {
  return /** @type{!Array<!proto.devportal.solo.io.ObjectRef>} */ (
    jspb.Message.getRepeatedWrapperField(this, dev$portal_api_dev$portal_v1_common_pb.ObjectRef, 4));
};


/** @param {!Array<!proto.devportal.solo.io.ObjectRef>} value */
proto.devportal.solo.io.AccessLevelStatus.prototype.setApiDocsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.devportal.solo.io.ObjectRef=} opt_value
 * @param {number=} opt_index
 * @return {!proto.devportal.solo.io.ObjectRef}
 */
proto.devportal.solo.io.AccessLevelStatus.prototype.addApiDocs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.devportal.solo.io.ObjectRef, opt_index);
};


proto.devportal.solo.io.AccessLevelStatus.prototype.clearApiDocsList = function() {
  this.setApiDocsList([]);
};


goog.object.extend(exports, proto.devportal.solo.io);
