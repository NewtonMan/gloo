/* eslint-disable */
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var dev$portal_api_dev$portal_v1_common_pb = require('../../../../dev-portal/api/dev-portal/v1/common_pb.js');
var dev$portal_api_dev$portal_v1_access_level_pb = require('../../../../dev-portal/api/dev-portal/v1/access_level_pb.js');
var gogoproto_gogo_pb = require('../../../../gogoproto/gogo_pb.js');
var extproto_ext_pb = require('../../../../protoc-gen-ext/extproto/ext_pb.js');
goog.exportSymbol('proto.devportal.solo.io.GroupSpec', null, global);
goog.exportSymbol('proto.devportal.solo.io.GroupStatus', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.devportal.solo.io.GroupSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.devportal.solo.io.GroupSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.devportal.solo.io.GroupSpec.displayName = 'proto.devportal.solo.io.GroupSpec';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.devportal.solo.io.GroupSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.devportal.solo.io.GroupSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.devportal.solo.io.GroupSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.devportal.solo.io.GroupSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    displayName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    userLabels: (f = msg.getUserLabels()) && dev$portal_api_dev$portal_v1_common_pb.Selector.toObject(includeInstance, f),
    accessLevel: (f = msg.getAccessLevel()) && dev$portal_api_dev$portal_v1_access_level_pb.AccessLevel.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.devportal.solo.io.GroupSpec}
 */
proto.devportal.solo.io.GroupSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.devportal.solo.io.GroupSpec;
  return proto.devportal.solo.io.GroupSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.devportal.solo.io.GroupSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.devportal.solo.io.GroupSpec}
 */
proto.devportal.solo.io.GroupSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = new dev$portal_api_dev$portal_v1_common_pb.Selector;
      reader.readMessage(value,dev$portal_api_dev$portal_v1_common_pb.Selector.deserializeBinaryFromReader);
      msg.setUserLabels(value);
      break;
    case 4:
      var value = new dev$portal_api_dev$portal_v1_access_level_pb.AccessLevel;
      reader.readMessage(value,dev$portal_api_dev$portal_v1_access_level_pb.AccessLevel.deserializeBinaryFromReader);
      msg.setAccessLevel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.devportal.solo.io.GroupSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.devportal.solo.io.GroupSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.devportal.solo.io.GroupSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.devportal.solo.io.GroupSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDisplayName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUserLabels();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      dev$portal_api_dev$portal_v1_common_pb.Selector.serializeBinaryToWriter
    );
  }
  f = message.getAccessLevel();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      dev$portal_api_dev$portal_v1_access_level_pb.AccessLevel.serializeBinaryToWriter
    );
  }
};


/**
 * optional string display_name = 1;
 * @return {string}
 */
proto.devportal.solo.io.GroupSpec.prototype.getDisplayName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.devportal.solo.io.GroupSpec.prototype.setDisplayName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.devportal.solo.io.GroupSpec.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.devportal.solo.io.GroupSpec.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Selector user_labels = 3;
 * @return {?proto.devportal.solo.io.Selector}
 */
proto.devportal.solo.io.GroupSpec.prototype.getUserLabels = function() {
  return /** @type{?proto.devportal.solo.io.Selector} */ (
    jspb.Message.getWrapperField(this, dev$portal_api_dev$portal_v1_common_pb.Selector, 3));
};


/** @param {?proto.devportal.solo.io.Selector|undefined} value */
proto.devportal.solo.io.GroupSpec.prototype.setUserLabels = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.devportal.solo.io.GroupSpec.prototype.clearUserLabels = function() {
  this.setUserLabels(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.devportal.solo.io.GroupSpec.prototype.hasUserLabels = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional AccessLevel access_level = 4;
 * @return {?proto.devportal.solo.io.AccessLevel}
 */
proto.devportal.solo.io.GroupSpec.prototype.getAccessLevel = function() {
  return /** @type{?proto.devportal.solo.io.AccessLevel} */ (
    jspb.Message.getWrapperField(this, dev$portal_api_dev$portal_v1_access_level_pb.AccessLevel, 4));
};


/** @param {?proto.devportal.solo.io.AccessLevel|undefined} value */
proto.devportal.solo.io.GroupSpec.prototype.setAccessLevel = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.devportal.solo.io.GroupSpec.prototype.clearAccessLevel = function() {
  this.setAccessLevel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.devportal.solo.io.GroupSpec.prototype.hasAccessLevel = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.devportal.solo.io.GroupStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.devportal.solo.io.GroupStatus.repeatedFields_, null);
};
goog.inherits(proto.devportal.solo.io.GroupStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.devportal.solo.io.GroupStatus.displayName = 'proto.devportal.solo.io.GroupStatus';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.devportal.solo.io.GroupStatus.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.devportal.solo.io.GroupStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.devportal.solo.io.GroupStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.devportal.solo.io.GroupStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.devportal.solo.io.GroupStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    observedGeneration: jspb.Message.getFieldWithDefault(msg, 1, 0),
    usersList: jspb.Message.getRepeatedField(msg, 2),
    accessLevel: (f = msg.getAccessLevel()) && dev$portal_api_dev$portal_v1_access_level_pb.AccessLevelStatus.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.devportal.solo.io.GroupStatus}
 */
proto.devportal.solo.io.GroupStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.devportal.solo.io.GroupStatus;
  return proto.devportal.solo.io.GroupStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.devportal.solo.io.GroupStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.devportal.solo.io.GroupStatus}
 */
proto.devportal.solo.io.GroupStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setObservedGeneration(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addUsers(value);
      break;
    case 3:
      var value = new dev$portal_api_dev$portal_v1_access_level_pb.AccessLevelStatus;
      reader.readMessage(value,dev$portal_api_dev$portal_v1_access_level_pb.AccessLevelStatus.deserializeBinaryFromReader);
      msg.setAccessLevel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.devportal.solo.io.GroupStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.devportal.solo.io.GroupStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.devportal.solo.io.GroupStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.devportal.solo.io.GroupStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObservedGeneration();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getUsersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getAccessLevel();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      dev$portal_api_dev$portal_v1_access_level_pb.AccessLevelStatus.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 observed_generation = 1;
 * @return {number}
 */
proto.devportal.solo.io.GroupStatus.prototype.getObservedGeneration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.devportal.solo.io.GroupStatus.prototype.setObservedGeneration = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated string users = 2;
 * @return {!Array<string>}
 */
proto.devportal.solo.io.GroupStatus.prototype.getUsersList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array<string>} value */
proto.devportal.solo.io.GroupStatus.prototype.setUsersList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.devportal.solo.io.GroupStatus.prototype.addUsers = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.devportal.solo.io.GroupStatus.prototype.clearUsersList = function() {
  this.setUsersList([]);
};


/**
 * optional AccessLevelStatus access_level = 3;
 * @return {?proto.devportal.solo.io.AccessLevelStatus}
 */
proto.devportal.solo.io.GroupStatus.prototype.getAccessLevel = function() {
  return /** @type{?proto.devportal.solo.io.AccessLevelStatus} */ (
    jspb.Message.getWrapperField(this, dev$portal_api_dev$portal_v1_access_level_pb.AccessLevelStatus, 3));
};


/** @param {?proto.devportal.solo.io.AccessLevelStatus|undefined} value */
proto.devportal.solo.io.GroupStatus.prototype.setAccessLevel = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.devportal.solo.io.GroupStatus.prototype.clearAccessLevel = function() {
  this.setAccessLevel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.devportal.solo.io.GroupStatus.prototype.hasAccessLevel = function() {
  return jspb.Message.getField(this, 3) != null;
};


goog.object.extend(exports, proto.devportal.solo.io);
