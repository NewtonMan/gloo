/* eslint-disable */
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
var dev$portal_api_dev$portal_v1_common_pb = require('../../../../dev-portal/api/dev-portal/v1/common_pb.js');
var gogoproto_gogo_pb = require('../../../../gogoproto/gogo_pb.js');
var extproto_ext_pb = require('../../../../protoc-gen-ext/extproto/ext_pb.js');
goog.exportSymbol('proto.devportal.solo.io.CustomStyling', null, global);
goog.exportSymbol('proto.devportal.solo.io.KeyScope', null, global);
goog.exportSymbol('proto.devportal.solo.io.KeyScopeStatus', null, global);
goog.exportSymbol('proto.devportal.solo.io.PortalSpec', null, global);
goog.exportSymbol('proto.devportal.solo.io.PortalStatus', null, global);
goog.exportSymbol('proto.devportal.solo.io.StaticPage', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.devportal.solo.io.PortalSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.devportal.solo.io.PortalSpec.repeatedFields_, null);
};
goog.inherits(proto.devportal.solo.io.PortalSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.devportal.solo.io.PortalSpec.displayName = 'proto.devportal.solo.io.PortalSpec';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.devportal.solo.io.PortalSpec.repeatedFields_ = [3,8,10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.devportal.solo.io.PortalSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.devportal.solo.io.PortalSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.devportal.solo.io.PortalSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.devportal.solo.io.PortalSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    displayName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    domainsList: jspb.Message.getRepeatedField(msg, 3),
    primaryLogo: (f = msg.getPrimaryLogo()) && dev$portal_api_dev$portal_v1_common_pb.DataSource.toObject(includeInstance, f),
    favicon: (f = msg.getFavicon()) && dev$portal_api_dev$portal_v1_common_pb.DataSource.toObject(includeInstance, f),
    banner: (f = msg.getBanner()) && dev$portal_api_dev$portal_v1_common_pb.DataSource.toObject(includeInstance, f),
    customStyling: (f = msg.getCustomStyling()) && proto.devportal.solo.io.CustomStyling.toObject(includeInstance, f),
    staticPagesList: jspb.Message.toObjectList(msg.getStaticPagesList(),
    proto.devportal.solo.io.StaticPage.toObject, includeInstance),
    publishApiDocs: (f = msg.getPublishApiDocs()) && dev$portal_api_dev$portal_v1_common_pb.Selector.toObject(includeInstance, f),
    keyScopesList: jspb.Message.toObjectList(msg.getKeyScopesList(),
    proto.devportal.solo.io.KeyScope.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.devportal.solo.io.PortalSpec}
 */
proto.devportal.solo.io.PortalSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.devportal.solo.io.PortalSpec;
  return proto.devportal.solo.io.PortalSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.devportal.solo.io.PortalSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.devportal.solo.io.PortalSpec}
 */
proto.devportal.solo.io.PortalSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addDomains(value);
      break;
    case 4:
      var value = new dev$portal_api_dev$portal_v1_common_pb.DataSource;
      reader.readMessage(value,dev$portal_api_dev$portal_v1_common_pb.DataSource.deserializeBinaryFromReader);
      msg.setPrimaryLogo(value);
      break;
    case 5:
      var value = new dev$portal_api_dev$portal_v1_common_pb.DataSource;
      reader.readMessage(value,dev$portal_api_dev$portal_v1_common_pb.DataSource.deserializeBinaryFromReader);
      msg.setFavicon(value);
      break;
    case 6:
      var value = new dev$portal_api_dev$portal_v1_common_pb.DataSource;
      reader.readMessage(value,dev$portal_api_dev$portal_v1_common_pb.DataSource.deserializeBinaryFromReader);
      msg.setBanner(value);
      break;
    case 7:
      var value = new proto.devportal.solo.io.CustomStyling;
      reader.readMessage(value,proto.devportal.solo.io.CustomStyling.deserializeBinaryFromReader);
      msg.setCustomStyling(value);
      break;
    case 8:
      var value = new proto.devportal.solo.io.StaticPage;
      reader.readMessage(value,proto.devportal.solo.io.StaticPage.deserializeBinaryFromReader);
      msg.addStaticPages(value);
      break;
    case 9:
      var value = new dev$portal_api_dev$portal_v1_common_pb.Selector;
      reader.readMessage(value,dev$portal_api_dev$portal_v1_common_pb.Selector.deserializeBinaryFromReader);
      msg.setPublishApiDocs(value);
      break;
    case 10:
      var value = new proto.devportal.solo.io.KeyScope;
      reader.readMessage(value,proto.devportal.solo.io.KeyScope.deserializeBinaryFromReader);
      msg.addKeyScopes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.devportal.solo.io.PortalSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.devportal.solo.io.PortalSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.devportal.solo.io.PortalSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.devportal.solo.io.PortalSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDisplayName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDomainsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getPrimaryLogo();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      dev$portal_api_dev$portal_v1_common_pb.DataSource.serializeBinaryToWriter
    );
  }
  f = message.getFavicon();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      dev$portal_api_dev$portal_v1_common_pb.DataSource.serializeBinaryToWriter
    );
  }
  f = message.getBanner();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      dev$portal_api_dev$portal_v1_common_pb.DataSource.serializeBinaryToWriter
    );
  }
  f = message.getCustomStyling();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.devportal.solo.io.CustomStyling.serializeBinaryToWriter
    );
  }
  f = message.getStaticPagesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.devportal.solo.io.StaticPage.serializeBinaryToWriter
    );
  }
  f = message.getPublishApiDocs();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      dev$portal_api_dev$portal_v1_common_pb.Selector.serializeBinaryToWriter
    );
  }
  f = message.getKeyScopesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.devportal.solo.io.KeyScope.serializeBinaryToWriter
    );
  }
};


/**
 * optional string display_name = 1;
 * @return {string}
 */
proto.devportal.solo.io.PortalSpec.prototype.getDisplayName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.devportal.solo.io.PortalSpec.prototype.setDisplayName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.devportal.solo.io.PortalSpec.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.devportal.solo.io.PortalSpec.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string domains = 3;
 * @return {!Array<string>}
 */
proto.devportal.solo.io.PortalSpec.prototype.getDomainsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array<string>} value */
proto.devportal.solo.io.PortalSpec.prototype.setDomainsList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.devportal.solo.io.PortalSpec.prototype.addDomains = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.devportal.solo.io.PortalSpec.prototype.clearDomainsList = function() {
  this.setDomainsList([]);
};


/**
 * optional DataSource primary_logo = 4;
 * @return {?proto.devportal.solo.io.DataSource}
 */
proto.devportal.solo.io.PortalSpec.prototype.getPrimaryLogo = function() {
  return /** @type{?proto.devportal.solo.io.DataSource} */ (
    jspb.Message.getWrapperField(this, dev$portal_api_dev$portal_v1_common_pb.DataSource, 4));
};


/** @param {?proto.devportal.solo.io.DataSource|undefined} value */
proto.devportal.solo.io.PortalSpec.prototype.setPrimaryLogo = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.devportal.solo.io.PortalSpec.prototype.clearPrimaryLogo = function() {
  this.setPrimaryLogo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.devportal.solo.io.PortalSpec.prototype.hasPrimaryLogo = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional DataSource favicon = 5;
 * @return {?proto.devportal.solo.io.DataSource}
 */
proto.devportal.solo.io.PortalSpec.prototype.getFavicon = function() {
  return /** @type{?proto.devportal.solo.io.DataSource} */ (
    jspb.Message.getWrapperField(this, dev$portal_api_dev$portal_v1_common_pb.DataSource, 5));
};


/** @param {?proto.devportal.solo.io.DataSource|undefined} value */
proto.devportal.solo.io.PortalSpec.prototype.setFavicon = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.devportal.solo.io.PortalSpec.prototype.clearFavicon = function() {
  this.setFavicon(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.devportal.solo.io.PortalSpec.prototype.hasFavicon = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional DataSource banner = 6;
 * @return {?proto.devportal.solo.io.DataSource}
 */
proto.devportal.solo.io.PortalSpec.prototype.getBanner = function() {
  return /** @type{?proto.devportal.solo.io.DataSource} */ (
    jspb.Message.getWrapperField(this, dev$portal_api_dev$portal_v1_common_pb.DataSource, 6));
};


/** @param {?proto.devportal.solo.io.DataSource|undefined} value */
proto.devportal.solo.io.PortalSpec.prototype.setBanner = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.devportal.solo.io.PortalSpec.prototype.clearBanner = function() {
  this.setBanner(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.devportal.solo.io.PortalSpec.prototype.hasBanner = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional CustomStyling custom_styling = 7;
 * @return {?proto.devportal.solo.io.CustomStyling}
 */
proto.devportal.solo.io.PortalSpec.prototype.getCustomStyling = function() {
  return /** @type{?proto.devportal.solo.io.CustomStyling} */ (
    jspb.Message.getWrapperField(this, proto.devportal.solo.io.CustomStyling, 7));
};


/** @param {?proto.devportal.solo.io.CustomStyling|undefined} value */
proto.devportal.solo.io.PortalSpec.prototype.setCustomStyling = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.devportal.solo.io.PortalSpec.prototype.clearCustomStyling = function() {
  this.setCustomStyling(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.devportal.solo.io.PortalSpec.prototype.hasCustomStyling = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * repeated StaticPage static_pages = 8;
 * @return {!Array<!proto.devportal.solo.io.StaticPage>}
 */
proto.devportal.solo.io.PortalSpec.prototype.getStaticPagesList = function() {
  return /** @type{!Array<!proto.devportal.solo.io.StaticPage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.devportal.solo.io.StaticPage, 8));
};


/** @param {!Array<!proto.devportal.solo.io.StaticPage>} value */
proto.devportal.solo.io.PortalSpec.prototype.setStaticPagesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.devportal.solo.io.StaticPage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.devportal.solo.io.StaticPage}
 */
proto.devportal.solo.io.PortalSpec.prototype.addStaticPages = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.devportal.solo.io.StaticPage, opt_index);
};


proto.devportal.solo.io.PortalSpec.prototype.clearStaticPagesList = function() {
  this.setStaticPagesList([]);
};


/**
 * optional Selector publish_api_docs = 9;
 * @return {?proto.devportal.solo.io.Selector}
 */
proto.devportal.solo.io.PortalSpec.prototype.getPublishApiDocs = function() {
  return /** @type{?proto.devportal.solo.io.Selector} */ (
    jspb.Message.getWrapperField(this, dev$portal_api_dev$portal_v1_common_pb.Selector, 9));
};


/** @param {?proto.devportal.solo.io.Selector|undefined} value */
proto.devportal.solo.io.PortalSpec.prototype.setPublishApiDocs = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


proto.devportal.solo.io.PortalSpec.prototype.clearPublishApiDocs = function() {
  this.setPublishApiDocs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.devportal.solo.io.PortalSpec.prototype.hasPublishApiDocs = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * repeated KeyScope key_scopes = 10;
 * @return {!Array<!proto.devportal.solo.io.KeyScope>}
 */
proto.devportal.solo.io.PortalSpec.prototype.getKeyScopesList = function() {
  return /** @type{!Array<!proto.devportal.solo.io.KeyScope>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.devportal.solo.io.KeyScope, 10));
};


/** @param {!Array<!proto.devportal.solo.io.KeyScope>} value */
proto.devportal.solo.io.PortalSpec.prototype.setKeyScopesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.devportal.solo.io.KeyScope=} opt_value
 * @param {number=} opt_index
 * @return {!proto.devportal.solo.io.KeyScope}
 */
proto.devportal.solo.io.PortalSpec.prototype.addKeyScopes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.devportal.solo.io.KeyScope, opt_index);
};


proto.devportal.solo.io.PortalSpec.prototype.clearKeyScopesList = function() {
  this.setKeyScopesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.devportal.solo.io.PortalStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.devportal.solo.io.PortalStatus.repeatedFields_, null);
};
goog.inherits(proto.devportal.solo.io.PortalStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.devportal.solo.io.PortalStatus.displayName = 'proto.devportal.solo.io.PortalStatus';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.devportal.solo.io.PortalStatus.repeatedFields_ = [5,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.devportal.solo.io.PortalStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.devportal.solo.io.PortalStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.devportal.solo.io.PortalStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.devportal.solo.io.PortalStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    observedGeneration: jspb.Message.getFieldWithDefault(msg, 1, 0),
    state: jspb.Message.getFieldWithDefault(msg, 2, 0),
    reason: jspb.Message.getFieldWithDefault(msg, 3, ""),
    publishUrl: jspb.Message.getFieldWithDefault(msg, 4, ""),
    apiDocsList: jspb.Message.toObjectList(msg.getApiDocsList(),
    dev$portal_api_dev$portal_v1_common_pb.ObjectRef.toObject, includeInstance),
    keyScopesList: jspb.Message.toObjectList(msg.getKeyScopesList(),
    proto.devportal.solo.io.KeyScopeStatus.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.devportal.solo.io.PortalStatus}
 */
proto.devportal.solo.io.PortalStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.devportal.solo.io.PortalStatus;
  return proto.devportal.solo.io.PortalStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.devportal.solo.io.PortalStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.devportal.solo.io.PortalStatus}
 */
proto.devportal.solo.io.PortalStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setObservedGeneration(value);
      break;
    case 2:
      var value = /** @type {!proto.devportal.solo.io.State} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setReason(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPublishUrl(value);
      break;
    case 5:
      var value = new dev$portal_api_dev$portal_v1_common_pb.ObjectRef;
      reader.readMessage(value,dev$portal_api_dev$portal_v1_common_pb.ObjectRef.deserializeBinaryFromReader);
      msg.addApiDocs(value);
      break;
    case 6:
      var value = new proto.devportal.solo.io.KeyScopeStatus;
      reader.readMessage(value,proto.devportal.solo.io.KeyScopeStatus.deserializeBinaryFromReader);
      msg.addKeyScopes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.devportal.solo.io.PortalStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.devportal.solo.io.PortalStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.devportal.solo.io.PortalStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.devportal.solo.io.PortalStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObservedGeneration();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getReason();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPublishUrl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getApiDocsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      dev$portal_api_dev$portal_v1_common_pb.ObjectRef.serializeBinaryToWriter
    );
  }
  f = message.getKeyScopesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.devportal.solo.io.KeyScopeStatus.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 observed_generation = 1;
 * @return {number}
 */
proto.devportal.solo.io.PortalStatus.prototype.getObservedGeneration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.devportal.solo.io.PortalStatus.prototype.setObservedGeneration = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional State state = 2;
 * @return {!proto.devportal.solo.io.State}
 */
proto.devportal.solo.io.PortalStatus.prototype.getState = function() {
  return /** @type {!proto.devportal.solo.io.State} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.devportal.solo.io.State} value */
proto.devportal.solo.io.PortalStatus.prototype.setState = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string reason = 3;
 * @return {string}
 */
proto.devportal.solo.io.PortalStatus.prototype.getReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.devportal.solo.io.PortalStatus.prototype.setReason = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string publish_url = 4;
 * @return {string}
 */
proto.devportal.solo.io.PortalStatus.prototype.getPublishUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.devportal.solo.io.PortalStatus.prototype.setPublishUrl = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated ObjectRef api_docs = 5;
 * @return {!Array<!proto.devportal.solo.io.ObjectRef>}
 */
proto.devportal.solo.io.PortalStatus.prototype.getApiDocsList = function() {
  return /** @type{!Array<!proto.devportal.solo.io.ObjectRef>} */ (
    jspb.Message.getRepeatedWrapperField(this, dev$portal_api_dev$portal_v1_common_pb.ObjectRef, 5));
};


/** @param {!Array<!proto.devportal.solo.io.ObjectRef>} value */
proto.devportal.solo.io.PortalStatus.prototype.setApiDocsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.devportal.solo.io.ObjectRef=} opt_value
 * @param {number=} opt_index
 * @return {!proto.devportal.solo.io.ObjectRef}
 */
proto.devportal.solo.io.PortalStatus.prototype.addApiDocs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.devportal.solo.io.ObjectRef, opt_index);
};


proto.devportal.solo.io.PortalStatus.prototype.clearApiDocsList = function() {
  this.setApiDocsList([]);
};


/**
 * repeated KeyScopeStatus key_scopes = 6;
 * @return {!Array<!proto.devportal.solo.io.KeyScopeStatus>}
 */
proto.devportal.solo.io.PortalStatus.prototype.getKeyScopesList = function() {
  return /** @type{!Array<!proto.devportal.solo.io.KeyScopeStatus>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.devportal.solo.io.KeyScopeStatus, 6));
};


/** @param {!Array<!proto.devportal.solo.io.KeyScopeStatus>} value */
proto.devportal.solo.io.PortalStatus.prototype.setKeyScopesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.devportal.solo.io.KeyScopeStatus=} opt_value
 * @param {number=} opt_index
 * @return {!proto.devportal.solo.io.KeyScopeStatus}
 */
proto.devportal.solo.io.PortalStatus.prototype.addKeyScopes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.devportal.solo.io.KeyScopeStatus, opt_index);
};


proto.devportal.solo.io.PortalStatus.prototype.clearKeyScopesList = function() {
  this.setKeyScopesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.devportal.solo.io.CustomStyling = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.devportal.solo.io.CustomStyling, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.devportal.solo.io.CustomStyling.displayName = 'proto.devportal.solo.io.CustomStyling';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.devportal.solo.io.CustomStyling.prototype.toObject = function(opt_includeInstance) {
  return proto.devportal.solo.io.CustomStyling.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.devportal.solo.io.CustomStyling} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.devportal.solo.io.CustomStyling.toObject = function(includeInstance, msg) {
  var f, obj = {
    primaryColor: jspb.Message.getFieldWithDefault(msg, 1, ""),
    secondaryColor: jspb.Message.getFieldWithDefault(msg, 2, ""),
    backgroundColor: jspb.Message.getFieldWithDefault(msg, 3, ""),
    navigationLinksColorOverride: jspb.Message.getFieldWithDefault(msg, 4, ""),
    buttonColorOverride: jspb.Message.getFieldWithDefault(msg, 5, ""),
    defaultTextColor: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.devportal.solo.io.CustomStyling}
 */
proto.devportal.solo.io.CustomStyling.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.devportal.solo.io.CustomStyling;
  return proto.devportal.solo.io.CustomStyling.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.devportal.solo.io.CustomStyling} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.devportal.solo.io.CustomStyling}
 */
proto.devportal.solo.io.CustomStyling.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrimaryColor(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecondaryColor(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBackgroundColor(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setNavigationLinksColorOverride(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setButtonColorOverride(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDefaultTextColor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.devportal.solo.io.CustomStyling.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.devportal.solo.io.CustomStyling.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.devportal.solo.io.CustomStyling} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.devportal.solo.io.CustomStyling.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPrimaryColor();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSecondaryColor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBackgroundColor();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getNavigationLinksColorOverride();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getButtonColorOverride();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDefaultTextColor();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string primary_color = 1;
 * @return {string}
 */
proto.devportal.solo.io.CustomStyling.prototype.getPrimaryColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.devportal.solo.io.CustomStyling.prototype.setPrimaryColor = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string secondary_color = 2;
 * @return {string}
 */
proto.devportal.solo.io.CustomStyling.prototype.getSecondaryColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.devportal.solo.io.CustomStyling.prototype.setSecondaryColor = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string background_color = 3;
 * @return {string}
 */
proto.devportal.solo.io.CustomStyling.prototype.getBackgroundColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.devportal.solo.io.CustomStyling.prototype.setBackgroundColor = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string navigation_links_color_override = 4;
 * @return {string}
 */
proto.devportal.solo.io.CustomStyling.prototype.getNavigationLinksColorOverride = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.devportal.solo.io.CustomStyling.prototype.setNavigationLinksColorOverride = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string button_color_override = 5;
 * @return {string}
 */
proto.devportal.solo.io.CustomStyling.prototype.getButtonColorOverride = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.devportal.solo.io.CustomStyling.prototype.setButtonColorOverride = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string default_text_color = 6;
 * @return {string}
 */
proto.devportal.solo.io.CustomStyling.prototype.getDefaultTextColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.devportal.solo.io.CustomStyling.prototype.setDefaultTextColor = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.devportal.solo.io.StaticPage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.devportal.solo.io.StaticPage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.devportal.solo.io.StaticPage.displayName = 'proto.devportal.solo.io.StaticPage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.devportal.solo.io.StaticPage.prototype.toObject = function(opt_includeInstance) {
  return proto.devportal.solo.io.StaticPage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.devportal.solo.io.StaticPage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.devportal.solo.io.StaticPage.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    path: jspb.Message.getFieldWithDefault(msg, 3, ""),
    navigationLinkName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    content: (f = msg.getContent()) && dev$portal_api_dev$portal_v1_common_pb.DataSource.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.devportal.solo.io.StaticPage}
 */
proto.devportal.solo.io.StaticPage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.devportal.solo.io.StaticPage;
  return proto.devportal.solo.io.StaticPage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.devportal.solo.io.StaticPage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.devportal.solo.io.StaticPage}
 */
proto.devportal.solo.io.StaticPage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setNavigationLinkName(value);
      break;
    case 5:
      var value = new dev$portal_api_dev$portal_v1_common_pb.DataSource;
      reader.readMessage(value,dev$portal_api_dev$portal_v1_common_pb.DataSource.deserializeBinaryFromReader);
      msg.setContent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.devportal.solo.io.StaticPage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.devportal.solo.io.StaticPage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.devportal.solo.io.StaticPage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.devportal.solo.io.StaticPage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getNavigationLinkName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getContent();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      dev$portal_api_dev$portal_v1_common_pb.DataSource.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.devportal.solo.io.StaticPage.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.devportal.solo.io.StaticPage.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.devportal.solo.io.StaticPage.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.devportal.solo.io.StaticPage.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string path = 3;
 * @return {string}
 */
proto.devportal.solo.io.StaticPage.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.devportal.solo.io.StaticPage.prototype.setPath = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string navigation_link_name = 4;
 * @return {string}
 */
proto.devportal.solo.io.StaticPage.prototype.getNavigationLinkName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.devportal.solo.io.StaticPage.prototype.setNavigationLinkName = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional DataSource content = 5;
 * @return {?proto.devportal.solo.io.DataSource}
 */
proto.devportal.solo.io.StaticPage.prototype.getContent = function() {
  return /** @type{?proto.devportal.solo.io.DataSource} */ (
    jspb.Message.getWrapperField(this, dev$portal_api_dev$portal_v1_common_pb.DataSource, 5));
};


/** @param {?proto.devportal.solo.io.DataSource|undefined} value */
proto.devportal.solo.io.StaticPage.prototype.setContent = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.devportal.solo.io.StaticPage.prototype.clearContent = function() {
  this.setContent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.devportal.solo.io.StaticPage.prototype.hasContent = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.devportal.solo.io.KeyScope = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.devportal.solo.io.KeyScope, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.devportal.solo.io.KeyScope.displayName = 'proto.devportal.solo.io.KeyScope';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.devportal.solo.io.KeyScope.prototype.toObject = function(opt_includeInstance) {
  return proto.devportal.solo.io.KeyScope.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.devportal.solo.io.KeyScope} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.devportal.solo.io.KeyScope.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    namespace: jspb.Message.getFieldWithDefault(msg, 2, ""),
    displayName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, ""),
    apiDocs: (f = msg.getApiDocs()) && dev$portal_api_dev$portal_v1_common_pb.Selector.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.devportal.solo.io.KeyScope}
 */
proto.devportal.solo.io.KeyScope.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.devportal.solo.io.KeyScope;
  return proto.devportal.solo.io.KeyScope.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.devportal.solo.io.KeyScope} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.devportal.solo.io.KeyScope}
 */
proto.devportal.solo.io.KeyScope.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 9:
      var value = new dev$portal_api_dev$portal_v1_common_pb.Selector;
      reader.readMessage(value,dev$portal_api_dev$portal_v1_common_pb.Selector.deserializeBinaryFromReader);
      msg.setApiDocs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.devportal.solo.io.KeyScope.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.devportal.solo.io.KeyScope.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.devportal.solo.io.KeyScope} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.devportal.solo.io.KeyScope.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDisplayName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getApiDocs();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      dev$portal_api_dev$portal_v1_common_pb.Selector.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.devportal.solo.io.KeyScope.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.devportal.solo.io.KeyScope.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string namespace = 2;
 * @return {string}
 */
proto.devportal.solo.io.KeyScope.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.devportal.solo.io.KeyScope.prototype.setNamespace = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string display_name = 3;
 * @return {string}
 */
proto.devportal.solo.io.KeyScope.prototype.getDisplayName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.devportal.solo.io.KeyScope.prototype.setDisplayName = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.devportal.solo.io.KeyScope.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.devportal.solo.io.KeyScope.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional Selector api_docs = 9;
 * @return {?proto.devportal.solo.io.Selector}
 */
proto.devportal.solo.io.KeyScope.prototype.getApiDocs = function() {
  return /** @type{?proto.devportal.solo.io.Selector} */ (
    jspb.Message.getWrapperField(this, dev$portal_api_dev$portal_v1_common_pb.Selector, 9));
};


/** @param {?proto.devportal.solo.io.Selector|undefined} value */
proto.devportal.solo.io.KeyScope.prototype.setApiDocs = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


proto.devportal.solo.io.KeyScope.prototype.clearApiDocs = function() {
  this.setApiDocs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.devportal.solo.io.KeyScope.prototype.hasApiDocs = function() {
  return jspb.Message.getField(this, 9) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.devportal.solo.io.KeyScopeStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.devportal.solo.io.KeyScopeStatus.repeatedFields_, null);
};
goog.inherits(proto.devportal.solo.io.KeyScopeStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.devportal.solo.io.KeyScopeStatus.displayName = 'proto.devportal.solo.io.KeyScopeStatus';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.devportal.solo.io.KeyScopeStatus.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.devportal.solo.io.KeyScopeStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.devportal.solo.io.KeyScopeStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.devportal.solo.io.KeyScopeStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.devportal.solo.io.KeyScopeStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    accessibleApiDocsList: jspb.Message.toObjectList(msg.getAccessibleApiDocsList(),
    dev$portal_api_dev$portal_v1_common_pb.ObjectRef.toObject, includeInstance),
    provisionedKeysList: jspb.Message.toObjectList(msg.getProvisionedKeysList(),
    dev$portal_api_dev$portal_v1_common_pb.ObjectRef.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.devportal.solo.io.KeyScopeStatus}
 */
proto.devportal.solo.io.KeyScopeStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.devportal.solo.io.KeyScopeStatus;
  return proto.devportal.solo.io.KeyScopeStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.devportal.solo.io.KeyScopeStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.devportal.solo.io.KeyScopeStatus}
 */
proto.devportal.solo.io.KeyScopeStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new dev$portal_api_dev$portal_v1_common_pb.ObjectRef;
      reader.readMessage(value,dev$portal_api_dev$portal_v1_common_pb.ObjectRef.deserializeBinaryFromReader);
      msg.addAccessibleApiDocs(value);
      break;
    case 3:
      var value = new dev$portal_api_dev$portal_v1_common_pb.ObjectRef;
      reader.readMessage(value,dev$portal_api_dev$portal_v1_common_pb.ObjectRef.deserializeBinaryFromReader);
      msg.addProvisionedKeys(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.devportal.solo.io.KeyScopeStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.devportal.solo.io.KeyScopeStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.devportal.solo.io.KeyScopeStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.devportal.solo.io.KeyScopeStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAccessibleApiDocsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      dev$portal_api_dev$portal_v1_common_pb.ObjectRef.serializeBinaryToWriter
    );
  }
  f = message.getProvisionedKeysList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      dev$portal_api_dev$portal_v1_common_pb.ObjectRef.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.devportal.solo.io.KeyScopeStatus.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.devportal.solo.io.KeyScopeStatus.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated ObjectRef accessible_api_docs = 2;
 * @return {!Array<!proto.devportal.solo.io.ObjectRef>}
 */
proto.devportal.solo.io.KeyScopeStatus.prototype.getAccessibleApiDocsList = function() {
  return /** @type{!Array<!proto.devportal.solo.io.ObjectRef>} */ (
    jspb.Message.getRepeatedWrapperField(this, dev$portal_api_dev$portal_v1_common_pb.ObjectRef, 2));
};


/** @param {!Array<!proto.devportal.solo.io.ObjectRef>} value */
proto.devportal.solo.io.KeyScopeStatus.prototype.setAccessibleApiDocsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.devportal.solo.io.ObjectRef=} opt_value
 * @param {number=} opt_index
 * @return {!proto.devportal.solo.io.ObjectRef}
 */
proto.devportal.solo.io.KeyScopeStatus.prototype.addAccessibleApiDocs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.devportal.solo.io.ObjectRef, opt_index);
};


proto.devportal.solo.io.KeyScopeStatus.prototype.clearAccessibleApiDocsList = function() {
  this.setAccessibleApiDocsList([]);
};


/**
 * repeated ObjectRef provisioned_keys = 3;
 * @return {!Array<!proto.devportal.solo.io.ObjectRef>}
 */
proto.devportal.solo.io.KeyScopeStatus.prototype.getProvisionedKeysList = function() {
  return /** @type{!Array<!proto.devportal.solo.io.ObjectRef>} */ (
    jspb.Message.getRepeatedWrapperField(this, dev$portal_api_dev$portal_v1_common_pb.ObjectRef, 3));
};


/** @param {!Array<!proto.devportal.solo.io.ObjectRef>} value */
proto.devportal.solo.io.KeyScopeStatus.prototype.setProvisionedKeysList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.devportal.solo.io.ObjectRef=} opt_value
 * @param {number=} opt_index
 * @return {!proto.devportal.solo.io.ObjectRef}
 */
proto.devportal.solo.io.KeyScopeStatus.prototype.addProvisionedKeys = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.devportal.solo.io.ObjectRef, opt_index);
};


proto.devportal.solo.io.KeyScopeStatus.prototype.clearProvisionedKeysList = function() {
  this.setProvisionedKeysList([]);
};


goog.object.extend(exports, proto.devportal.solo.io);
