/* eslint-disable */
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
var dev$portal_api_dev$portal_v1_common_pb = require('../../../../dev-portal/api/dev-portal/v1/common_pb.js');
var gogoproto_gogo_pb = require('../../../../gogoproto/gogo_pb.js');
var extproto_ext_pb = require('../../../../protoc-gen-ext/extproto/ext_pb.js');
goog.exportSymbol('proto.devportal.solo.io.ApiDocSpec', null, global);
goog.exportSymbol('proto.devportal.solo.io.ApiDocSpec.OpenApi', null, global);
goog.exportSymbol('proto.devportal.solo.io.ApiDocStatus', null, global);
goog.exportSymbol('proto.devportal.solo.io.ApiDocStatus.State', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.devportal.solo.io.ApiDocSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.devportal.solo.io.ApiDocSpec.oneofGroups_);
};
goog.inherits(proto.devportal.solo.io.ApiDocSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.devportal.solo.io.ApiDocSpec.displayName = 'proto.devportal.solo.io.ApiDocSpec';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.devportal.solo.io.ApiDocSpec.oneofGroups_ = [[5]];

/**
 * @enum {number}
 */
proto.devportal.solo.io.ApiDocSpec.ApiDocTypeCase = {
  API_DOC_TYPE_NOT_SET: 0,
  OPEN_API: 5
};

/**
 * @return {proto.devportal.solo.io.ApiDocSpec.ApiDocTypeCase}
 */
proto.devportal.solo.io.ApiDocSpec.prototype.getApiDocTypeCase = function() {
  return /** @type {proto.devportal.solo.io.ApiDocSpec.ApiDocTypeCase} */(jspb.Message.computeOneofCase(this, proto.devportal.solo.io.ApiDocSpec.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.devportal.solo.io.ApiDocSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.devportal.solo.io.ApiDocSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.devportal.solo.io.ApiDocSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.devportal.solo.io.ApiDocSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    dataSource: (f = msg.getDataSource()) && dev$portal_api_dev$portal_v1_common_pb.DataSource.toObject(includeInstance, f),
    image: (f = msg.getImage()) && dev$portal_api_dev$portal_v1_common_pb.DataSource.toObject(includeInstance, f),
    openApi: (f = msg.getOpenApi()) && proto.devportal.solo.io.ApiDocSpec.OpenApi.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.devportal.solo.io.ApiDocSpec}
 */
proto.devportal.solo.io.ApiDocSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.devportal.solo.io.ApiDocSpec;
  return proto.devportal.solo.io.ApiDocSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.devportal.solo.io.ApiDocSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.devportal.solo.io.ApiDocSpec}
 */
proto.devportal.solo.io.ApiDocSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 4:
      var value = new dev$portal_api_dev$portal_v1_common_pb.DataSource;
      reader.readMessage(value,dev$portal_api_dev$portal_v1_common_pb.DataSource.deserializeBinaryFromReader);
      msg.setDataSource(value);
      break;
    case 6:
      var value = new dev$portal_api_dev$portal_v1_common_pb.DataSource;
      reader.readMessage(value,dev$portal_api_dev$portal_v1_common_pb.DataSource.deserializeBinaryFromReader);
      msg.setImage(value);
      break;
    case 5:
      var value = new proto.devportal.solo.io.ApiDocSpec.OpenApi;
      reader.readMessage(value,proto.devportal.solo.io.ApiDocSpec.OpenApi.deserializeBinaryFromReader);
      msg.setOpenApi(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.devportal.solo.io.ApiDocSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.devportal.solo.io.ApiDocSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.devportal.solo.io.ApiDocSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.devportal.solo.io.ApiDocSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataSource();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      dev$portal_api_dev$portal_v1_common_pb.DataSource.serializeBinaryToWriter
    );
  }
  f = message.getImage();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      dev$portal_api_dev$portal_v1_common_pb.DataSource.serializeBinaryToWriter
    );
  }
  f = message.getOpenApi();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.devportal.solo.io.ApiDocSpec.OpenApi.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.devportal.solo.io.ApiDocSpec.OpenApi = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.devportal.solo.io.ApiDocSpec.OpenApi, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.devportal.solo.io.ApiDocSpec.OpenApi.displayName = 'proto.devportal.solo.io.ApiDocSpec.OpenApi';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.devportal.solo.io.ApiDocSpec.OpenApi.prototype.toObject = function(opt_includeInstance) {
  return proto.devportal.solo.io.ApiDocSpec.OpenApi.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.devportal.solo.io.ApiDocSpec.OpenApi} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.devportal.solo.io.ApiDocSpec.OpenApi.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.devportal.solo.io.ApiDocSpec.OpenApi}
 */
proto.devportal.solo.io.ApiDocSpec.OpenApi.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.devportal.solo.io.ApiDocSpec.OpenApi;
  return proto.devportal.solo.io.ApiDocSpec.OpenApi.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.devportal.solo.io.ApiDocSpec.OpenApi} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.devportal.solo.io.ApiDocSpec.OpenApi}
 */
proto.devportal.solo.io.ApiDocSpec.OpenApi.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.devportal.solo.io.ApiDocSpec.OpenApi.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.devportal.solo.io.ApiDocSpec.OpenApi.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.devportal.solo.io.ApiDocSpec.OpenApi} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.devportal.solo.io.ApiDocSpec.OpenApi.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * optional DataSource data_source = 4;
 * @return {?proto.devportal.solo.io.DataSource}
 */
proto.devportal.solo.io.ApiDocSpec.prototype.getDataSource = function() {
  return /** @type{?proto.devportal.solo.io.DataSource} */ (
    jspb.Message.getWrapperField(this, dev$portal_api_dev$portal_v1_common_pb.DataSource, 4));
};


/** @param {?proto.devportal.solo.io.DataSource|undefined} value */
proto.devportal.solo.io.ApiDocSpec.prototype.setDataSource = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.devportal.solo.io.ApiDocSpec.prototype.clearDataSource = function() {
  this.setDataSource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.devportal.solo.io.ApiDocSpec.prototype.hasDataSource = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional DataSource image = 6;
 * @return {?proto.devportal.solo.io.DataSource}
 */
proto.devportal.solo.io.ApiDocSpec.prototype.getImage = function() {
  return /** @type{?proto.devportal.solo.io.DataSource} */ (
    jspb.Message.getWrapperField(this, dev$portal_api_dev$portal_v1_common_pb.DataSource, 6));
};


/** @param {?proto.devportal.solo.io.DataSource|undefined} value */
proto.devportal.solo.io.ApiDocSpec.prototype.setImage = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.devportal.solo.io.ApiDocSpec.prototype.clearImage = function() {
  this.setImage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.devportal.solo.io.ApiDocSpec.prototype.hasImage = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional OpenApi open_api = 5;
 * @return {?proto.devportal.solo.io.ApiDocSpec.OpenApi}
 */
proto.devportal.solo.io.ApiDocSpec.prototype.getOpenApi = function() {
  return /** @type{?proto.devportal.solo.io.ApiDocSpec.OpenApi} */ (
    jspb.Message.getWrapperField(this, proto.devportal.solo.io.ApiDocSpec.OpenApi, 5));
};


/** @param {?proto.devportal.solo.io.ApiDocSpec.OpenApi|undefined} value */
proto.devportal.solo.io.ApiDocSpec.prototype.setOpenApi = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.devportal.solo.io.ApiDocSpec.oneofGroups_[0], value);
};


proto.devportal.solo.io.ApiDocSpec.prototype.clearOpenApi = function() {
  this.setOpenApi(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.devportal.solo.io.ApiDocSpec.prototype.hasOpenApi = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.devportal.solo.io.ApiDocStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.devportal.solo.io.ApiDocStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.devportal.solo.io.ApiDocStatus.displayName = 'proto.devportal.solo.io.ApiDocStatus';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.devportal.solo.io.ApiDocStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.devportal.solo.io.ApiDocStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.devportal.solo.io.ApiDocStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.devportal.solo.io.ApiDocStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    observedGeneration: jspb.Message.getFieldWithDefault(msg, 1, 0),
    state: jspb.Message.getFieldWithDefault(msg, 2, 0),
    reason: jspb.Message.getFieldWithDefault(msg, 3, ""),
    modifiedDate: (f = msg.getModifiedDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    displayName: jspb.Message.getFieldWithDefault(msg, 5, ""),
    version: jspb.Message.getFieldWithDefault(msg, 6, ""),
    description: jspb.Message.getFieldWithDefault(msg, 7, ""),
    numberOfEndpoints: jspb.Message.getFieldWithDefault(msg, 8, 0),
    basePath: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.devportal.solo.io.ApiDocStatus}
 */
proto.devportal.solo.io.ApiDocStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.devportal.solo.io.ApiDocStatus;
  return proto.devportal.solo.io.ApiDocStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.devportal.solo.io.ApiDocStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.devportal.solo.io.ApiDocStatus}
 */
proto.devportal.solo.io.ApiDocStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setObservedGeneration(value);
      break;
    case 2:
      var value = /** @type {!proto.devportal.solo.io.ApiDocStatus.State} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setReason(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setModifiedDate(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayName(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumberOfEndpoints(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setBasePath(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.devportal.solo.io.ApiDocStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.devportal.solo.io.ApiDocStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.devportal.solo.io.ApiDocStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.devportal.solo.io.ApiDocStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObservedGeneration();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getReason();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getModifiedDate();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDisplayName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getNumberOfEndpoints();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getBasePath();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.devportal.solo.io.ApiDocStatus.State = {
  REJECTED: 0,
  ACCEPTED: 1
};

/**
 * optional int64 observed_generation = 1;
 * @return {number}
 */
proto.devportal.solo.io.ApiDocStatus.prototype.getObservedGeneration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.devportal.solo.io.ApiDocStatus.prototype.setObservedGeneration = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional State state = 2;
 * @return {!proto.devportal.solo.io.ApiDocStatus.State}
 */
proto.devportal.solo.io.ApiDocStatus.prototype.getState = function() {
  return /** @type {!proto.devportal.solo.io.ApiDocStatus.State} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.devportal.solo.io.ApiDocStatus.State} value */
proto.devportal.solo.io.ApiDocStatus.prototype.setState = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string reason = 3;
 * @return {string}
 */
proto.devportal.solo.io.ApiDocStatus.prototype.getReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.devportal.solo.io.ApiDocStatus.prototype.setReason = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional google.protobuf.Timestamp modified_date = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.devportal.solo.io.ApiDocStatus.prototype.getModifiedDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.devportal.solo.io.ApiDocStatus.prototype.setModifiedDate = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.devportal.solo.io.ApiDocStatus.prototype.clearModifiedDate = function() {
  this.setModifiedDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.devportal.solo.io.ApiDocStatus.prototype.hasModifiedDate = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string display_name = 5;
 * @return {string}
 */
proto.devportal.solo.io.ApiDocStatus.prototype.getDisplayName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.devportal.solo.io.ApiDocStatus.prototype.setDisplayName = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string version = 6;
 * @return {string}
 */
proto.devportal.solo.io.ApiDocStatus.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.devportal.solo.io.ApiDocStatus.prototype.setVersion = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string description = 7;
 * @return {string}
 */
proto.devportal.solo.io.ApiDocStatus.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.devportal.solo.io.ApiDocStatus.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int32 number_of_endpoints = 8;
 * @return {number}
 */
proto.devportal.solo.io.ApiDocStatus.prototype.getNumberOfEndpoints = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.devportal.solo.io.ApiDocStatus.prototype.setNumberOfEndpoints = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional string base_path = 9;
 * @return {string}
 */
proto.devportal.solo.io.ApiDocStatus.prototype.getBasePath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.devportal.solo.io.ApiDocStatus.prototype.setBasePath = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};


goog.object.extend(exports, proto.devportal.solo.io);
