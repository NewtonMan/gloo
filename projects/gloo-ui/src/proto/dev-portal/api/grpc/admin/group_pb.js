/* eslint-disable */
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var gogoproto_gogo_pb = require('../../../../gogoproto/gogo_pb.js');
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
var dev$portal_api_dev$portal_v1_group_pb = require('../../../../dev-portal/api/dev-portal/v1/group_pb.js');
var dev$portal_api_dev$portal_v1_common_pb = require('../../../../dev-portal/api/dev-portal/v1/common_pb.js');
var dev$portal_api_grpc_common_common_pb = require('../../../../dev-portal/api/grpc/common/common_pb.js');
goog.exportSymbol('proto.admin.devportal.solo.io.Group', null, global);
goog.exportSymbol('proto.admin.devportal.solo.io.GroupFilter', null, global);
goog.exportSymbol('proto.admin.devportal.solo.io.GroupList', null, global);
goog.exportSymbol('proto.admin.devportal.solo.io.GroupWriteRequest', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admin.devportal.solo.io.Group = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admin.devportal.solo.io.Group, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.admin.devportal.solo.io.Group.displayName = 'proto.admin.devportal.solo.io.Group';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admin.devportal.solo.io.Group.prototype.toObject = function(opt_includeInstance) {
  return proto.admin.devportal.solo.io.Group.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admin.devportal.solo.io.Group} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin.devportal.solo.io.Group.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && dev$portal_api_grpc_common_common_pb.ObjectMeta.toObject(includeInstance, f),
    spec: (f = msg.getSpec()) && dev$portal_api_dev$portal_v1_group_pb.GroupSpec.toObject(includeInstance, f),
    status: (f = msg.getStatus()) && dev$portal_api_dev$portal_v1_group_pb.GroupStatus.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admin.devportal.solo.io.Group}
 */
proto.admin.devportal.solo.io.Group.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admin.devportal.solo.io.Group;
  return proto.admin.devportal.solo.io.Group.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admin.devportal.solo.io.Group} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admin.devportal.solo.io.Group}
 */
proto.admin.devportal.solo.io.Group.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new dev$portal_api_grpc_common_common_pb.ObjectMeta;
      reader.readMessage(value,dev$portal_api_grpc_common_common_pb.ObjectMeta.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = new dev$portal_api_dev$portal_v1_group_pb.GroupSpec;
      reader.readMessage(value,dev$portal_api_dev$portal_v1_group_pb.GroupSpec.deserializeBinaryFromReader);
      msg.setSpec(value);
      break;
    case 3:
      var value = new dev$portal_api_dev$portal_v1_group_pb.GroupStatus;
      reader.readMessage(value,dev$portal_api_dev$portal_v1_group_pb.GroupStatus.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admin.devportal.solo.io.Group.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admin.devportal.solo.io.Group.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admin.devportal.solo.io.Group} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin.devportal.solo.io.Group.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      dev$portal_api_grpc_common_common_pb.ObjectMeta.serializeBinaryToWriter
    );
  }
  f = message.getSpec();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      dev$portal_api_dev$portal_v1_group_pb.GroupSpec.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      dev$portal_api_dev$portal_v1_group_pb.GroupStatus.serializeBinaryToWriter
    );
  }
};


/**
 * optional common.devportal.solo.io.ObjectMeta metadata = 1;
 * @return {?proto.common.devportal.solo.io.ObjectMeta}
 */
proto.admin.devportal.solo.io.Group.prototype.getMetadata = function() {
  return /** @type{?proto.common.devportal.solo.io.ObjectMeta} */ (
    jspb.Message.getWrapperField(this, dev$portal_api_grpc_common_common_pb.ObjectMeta, 1));
};


/** @param {?proto.common.devportal.solo.io.ObjectMeta|undefined} value */
proto.admin.devportal.solo.io.Group.prototype.setMetadata = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.admin.devportal.solo.io.Group.prototype.clearMetadata = function() {
  this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.admin.devportal.solo.io.Group.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional devportal.solo.io.GroupSpec spec = 2;
 * @return {?proto.devportal.solo.io.GroupSpec}
 */
proto.admin.devportal.solo.io.Group.prototype.getSpec = function() {
  return /** @type{?proto.devportal.solo.io.GroupSpec} */ (
    jspb.Message.getWrapperField(this, dev$portal_api_dev$portal_v1_group_pb.GroupSpec, 2));
};


/** @param {?proto.devportal.solo.io.GroupSpec|undefined} value */
proto.admin.devportal.solo.io.Group.prototype.setSpec = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.admin.devportal.solo.io.Group.prototype.clearSpec = function() {
  this.setSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.admin.devportal.solo.io.Group.prototype.hasSpec = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional devportal.solo.io.GroupStatus status = 3;
 * @return {?proto.devportal.solo.io.GroupStatus}
 */
proto.admin.devportal.solo.io.Group.prototype.getStatus = function() {
  return /** @type{?proto.devportal.solo.io.GroupStatus} */ (
    jspb.Message.getWrapperField(this, dev$portal_api_dev$portal_v1_group_pb.GroupStatus, 3));
};


/** @param {?proto.devportal.solo.io.GroupStatus|undefined} value */
proto.admin.devportal.solo.io.Group.prototype.setStatus = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.admin.devportal.solo.io.Group.prototype.clearStatus = function() {
  this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.admin.devportal.solo.io.Group.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admin.devportal.solo.io.GroupList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.admin.devportal.solo.io.GroupList.repeatedFields_, null);
};
goog.inherits(proto.admin.devportal.solo.io.GroupList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.admin.devportal.solo.io.GroupList.displayName = 'proto.admin.devportal.solo.io.GroupList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.admin.devportal.solo.io.GroupList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admin.devportal.solo.io.GroupList.prototype.toObject = function(opt_includeInstance) {
  return proto.admin.devportal.solo.io.GroupList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admin.devportal.solo.io.GroupList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin.devportal.solo.io.GroupList.toObject = function(includeInstance, msg) {
  var f, obj = {
    groupsList: jspb.Message.toObjectList(msg.getGroupsList(),
    proto.admin.devportal.solo.io.Group.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admin.devportal.solo.io.GroupList}
 */
proto.admin.devportal.solo.io.GroupList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admin.devportal.solo.io.GroupList;
  return proto.admin.devportal.solo.io.GroupList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admin.devportal.solo.io.GroupList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admin.devportal.solo.io.GroupList}
 */
proto.admin.devportal.solo.io.GroupList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.admin.devportal.solo.io.Group;
      reader.readMessage(value,proto.admin.devportal.solo.io.Group.deserializeBinaryFromReader);
      msg.addGroups(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admin.devportal.solo.io.GroupList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admin.devportal.solo.io.GroupList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admin.devportal.solo.io.GroupList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin.devportal.solo.io.GroupList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroupsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.admin.devportal.solo.io.Group.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Group groups = 1;
 * @return {!Array<!proto.admin.devportal.solo.io.Group>}
 */
proto.admin.devportal.solo.io.GroupList.prototype.getGroupsList = function() {
  return /** @type{!Array<!proto.admin.devportal.solo.io.Group>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.admin.devportal.solo.io.Group, 1));
};


/** @param {!Array<!proto.admin.devportal.solo.io.Group>} value */
proto.admin.devportal.solo.io.GroupList.prototype.setGroupsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.admin.devportal.solo.io.Group=} opt_value
 * @param {number=} opt_index
 * @return {!proto.admin.devportal.solo.io.Group}
 */
proto.admin.devportal.solo.io.GroupList.prototype.addGroups = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.admin.devportal.solo.io.Group, opt_index);
};


proto.admin.devportal.solo.io.GroupList.prototype.clearGroupsList = function() {
  this.setGroupsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admin.devportal.solo.io.GroupWriteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.admin.devportal.solo.io.GroupWriteRequest.repeatedFields_, null);
};
goog.inherits(proto.admin.devportal.solo.io.GroupWriteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.admin.devportal.solo.io.GroupWriteRequest.displayName = 'proto.admin.devportal.solo.io.GroupWriteRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.admin.devportal.solo.io.GroupWriteRequest.repeatedFields_ = [2,3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admin.devportal.solo.io.GroupWriteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.admin.devportal.solo.io.GroupWriteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admin.devportal.solo.io.GroupWriteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin.devportal.solo.io.GroupWriteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    group: (f = msg.getGroup()) && proto.admin.devportal.solo.io.Group.toObject(includeInstance, f),
    apiDocsList: jspb.Message.toObjectList(msg.getApiDocsList(),
    dev$portal_api_dev$portal_v1_common_pb.ObjectRef.toObject, includeInstance),
    portalsList: jspb.Message.toObjectList(msg.getPortalsList(),
    dev$portal_api_dev$portal_v1_common_pb.ObjectRef.toObject, includeInstance),
    usersList: jspb.Message.toObjectList(msg.getUsersList(),
    dev$portal_api_dev$portal_v1_common_pb.ObjectRef.toObject, includeInstance),
    groupOnly: jspb.Message.getFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admin.devportal.solo.io.GroupWriteRequest}
 */
proto.admin.devportal.solo.io.GroupWriteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admin.devportal.solo.io.GroupWriteRequest;
  return proto.admin.devportal.solo.io.GroupWriteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admin.devportal.solo.io.GroupWriteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admin.devportal.solo.io.GroupWriteRequest}
 */
proto.admin.devportal.solo.io.GroupWriteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.admin.devportal.solo.io.Group;
      reader.readMessage(value,proto.admin.devportal.solo.io.Group.deserializeBinaryFromReader);
      msg.setGroup(value);
      break;
    case 2:
      var value = new dev$portal_api_dev$portal_v1_common_pb.ObjectRef;
      reader.readMessage(value,dev$portal_api_dev$portal_v1_common_pb.ObjectRef.deserializeBinaryFromReader);
      msg.addApiDocs(value);
      break;
    case 3:
      var value = new dev$portal_api_dev$portal_v1_common_pb.ObjectRef;
      reader.readMessage(value,dev$portal_api_dev$portal_v1_common_pb.ObjectRef.deserializeBinaryFromReader);
      msg.addPortals(value);
      break;
    case 4:
      var value = new dev$portal_api_dev$portal_v1_common_pb.ObjectRef;
      reader.readMessage(value,dev$portal_api_dev$portal_v1_common_pb.ObjectRef.deserializeBinaryFromReader);
      msg.addUsers(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setGroupOnly(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admin.devportal.solo.io.GroupWriteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admin.devportal.solo.io.GroupWriteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admin.devportal.solo.io.GroupWriteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin.devportal.solo.io.GroupWriteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroup();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.admin.devportal.solo.io.Group.serializeBinaryToWriter
    );
  }
  f = message.getApiDocsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      dev$portal_api_dev$portal_v1_common_pb.ObjectRef.serializeBinaryToWriter
    );
  }
  f = message.getPortalsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      dev$portal_api_dev$portal_v1_common_pb.ObjectRef.serializeBinaryToWriter
    );
  }
  f = message.getUsersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      dev$portal_api_dev$portal_v1_common_pb.ObjectRef.serializeBinaryToWriter
    );
  }
  f = message.getGroupOnly();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional Group group = 1;
 * @return {?proto.admin.devportal.solo.io.Group}
 */
proto.admin.devportal.solo.io.GroupWriteRequest.prototype.getGroup = function() {
  return /** @type{?proto.admin.devportal.solo.io.Group} */ (
    jspb.Message.getWrapperField(this, proto.admin.devportal.solo.io.Group, 1));
};


/** @param {?proto.admin.devportal.solo.io.Group|undefined} value */
proto.admin.devportal.solo.io.GroupWriteRequest.prototype.setGroup = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.admin.devportal.solo.io.GroupWriteRequest.prototype.clearGroup = function() {
  this.setGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.admin.devportal.solo.io.GroupWriteRequest.prototype.hasGroup = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated devportal.solo.io.ObjectRef api_docs = 2;
 * @return {!Array<!proto.devportal.solo.io.ObjectRef>}
 */
proto.admin.devportal.solo.io.GroupWriteRequest.prototype.getApiDocsList = function() {
  return /** @type{!Array<!proto.devportal.solo.io.ObjectRef>} */ (
    jspb.Message.getRepeatedWrapperField(this, dev$portal_api_dev$portal_v1_common_pb.ObjectRef, 2));
};


/** @param {!Array<!proto.devportal.solo.io.ObjectRef>} value */
proto.admin.devportal.solo.io.GroupWriteRequest.prototype.setApiDocsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.devportal.solo.io.ObjectRef=} opt_value
 * @param {number=} opt_index
 * @return {!proto.devportal.solo.io.ObjectRef}
 */
proto.admin.devportal.solo.io.GroupWriteRequest.prototype.addApiDocs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.devportal.solo.io.ObjectRef, opt_index);
};


proto.admin.devportal.solo.io.GroupWriteRequest.prototype.clearApiDocsList = function() {
  this.setApiDocsList([]);
};


/**
 * repeated devportal.solo.io.ObjectRef portals = 3;
 * @return {!Array<!proto.devportal.solo.io.ObjectRef>}
 */
proto.admin.devportal.solo.io.GroupWriteRequest.prototype.getPortalsList = function() {
  return /** @type{!Array<!proto.devportal.solo.io.ObjectRef>} */ (
    jspb.Message.getRepeatedWrapperField(this, dev$portal_api_dev$portal_v1_common_pb.ObjectRef, 3));
};


/** @param {!Array<!proto.devportal.solo.io.ObjectRef>} value */
proto.admin.devportal.solo.io.GroupWriteRequest.prototype.setPortalsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.devportal.solo.io.ObjectRef=} opt_value
 * @param {number=} opt_index
 * @return {!proto.devportal.solo.io.ObjectRef}
 */
proto.admin.devportal.solo.io.GroupWriteRequest.prototype.addPortals = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.devportal.solo.io.ObjectRef, opt_index);
};


proto.admin.devportal.solo.io.GroupWriteRequest.prototype.clearPortalsList = function() {
  this.setPortalsList([]);
};


/**
 * repeated devportal.solo.io.ObjectRef users = 4;
 * @return {!Array<!proto.devportal.solo.io.ObjectRef>}
 */
proto.admin.devportal.solo.io.GroupWriteRequest.prototype.getUsersList = function() {
  return /** @type{!Array<!proto.devportal.solo.io.ObjectRef>} */ (
    jspb.Message.getRepeatedWrapperField(this, dev$portal_api_dev$portal_v1_common_pb.ObjectRef, 4));
};


/** @param {!Array<!proto.devportal.solo.io.ObjectRef>} value */
proto.admin.devportal.solo.io.GroupWriteRequest.prototype.setUsersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.devportal.solo.io.ObjectRef=} opt_value
 * @param {number=} opt_index
 * @return {!proto.devportal.solo.io.ObjectRef}
 */
proto.admin.devportal.solo.io.GroupWriteRequest.prototype.addUsers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.devportal.solo.io.ObjectRef, opt_index);
};


proto.admin.devportal.solo.io.GroupWriteRequest.prototype.clearUsersList = function() {
  this.setUsersList([]);
};


/**
 * optional bool group_only = 5;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.admin.devportal.solo.io.GroupWriteRequest.prototype.getGroupOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));
};


/** @param {boolean} value */
proto.admin.devportal.solo.io.GroupWriteRequest.prototype.setGroupOnly = function(value) {
  jspb.Message.setProto3BooleanField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admin.devportal.solo.io.GroupFilter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.admin.devportal.solo.io.GroupFilter.repeatedFields_, null);
};
goog.inherits(proto.admin.devportal.solo.io.GroupFilter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.admin.devportal.solo.io.GroupFilter.displayName = 'proto.admin.devportal.solo.io.GroupFilter';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.admin.devportal.solo.io.GroupFilter.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.admin.devportal.solo.io.GroupFilter.prototype.toObject = function(opt_includeInstance) {
  return proto.admin.devportal.solo.io.GroupFilter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.admin.devportal.solo.io.GroupFilter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin.devportal.solo.io.GroupFilter.toObject = function(includeInstance, msg) {
  var f, obj = {
    apiDocsList: jspb.Message.toObjectList(msg.getApiDocsList(),
    dev$portal_api_dev$portal_v1_common_pb.ObjectRef.toObject, includeInstance),
    portalsList: jspb.Message.toObjectList(msg.getPortalsList(),
    dev$portal_api_dev$portal_v1_common_pb.ObjectRef.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admin.devportal.solo.io.GroupFilter}
 */
proto.admin.devportal.solo.io.GroupFilter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admin.devportal.solo.io.GroupFilter;
  return proto.admin.devportal.solo.io.GroupFilter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admin.devportal.solo.io.GroupFilter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admin.devportal.solo.io.GroupFilter}
 */
proto.admin.devportal.solo.io.GroupFilter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new dev$portal_api_dev$portal_v1_common_pb.ObjectRef;
      reader.readMessage(value,dev$portal_api_dev$portal_v1_common_pb.ObjectRef.deserializeBinaryFromReader);
      msg.addApiDocs(value);
      break;
    case 2:
      var value = new dev$portal_api_dev$portal_v1_common_pb.ObjectRef;
      reader.readMessage(value,dev$portal_api_dev$portal_v1_common_pb.ObjectRef.deserializeBinaryFromReader);
      msg.addPortals(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admin.devportal.solo.io.GroupFilter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.admin.devportal.solo.io.GroupFilter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admin.devportal.solo.io.GroupFilter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin.devportal.solo.io.GroupFilter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApiDocsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      dev$portal_api_dev$portal_v1_common_pb.ObjectRef.serializeBinaryToWriter
    );
  }
  f = message.getPortalsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      dev$portal_api_dev$portal_v1_common_pb.ObjectRef.serializeBinaryToWriter
    );
  }
};


/**
 * repeated devportal.solo.io.ObjectRef api_docs = 1;
 * @return {!Array<!proto.devportal.solo.io.ObjectRef>}
 */
proto.admin.devportal.solo.io.GroupFilter.prototype.getApiDocsList = function() {
  return /** @type{!Array<!proto.devportal.solo.io.ObjectRef>} */ (
    jspb.Message.getRepeatedWrapperField(this, dev$portal_api_dev$portal_v1_common_pb.ObjectRef, 1));
};


/** @param {!Array<!proto.devportal.solo.io.ObjectRef>} value */
proto.admin.devportal.solo.io.GroupFilter.prototype.setApiDocsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.devportal.solo.io.ObjectRef=} opt_value
 * @param {number=} opt_index
 * @return {!proto.devportal.solo.io.ObjectRef}
 */
proto.admin.devportal.solo.io.GroupFilter.prototype.addApiDocs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.devportal.solo.io.ObjectRef, opt_index);
};


proto.admin.devportal.solo.io.GroupFilter.prototype.clearApiDocsList = function() {
  this.setApiDocsList([]);
};


/**
 * repeated devportal.solo.io.ObjectRef portals = 2;
 * @return {!Array<!proto.devportal.solo.io.ObjectRef>}
 */
proto.admin.devportal.solo.io.GroupFilter.prototype.getPortalsList = function() {
  return /** @type{!Array<!proto.devportal.solo.io.ObjectRef>} */ (
    jspb.Message.getRepeatedWrapperField(this, dev$portal_api_dev$portal_v1_common_pb.ObjectRef, 2));
};


/** @param {!Array<!proto.devportal.solo.io.ObjectRef>} value */
proto.admin.devportal.solo.io.GroupFilter.prototype.setPortalsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.devportal.solo.io.ObjectRef=} opt_value
 * @param {number=} opt_index
 * @return {!proto.devportal.solo.io.ObjectRef}
 */
proto.admin.devportal.solo.io.GroupFilter.prototype.addPortals = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.devportal.solo.io.ObjectRef, opt_index);
};


proto.admin.devportal.solo.io.GroupFilter.prototype.clearPortalsList = function() {
  this.setPortalsList([]);
};


goog.object.extend(exports, proto.admin.devportal.solo.io);
