/* eslint-disable */
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
var gloo_projects_gloo_api_v1_core_matchers_matchers_pb = require('../../../../../../../gloo/projects/gloo/api/v1/core/matchers/matchers_pb.js');
var gloo_projects_gloo_api_external_envoy_extensions_transformation_transformation_pb = require('../../../../../../../envoy/extensions/transformation/transformation_pb.js');
var gogoproto_gogo_pb = require('../../../../../../../gogoproto/gogo_pb.js');
var extproto_ext_pb = require('../../../../../../../protoc-gen-ext/extproto/ext_pb.js');
goog.exportSymbol('proto.transformation.options.gloo.solo.io.RequestMatch', null, global);
goog.exportSymbol('proto.transformation.options.gloo.solo.io.RequestResponseTransformations', null, global);
goog.exportSymbol('proto.transformation.options.gloo.solo.io.ResponseMatch', null, global);
goog.exportSymbol('proto.transformation.options.gloo.solo.io.TransformationStages', null, global);
goog.exportSymbol('proto.transformation.options.gloo.solo.io.Transformations', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.transformation.options.gloo.solo.io.ResponseMatch = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.transformation.options.gloo.solo.io.ResponseMatch.repeatedFields_, null);
};
goog.inherits(proto.transformation.options.gloo.solo.io.ResponseMatch, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.transformation.options.gloo.solo.io.ResponseMatch.displayName = 'proto.transformation.options.gloo.solo.io.ResponseMatch';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.transformation.options.gloo.solo.io.ResponseMatch.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.transformation.options.gloo.solo.io.ResponseMatch.prototype.toObject = function(opt_includeInstance) {
  return proto.transformation.options.gloo.solo.io.ResponseMatch.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.transformation.options.gloo.solo.io.ResponseMatch} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transformation.options.gloo.solo.io.ResponseMatch.toObject = function(includeInstance, msg) {
  var f, obj = {
    matchersList: jspb.Message.toObjectList(msg.getMatchersList(),
    gloo_projects_gloo_api_v1_core_matchers_matchers_pb.HeaderMatcher.toObject, includeInstance),
    responseCodeDetails: jspb.Message.getFieldWithDefault(msg, 2, ""),
    responseTransformation: (f = msg.getResponseTransformation()) && gloo_projects_gloo_api_external_envoy_extensions_transformation_transformation_pb.Transformation.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.transformation.options.gloo.solo.io.ResponseMatch}
 */
proto.transformation.options.gloo.solo.io.ResponseMatch.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.transformation.options.gloo.solo.io.ResponseMatch;
  return proto.transformation.options.gloo.solo.io.ResponseMatch.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.transformation.options.gloo.solo.io.ResponseMatch} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.transformation.options.gloo.solo.io.ResponseMatch}
 */
proto.transformation.options.gloo.solo.io.ResponseMatch.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new gloo_projects_gloo_api_v1_core_matchers_matchers_pb.HeaderMatcher;
      reader.readMessage(value,gloo_projects_gloo_api_v1_core_matchers_matchers_pb.HeaderMatcher.deserializeBinaryFromReader);
      msg.addMatchers(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setResponseCodeDetails(value);
      break;
    case 3:
      var value = new gloo_projects_gloo_api_external_envoy_extensions_transformation_transformation_pb.Transformation;
      reader.readMessage(value,gloo_projects_gloo_api_external_envoy_extensions_transformation_transformation_pb.Transformation.deserializeBinaryFromReader);
      msg.setResponseTransformation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.transformation.options.gloo.solo.io.ResponseMatch.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.transformation.options.gloo.solo.io.ResponseMatch.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.transformation.options.gloo.solo.io.ResponseMatch} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transformation.options.gloo.solo.io.ResponseMatch.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMatchersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      gloo_projects_gloo_api_v1_core_matchers_matchers_pb.HeaderMatcher.serializeBinaryToWriter
    );
  }
  f = message.getResponseCodeDetails();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getResponseTransformation();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      gloo_projects_gloo_api_external_envoy_extensions_transformation_transformation_pb.Transformation.serializeBinaryToWriter
    );
  }
};


/**
 * repeated matchers.core.gloo.solo.io.HeaderMatcher matchers = 1;
 * @return {!Array<!proto.matchers.core.gloo.solo.io.HeaderMatcher>}
 */
proto.transformation.options.gloo.solo.io.ResponseMatch.prototype.getMatchersList = function() {
  return /** @type{!Array<!proto.matchers.core.gloo.solo.io.HeaderMatcher>} */ (
    jspb.Message.getRepeatedWrapperField(this, gloo_projects_gloo_api_v1_core_matchers_matchers_pb.HeaderMatcher, 1));
};


/** @param {!Array<!proto.matchers.core.gloo.solo.io.HeaderMatcher>} value */
proto.transformation.options.gloo.solo.io.ResponseMatch.prototype.setMatchersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.matchers.core.gloo.solo.io.HeaderMatcher=} opt_value
 * @param {number=} opt_index
 * @return {!proto.matchers.core.gloo.solo.io.HeaderMatcher}
 */
proto.transformation.options.gloo.solo.io.ResponseMatch.prototype.addMatchers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.matchers.core.gloo.solo.io.HeaderMatcher, opt_index);
};


proto.transformation.options.gloo.solo.io.ResponseMatch.prototype.clearMatchersList = function() {
  this.setMatchersList([]);
};


/**
 * optional string response_code_details = 2;
 * @return {string}
 */
proto.transformation.options.gloo.solo.io.ResponseMatch.prototype.getResponseCodeDetails = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.transformation.options.gloo.solo.io.ResponseMatch.prototype.setResponseCodeDetails = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional envoy.api.v2.filter.http.Transformation response_transformation = 3;
 * @return {?proto.envoy.api.v2.filter.http.Transformation}
 */
proto.transformation.options.gloo.solo.io.ResponseMatch.prototype.getResponseTransformation = function() {
  return /** @type{?proto.envoy.api.v2.filter.http.Transformation} */ (
    jspb.Message.getWrapperField(this, gloo_projects_gloo_api_external_envoy_extensions_transformation_transformation_pb.Transformation, 3));
};


/** @param {?proto.envoy.api.v2.filter.http.Transformation|undefined} value */
proto.transformation.options.gloo.solo.io.ResponseMatch.prototype.setResponseTransformation = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.transformation.options.gloo.solo.io.ResponseMatch.prototype.clearResponseTransformation = function() {
  this.setResponseTransformation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.transformation.options.gloo.solo.io.ResponseMatch.prototype.hasResponseTransformation = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.transformation.options.gloo.solo.io.RequestMatch = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.transformation.options.gloo.solo.io.RequestMatch, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.transformation.options.gloo.solo.io.RequestMatch.displayName = 'proto.transformation.options.gloo.solo.io.RequestMatch';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.transformation.options.gloo.solo.io.RequestMatch.prototype.toObject = function(opt_includeInstance) {
  return proto.transformation.options.gloo.solo.io.RequestMatch.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.transformation.options.gloo.solo.io.RequestMatch} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transformation.options.gloo.solo.io.RequestMatch.toObject = function(includeInstance, msg) {
  var f, obj = {
    matcher: (f = msg.getMatcher()) && gloo_projects_gloo_api_v1_core_matchers_matchers_pb.Matcher.toObject(includeInstance, f),
    clearRouteCache: jspb.Message.getFieldWithDefault(msg, 2, false),
    requestTransformation: (f = msg.getRequestTransformation()) && gloo_projects_gloo_api_external_envoy_extensions_transformation_transformation_pb.Transformation.toObject(includeInstance, f),
    responseTransformation: (f = msg.getResponseTransformation()) && gloo_projects_gloo_api_external_envoy_extensions_transformation_transformation_pb.Transformation.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.transformation.options.gloo.solo.io.RequestMatch}
 */
proto.transformation.options.gloo.solo.io.RequestMatch.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.transformation.options.gloo.solo.io.RequestMatch;
  return proto.transformation.options.gloo.solo.io.RequestMatch.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.transformation.options.gloo.solo.io.RequestMatch} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.transformation.options.gloo.solo.io.RequestMatch}
 */
proto.transformation.options.gloo.solo.io.RequestMatch.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new gloo_projects_gloo_api_v1_core_matchers_matchers_pb.Matcher;
      reader.readMessage(value,gloo_projects_gloo_api_v1_core_matchers_matchers_pb.Matcher.deserializeBinaryFromReader);
      msg.setMatcher(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setClearRouteCache(value);
      break;
    case 3:
      var value = new gloo_projects_gloo_api_external_envoy_extensions_transformation_transformation_pb.Transformation;
      reader.readMessage(value,gloo_projects_gloo_api_external_envoy_extensions_transformation_transformation_pb.Transformation.deserializeBinaryFromReader);
      msg.setRequestTransformation(value);
      break;
    case 4:
      var value = new gloo_projects_gloo_api_external_envoy_extensions_transformation_transformation_pb.Transformation;
      reader.readMessage(value,gloo_projects_gloo_api_external_envoy_extensions_transformation_transformation_pb.Transformation.deserializeBinaryFromReader);
      msg.setResponseTransformation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.transformation.options.gloo.solo.io.RequestMatch.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.transformation.options.gloo.solo.io.RequestMatch.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.transformation.options.gloo.solo.io.RequestMatch} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transformation.options.gloo.solo.io.RequestMatch.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMatcher();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      gloo_projects_gloo_api_v1_core_matchers_matchers_pb.Matcher.serializeBinaryToWriter
    );
  }
  f = message.getClearRouteCache();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getRequestTransformation();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      gloo_projects_gloo_api_external_envoy_extensions_transformation_transformation_pb.Transformation.serializeBinaryToWriter
    );
  }
  f = message.getResponseTransformation();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      gloo_projects_gloo_api_external_envoy_extensions_transformation_transformation_pb.Transformation.serializeBinaryToWriter
    );
  }
};


/**
 * optional matchers.core.gloo.solo.io.Matcher matcher = 1;
 * @return {?proto.matchers.core.gloo.solo.io.Matcher}
 */
proto.transformation.options.gloo.solo.io.RequestMatch.prototype.getMatcher = function() {
  return /** @type{?proto.matchers.core.gloo.solo.io.Matcher} */ (
    jspb.Message.getWrapperField(this, gloo_projects_gloo_api_v1_core_matchers_matchers_pb.Matcher, 1));
};


/** @param {?proto.matchers.core.gloo.solo.io.Matcher|undefined} value */
proto.transformation.options.gloo.solo.io.RequestMatch.prototype.setMatcher = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.transformation.options.gloo.solo.io.RequestMatch.prototype.clearMatcher = function() {
  this.setMatcher(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.transformation.options.gloo.solo.io.RequestMatch.prototype.hasMatcher = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool clear_route_cache = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.transformation.options.gloo.solo.io.RequestMatch.prototype.getClearRouteCache = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.transformation.options.gloo.solo.io.RequestMatch.prototype.setClearRouteCache = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional envoy.api.v2.filter.http.Transformation request_transformation = 3;
 * @return {?proto.envoy.api.v2.filter.http.Transformation}
 */
proto.transformation.options.gloo.solo.io.RequestMatch.prototype.getRequestTransformation = function() {
  return /** @type{?proto.envoy.api.v2.filter.http.Transformation} */ (
    jspb.Message.getWrapperField(this, gloo_projects_gloo_api_external_envoy_extensions_transformation_transformation_pb.Transformation, 3));
};


/** @param {?proto.envoy.api.v2.filter.http.Transformation|undefined} value */
proto.transformation.options.gloo.solo.io.RequestMatch.prototype.setRequestTransformation = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.transformation.options.gloo.solo.io.RequestMatch.prototype.clearRequestTransformation = function() {
  this.setRequestTransformation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.transformation.options.gloo.solo.io.RequestMatch.prototype.hasRequestTransformation = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional envoy.api.v2.filter.http.Transformation response_transformation = 4;
 * @return {?proto.envoy.api.v2.filter.http.Transformation}
 */
proto.transformation.options.gloo.solo.io.RequestMatch.prototype.getResponseTransformation = function() {
  return /** @type{?proto.envoy.api.v2.filter.http.Transformation} */ (
    jspb.Message.getWrapperField(this, gloo_projects_gloo_api_external_envoy_extensions_transformation_transformation_pb.Transformation, 4));
};


/** @param {?proto.envoy.api.v2.filter.http.Transformation|undefined} value */
proto.transformation.options.gloo.solo.io.RequestMatch.prototype.setResponseTransformation = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.transformation.options.gloo.solo.io.RequestMatch.prototype.clearResponseTransformation = function() {
  this.setResponseTransformation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.transformation.options.gloo.solo.io.RequestMatch.prototype.hasResponseTransformation = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.transformation.options.gloo.solo.io.Transformations = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.transformation.options.gloo.solo.io.Transformations, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.transformation.options.gloo.solo.io.Transformations.displayName = 'proto.transformation.options.gloo.solo.io.Transformations';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.transformation.options.gloo.solo.io.Transformations.prototype.toObject = function(opt_includeInstance) {
  return proto.transformation.options.gloo.solo.io.Transformations.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.transformation.options.gloo.solo.io.Transformations} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transformation.options.gloo.solo.io.Transformations.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestTransformation: (f = msg.getRequestTransformation()) && gloo_projects_gloo_api_external_envoy_extensions_transformation_transformation_pb.Transformation.toObject(includeInstance, f),
    clearRouteCache: jspb.Message.getFieldWithDefault(msg, 3, false),
    responseTransformation: (f = msg.getResponseTransformation()) && gloo_projects_gloo_api_external_envoy_extensions_transformation_transformation_pb.Transformation.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.transformation.options.gloo.solo.io.Transformations}
 */
proto.transformation.options.gloo.solo.io.Transformations.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.transformation.options.gloo.solo.io.Transformations;
  return proto.transformation.options.gloo.solo.io.Transformations.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.transformation.options.gloo.solo.io.Transformations} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.transformation.options.gloo.solo.io.Transformations}
 */
proto.transformation.options.gloo.solo.io.Transformations.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new gloo_projects_gloo_api_external_envoy_extensions_transformation_transformation_pb.Transformation;
      reader.readMessage(value,gloo_projects_gloo_api_external_envoy_extensions_transformation_transformation_pb.Transformation.deserializeBinaryFromReader);
      msg.setRequestTransformation(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setClearRouteCache(value);
      break;
    case 2:
      var value = new gloo_projects_gloo_api_external_envoy_extensions_transformation_transformation_pb.Transformation;
      reader.readMessage(value,gloo_projects_gloo_api_external_envoy_extensions_transformation_transformation_pb.Transformation.deserializeBinaryFromReader);
      msg.setResponseTransformation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.transformation.options.gloo.solo.io.Transformations.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.transformation.options.gloo.solo.io.Transformations.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.transformation.options.gloo.solo.io.Transformations} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transformation.options.gloo.solo.io.Transformations.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestTransformation();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      gloo_projects_gloo_api_external_envoy_extensions_transformation_transformation_pb.Transformation.serializeBinaryToWriter
    );
  }
  f = message.getClearRouteCache();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getResponseTransformation();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      gloo_projects_gloo_api_external_envoy_extensions_transformation_transformation_pb.Transformation.serializeBinaryToWriter
    );
  }
};


/**
 * optional envoy.api.v2.filter.http.Transformation request_transformation = 1;
 * @return {?proto.envoy.api.v2.filter.http.Transformation}
 */
proto.transformation.options.gloo.solo.io.Transformations.prototype.getRequestTransformation = function() {
  return /** @type{?proto.envoy.api.v2.filter.http.Transformation} */ (
    jspb.Message.getWrapperField(this, gloo_projects_gloo_api_external_envoy_extensions_transformation_transformation_pb.Transformation, 1));
};


/** @param {?proto.envoy.api.v2.filter.http.Transformation|undefined} value */
proto.transformation.options.gloo.solo.io.Transformations.prototype.setRequestTransformation = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.transformation.options.gloo.solo.io.Transformations.prototype.clearRequestTransformation = function() {
  this.setRequestTransformation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.transformation.options.gloo.solo.io.Transformations.prototype.hasRequestTransformation = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool clear_route_cache = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.transformation.options.gloo.solo.io.Transformations.prototype.getClearRouteCache = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.transformation.options.gloo.solo.io.Transformations.prototype.setClearRouteCache = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional envoy.api.v2.filter.http.Transformation response_transformation = 2;
 * @return {?proto.envoy.api.v2.filter.http.Transformation}
 */
proto.transformation.options.gloo.solo.io.Transformations.prototype.getResponseTransformation = function() {
  return /** @type{?proto.envoy.api.v2.filter.http.Transformation} */ (
    jspb.Message.getWrapperField(this, gloo_projects_gloo_api_external_envoy_extensions_transformation_transformation_pb.Transformation, 2));
};


/** @param {?proto.envoy.api.v2.filter.http.Transformation|undefined} value */
proto.transformation.options.gloo.solo.io.Transformations.prototype.setResponseTransformation = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.transformation.options.gloo.solo.io.Transformations.prototype.clearResponseTransformation = function() {
  this.setResponseTransformation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.transformation.options.gloo.solo.io.Transformations.prototype.hasResponseTransformation = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.transformation.options.gloo.solo.io.RequestResponseTransformations = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.transformation.options.gloo.solo.io.RequestResponseTransformations.repeatedFields_, null);
};
goog.inherits(proto.transformation.options.gloo.solo.io.RequestResponseTransformations, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.transformation.options.gloo.solo.io.RequestResponseTransformations.displayName = 'proto.transformation.options.gloo.solo.io.RequestResponseTransformations';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.transformation.options.gloo.solo.io.RequestResponseTransformations.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.transformation.options.gloo.solo.io.RequestResponseTransformations.prototype.toObject = function(opt_includeInstance) {
  return proto.transformation.options.gloo.solo.io.RequestResponseTransformations.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.transformation.options.gloo.solo.io.RequestResponseTransformations} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transformation.options.gloo.solo.io.RequestResponseTransformations.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestTransformsList: jspb.Message.toObjectList(msg.getRequestTransformsList(),
    proto.transformation.options.gloo.solo.io.RequestMatch.toObject, includeInstance),
    responseTransformsList: jspb.Message.toObjectList(msg.getResponseTransformsList(),
    proto.transformation.options.gloo.solo.io.ResponseMatch.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.transformation.options.gloo.solo.io.RequestResponseTransformations}
 */
proto.transformation.options.gloo.solo.io.RequestResponseTransformations.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.transformation.options.gloo.solo.io.RequestResponseTransformations;
  return proto.transformation.options.gloo.solo.io.RequestResponseTransformations.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.transformation.options.gloo.solo.io.RequestResponseTransformations} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.transformation.options.gloo.solo.io.RequestResponseTransformations}
 */
proto.transformation.options.gloo.solo.io.RequestResponseTransformations.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.transformation.options.gloo.solo.io.RequestMatch;
      reader.readMessage(value,proto.transformation.options.gloo.solo.io.RequestMatch.deserializeBinaryFromReader);
      msg.addRequestTransforms(value);
      break;
    case 2:
      var value = new proto.transformation.options.gloo.solo.io.ResponseMatch;
      reader.readMessage(value,proto.transformation.options.gloo.solo.io.ResponseMatch.deserializeBinaryFromReader);
      msg.addResponseTransforms(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.transformation.options.gloo.solo.io.RequestResponseTransformations.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.transformation.options.gloo.solo.io.RequestResponseTransformations.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.transformation.options.gloo.solo.io.RequestResponseTransformations} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transformation.options.gloo.solo.io.RequestResponseTransformations.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestTransformsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.transformation.options.gloo.solo.io.RequestMatch.serializeBinaryToWriter
    );
  }
  f = message.getResponseTransformsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.transformation.options.gloo.solo.io.ResponseMatch.serializeBinaryToWriter
    );
  }
};


/**
 * repeated RequestMatch request_transforms = 1;
 * @return {!Array<!proto.transformation.options.gloo.solo.io.RequestMatch>}
 */
proto.transformation.options.gloo.solo.io.RequestResponseTransformations.prototype.getRequestTransformsList = function() {
  return /** @type{!Array<!proto.transformation.options.gloo.solo.io.RequestMatch>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.transformation.options.gloo.solo.io.RequestMatch, 1));
};


/** @param {!Array<!proto.transformation.options.gloo.solo.io.RequestMatch>} value */
proto.transformation.options.gloo.solo.io.RequestResponseTransformations.prototype.setRequestTransformsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.transformation.options.gloo.solo.io.RequestMatch=} opt_value
 * @param {number=} opt_index
 * @return {!proto.transformation.options.gloo.solo.io.RequestMatch}
 */
proto.transformation.options.gloo.solo.io.RequestResponseTransformations.prototype.addRequestTransforms = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.transformation.options.gloo.solo.io.RequestMatch, opt_index);
};


proto.transformation.options.gloo.solo.io.RequestResponseTransformations.prototype.clearRequestTransformsList = function() {
  this.setRequestTransformsList([]);
};


/**
 * repeated ResponseMatch response_transforms = 2;
 * @return {!Array<!proto.transformation.options.gloo.solo.io.ResponseMatch>}
 */
proto.transformation.options.gloo.solo.io.RequestResponseTransformations.prototype.getResponseTransformsList = function() {
  return /** @type{!Array<!proto.transformation.options.gloo.solo.io.ResponseMatch>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.transformation.options.gloo.solo.io.ResponseMatch, 2));
};


/** @param {!Array<!proto.transformation.options.gloo.solo.io.ResponseMatch>} value */
proto.transformation.options.gloo.solo.io.RequestResponseTransformations.prototype.setResponseTransformsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.transformation.options.gloo.solo.io.ResponseMatch=} opt_value
 * @param {number=} opt_index
 * @return {!proto.transformation.options.gloo.solo.io.ResponseMatch}
 */
proto.transformation.options.gloo.solo.io.RequestResponseTransformations.prototype.addResponseTransforms = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.transformation.options.gloo.solo.io.ResponseMatch, opt_index);
};


proto.transformation.options.gloo.solo.io.RequestResponseTransformations.prototype.clearResponseTransformsList = function() {
  this.setResponseTransformsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.transformation.options.gloo.solo.io.TransformationStages = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.transformation.options.gloo.solo.io.TransformationStages, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.transformation.options.gloo.solo.io.TransformationStages.displayName = 'proto.transformation.options.gloo.solo.io.TransformationStages';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.transformation.options.gloo.solo.io.TransformationStages.prototype.toObject = function(opt_includeInstance) {
  return proto.transformation.options.gloo.solo.io.TransformationStages.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.transformation.options.gloo.solo.io.TransformationStages} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transformation.options.gloo.solo.io.TransformationStages.toObject = function(includeInstance, msg) {
  var f, obj = {
    early: (f = msg.getEarly()) && proto.transformation.options.gloo.solo.io.RequestResponseTransformations.toObject(includeInstance, f),
    regular: (f = msg.getRegular()) && proto.transformation.options.gloo.solo.io.RequestResponseTransformations.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.transformation.options.gloo.solo.io.TransformationStages}
 */
proto.transformation.options.gloo.solo.io.TransformationStages.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.transformation.options.gloo.solo.io.TransformationStages;
  return proto.transformation.options.gloo.solo.io.TransformationStages.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.transformation.options.gloo.solo.io.TransformationStages} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.transformation.options.gloo.solo.io.TransformationStages}
 */
proto.transformation.options.gloo.solo.io.TransformationStages.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.transformation.options.gloo.solo.io.RequestResponseTransformations;
      reader.readMessage(value,proto.transformation.options.gloo.solo.io.RequestResponseTransformations.deserializeBinaryFromReader);
      msg.setEarly(value);
      break;
    case 2:
      var value = new proto.transformation.options.gloo.solo.io.RequestResponseTransformations;
      reader.readMessage(value,proto.transformation.options.gloo.solo.io.RequestResponseTransformations.deserializeBinaryFromReader);
      msg.setRegular(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.transformation.options.gloo.solo.io.TransformationStages.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.transformation.options.gloo.solo.io.TransformationStages.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.transformation.options.gloo.solo.io.TransformationStages} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transformation.options.gloo.solo.io.TransformationStages.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEarly();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.transformation.options.gloo.solo.io.RequestResponseTransformations.serializeBinaryToWriter
    );
  }
  f = message.getRegular();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.transformation.options.gloo.solo.io.RequestResponseTransformations.serializeBinaryToWriter
    );
  }
};


/**
 * optional RequestResponseTransformations early = 1;
 * @return {?proto.transformation.options.gloo.solo.io.RequestResponseTransformations}
 */
proto.transformation.options.gloo.solo.io.TransformationStages.prototype.getEarly = function() {
  return /** @type{?proto.transformation.options.gloo.solo.io.RequestResponseTransformations} */ (
    jspb.Message.getWrapperField(this, proto.transformation.options.gloo.solo.io.RequestResponseTransformations, 1));
};


/** @param {?proto.transformation.options.gloo.solo.io.RequestResponseTransformations|undefined} value */
proto.transformation.options.gloo.solo.io.TransformationStages.prototype.setEarly = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.transformation.options.gloo.solo.io.TransformationStages.prototype.clearEarly = function() {
  this.setEarly(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.transformation.options.gloo.solo.io.TransformationStages.prototype.hasEarly = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RequestResponseTransformations regular = 2;
 * @return {?proto.transformation.options.gloo.solo.io.RequestResponseTransformations}
 */
proto.transformation.options.gloo.solo.io.TransformationStages.prototype.getRegular = function() {
  return /** @type{?proto.transformation.options.gloo.solo.io.RequestResponseTransformations} */ (
    jspb.Message.getWrapperField(this, proto.transformation.options.gloo.solo.io.RequestResponseTransformations, 2));
};


/** @param {?proto.transformation.options.gloo.solo.io.RequestResponseTransformations|undefined} value */
proto.transformation.options.gloo.solo.io.TransformationStages.prototype.setRegular = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.transformation.options.gloo.solo.io.TransformationStages.prototype.clearRegular = function() {
  this.setRegular(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.transformation.options.gloo.solo.io.TransformationStages.prototype.hasRegular = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.transformation.options.gloo.solo.io);
