/* eslint-disable */
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var solo$apis_api_rate$limiter_v1alpha1_ratelimit_pb = require('../../../../../../../../solo-apis/api/rate-limiter/v1alpha1/ratelimit_pb.js');
var solo$kit_api_v1_ref_pb = require('../../../../../../../../solo-kit/api/v1/ref_pb.js');
var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
var gogoproto_gogo_pb = require('../../../../../../../../gogoproto/gogo_pb.js');
var extproto_ext_pb = require('../../../../../../../../protoc-gen-ext/extproto/ext_pb.js');
goog.exportSymbol('proto.ratelimit.options.gloo.solo.io.IngressRateLimit', null, global);
goog.exportSymbol('proto.ratelimit.options.gloo.solo.io.RateLimitConfigRef', null, global);
goog.exportSymbol('proto.ratelimit.options.gloo.solo.io.RateLimitConfigRefs', null, global);
goog.exportSymbol('proto.ratelimit.options.gloo.solo.io.RateLimitRouteExtension', null, global);
goog.exportSymbol('proto.ratelimit.options.gloo.solo.io.RateLimitVhostExtension', null, global);
goog.exportSymbol('proto.ratelimit.options.gloo.solo.io.ServiceSettings', null, global);
goog.exportSymbol('proto.ratelimit.options.gloo.solo.io.Settings', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ratelimit.options.gloo.solo.io.IngressRateLimit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ratelimit.options.gloo.solo.io.IngressRateLimit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ratelimit.options.gloo.solo.io.IngressRateLimit.displayName = 'proto.ratelimit.options.gloo.solo.io.IngressRateLimit';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ratelimit.options.gloo.solo.io.IngressRateLimit.prototype.toObject = function(opt_includeInstance) {
  return proto.ratelimit.options.gloo.solo.io.IngressRateLimit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ratelimit.options.gloo.solo.io.IngressRateLimit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.options.gloo.solo.io.IngressRateLimit.toObject = function(includeInstance, msg) {
  var f, obj = {
    authorizedLimits: (f = msg.getAuthorizedLimits()) && solo$apis_api_rate$limiter_v1alpha1_ratelimit_pb.RateLimit.toObject(includeInstance, f),
    anonymousLimits: (f = msg.getAnonymousLimits()) && solo$apis_api_rate$limiter_v1alpha1_ratelimit_pb.RateLimit.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ratelimit.options.gloo.solo.io.IngressRateLimit}
 */
proto.ratelimit.options.gloo.solo.io.IngressRateLimit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ratelimit.options.gloo.solo.io.IngressRateLimit;
  return proto.ratelimit.options.gloo.solo.io.IngressRateLimit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ratelimit.options.gloo.solo.io.IngressRateLimit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ratelimit.options.gloo.solo.io.IngressRateLimit}
 */
proto.ratelimit.options.gloo.solo.io.IngressRateLimit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new solo$apis_api_rate$limiter_v1alpha1_ratelimit_pb.RateLimit;
      reader.readMessage(value,solo$apis_api_rate$limiter_v1alpha1_ratelimit_pb.RateLimit.deserializeBinaryFromReader);
      msg.setAuthorizedLimits(value);
      break;
    case 2:
      var value = new solo$apis_api_rate$limiter_v1alpha1_ratelimit_pb.RateLimit;
      reader.readMessage(value,solo$apis_api_rate$limiter_v1alpha1_ratelimit_pb.RateLimit.deserializeBinaryFromReader);
      msg.setAnonymousLimits(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ratelimit.options.gloo.solo.io.IngressRateLimit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ratelimit.options.gloo.solo.io.IngressRateLimit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ratelimit.options.gloo.solo.io.IngressRateLimit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.options.gloo.solo.io.IngressRateLimit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthorizedLimits();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      solo$apis_api_rate$limiter_v1alpha1_ratelimit_pb.RateLimit.serializeBinaryToWriter
    );
  }
  f = message.getAnonymousLimits();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      solo$apis_api_rate$limiter_v1alpha1_ratelimit_pb.RateLimit.serializeBinaryToWriter
    );
  }
};


/**
 * optional ratelimit.api.solo.io.RateLimit authorized_limits = 1;
 * @return {?proto.ratelimit.api.solo.io.RateLimit}
 */
proto.ratelimit.options.gloo.solo.io.IngressRateLimit.prototype.getAuthorizedLimits = function() {
  return /** @type{?proto.ratelimit.api.solo.io.RateLimit} */ (
    jspb.Message.getWrapperField(this, solo$apis_api_rate$limiter_v1alpha1_ratelimit_pb.RateLimit, 1));
};


/** @param {?proto.ratelimit.api.solo.io.RateLimit|undefined} value */
proto.ratelimit.options.gloo.solo.io.IngressRateLimit.prototype.setAuthorizedLimits = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.ratelimit.options.gloo.solo.io.IngressRateLimit.prototype.clearAuthorizedLimits = function() {
  this.setAuthorizedLimits(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ratelimit.options.gloo.solo.io.IngressRateLimit.prototype.hasAuthorizedLimits = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ratelimit.api.solo.io.RateLimit anonymous_limits = 2;
 * @return {?proto.ratelimit.api.solo.io.RateLimit}
 */
proto.ratelimit.options.gloo.solo.io.IngressRateLimit.prototype.getAnonymousLimits = function() {
  return /** @type{?proto.ratelimit.api.solo.io.RateLimit} */ (
    jspb.Message.getWrapperField(this, solo$apis_api_rate$limiter_v1alpha1_ratelimit_pb.RateLimit, 2));
};


/** @param {?proto.ratelimit.api.solo.io.RateLimit|undefined} value */
proto.ratelimit.options.gloo.solo.io.IngressRateLimit.prototype.setAnonymousLimits = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.ratelimit.options.gloo.solo.io.IngressRateLimit.prototype.clearAnonymousLimits = function() {
  this.setAnonymousLimits(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ratelimit.options.gloo.solo.io.IngressRateLimit.prototype.hasAnonymousLimits = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ratelimit.options.gloo.solo.io.Settings = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ratelimit.options.gloo.solo.io.Settings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ratelimit.options.gloo.solo.io.Settings.displayName = 'proto.ratelimit.options.gloo.solo.io.Settings';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ratelimit.options.gloo.solo.io.Settings.prototype.toObject = function(opt_includeInstance) {
  return proto.ratelimit.options.gloo.solo.io.Settings.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ratelimit.options.gloo.solo.io.Settings} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.options.gloo.solo.io.Settings.toObject = function(includeInstance, msg) {
  var f, obj = {
    ratelimitServerRef: (f = msg.getRatelimitServerRef()) && solo$kit_api_v1_ref_pb.ResourceRef.toObject(includeInstance, f),
    requestTimeout: (f = msg.getRequestTimeout()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    denyOnFail: jspb.Message.getFieldWithDefault(msg, 3, false),
    rateLimitBeforeAuth: jspb.Message.getFieldWithDefault(msg, 9, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ratelimit.options.gloo.solo.io.Settings}
 */
proto.ratelimit.options.gloo.solo.io.Settings.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ratelimit.options.gloo.solo.io.Settings;
  return proto.ratelimit.options.gloo.solo.io.Settings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ratelimit.options.gloo.solo.io.Settings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ratelimit.options.gloo.solo.io.Settings}
 */
proto.ratelimit.options.gloo.solo.io.Settings.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new solo$kit_api_v1_ref_pb.ResourceRef;
      reader.readMessage(value,solo$kit_api_v1_ref_pb.ResourceRef.deserializeBinaryFromReader);
      msg.setRatelimitServerRef(value);
      break;
    case 2:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setRequestTimeout(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDenyOnFail(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRateLimitBeforeAuth(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ratelimit.options.gloo.solo.io.Settings.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ratelimit.options.gloo.solo.io.Settings.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ratelimit.options.gloo.solo.io.Settings} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.options.gloo.solo.io.Settings.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRatelimitServerRef();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      solo$kit_api_v1_ref_pb.ResourceRef.serializeBinaryToWriter
    );
  }
  f = message.getRequestTimeout();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getDenyOnFail();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getRateLimitBeforeAuth();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
};


/**
 * optional core.solo.io.ResourceRef ratelimit_server_ref = 1;
 * @return {?proto.core.solo.io.ResourceRef}
 */
proto.ratelimit.options.gloo.solo.io.Settings.prototype.getRatelimitServerRef = function() {
  return /** @type{?proto.core.solo.io.ResourceRef} */ (
    jspb.Message.getWrapperField(this, solo$kit_api_v1_ref_pb.ResourceRef, 1));
};


/** @param {?proto.core.solo.io.ResourceRef|undefined} value */
proto.ratelimit.options.gloo.solo.io.Settings.prototype.setRatelimitServerRef = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.ratelimit.options.gloo.solo.io.Settings.prototype.clearRatelimitServerRef = function() {
  this.setRatelimitServerRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ratelimit.options.gloo.solo.io.Settings.prototype.hasRatelimitServerRef = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Duration request_timeout = 2;
 * @return {?proto.google.protobuf.Duration}
 */
proto.ratelimit.options.gloo.solo.io.Settings.prototype.getRequestTimeout = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 2));
};


/** @param {?proto.google.protobuf.Duration|undefined} value */
proto.ratelimit.options.gloo.solo.io.Settings.prototype.setRequestTimeout = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.ratelimit.options.gloo.solo.io.Settings.prototype.clearRequestTimeout = function() {
  this.setRequestTimeout(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ratelimit.options.gloo.solo.io.Settings.prototype.hasRequestTimeout = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool deny_on_fail = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.ratelimit.options.gloo.solo.io.Settings.prototype.getDenyOnFail = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.ratelimit.options.gloo.solo.io.Settings.prototype.setDenyOnFail = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool rate_limit_before_auth = 9;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.ratelimit.options.gloo.solo.io.Settings.prototype.getRateLimitBeforeAuth = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 9, false));
};


/** @param {boolean} value */
proto.ratelimit.options.gloo.solo.io.Settings.prototype.setRateLimitBeforeAuth = function(value) {
  jspb.Message.setProto3BooleanField(this, 9, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ratelimit.options.gloo.solo.io.ServiceSettings = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ratelimit.options.gloo.solo.io.ServiceSettings.repeatedFields_, null);
};
goog.inherits(proto.ratelimit.options.gloo.solo.io.ServiceSettings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ratelimit.options.gloo.solo.io.ServiceSettings.displayName = 'proto.ratelimit.options.gloo.solo.io.ServiceSettings';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ratelimit.options.gloo.solo.io.ServiceSettings.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ratelimit.options.gloo.solo.io.ServiceSettings.prototype.toObject = function(opt_includeInstance) {
  return proto.ratelimit.options.gloo.solo.io.ServiceSettings.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ratelimit.options.gloo.solo.io.ServiceSettings} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.options.gloo.solo.io.ServiceSettings.toObject = function(includeInstance, msg) {
  var f, obj = {
    descriptorsList: jspb.Message.toObjectList(msg.getDescriptorsList(),
    solo$apis_api_rate$limiter_v1alpha1_ratelimit_pb.Descriptor.toObject, includeInstance),
    setDescriptorsList: jspb.Message.toObjectList(msg.getSetDescriptorsList(),
    solo$apis_api_rate$limiter_v1alpha1_ratelimit_pb.SetDescriptor.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ratelimit.options.gloo.solo.io.ServiceSettings}
 */
proto.ratelimit.options.gloo.solo.io.ServiceSettings.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ratelimit.options.gloo.solo.io.ServiceSettings;
  return proto.ratelimit.options.gloo.solo.io.ServiceSettings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ratelimit.options.gloo.solo.io.ServiceSettings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ratelimit.options.gloo.solo.io.ServiceSettings}
 */
proto.ratelimit.options.gloo.solo.io.ServiceSettings.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new solo$apis_api_rate$limiter_v1alpha1_ratelimit_pb.Descriptor;
      reader.readMessage(value,solo$apis_api_rate$limiter_v1alpha1_ratelimit_pb.Descriptor.deserializeBinaryFromReader);
      msg.addDescriptors(value);
      break;
    case 2:
      var value = new solo$apis_api_rate$limiter_v1alpha1_ratelimit_pb.SetDescriptor;
      reader.readMessage(value,solo$apis_api_rate$limiter_v1alpha1_ratelimit_pb.SetDescriptor.deserializeBinaryFromReader);
      msg.addSetDescriptors(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ratelimit.options.gloo.solo.io.ServiceSettings.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ratelimit.options.gloo.solo.io.ServiceSettings.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ratelimit.options.gloo.solo.io.ServiceSettings} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.options.gloo.solo.io.ServiceSettings.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDescriptorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      solo$apis_api_rate$limiter_v1alpha1_ratelimit_pb.Descriptor.serializeBinaryToWriter
    );
  }
  f = message.getSetDescriptorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      solo$apis_api_rate$limiter_v1alpha1_ratelimit_pb.SetDescriptor.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ratelimit.api.solo.io.Descriptor descriptors = 1;
 * @return {!Array<!proto.ratelimit.api.solo.io.Descriptor>}
 */
proto.ratelimit.options.gloo.solo.io.ServiceSettings.prototype.getDescriptorsList = function() {
  return /** @type{!Array<!proto.ratelimit.api.solo.io.Descriptor>} */ (
    jspb.Message.getRepeatedWrapperField(this, solo$apis_api_rate$limiter_v1alpha1_ratelimit_pb.Descriptor, 1));
};


/** @param {!Array<!proto.ratelimit.api.solo.io.Descriptor>} value */
proto.ratelimit.options.gloo.solo.io.ServiceSettings.prototype.setDescriptorsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ratelimit.api.solo.io.Descriptor=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ratelimit.api.solo.io.Descriptor}
 */
proto.ratelimit.options.gloo.solo.io.ServiceSettings.prototype.addDescriptors = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ratelimit.api.solo.io.Descriptor, opt_index);
};


proto.ratelimit.options.gloo.solo.io.ServiceSettings.prototype.clearDescriptorsList = function() {
  this.setDescriptorsList([]);
};


/**
 * repeated ratelimit.api.solo.io.SetDescriptor set_descriptors = 2;
 * @return {!Array<!proto.ratelimit.api.solo.io.SetDescriptor>}
 */
proto.ratelimit.options.gloo.solo.io.ServiceSettings.prototype.getSetDescriptorsList = function() {
  return /** @type{!Array<!proto.ratelimit.api.solo.io.SetDescriptor>} */ (
    jspb.Message.getRepeatedWrapperField(this, solo$apis_api_rate$limiter_v1alpha1_ratelimit_pb.SetDescriptor, 2));
};


/** @param {!Array<!proto.ratelimit.api.solo.io.SetDescriptor>} value */
proto.ratelimit.options.gloo.solo.io.ServiceSettings.prototype.setSetDescriptorsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.ratelimit.api.solo.io.SetDescriptor=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ratelimit.api.solo.io.SetDescriptor}
 */
proto.ratelimit.options.gloo.solo.io.ServiceSettings.prototype.addSetDescriptors = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.ratelimit.api.solo.io.SetDescriptor, opt_index);
};


proto.ratelimit.options.gloo.solo.io.ServiceSettings.prototype.clearSetDescriptorsList = function() {
  this.setSetDescriptorsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ratelimit.options.gloo.solo.io.RateLimitConfigRefs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ratelimit.options.gloo.solo.io.RateLimitConfigRefs.repeatedFields_, null);
};
goog.inherits(proto.ratelimit.options.gloo.solo.io.RateLimitConfigRefs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ratelimit.options.gloo.solo.io.RateLimitConfigRefs.displayName = 'proto.ratelimit.options.gloo.solo.io.RateLimitConfigRefs';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ratelimit.options.gloo.solo.io.RateLimitConfigRefs.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ratelimit.options.gloo.solo.io.RateLimitConfigRefs.prototype.toObject = function(opt_includeInstance) {
  return proto.ratelimit.options.gloo.solo.io.RateLimitConfigRefs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ratelimit.options.gloo.solo.io.RateLimitConfigRefs} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.options.gloo.solo.io.RateLimitConfigRefs.toObject = function(includeInstance, msg) {
  var f, obj = {
    refsList: jspb.Message.toObjectList(msg.getRefsList(),
    proto.ratelimit.options.gloo.solo.io.RateLimitConfigRef.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ratelimit.options.gloo.solo.io.RateLimitConfigRefs}
 */
proto.ratelimit.options.gloo.solo.io.RateLimitConfigRefs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ratelimit.options.gloo.solo.io.RateLimitConfigRefs;
  return proto.ratelimit.options.gloo.solo.io.RateLimitConfigRefs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ratelimit.options.gloo.solo.io.RateLimitConfigRefs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ratelimit.options.gloo.solo.io.RateLimitConfigRefs}
 */
proto.ratelimit.options.gloo.solo.io.RateLimitConfigRefs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ratelimit.options.gloo.solo.io.RateLimitConfigRef;
      reader.readMessage(value,proto.ratelimit.options.gloo.solo.io.RateLimitConfigRef.deserializeBinaryFromReader);
      msg.addRefs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ratelimit.options.gloo.solo.io.RateLimitConfigRefs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ratelimit.options.gloo.solo.io.RateLimitConfigRefs.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ratelimit.options.gloo.solo.io.RateLimitConfigRefs} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.options.gloo.solo.io.RateLimitConfigRefs.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRefsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ratelimit.options.gloo.solo.io.RateLimitConfigRef.serializeBinaryToWriter
    );
  }
};


/**
 * repeated RateLimitConfigRef refs = 1;
 * @return {!Array<!proto.ratelimit.options.gloo.solo.io.RateLimitConfigRef>}
 */
proto.ratelimit.options.gloo.solo.io.RateLimitConfigRefs.prototype.getRefsList = function() {
  return /** @type{!Array<!proto.ratelimit.options.gloo.solo.io.RateLimitConfigRef>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ratelimit.options.gloo.solo.io.RateLimitConfigRef, 1));
};


/** @param {!Array<!proto.ratelimit.options.gloo.solo.io.RateLimitConfigRef>} value */
proto.ratelimit.options.gloo.solo.io.RateLimitConfigRefs.prototype.setRefsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ratelimit.options.gloo.solo.io.RateLimitConfigRef=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ratelimit.options.gloo.solo.io.RateLimitConfigRef}
 */
proto.ratelimit.options.gloo.solo.io.RateLimitConfigRefs.prototype.addRefs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ratelimit.options.gloo.solo.io.RateLimitConfigRef, opt_index);
};


proto.ratelimit.options.gloo.solo.io.RateLimitConfigRefs.prototype.clearRefsList = function() {
  this.setRefsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ratelimit.options.gloo.solo.io.RateLimitConfigRef = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ratelimit.options.gloo.solo.io.RateLimitConfigRef, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ratelimit.options.gloo.solo.io.RateLimitConfigRef.displayName = 'proto.ratelimit.options.gloo.solo.io.RateLimitConfigRef';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ratelimit.options.gloo.solo.io.RateLimitConfigRef.prototype.toObject = function(opt_includeInstance) {
  return proto.ratelimit.options.gloo.solo.io.RateLimitConfigRef.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ratelimit.options.gloo.solo.io.RateLimitConfigRef} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.options.gloo.solo.io.RateLimitConfigRef.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    namespace: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ratelimit.options.gloo.solo.io.RateLimitConfigRef}
 */
proto.ratelimit.options.gloo.solo.io.RateLimitConfigRef.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ratelimit.options.gloo.solo.io.RateLimitConfigRef;
  return proto.ratelimit.options.gloo.solo.io.RateLimitConfigRef.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ratelimit.options.gloo.solo.io.RateLimitConfigRef} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ratelimit.options.gloo.solo.io.RateLimitConfigRef}
 */
proto.ratelimit.options.gloo.solo.io.RateLimitConfigRef.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ratelimit.options.gloo.solo.io.RateLimitConfigRef.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ratelimit.options.gloo.solo.io.RateLimitConfigRef.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ratelimit.options.gloo.solo.io.RateLimitConfigRef} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.options.gloo.solo.io.RateLimitConfigRef.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.ratelimit.options.gloo.solo.io.RateLimitConfigRef.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ratelimit.options.gloo.solo.io.RateLimitConfigRef.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string namespace = 2;
 * @return {string}
 */
proto.ratelimit.options.gloo.solo.io.RateLimitConfigRef.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ratelimit.options.gloo.solo.io.RateLimitConfigRef.prototype.setNamespace = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ratelimit.options.gloo.solo.io.RateLimitVhostExtension = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ratelimit.options.gloo.solo.io.RateLimitVhostExtension.repeatedFields_, null);
};
goog.inherits(proto.ratelimit.options.gloo.solo.io.RateLimitVhostExtension, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ratelimit.options.gloo.solo.io.RateLimitVhostExtension.displayName = 'proto.ratelimit.options.gloo.solo.io.RateLimitVhostExtension';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ratelimit.options.gloo.solo.io.RateLimitVhostExtension.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ratelimit.options.gloo.solo.io.RateLimitVhostExtension.prototype.toObject = function(opt_includeInstance) {
  return proto.ratelimit.options.gloo.solo.io.RateLimitVhostExtension.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ratelimit.options.gloo.solo.io.RateLimitVhostExtension} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.options.gloo.solo.io.RateLimitVhostExtension.toObject = function(includeInstance, msg) {
  var f, obj = {
    rateLimitsList: jspb.Message.toObjectList(msg.getRateLimitsList(),
    solo$apis_api_rate$limiter_v1alpha1_ratelimit_pb.RateLimitActions.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ratelimit.options.gloo.solo.io.RateLimitVhostExtension}
 */
proto.ratelimit.options.gloo.solo.io.RateLimitVhostExtension.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ratelimit.options.gloo.solo.io.RateLimitVhostExtension;
  return proto.ratelimit.options.gloo.solo.io.RateLimitVhostExtension.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ratelimit.options.gloo.solo.io.RateLimitVhostExtension} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ratelimit.options.gloo.solo.io.RateLimitVhostExtension}
 */
proto.ratelimit.options.gloo.solo.io.RateLimitVhostExtension.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new solo$apis_api_rate$limiter_v1alpha1_ratelimit_pb.RateLimitActions;
      reader.readMessage(value,solo$apis_api_rate$limiter_v1alpha1_ratelimit_pb.RateLimitActions.deserializeBinaryFromReader);
      msg.addRateLimits(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ratelimit.options.gloo.solo.io.RateLimitVhostExtension.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ratelimit.options.gloo.solo.io.RateLimitVhostExtension.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ratelimit.options.gloo.solo.io.RateLimitVhostExtension} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.options.gloo.solo.io.RateLimitVhostExtension.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRateLimitsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      solo$apis_api_rate$limiter_v1alpha1_ratelimit_pb.RateLimitActions.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ratelimit.api.solo.io.RateLimitActions rate_limits = 1;
 * @return {!Array<!proto.ratelimit.api.solo.io.RateLimitActions>}
 */
proto.ratelimit.options.gloo.solo.io.RateLimitVhostExtension.prototype.getRateLimitsList = function() {
  return /** @type{!Array<!proto.ratelimit.api.solo.io.RateLimitActions>} */ (
    jspb.Message.getRepeatedWrapperField(this, solo$apis_api_rate$limiter_v1alpha1_ratelimit_pb.RateLimitActions, 1));
};


/** @param {!Array<!proto.ratelimit.api.solo.io.RateLimitActions>} value */
proto.ratelimit.options.gloo.solo.io.RateLimitVhostExtension.prototype.setRateLimitsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ratelimit.api.solo.io.RateLimitActions=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ratelimit.api.solo.io.RateLimitActions}
 */
proto.ratelimit.options.gloo.solo.io.RateLimitVhostExtension.prototype.addRateLimits = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ratelimit.api.solo.io.RateLimitActions, opt_index);
};


proto.ratelimit.options.gloo.solo.io.RateLimitVhostExtension.prototype.clearRateLimitsList = function() {
  this.setRateLimitsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ratelimit.options.gloo.solo.io.RateLimitRouteExtension = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ratelimit.options.gloo.solo.io.RateLimitRouteExtension.repeatedFields_, null);
};
goog.inherits(proto.ratelimit.options.gloo.solo.io.RateLimitRouteExtension, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ratelimit.options.gloo.solo.io.RateLimitRouteExtension.displayName = 'proto.ratelimit.options.gloo.solo.io.RateLimitRouteExtension';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ratelimit.options.gloo.solo.io.RateLimitRouteExtension.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ratelimit.options.gloo.solo.io.RateLimitRouteExtension.prototype.toObject = function(opt_includeInstance) {
  return proto.ratelimit.options.gloo.solo.io.RateLimitRouteExtension.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ratelimit.options.gloo.solo.io.RateLimitRouteExtension} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.options.gloo.solo.io.RateLimitRouteExtension.toObject = function(includeInstance, msg) {
  var f, obj = {
    includeVhRateLimits: jspb.Message.getFieldWithDefault(msg, 1, false),
    rateLimitsList: jspb.Message.toObjectList(msg.getRateLimitsList(),
    solo$apis_api_rate$limiter_v1alpha1_ratelimit_pb.RateLimitActions.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ratelimit.options.gloo.solo.io.RateLimitRouteExtension}
 */
proto.ratelimit.options.gloo.solo.io.RateLimitRouteExtension.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ratelimit.options.gloo.solo.io.RateLimitRouteExtension;
  return proto.ratelimit.options.gloo.solo.io.RateLimitRouteExtension.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ratelimit.options.gloo.solo.io.RateLimitRouteExtension} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ratelimit.options.gloo.solo.io.RateLimitRouteExtension}
 */
proto.ratelimit.options.gloo.solo.io.RateLimitRouteExtension.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeVhRateLimits(value);
      break;
    case 2:
      var value = new solo$apis_api_rate$limiter_v1alpha1_ratelimit_pb.RateLimitActions;
      reader.readMessage(value,solo$apis_api_rate$limiter_v1alpha1_ratelimit_pb.RateLimitActions.deserializeBinaryFromReader);
      msg.addRateLimits(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ratelimit.options.gloo.solo.io.RateLimitRouteExtension.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ratelimit.options.gloo.solo.io.RateLimitRouteExtension.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ratelimit.options.gloo.solo.io.RateLimitRouteExtension} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.options.gloo.solo.io.RateLimitRouteExtension.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIncludeVhRateLimits();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getRateLimitsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      solo$apis_api_rate$limiter_v1alpha1_ratelimit_pb.RateLimitActions.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool include_vh_rate_limits = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.ratelimit.options.gloo.solo.io.RateLimitRouteExtension.prototype.getIncludeVhRateLimits = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.ratelimit.options.gloo.solo.io.RateLimitRouteExtension.prototype.setIncludeVhRateLimits = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * repeated ratelimit.api.solo.io.RateLimitActions rate_limits = 2;
 * @return {!Array<!proto.ratelimit.api.solo.io.RateLimitActions>}
 */
proto.ratelimit.options.gloo.solo.io.RateLimitRouteExtension.prototype.getRateLimitsList = function() {
  return /** @type{!Array<!proto.ratelimit.api.solo.io.RateLimitActions>} */ (
    jspb.Message.getRepeatedWrapperField(this, solo$apis_api_rate$limiter_v1alpha1_ratelimit_pb.RateLimitActions, 2));
};


/** @param {!Array<!proto.ratelimit.api.solo.io.RateLimitActions>} value */
proto.ratelimit.options.gloo.solo.io.RateLimitRouteExtension.prototype.setRateLimitsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.ratelimit.api.solo.io.RateLimitActions=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ratelimit.api.solo.io.RateLimitActions}
 */
proto.ratelimit.options.gloo.solo.io.RateLimitRouteExtension.prototype.addRateLimits = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.ratelimit.api.solo.io.RateLimitActions, opt_index);
};


proto.ratelimit.options.gloo.solo.io.RateLimitRouteExtension.prototype.clearRateLimitsList = function() {
  this.setRateLimitsList([]);
};


goog.object.extend(exports, proto.ratelimit.options.gloo.solo.io);
