// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.6.1
// source: github.com/solo-io/solo-projects/projects/grpcserver/api/v1/routetable.proto

package v1

import (
	context "context"
	reflect "reflect"
	sync "sync"

	proto "github.com/golang/protobuf/proto"
	v1 "github.com/solo-io/gloo/projects/gateway/pkg/api/v1"
	_ "github.com/solo-io/protoc-gen-ext/extproto"
	core "github.com/solo-io/solo-kit/pkg/api/v1/resources/core"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type RouteTableDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RouteTable *v1.RouteTable `protobuf:"bytes,1,opt,name=route_table,json=routeTable,proto3" json:"route_table,omitempty"`
	Raw        *Raw           `protobuf:"bytes,2,opt,name=raw,proto3" json:"raw,omitempty"`
}

func (x *RouteTableDetails) Reset() {
	*x = RouteTableDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RouteTableDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouteTableDetails) ProtoMessage() {}

func (x *RouteTableDetails) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouteTableDetails.ProtoReflect.Descriptor instead.
func (*RouteTableDetails) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_rawDescGZIP(), []int{0}
}

func (x *RouteTableDetails) GetRouteTable() *v1.RouteTable {
	if x != nil {
		return x.RouteTable
	}
	return nil
}

func (x *RouteTableDetails) GetRaw() *Raw {
	if x != nil {
		return x.Raw
	}
	return nil
}

type GetRouteTableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ref *core.ResourceRef `protobuf:"bytes,1,opt,name=ref,proto3" json:"ref,omitempty"`
}

func (x *GetRouteTableRequest) Reset() {
	*x = GetRouteTableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRouteTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRouteTableRequest) ProtoMessage() {}

func (x *GetRouteTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRouteTableRequest.ProtoReflect.Descriptor instead.
func (*GetRouteTableRequest) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_rawDescGZIP(), []int{1}
}

func (x *GetRouteTableRequest) GetRef() *core.ResourceRef {
	if x != nil {
		return x.Ref
	}
	return nil
}

type GetRouteTableResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RouteTableDetails *RouteTableDetails `protobuf:"bytes,1,opt,name=route_table_details,json=routeTableDetails,proto3" json:"route_table_details,omitempty"`
}

func (x *GetRouteTableResponse) Reset() {
	*x = GetRouteTableResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRouteTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRouteTableResponse) ProtoMessage() {}

func (x *GetRouteTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRouteTableResponse.ProtoReflect.Descriptor instead.
func (*GetRouteTableResponse) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_rawDescGZIP(), []int{2}
}

func (x *GetRouteTableResponse) GetRouteTableDetails() *RouteTableDetails {
	if x != nil {
		return x.RouteTableDetails
	}
	return nil
}

type ListRouteTablesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListRouteTablesRequest) Reset() {
	*x = ListRouteTablesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRouteTablesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRouteTablesRequest) ProtoMessage() {}

func (x *ListRouteTablesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRouteTablesRequest.ProtoReflect.Descriptor instead.
func (*ListRouteTablesRequest) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_rawDescGZIP(), []int{3}
}

type ListRouteTablesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RouteTableDetails []*RouteTableDetails `protobuf:"bytes,1,rep,name=route_table_details,json=routeTableDetails,proto3" json:"route_table_details,omitempty"`
}

func (x *ListRouteTablesResponse) Reset() {
	*x = ListRouteTablesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRouteTablesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRouteTablesResponse) ProtoMessage() {}

func (x *ListRouteTablesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRouteTablesResponse.ProtoReflect.Descriptor instead.
func (*ListRouteTablesResponse) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_rawDescGZIP(), []int{4}
}

func (x *ListRouteTablesResponse) GetRouteTableDetails() []*RouteTableDetails {
	if x != nil {
		return x.RouteTableDetails
	}
	return nil
}

type CreateRouteTableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RouteTable *v1.RouteTable `protobuf:"bytes,1,opt,name=route_table,json=routeTable,proto3" json:"route_table,omitempty"`
}

func (x *CreateRouteTableRequest) Reset() {
	*x = CreateRouteTableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRouteTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRouteTableRequest) ProtoMessage() {}

func (x *CreateRouteTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRouteTableRequest.ProtoReflect.Descriptor instead.
func (*CreateRouteTableRequest) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_rawDescGZIP(), []int{5}
}

func (x *CreateRouteTableRequest) GetRouteTable() *v1.RouteTable {
	if x != nil {
		return x.RouteTable
	}
	return nil
}

type CreateRouteTableResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RouteTableDetails *RouteTableDetails `protobuf:"bytes,1,opt,name=route_table_details,json=routeTableDetails,proto3" json:"route_table_details,omitempty"`
}

func (x *CreateRouteTableResponse) Reset() {
	*x = CreateRouteTableResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRouteTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRouteTableResponse) ProtoMessage() {}

func (x *CreateRouteTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRouteTableResponse.ProtoReflect.Descriptor instead.
func (*CreateRouteTableResponse) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_rawDescGZIP(), []int{6}
}

func (x *CreateRouteTableResponse) GetRouteTableDetails() *RouteTableDetails {
	if x != nil {
		return x.RouteTableDetails
	}
	return nil
}

type UpdateRouteTableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RouteTable *v1.RouteTable `protobuf:"bytes,1,opt,name=route_table,json=routeTable,proto3" json:"route_table,omitempty"`
}

func (x *UpdateRouteTableRequest) Reset() {
	*x = UpdateRouteTableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRouteTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRouteTableRequest) ProtoMessage() {}

func (x *UpdateRouteTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRouteTableRequest.ProtoReflect.Descriptor instead.
func (*UpdateRouteTableRequest) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateRouteTableRequest) GetRouteTable() *v1.RouteTable {
	if x != nil {
		return x.RouteTable
	}
	return nil
}

type UpdateRouteTableYamlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EditedYamlData *EditedResourceYaml `protobuf:"bytes,1,opt,name=edited_yaml_data,json=editedYamlData,proto3" json:"edited_yaml_data,omitempty"`
}

func (x *UpdateRouteTableYamlRequest) Reset() {
	*x = UpdateRouteTableYamlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRouteTableYamlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRouteTableYamlRequest) ProtoMessage() {}

func (x *UpdateRouteTableYamlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRouteTableYamlRequest.ProtoReflect.Descriptor instead.
func (*UpdateRouteTableYamlRequest) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateRouteTableYamlRequest) GetEditedYamlData() *EditedResourceYaml {
	if x != nil {
		return x.EditedYamlData
	}
	return nil
}

type UpdateRouteTableResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RouteTableDetails *RouteTableDetails `protobuf:"bytes,1,opt,name=route_table_details,json=routeTableDetails,proto3" json:"route_table_details,omitempty"`
}

func (x *UpdateRouteTableResponse) Reset() {
	*x = UpdateRouteTableResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRouteTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRouteTableResponse) ProtoMessage() {}

func (x *UpdateRouteTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRouteTableResponse.ProtoReflect.Descriptor instead.
func (*UpdateRouteTableResponse) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateRouteTableResponse) GetRouteTableDetails() *RouteTableDetails {
	if x != nil {
		return x.RouteTableDetails
	}
	return nil
}

type DeleteRouteTableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ref *core.ResourceRef `protobuf:"bytes,1,opt,name=ref,proto3" json:"ref,omitempty"`
}

func (x *DeleteRouteTableRequest) Reset() {
	*x = DeleteRouteTableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRouteTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRouteTableRequest) ProtoMessage() {}

func (x *DeleteRouteTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRouteTableRequest.ProtoReflect.Descriptor instead.
func (*DeleteRouteTableRequest) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteRouteTableRequest) GetRef() *core.ResourceRef {
	if x != nil {
		return x.Ref
	}
	return nil
}

type DeleteRouteTableResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteRouteTableResponse) Reset() {
	*x = DeleteRouteTableResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRouteTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRouteTableResponse) ProtoMessage() {}

func (x *DeleteRouteTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRouteTableResponse.ProtoReflect.Descriptor instead.
func (*DeleteRouteTableResponse) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_rawDescGZIP(), []int{11}
}

var File_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto protoreflect.FileDescriptor

var file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_rawDesc = []byte{
	0x0a, 0x4c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6c,
	0x6f, 0x2d, 0x69, 0x6f, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x67, 0x72, 0x70, 0x63,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11,
	0x67, 0x6c, 0x6f, 0x6f, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69,
	0x6f, 0x1a, 0x12, 0x65, 0x78, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x78, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x41, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x69, 0x6f, 0x2f, 0x67, 0x6c, 0x6f, 0x6f, 0x2f, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x47, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x69, 0x6f, 0x2f, 0x73, 0x6f, 0x6c,
	0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f,
	0x6c, 0x6f, 0x2d, 0x69, 0x6f, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x6b, 0x69, 0x74, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x7b, 0x0a, 0x11, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x12, 0x3c, 0x0a, 0x0b, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x0a, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x28, 0x0a, 0x03, 0x72, 0x61, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6f, 0x6c, 0x6f,
	0x2e, 0x69, 0x6f, 0x2e, 0x52, 0x61, 0x77, 0x52, 0x03, 0x72, 0x61, 0x77, 0x22, 0x43, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x52, 0x03, 0x72, 0x65,
	0x66, 0x22, 0x6d, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x13, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x65, 0x65,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x11, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x22, 0x18, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x6f, 0x0a, 0x17, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x13, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x11, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x57, 0x0a, 0x17, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x0b, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x0a, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x22, 0x70, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x54, 0x0a, 0x13, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x67, 0x6c, 0x6f, 0x6f, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69,
	0x6f, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x11, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x57, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x3c, 0x0a, 0x0b, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x52, 0x0a, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x22,
	0x6e, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x59, 0x61, 0x6d, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4f,
	0x0a, 0x10, 0x65, 0x64, 0x69, 0x74, 0x65, 0x64, 0x5f, 0x79, 0x61, 0x6d, 0x6c, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x65,
	0x65, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x45, 0x64, 0x69,
	0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x59, 0x61, 0x6d, 0x6c, 0x52,
	0x0e, 0x65, 0x64, 0x69, 0x74, 0x65, 0x64, 0x59, 0x61, 0x6d, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x22,
	0x70, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x13, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x65,
	0x65, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x11,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x22, 0x46, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x03,
	0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x65, 0x66, 0x52, 0x03, 0x72, 0x65, 0x66, 0x22, 0x1a, 0x0a, 0x18, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xa5, 0x05, 0x0a, 0x0d, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x41, 0x70, 0x69, 0x12, 0x64, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x27, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x65,
	0x65, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x28, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6f,
	0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6a, 0x0a,
	0x0f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73,
	0x12, 0x29, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6f, 0x6c,
	0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x67, 0x6c,
	0x6f, 0x6f, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x10, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2a, 0x2e,
	0x67, 0x6c, 0x6f, 0x6f, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69,
	0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x67, 0x6c, 0x6f, 0x6f,
	0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2a, 0x2e, 0x67,
	0x6c, 0x6f, 0x6f, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x65,
	0x65, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x75, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x59, 0x61, 0x6d, 0x6c, 0x12,
	0x2e, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6f, 0x6c, 0x6f,
	0x2e, 0x69, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x59, 0x61, 0x6d, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2b, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6f, 0x6c, 0x6f,
	0x2e, 0x69, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6d,
	0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x2a, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b,
	0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e,
	0x69, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x41, 0x5a,
	0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6c, 0x6f,
	0x2d, 0x69, 0x6f, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0xc0, 0xf5, 0x04, 0x01,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_rawDescOnce sync.Once
	file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_rawDescData = file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_rawDesc
)

func file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_rawDescGZIP() []byte {
	file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_rawDescOnce.Do(func() {
		file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_rawDescData)
	})
	return file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_rawDescData
}

var file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_goTypes = []interface{}{
	(*RouteTableDetails)(nil),           // 0: glooeeapi.solo.io.RouteTableDetails
	(*GetRouteTableRequest)(nil),        // 1: glooeeapi.solo.io.GetRouteTableRequest
	(*GetRouteTableResponse)(nil),       // 2: glooeeapi.solo.io.GetRouteTableResponse
	(*ListRouteTablesRequest)(nil),      // 3: glooeeapi.solo.io.ListRouteTablesRequest
	(*ListRouteTablesResponse)(nil),     // 4: glooeeapi.solo.io.ListRouteTablesResponse
	(*CreateRouteTableRequest)(nil),     // 5: glooeeapi.solo.io.CreateRouteTableRequest
	(*CreateRouteTableResponse)(nil),    // 6: glooeeapi.solo.io.CreateRouteTableResponse
	(*UpdateRouteTableRequest)(nil),     // 7: glooeeapi.solo.io.UpdateRouteTableRequest
	(*UpdateRouteTableYamlRequest)(nil), // 8: glooeeapi.solo.io.UpdateRouteTableYamlRequest
	(*UpdateRouteTableResponse)(nil),    // 9: glooeeapi.solo.io.UpdateRouteTableResponse
	(*DeleteRouteTableRequest)(nil),     // 10: glooeeapi.solo.io.DeleteRouteTableRequest
	(*DeleteRouteTableResponse)(nil),    // 11: glooeeapi.solo.io.DeleteRouteTableResponse
	(*v1.RouteTable)(nil),               // 12: gateway.solo.io.RouteTable
	(*Raw)(nil),                         // 13: glooeeapi.solo.io.Raw
	(*core.ResourceRef)(nil),            // 14: core.solo.io.ResourceRef
	(*EditedResourceYaml)(nil),          // 15: glooeeapi.solo.io.EditedResourceYaml
}
var file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_depIdxs = []int32{
	12, // 0: glooeeapi.solo.io.RouteTableDetails.route_table:type_name -> gateway.solo.io.RouteTable
	13, // 1: glooeeapi.solo.io.RouteTableDetails.raw:type_name -> glooeeapi.solo.io.Raw
	14, // 2: glooeeapi.solo.io.GetRouteTableRequest.ref:type_name -> core.solo.io.ResourceRef
	0,  // 3: glooeeapi.solo.io.GetRouteTableResponse.route_table_details:type_name -> glooeeapi.solo.io.RouteTableDetails
	0,  // 4: glooeeapi.solo.io.ListRouteTablesResponse.route_table_details:type_name -> glooeeapi.solo.io.RouteTableDetails
	12, // 5: glooeeapi.solo.io.CreateRouteTableRequest.route_table:type_name -> gateway.solo.io.RouteTable
	0,  // 6: glooeeapi.solo.io.CreateRouteTableResponse.route_table_details:type_name -> glooeeapi.solo.io.RouteTableDetails
	12, // 7: glooeeapi.solo.io.UpdateRouteTableRequest.route_table:type_name -> gateway.solo.io.RouteTable
	15, // 8: glooeeapi.solo.io.UpdateRouteTableYamlRequest.edited_yaml_data:type_name -> glooeeapi.solo.io.EditedResourceYaml
	0,  // 9: glooeeapi.solo.io.UpdateRouteTableResponse.route_table_details:type_name -> glooeeapi.solo.io.RouteTableDetails
	14, // 10: glooeeapi.solo.io.DeleteRouteTableRequest.ref:type_name -> core.solo.io.ResourceRef
	1,  // 11: glooeeapi.solo.io.RouteTableApi.GetRouteTable:input_type -> glooeeapi.solo.io.GetRouteTableRequest
	3,  // 12: glooeeapi.solo.io.RouteTableApi.ListRouteTables:input_type -> glooeeapi.solo.io.ListRouteTablesRequest
	5,  // 13: glooeeapi.solo.io.RouteTableApi.CreateRouteTable:input_type -> glooeeapi.solo.io.CreateRouteTableRequest
	7,  // 14: glooeeapi.solo.io.RouteTableApi.UpdateRouteTable:input_type -> glooeeapi.solo.io.UpdateRouteTableRequest
	8,  // 15: glooeeapi.solo.io.RouteTableApi.UpdateRouteTableYaml:input_type -> glooeeapi.solo.io.UpdateRouteTableYamlRequest
	10, // 16: glooeeapi.solo.io.RouteTableApi.DeleteRouteTable:input_type -> glooeeapi.solo.io.DeleteRouteTableRequest
	2,  // 17: glooeeapi.solo.io.RouteTableApi.GetRouteTable:output_type -> glooeeapi.solo.io.GetRouteTableResponse
	4,  // 18: glooeeapi.solo.io.RouteTableApi.ListRouteTables:output_type -> glooeeapi.solo.io.ListRouteTablesResponse
	6,  // 19: glooeeapi.solo.io.RouteTableApi.CreateRouteTable:output_type -> glooeeapi.solo.io.CreateRouteTableResponse
	9,  // 20: glooeeapi.solo.io.RouteTableApi.UpdateRouteTable:output_type -> glooeeapi.solo.io.UpdateRouteTableResponse
	9,  // 21: glooeeapi.solo.io.RouteTableApi.UpdateRouteTableYaml:output_type -> glooeeapi.solo.io.UpdateRouteTableResponse
	11, // 22: glooeeapi.solo.io.RouteTableApi.DeleteRouteTable:output_type -> glooeeapi.solo.io.DeleteRouteTableResponse
	17, // [17:23] is the sub-list for method output_type
	11, // [11:17] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_init() }
func file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_init() {
	if File_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto != nil {
		return
	}
	file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RouteTableDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRouteTableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRouteTableResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRouteTablesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRouteTablesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRouteTableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRouteTableResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRouteTableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRouteTableYamlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRouteTableResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRouteTableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRouteTableResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_goTypes,
		DependencyIndexes: file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_depIdxs,
		MessageInfos:      file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_msgTypes,
	}.Build()
	File_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto = out.File
	file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_rawDesc = nil
	file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_goTypes = nil
	file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_routetable_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RouteTableApiClient is the client API for RouteTableApi service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RouteTableApiClient interface {
	GetRouteTable(ctx context.Context, in *GetRouteTableRequest, opts ...grpc.CallOption) (*GetRouteTableResponse, error)
	ListRouteTables(ctx context.Context, in *ListRouteTablesRequest, opts ...grpc.CallOption) (*ListRouteTablesResponse, error)
	CreateRouteTable(ctx context.Context, in *CreateRouteTableRequest, opts ...grpc.CallOption) (*CreateRouteTableResponse, error)
	UpdateRouteTable(ctx context.Context, in *UpdateRouteTableRequest, opts ...grpc.CallOption) (*UpdateRouteTableResponse, error)
	UpdateRouteTableYaml(ctx context.Context, in *UpdateRouteTableYamlRequest, opts ...grpc.CallOption) (*UpdateRouteTableResponse, error)
	DeleteRouteTable(ctx context.Context, in *DeleteRouteTableRequest, opts ...grpc.CallOption) (*DeleteRouteTableResponse, error)
}

type routeTableApiClient struct {
	cc grpc.ClientConnInterface
}

func NewRouteTableApiClient(cc grpc.ClientConnInterface) RouteTableApiClient {
	return &routeTableApiClient{cc}
}

func (c *routeTableApiClient) GetRouteTable(ctx context.Context, in *GetRouteTableRequest, opts ...grpc.CallOption) (*GetRouteTableResponse, error) {
	out := new(GetRouteTableResponse)
	err := c.cc.Invoke(ctx, "/glooeeapi.solo.io.RouteTableApi/GetRouteTable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *routeTableApiClient) ListRouteTables(ctx context.Context, in *ListRouteTablesRequest, opts ...grpc.CallOption) (*ListRouteTablesResponse, error) {
	out := new(ListRouteTablesResponse)
	err := c.cc.Invoke(ctx, "/glooeeapi.solo.io.RouteTableApi/ListRouteTables", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *routeTableApiClient) CreateRouteTable(ctx context.Context, in *CreateRouteTableRequest, opts ...grpc.CallOption) (*CreateRouteTableResponse, error) {
	out := new(CreateRouteTableResponse)
	err := c.cc.Invoke(ctx, "/glooeeapi.solo.io.RouteTableApi/CreateRouteTable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *routeTableApiClient) UpdateRouteTable(ctx context.Context, in *UpdateRouteTableRequest, opts ...grpc.CallOption) (*UpdateRouteTableResponse, error) {
	out := new(UpdateRouteTableResponse)
	err := c.cc.Invoke(ctx, "/glooeeapi.solo.io.RouteTableApi/UpdateRouteTable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *routeTableApiClient) UpdateRouteTableYaml(ctx context.Context, in *UpdateRouteTableYamlRequest, opts ...grpc.CallOption) (*UpdateRouteTableResponse, error) {
	out := new(UpdateRouteTableResponse)
	err := c.cc.Invoke(ctx, "/glooeeapi.solo.io.RouteTableApi/UpdateRouteTableYaml", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *routeTableApiClient) DeleteRouteTable(ctx context.Context, in *DeleteRouteTableRequest, opts ...grpc.CallOption) (*DeleteRouteTableResponse, error) {
	out := new(DeleteRouteTableResponse)
	err := c.cc.Invoke(ctx, "/glooeeapi.solo.io.RouteTableApi/DeleteRouteTable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RouteTableApiServer is the server API for RouteTableApi service.
type RouteTableApiServer interface {
	GetRouteTable(context.Context, *GetRouteTableRequest) (*GetRouteTableResponse, error)
	ListRouteTables(context.Context, *ListRouteTablesRequest) (*ListRouteTablesResponse, error)
	CreateRouteTable(context.Context, *CreateRouteTableRequest) (*CreateRouteTableResponse, error)
	UpdateRouteTable(context.Context, *UpdateRouteTableRequest) (*UpdateRouteTableResponse, error)
	UpdateRouteTableYaml(context.Context, *UpdateRouteTableYamlRequest) (*UpdateRouteTableResponse, error)
	DeleteRouteTable(context.Context, *DeleteRouteTableRequest) (*DeleteRouteTableResponse, error)
}

// UnimplementedRouteTableApiServer can be embedded to have forward compatible implementations.
type UnimplementedRouteTableApiServer struct {
}

func (*UnimplementedRouteTableApiServer) GetRouteTable(context.Context, *GetRouteTableRequest) (*GetRouteTableResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRouteTable not implemented")
}
func (*UnimplementedRouteTableApiServer) ListRouteTables(context.Context, *ListRouteTablesRequest) (*ListRouteTablesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListRouteTables not implemented")
}
func (*UnimplementedRouteTableApiServer) CreateRouteTable(context.Context, *CreateRouteTableRequest) (*CreateRouteTableResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRouteTable not implemented")
}
func (*UnimplementedRouteTableApiServer) UpdateRouteTable(context.Context, *UpdateRouteTableRequest) (*UpdateRouteTableResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRouteTable not implemented")
}
func (*UnimplementedRouteTableApiServer) UpdateRouteTableYaml(context.Context, *UpdateRouteTableYamlRequest) (*UpdateRouteTableResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRouteTableYaml not implemented")
}
func (*UnimplementedRouteTableApiServer) DeleteRouteTable(context.Context, *DeleteRouteTableRequest) (*DeleteRouteTableResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRouteTable not implemented")
}

func RegisterRouteTableApiServer(s *grpc.Server, srv RouteTableApiServer) {
	s.RegisterService(&_RouteTableApi_serviceDesc, srv)
}

func _RouteTableApi_GetRouteTable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRouteTableRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RouteTableApiServer).GetRouteTable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/glooeeapi.solo.io.RouteTableApi/GetRouteTable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RouteTableApiServer).GetRouteTable(ctx, req.(*GetRouteTableRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RouteTableApi_ListRouteTables_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRouteTablesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RouteTableApiServer).ListRouteTables(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/glooeeapi.solo.io.RouteTableApi/ListRouteTables",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RouteTableApiServer).ListRouteTables(ctx, req.(*ListRouteTablesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RouteTableApi_CreateRouteTable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRouteTableRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RouteTableApiServer).CreateRouteTable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/glooeeapi.solo.io.RouteTableApi/CreateRouteTable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RouteTableApiServer).CreateRouteTable(ctx, req.(*CreateRouteTableRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RouteTableApi_UpdateRouteTable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRouteTableRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RouteTableApiServer).UpdateRouteTable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/glooeeapi.solo.io.RouteTableApi/UpdateRouteTable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RouteTableApiServer).UpdateRouteTable(ctx, req.(*UpdateRouteTableRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RouteTableApi_UpdateRouteTableYaml_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRouteTableYamlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RouteTableApiServer).UpdateRouteTableYaml(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/glooeeapi.solo.io.RouteTableApi/UpdateRouteTableYaml",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RouteTableApiServer).UpdateRouteTableYaml(ctx, req.(*UpdateRouteTableYamlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RouteTableApi_DeleteRouteTable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRouteTableRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RouteTableApiServer).DeleteRouteTable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/glooeeapi.solo.io.RouteTableApi/DeleteRouteTable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RouteTableApiServer).DeleteRouteTable(ctx, req.(*DeleteRouteTableRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RouteTableApi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "glooeeapi.solo.io.RouteTableApi",
	HandlerType: (*RouteTableApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetRouteTable",
			Handler:    _RouteTableApi_GetRouteTable_Handler,
		},
		{
			MethodName: "ListRouteTables",
			Handler:    _RouteTableApi_ListRouteTables_Handler,
		},
		{
			MethodName: "CreateRouteTable",
			Handler:    _RouteTableApi_CreateRouteTable_Handler,
		},
		{
			MethodName: "UpdateRouteTable",
			Handler:    _RouteTableApi_UpdateRouteTable_Handler,
		},
		{
			MethodName: "UpdateRouteTableYaml",
			Handler:    _RouteTableApi_UpdateRouteTableYaml_Handler,
		},
		{
			MethodName: "DeleteRouteTable",
			Handler:    _RouteTableApi_DeleteRouteTable_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/solo-io/solo-projects/projects/grpcserver/api/v1/routetable.proto",
}
