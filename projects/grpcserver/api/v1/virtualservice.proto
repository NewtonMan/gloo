syntax = "proto3";
package glooeeapi.solo.io;
option go_package = "github.com/solo-io/solo-projects/projects/grpcserver/api/v1";

import "gogoproto/gogo.proto";
option (gogoproto.equal_all) = true;

import "github.com/solo-io/gloo/projects/gateway/api/v1/virtual_service.proto";
import "github.com/solo-io/gloo/projects/gloo/api/v1/ssl.proto";
import "github.com/solo-io/gloo/projects/gloo/api/v1/enterprise/options/extauth/v1/extauth.proto";
import "github.com/solo-io/gloo/projects/gloo/api/v1/enterprise/options/ratelimit/ratelimit.proto";
import "github.com/solo-io/solo-projects/projects/grpcserver/api/v1/types.proto";
import "github.com/solo-io/solo-kit/api/v1/ref.proto";
import "google/protobuf/wrappers.proto";

message VirtualServiceDetails {
    gateway.solo.io.VirtualService virtual_service = 1;
    Plugins plugins = 2;
    Raw raw = 3;
}

message Plugins {
    ExtAuthPlugin ext_auth = 1;
    RateLimitPlugin rate_limit = 2;
}

message ExtAuthPlugin {
    enterprise.gloo.solo.io.ExtAuthConfig value = 1;
    string error = 2;
}

message RateLimitPlugin {
    ratelimit.options.gloo.solo.io.IngressRateLimit value = 1;
    string error = 2;
}

message RepeatedStrings {
    repeated string values = 1;
}

message RepeatedRoutes {
    repeated gateway.solo.io.Route values = 1;
}

message SslConfigValue {
    gloo.solo.io.SslConfig value = 1;
}

message IngressRateLimitValue {
    ratelimit.options.gloo.solo.io.IngressRateLimit value = 1;
}

message ExtAuthInput {
    message Config {
        oneof value {
            enterprise.gloo.solo.io.OAuth oauth = 1;
            enterprise.gloo.solo.io.CustomAuth custom_auth = 2;
        }
    }

    Config config = 1;
}

message GetVirtualServiceRequest {
    core.solo.io.ResourceRef ref = 1;
}

message GetVirtualServiceResponse {
    // Deprecated. Use virtual_service_details.
    gateway.solo.io.VirtualService virtual_service = 1;
    VirtualServiceDetails virtual_service_details = 2;
}

message ListVirtualServicesRequest {
    // Deprecated. `List` calls will now query all WatchNamespaces.
    repeated string namespaces = 1;
}

message ListVirtualServicesResponse {
    // Deprecated. Use virtual_service_details.
    repeated gateway.solo.io.VirtualService virtual_services = 1;
    repeated VirtualServiceDetails virtual_service_details = 2;
}

// Deprecated. Use VirtualServiceInputV2
message VirtualServiceInput {
    core.solo.io.ResourceRef ref = 1;
    string display_name = 2;
    repeated string domains = 3;
    repeated gateway.solo.io.Route routes = 4;
    core.solo.io.ResourceRef secret_ref = 5;
    ratelimit.options.gloo.solo.io.IngressRateLimit rate_limit_config = 6;

    message BasicAuthInput {
        string realm = 1;
        string spec_csv = 2;
    }

    oneof ext_auth_config {
        BasicAuthInput basic_auth = 7;
        enterprise.gloo.solo.io.OAuth oauth = 8;
        enterprise.gloo.solo.io.CustomAuth custom_auth = 9;
    }
}

message VirtualServiceInputV2 {
    core.solo.io.ResourceRef ref = 1;
    google.protobuf.StringValue display_name = 2;
    RepeatedStrings domains = 3;
    RepeatedRoutes routes = 4;
    SslConfigValue ssl_config = 5;
    IngressRateLimitValue rate_limit_config = 6;
    ExtAuthInput ext_auth_config = 7;
}

message CreateVirtualServiceRequest {
    VirtualServiceInput input = 1;
    VirtualServiceInputV2 input_v2 = 2;
}

message CreateVirtualServiceResponse {
    // Deprecated. Use virtual_service_details.
    gateway.solo.io.VirtualService virtual_service = 1;
    VirtualServiceDetails virtual_service_details = 2;
}

message UpdateVirtualServiceRequest {
    VirtualServiceInput input = 1;
    VirtualServiceInputV2 input_v2 = 2;
}

message UpdateVirtualServiceYamlRequest {
    EditedResourceYaml edited_yaml_data = 1;
}

message UpdateVirtualServiceResponse {
    // Deprecated. Use virtual_service_details.
    gateway.solo.io.VirtualService virtual_service = 1;
    VirtualServiceDetails virtual_service_details = 2;
}

message DeleteVirtualServiceRequest {
    core.solo.io.ResourceRef ref = 1;
}

message DeleteVirtualServiceResponse {}

message RouteInput {
    // Virtual service to apply the route to. Must be provided except for on CreateRoute.
    // If not provided to CreateRoute, a default virtual service will be identified or created.
    core.solo.io.ResourceRef virtual_service_ref = 1;
    uint32 index = 2;
    gateway.solo.io.Route route = 3;
}

message CreateRouteRequest {
    RouteInput input = 1;
}

message CreateRouteResponse {
    // Deprecated. Use virtual_service_details.
    gateway.solo.io.VirtualService virtual_service = 1;
    VirtualServiceDetails virtual_service_details = 2;
}

message UpdateRouteRequest {
    RouteInput input = 1;
}

message UpdateRouteResponse {
    // Deprecated. Use virtual_service_details.
    gateway.solo.io.VirtualService virtual_service = 1;
    VirtualServiceDetails virtual_service_details = 2;
}

message DeleteRouteRequest {
    core.solo.io.ResourceRef virtual_service_ref = 1;
    uint32 index = 2;
}

message DeleteRouteResponse {
    // Deprecated. Use virtual_service_details.
    gateway.solo.io.VirtualService virtual_service = 1;
    VirtualServiceDetails virtual_service_details = 2;
}

message SwapRoutesRequest {
    core.solo.io.ResourceRef virtual_service_ref = 1;
    uint32 index1 = 2;
    uint32 index2 = 3;
}

message SwapRoutesResponse {
    // Deprecated. Use virtual_service_details.
    gateway.solo.io.VirtualService virtual_service = 1;
    VirtualServiceDetails virtual_service_details = 2;
}

message ShiftRoutesRequest {
    core.solo.io.ResourceRef virtual_service_ref = 1;
    uint32 from_index = 2;
    uint32 to_index = 3;
}

message ShiftRoutesResponse {
    // Deprecated. Use virtual_service_details.
    gateway.solo.io.VirtualService virtual_service = 1;
    VirtualServiceDetails virtual_service_details = 2;
}

service VirtualServiceApi {
    rpc GetVirtualService(GetVirtualServiceRequest) returns (GetVirtualServiceResponse) {}
    rpc ListVirtualServices(ListVirtualServicesRequest) returns (ListVirtualServicesResponse) {}
    rpc CreateVirtualService(CreateVirtualServiceRequest) returns (CreateVirtualServiceResponse) {}
    rpc UpdateVirtualService(UpdateVirtualServiceRequest) returns (UpdateVirtualServiceResponse) {}
    rpc UpdateVirtualServiceYaml(UpdateVirtualServiceYamlRequest) returns (UpdateVirtualServiceResponse) {}
    rpc DeleteVirtualService(DeleteVirtualServiceRequest) returns (DeleteVirtualServiceResponse) {}
    rpc CreateRoute(CreateRouteRequest) returns (CreateRouteResponse) {}
    rpc UpdateRoute(UpdateRouteRequest) returns (UpdateRouteResponse) {}
    rpc DeleteRoute(DeleteRouteRequest) returns (DeleteRouteResponse) {}
    rpc SwapRoutes(SwapRoutesRequest) returns (SwapRoutesResponse) {}
    rpc ShiftRoutes(ShiftRoutesRequest) returns (ShiftRoutesResponse) {}
}
