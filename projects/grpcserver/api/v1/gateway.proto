syntax = "proto3";
package glooeeapi.solo.io;
option go_package = "github.com/solo-io/solo-projects/projects/grpcserver/api/v1";

import "gogoproto/gogo.proto";
option (gogoproto.equal_all) = true;

import "gloo/projects/gateway/api/v1/gateway.proto";
import "solo-kit/api/v1/ref.proto";
import "solo-projects/projects/grpcserver/api/v1/types.proto";

message GatewayDetails {
    gateway.solo.io.Gateway gateway = 1;
    Raw raw = 2;
    // Status of the instance and its relationship with Gloo.
    // Currently there are three possible values for the "Code" field on the status message.
    // In this context, their values have the following definitions:
    // ERROR:
    //   - The gateway CRD has status "Rejected"
    // WARNING:
    //   - The gateway CRD has status "Pending"
    // OK:
    //   - The gateway CRD has status "Accepted"
    Status status = 3;
}

message GetGatewayRequest {
    core.solo.io.ResourceRef ref = 1;
}

message GetGatewayResponse {
    GatewayDetails gateway_details = 1;
}

message ListGatewaysRequest {}

message ListGatewaysResponse {
    repeated GatewayDetails gateway_details = 1;
}

message UpdateGatewayRequest {
    gateway.solo.io.Gateway gateway = 1;
}

message UpdateGatewayYamlRequest {
    EditedResourceYaml edited_yaml_data = 1;
}

message UpdateGatewayResponse {
    GatewayDetails gateway_details = 1;
}

service GatewayApi {
    rpc GetGateway(GetGatewayRequest) returns (GetGatewayResponse) {}
    rpc ListGateways(ListGatewaysRequest) returns (ListGatewaysResponse) {}
    rpc UpdateGateway(UpdateGatewayRequest) returns (UpdateGatewayResponse) {}
    rpc UpdateGatewayYaml(UpdateGatewayYamlRequest) returns (UpdateGatewayResponse) {}
}
