// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/solo-io/solo-projects/projects/grpcserver/api/v1/artifact.proto

package v1

import (
	bytes "bytes"
	context "context"
	fmt "fmt"
	math "math"

	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	v1 "github.com/solo-io/gloo/projects/gloo/pkg/api/v1"
	core "github.com/solo-io/solo-kit/pkg/api/v1/resources/core"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type GetArtifactRequest struct {
	Ref                  *core.ResourceRef `protobuf:"bytes,1,opt,name=ref,proto3" json:"ref,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetArtifactRequest) Reset()         { *m = GetArtifactRequest{} }
func (m *GetArtifactRequest) String() string { return proto.CompactTextString(m) }
func (*GetArtifactRequest) ProtoMessage()    {}
func (*GetArtifactRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_31231f9377f1df05, []int{0}
}
func (m *GetArtifactRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetArtifactRequest.Unmarshal(m, b)
}
func (m *GetArtifactRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetArtifactRequest.Marshal(b, m, deterministic)
}
func (m *GetArtifactRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetArtifactRequest.Merge(m, src)
}
func (m *GetArtifactRequest) XXX_Size() int {
	return xxx_messageInfo_GetArtifactRequest.Size(m)
}
func (m *GetArtifactRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetArtifactRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetArtifactRequest proto.InternalMessageInfo

func (m *GetArtifactRequest) GetRef() *core.ResourceRef {
	if m != nil {
		return m.Ref
	}
	return nil
}

type GetArtifactResponse struct {
	Artifact             *v1.Artifact `protobuf:"bytes,1,opt,name=artifact,proto3" json:"artifact,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetArtifactResponse) Reset()         { *m = GetArtifactResponse{} }
func (m *GetArtifactResponse) String() string { return proto.CompactTextString(m) }
func (*GetArtifactResponse) ProtoMessage()    {}
func (*GetArtifactResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_31231f9377f1df05, []int{1}
}
func (m *GetArtifactResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetArtifactResponse.Unmarshal(m, b)
}
func (m *GetArtifactResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetArtifactResponse.Marshal(b, m, deterministic)
}
func (m *GetArtifactResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetArtifactResponse.Merge(m, src)
}
func (m *GetArtifactResponse) XXX_Size() int {
	return xxx_messageInfo_GetArtifactResponse.Size(m)
}
func (m *GetArtifactResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetArtifactResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetArtifactResponse proto.InternalMessageInfo

func (m *GetArtifactResponse) GetArtifact() *v1.Artifact {
	if m != nil {
		return m.Artifact
	}
	return nil
}

type ListArtifactsRequest struct {
	NamespaceList        []string `protobuf:"bytes,1,rep,name=namespace_list,json=namespaceList,proto3" json:"namespace_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListArtifactsRequest) Reset()         { *m = ListArtifactsRequest{} }
func (m *ListArtifactsRequest) String() string { return proto.CompactTextString(m) }
func (*ListArtifactsRequest) ProtoMessage()    {}
func (*ListArtifactsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_31231f9377f1df05, []int{2}
}
func (m *ListArtifactsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListArtifactsRequest.Unmarshal(m, b)
}
func (m *ListArtifactsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListArtifactsRequest.Marshal(b, m, deterministic)
}
func (m *ListArtifactsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListArtifactsRequest.Merge(m, src)
}
func (m *ListArtifactsRequest) XXX_Size() int {
	return xxx_messageInfo_ListArtifactsRequest.Size(m)
}
func (m *ListArtifactsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListArtifactsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListArtifactsRequest proto.InternalMessageInfo

func (m *ListArtifactsRequest) GetNamespaceList() []string {
	if m != nil {
		return m.NamespaceList
	}
	return nil
}

type ListArtifactsResponse struct {
	Artifact             []*v1.Artifact `protobuf:"bytes,1,rep,name=artifact,proto3" json:"artifact,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ListArtifactsResponse) Reset()         { *m = ListArtifactsResponse{} }
func (m *ListArtifactsResponse) String() string { return proto.CompactTextString(m) }
func (*ListArtifactsResponse) ProtoMessage()    {}
func (*ListArtifactsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_31231f9377f1df05, []int{3}
}
func (m *ListArtifactsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListArtifactsResponse.Unmarshal(m, b)
}
func (m *ListArtifactsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListArtifactsResponse.Marshal(b, m, deterministic)
}
func (m *ListArtifactsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListArtifactsResponse.Merge(m, src)
}
func (m *ListArtifactsResponse) XXX_Size() int {
	return xxx_messageInfo_ListArtifactsResponse.Size(m)
}
func (m *ListArtifactsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListArtifactsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListArtifactsResponse proto.InternalMessageInfo

func (m *ListArtifactsResponse) GetArtifact() []*v1.Artifact {
	if m != nil {
		return m.Artifact
	}
	return nil
}

type CreateArtifactRequest struct {
	Artifact             *v1.Artifact `protobuf:"bytes,1,opt,name=artifact,proto3" json:"artifact,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *CreateArtifactRequest) Reset()         { *m = CreateArtifactRequest{} }
func (m *CreateArtifactRequest) String() string { return proto.CompactTextString(m) }
func (*CreateArtifactRequest) ProtoMessage()    {}
func (*CreateArtifactRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_31231f9377f1df05, []int{4}
}
func (m *CreateArtifactRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateArtifactRequest.Unmarshal(m, b)
}
func (m *CreateArtifactRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateArtifactRequest.Marshal(b, m, deterministic)
}
func (m *CreateArtifactRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateArtifactRequest.Merge(m, src)
}
func (m *CreateArtifactRequest) XXX_Size() int {
	return xxx_messageInfo_CreateArtifactRequest.Size(m)
}
func (m *CreateArtifactRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateArtifactRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateArtifactRequest proto.InternalMessageInfo

func (m *CreateArtifactRequest) GetArtifact() *v1.Artifact {
	if m != nil {
		return m.Artifact
	}
	return nil
}

type CreateArtifactResponse struct {
	Artifact             *v1.Artifact `protobuf:"bytes,1,opt,name=artifact,proto3" json:"artifact,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *CreateArtifactResponse) Reset()         { *m = CreateArtifactResponse{} }
func (m *CreateArtifactResponse) String() string { return proto.CompactTextString(m) }
func (*CreateArtifactResponse) ProtoMessage()    {}
func (*CreateArtifactResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_31231f9377f1df05, []int{5}
}
func (m *CreateArtifactResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateArtifactResponse.Unmarshal(m, b)
}
func (m *CreateArtifactResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateArtifactResponse.Marshal(b, m, deterministic)
}
func (m *CreateArtifactResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateArtifactResponse.Merge(m, src)
}
func (m *CreateArtifactResponse) XXX_Size() int {
	return xxx_messageInfo_CreateArtifactResponse.Size(m)
}
func (m *CreateArtifactResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateArtifactResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateArtifactResponse proto.InternalMessageInfo

func (m *CreateArtifactResponse) GetArtifact() *v1.Artifact {
	if m != nil {
		return m.Artifact
	}
	return nil
}

type UpdateArtifactRequest struct {
	Artifact             *v1.Artifact `protobuf:"bytes,1,opt,name=artifact,proto3" json:"artifact,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *UpdateArtifactRequest) Reset()         { *m = UpdateArtifactRequest{} }
func (m *UpdateArtifactRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateArtifactRequest) ProtoMessage()    {}
func (*UpdateArtifactRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_31231f9377f1df05, []int{6}
}
func (m *UpdateArtifactRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateArtifactRequest.Unmarshal(m, b)
}
func (m *UpdateArtifactRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateArtifactRequest.Marshal(b, m, deterministic)
}
func (m *UpdateArtifactRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateArtifactRequest.Merge(m, src)
}
func (m *UpdateArtifactRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateArtifactRequest.Size(m)
}
func (m *UpdateArtifactRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateArtifactRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateArtifactRequest proto.InternalMessageInfo

func (m *UpdateArtifactRequest) GetArtifact() *v1.Artifact {
	if m != nil {
		return m.Artifact
	}
	return nil
}

type UpdateArtifactResponse struct {
	Artifact             *v1.Artifact `protobuf:"bytes,1,opt,name=artifact,proto3" json:"artifact,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *UpdateArtifactResponse) Reset()         { *m = UpdateArtifactResponse{} }
func (m *UpdateArtifactResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateArtifactResponse) ProtoMessage()    {}
func (*UpdateArtifactResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_31231f9377f1df05, []int{7}
}
func (m *UpdateArtifactResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateArtifactResponse.Unmarshal(m, b)
}
func (m *UpdateArtifactResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateArtifactResponse.Marshal(b, m, deterministic)
}
func (m *UpdateArtifactResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateArtifactResponse.Merge(m, src)
}
func (m *UpdateArtifactResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateArtifactResponse.Size(m)
}
func (m *UpdateArtifactResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateArtifactResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateArtifactResponse proto.InternalMessageInfo

func (m *UpdateArtifactResponse) GetArtifact() *v1.Artifact {
	if m != nil {
		return m.Artifact
	}
	return nil
}

type DeleteArtifactRequest struct {
	Ref                  *core.ResourceRef `protobuf:"bytes,1,opt,name=ref,proto3" json:"ref,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *DeleteArtifactRequest) Reset()         { *m = DeleteArtifactRequest{} }
func (m *DeleteArtifactRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteArtifactRequest) ProtoMessage()    {}
func (*DeleteArtifactRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_31231f9377f1df05, []int{8}
}
func (m *DeleteArtifactRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteArtifactRequest.Unmarshal(m, b)
}
func (m *DeleteArtifactRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteArtifactRequest.Marshal(b, m, deterministic)
}
func (m *DeleteArtifactRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteArtifactRequest.Merge(m, src)
}
func (m *DeleteArtifactRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteArtifactRequest.Size(m)
}
func (m *DeleteArtifactRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteArtifactRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteArtifactRequest proto.InternalMessageInfo

func (m *DeleteArtifactRequest) GetRef() *core.ResourceRef {
	if m != nil {
		return m.Ref
	}
	return nil
}

type DeleteArtifactResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteArtifactResponse) Reset()         { *m = DeleteArtifactResponse{} }
func (m *DeleteArtifactResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteArtifactResponse) ProtoMessage()    {}
func (*DeleteArtifactResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_31231f9377f1df05, []int{9}
}
func (m *DeleteArtifactResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteArtifactResponse.Unmarshal(m, b)
}
func (m *DeleteArtifactResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteArtifactResponse.Marshal(b, m, deterministic)
}
func (m *DeleteArtifactResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteArtifactResponse.Merge(m, src)
}
func (m *DeleteArtifactResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteArtifactResponse.Size(m)
}
func (m *DeleteArtifactResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteArtifactResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteArtifactResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*GetArtifactRequest)(nil), "glooeeapi.solo.io.GetArtifactRequest")
	proto.RegisterType((*GetArtifactResponse)(nil), "glooeeapi.solo.io.GetArtifactResponse")
	proto.RegisterType((*ListArtifactsRequest)(nil), "glooeeapi.solo.io.ListArtifactsRequest")
	proto.RegisterType((*ListArtifactsResponse)(nil), "glooeeapi.solo.io.ListArtifactsResponse")
	proto.RegisterType((*CreateArtifactRequest)(nil), "glooeeapi.solo.io.CreateArtifactRequest")
	proto.RegisterType((*CreateArtifactResponse)(nil), "glooeeapi.solo.io.CreateArtifactResponse")
	proto.RegisterType((*UpdateArtifactRequest)(nil), "glooeeapi.solo.io.UpdateArtifactRequest")
	proto.RegisterType((*UpdateArtifactResponse)(nil), "glooeeapi.solo.io.UpdateArtifactResponse")
	proto.RegisterType((*DeleteArtifactRequest)(nil), "glooeeapi.solo.io.DeleteArtifactRequest")
	proto.RegisterType((*DeleteArtifactResponse)(nil), "glooeeapi.solo.io.DeleteArtifactResponse")
}

func init() {
	proto.RegisterFile("github.com/solo-io/solo-projects/projects/grpcserver/api/v1/artifact.proto", fileDescriptor_31231f9377f1df05)
}

var fileDescriptor_31231f9377f1df05 = []byte{
	// 432 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0xdf, 0xae, 0xd2, 0x30,
	0x18, 0x87, 0x60, 0x8c, 0x7e, 0x04, 0x12, 0x2b, 0x23, 0xb8, 0x0b, 0x63, 0x96, 0xa0, 0x18, 0xb5,
	0x8b, 0x78, 0x49, 0xbc, 0x98, 0x92, 0x18, 0x85, 0xab, 0x25, 0xde, 0x78, 0xa1, 0x19, 0xe3, 0xdb,
	0xac, 0x0e, 0x5a, 0xdb, 0xc2, 0x63, 0xf8, 0x1c, 0x3e, 0x97, 0x4f, 0x72, 0x52, 0xc6, 0x16, 0x36,
	0x7a, 0x02, 0xe7, 0x70, 0xae, 0xd6, 0x75, 0xbf, 0x7f, 0x6b, 0x7f, 0x2d, 0x7c, 0x49, 0x99, 0xfe,
	0xb9, 0x59, 0xd0, 0x98, 0xaf, 0x7c, 0xc5, 0x33, 0xfe, 0x86, 0xf1, 0xfc, 0x29, 0x24, 0xff, 0x85,
	0xb1, 0x56, 0x7e, 0x39, 0x48, 0xa5, 0x88, 0x15, 0xca, 0x2d, 0x4a, 0x3f, 0x12, 0xcc, 0xdf, 0xbe,
	0xf5, 0x23, 0xa9, 0x59, 0x12, 0xc5, 0x9a, 0x0a, 0xc9, 0x35, 0x27, 0x8f, 0xd2, 0x8c, 0x73, 0xc4,
	0x48, 0x30, 0x6a, 0x24, 0x28, 0xe3, 0x6e, 0x2f, 0xe5, 0x29, 0xdf, 0x7d, 0xf5, 0xcd, 0x28, 0x07,
	0xba, 0x13, 0x8b, 0xa9, 0xe1, 0x1e, 0x78, 0x99, 0x37, 0xab, 0x8b, 0xfb, 0xfa, 0xba, 0xc4, 0xbf,
	0x99, 0x2e, 0x28, 0x12, 0x93, 0x1c, 0xed, 0x05, 0x40, 0x3e, 0xa1, 0x0e, 0xf6, 0x12, 0x21, 0xfe,
	0xd9, 0xa0, 0xd2, 0xe4, 0x15, 0xb4, 0x24, 0x26, 0x83, 0xe6, 0xb3, 0xe6, 0xa8, 0x3d, 0x7e, 0x42,
	0x63, 0x2e, 0xb1, 0x88, 0x4c, 0x43, 0x54, 0x7c, 0x23, 0x63, 0x0c, 0x31, 0x09, 0x0d, 0xca, 0xfb,
	0x0c, 0x8f, 0x2b, 0x12, 0x4a, 0xf0, 0xb5, 0x42, 0x32, 0x86, 0x07, 0x45, 0xb2, 0xbd, 0x50, 0x9f,
	0x9a, 0xd8, 0xa5, 0x50, 0xc9, 0x28, 0x71, 0xde, 0x7b, 0xe8, 0xcd, 0x99, 0x2a, 0xb5, 0x54, 0x91,
	0x67, 0x08, 0xdd, 0x75, 0xb4, 0x42, 0x25, 0xa2, 0x18, 0x7f, 0x64, 0x4c, 0x19, 0xc5, 0xd6, 0xe8,
	0x61, 0xd8, 0x29, 0x67, 0x0d, 0xcd, 0x9b, 0x81, 0x53, 0xa3, 0x5b, 0xb3, 0xb4, 0xce, 0xca, 0x32,
	0x03, 0xe7, 0xa3, 0xc4, 0x48, 0x63, 0x7d, 0x71, 0x6e, 0xf3, 0x63, 0x73, 0xe8, 0xd7, 0xc5, 0x2e,
	0x58, 0xa6, 0x19, 0x38, 0x5f, 0xc5, 0xf2, 0xee, 0xa2, 0xd5, 0xc5, 0x2e, 0x88, 0x36, 0x05, 0x67,
	0x8a, 0x19, 0x1e, 0x47, 0xbb, 0x51, 0xa5, 0x06, 0xd0, 0xaf, 0xab, 0xe4, 0x99, 0xc6, 0x7f, 0xef,
	0x41, 0xbb, 0x98, 0x0c, 0x04, 0x23, 0xdf, 0xa1, 0x7d, 0x50, 0x3e, 0x32, 0xa4, 0x47, 0x67, 0x8c,
	0x1e, 0xf7, 0xdb, 0x7d, 0x7e, 0x0a, 0x96, 0xbb, 0x79, 0x0d, 0xb2, 0x84, 0x4e, 0xa5, 0x52, 0xe4,
	0x85, 0x85, 0x6a, 0xeb, 0xac, 0x3b, 0x3a, 0x0d, 0x2c, 0x5d, 0x52, 0xe8, 0x56, 0xeb, 0x41, 0x6c,
	0x6c, 0x6b, 0x1d, 0xdd, 0x97, 0x67, 0x20, 0x0f, 0x8d, 0xaa, 0x9b, 0x6d, 0x35, 0xb2, 0x96, 0xcb,
	0x6a, 0x64, 0x6f, 0x4e, 0x6e, 0x54, 0xdd, 0x41, 0xab, 0x91, 0xb5, 0x2a, 0x56, 0x23, 0x7b, 0x1d,
	0xbc, 0xc6, 0x87, 0xe0, 0xdf, 0xff, 0xa7, 0xcd, 0x6f, 0x93, 0x0b, 0xae, 0xe9, 0xc5, 0xfd, 0xdd,
	0x55, 0xf8, 0xee, 0x2a, 0x00, 0x00, 0xff, 0xff, 0x31, 0x9d, 0xe7, 0xd1, 0xec, 0x05, 0x00, 0x00,
}

func (this *GetArtifactRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetArtifactRequest)
	if !ok {
		that2, ok := that.(GetArtifactRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Ref.Equal(that1.Ref) {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *GetArtifactResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetArtifactResponse)
	if !ok {
		that2, ok := that.(GetArtifactResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Artifact.Equal(that1.Artifact) {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *ListArtifactsRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ListArtifactsRequest)
	if !ok {
		that2, ok := that.(ListArtifactsRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.NamespaceList) != len(that1.NamespaceList) {
		return false
	}
	for i := range this.NamespaceList {
		if this.NamespaceList[i] != that1.NamespaceList[i] {
			return false
		}
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *ListArtifactsResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ListArtifactsResponse)
	if !ok {
		that2, ok := that.(ListArtifactsResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Artifact) != len(that1.Artifact) {
		return false
	}
	for i := range this.Artifact {
		if !this.Artifact[i].Equal(that1.Artifact[i]) {
			return false
		}
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *CreateArtifactRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateArtifactRequest)
	if !ok {
		that2, ok := that.(CreateArtifactRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Artifact.Equal(that1.Artifact) {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *CreateArtifactResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateArtifactResponse)
	if !ok {
		that2, ok := that.(CreateArtifactResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Artifact.Equal(that1.Artifact) {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *UpdateArtifactRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*UpdateArtifactRequest)
	if !ok {
		that2, ok := that.(UpdateArtifactRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Artifact.Equal(that1.Artifact) {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *UpdateArtifactResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*UpdateArtifactResponse)
	if !ok {
		that2, ok := that.(UpdateArtifactResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Artifact.Equal(that1.Artifact) {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *DeleteArtifactRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*DeleteArtifactRequest)
	if !ok {
		that2, ok := that.(DeleteArtifactRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Ref.Equal(that1.Ref) {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *DeleteArtifactResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*DeleteArtifactResponse)
	if !ok {
		that2, ok := that.(DeleteArtifactResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ArtifactApiClient is the client API for ArtifactApi service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ArtifactApiClient interface {
	GetArtifact(ctx context.Context, in *GetArtifactRequest, opts ...grpc.CallOption) (*GetArtifactResponse, error)
	ListArtifacts(ctx context.Context, in *ListArtifactsRequest, opts ...grpc.CallOption) (*ListArtifactsResponse, error)
	CreateArtifact(ctx context.Context, in *CreateArtifactRequest, opts ...grpc.CallOption) (*CreateArtifactResponse, error)
	UpdateArtifact(ctx context.Context, in *UpdateArtifactRequest, opts ...grpc.CallOption) (*UpdateArtifactResponse, error)
	DeleteArtifact(ctx context.Context, in *DeleteArtifactRequest, opts ...grpc.CallOption) (*DeleteArtifactResponse, error)
}

type artifactApiClient struct {
	cc *grpc.ClientConn
}

func NewArtifactApiClient(cc *grpc.ClientConn) ArtifactApiClient {
	return &artifactApiClient{cc}
}

func (c *artifactApiClient) GetArtifact(ctx context.Context, in *GetArtifactRequest, opts ...grpc.CallOption) (*GetArtifactResponse, error) {
	out := new(GetArtifactResponse)
	err := c.cc.Invoke(ctx, "/glooeeapi.solo.io.ArtifactApi/GetArtifact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *artifactApiClient) ListArtifacts(ctx context.Context, in *ListArtifactsRequest, opts ...grpc.CallOption) (*ListArtifactsResponse, error) {
	out := new(ListArtifactsResponse)
	err := c.cc.Invoke(ctx, "/glooeeapi.solo.io.ArtifactApi/ListArtifacts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *artifactApiClient) CreateArtifact(ctx context.Context, in *CreateArtifactRequest, opts ...grpc.CallOption) (*CreateArtifactResponse, error) {
	out := new(CreateArtifactResponse)
	err := c.cc.Invoke(ctx, "/glooeeapi.solo.io.ArtifactApi/CreateArtifact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *artifactApiClient) UpdateArtifact(ctx context.Context, in *UpdateArtifactRequest, opts ...grpc.CallOption) (*UpdateArtifactResponse, error) {
	out := new(UpdateArtifactResponse)
	err := c.cc.Invoke(ctx, "/glooeeapi.solo.io.ArtifactApi/UpdateArtifact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *artifactApiClient) DeleteArtifact(ctx context.Context, in *DeleteArtifactRequest, opts ...grpc.CallOption) (*DeleteArtifactResponse, error) {
	out := new(DeleteArtifactResponse)
	err := c.cc.Invoke(ctx, "/glooeeapi.solo.io.ArtifactApi/DeleteArtifact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ArtifactApiServer is the server API for ArtifactApi service.
type ArtifactApiServer interface {
	GetArtifact(context.Context, *GetArtifactRequest) (*GetArtifactResponse, error)
	ListArtifacts(context.Context, *ListArtifactsRequest) (*ListArtifactsResponse, error)
	CreateArtifact(context.Context, *CreateArtifactRequest) (*CreateArtifactResponse, error)
	UpdateArtifact(context.Context, *UpdateArtifactRequest) (*UpdateArtifactResponse, error)
	DeleteArtifact(context.Context, *DeleteArtifactRequest) (*DeleteArtifactResponse, error)
}

// UnimplementedArtifactApiServer can be embedded to have forward compatible implementations.
type UnimplementedArtifactApiServer struct {
}

func (*UnimplementedArtifactApiServer) GetArtifact(ctx context.Context, req *GetArtifactRequest) (*GetArtifactResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetArtifact not implemented")
}
func (*UnimplementedArtifactApiServer) ListArtifacts(ctx context.Context, req *ListArtifactsRequest) (*ListArtifactsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListArtifacts not implemented")
}
func (*UnimplementedArtifactApiServer) CreateArtifact(ctx context.Context, req *CreateArtifactRequest) (*CreateArtifactResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateArtifact not implemented")
}
func (*UnimplementedArtifactApiServer) UpdateArtifact(ctx context.Context, req *UpdateArtifactRequest) (*UpdateArtifactResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateArtifact not implemented")
}
func (*UnimplementedArtifactApiServer) DeleteArtifact(ctx context.Context, req *DeleteArtifactRequest) (*DeleteArtifactResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteArtifact not implemented")
}

func RegisterArtifactApiServer(s *grpc.Server, srv ArtifactApiServer) {
	s.RegisterService(&_ArtifactApi_serviceDesc, srv)
}

func _ArtifactApi_GetArtifact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetArtifactRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArtifactApiServer).GetArtifact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/glooeeapi.solo.io.ArtifactApi/GetArtifact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArtifactApiServer).GetArtifact(ctx, req.(*GetArtifactRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArtifactApi_ListArtifacts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListArtifactsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArtifactApiServer).ListArtifacts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/glooeeapi.solo.io.ArtifactApi/ListArtifacts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArtifactApiServer).ListArtifacts(ctx, req.(*ListArtifactsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArtifactApi_CreateArtifact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateArtifactRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArtifactApiServer).CreateArtifact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/glooeeapi.solo.io.ArtifactApi/CreateArtifact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArtifactApiServer).CreateArtifact(ctx, req.(*CreateArtifactRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArtifactApi_UpdateArtifact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateArtifactRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArtifactApiServer).UpdateArtifact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/glooeeapi.solo.io.ArtifactApi/UpdateArtifact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArtifactApiServer).UpdateArtifact(ctx, req.(*UpdateArtifactRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArtifactApi_DeleteArtifact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteArtifactRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArtifactApiServer).DeleteArtifact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/glooeeapi.solo.io.ArtifactApi/DeleteArtifact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArtifactApiServer).DeleteArtifact(ctx, req.(*DeleteArtifactRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ArtifactApi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "glooeeapi.solo.io.ArtifactApi",
	HandlerType: (*ArtifactApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetArtifact",
			Handler:    _ArtifactApi_GetArtifact_Handler,
		},
		{
			MethodName: "ListArtifacts",
			Handler:    _ArtifactApi_ListArtifacts_Handler,
		},
		{
			MethodName: "CreateArtifact",
			Handler:    _ArtifactApi_CreateArtifact_Handler,
		},
		{
			MethodName: "UpdateArtifact",
			Handler:    _ArtifactApi_UpdateArtifact_Handler,
		},
		{
			MethodName: "DeleteArtifact",
			Handler:    _ArtifactApi_DeleteArtifact_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/solo-io/solo-projects/projects/grpcserver/api/v1/artifact.proto",
}
