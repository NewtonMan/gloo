// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.6.1
// source: github.com/solo-io/solo-projects/projects/grpcserver/api/v1/gateway.proto

package v1

import (
	context "context"
	reflect "reflect"
	sync "sync"

	proto "github.com/golang/protobuf/proto"
	v1 "github.com/solo-io/gloo/projects/gateway/pkg/api/v1"
	_ "github.com/solo-io/protoc-gen-ext/extproto"
	core "github.com/solo-io/solo-kit/pkg/api/v1/resources/core"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type GatewayDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gateway *v1.Gateway `protobuf:"bytes,1,opt,name=gateway,proto3" json:"gateway,omitempty"`
	Raw     *Raw        `protobuf:"bytes,2,opt,name=raw,proto3" json:"raw,omitempty"`
	// Status of the instance and its relationship with Gloo.
	// Currently there are three possible values for the "Code" field on the status message.
	// In this context, their values have the following definitions:
	// ERROR:
	//   - The gateway CRD has status "Rejected"
	// WARNING:
	//   - The gateway CRD has status "Pending"
	// OK:
	//   - The gateway CRD has status "Accepted"
	Status *Status `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *GatewayDetails) Reset() {
	*x = GatewayDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_gateway_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GatewayDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayDetails) ProtoMessage() {}

func (x *GatewayDetails) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_gateway_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayDetails.ProtoReflect.Descriptor instead.
func (*GatewayDetails) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_gateway_proto_rawDescGZIP(), []int{0}
}

func (x *GatewayDetails) GetGateway() *v1.Gateway {
	if x != nil {
		return x.Gateway
	}
	return nil
}

func (x *GatewayDetails) GetRaw() *Raw {
	if x != nil {
		return x.Raw
	}
	return nil
}

func (x *GatewayDetails) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type GetGatewayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ref *core.ResourceRef `protobuf:"bytes,1,opt,name=ref,proto3" json:"ref,omitempty"`
}

func (x *GetGatewayRequest) Reset() {
	*x = GetGatewayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_gateway_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGatewayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGatewayRequest) ProtoMessage() {}

func (x *GetGatewayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_gateway_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGatewayRequest.ProtoReflect.Descriptor instead.
func (*GetGatewayRequest) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_gateway_proto_rawDescGZIP(), []int{1}
}

func (x *GetGatewayRequest) GetRef() *core.ResourceRef {
	if x != nil {
		return x.Ref
	}
	return nil
}

type GetGatewayResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GatewayDetails *GatewayDetails `protobuf:"bytes,1,opt,name=gateway_details,json=gatewayDetails,proto3" json:"gateway_details,omitempty"`
}

func (x *GetGatewayResponse) Reset() {
	*x = GetGatewayResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_gateway_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGatewayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGatewayResponse) ProtoMessage() {}

func (x *GetGatewayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_gateway_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGatewayResponse.ProtoReflect.Descriptor instead.
func (*GetGatewayResponse) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_gateway_proto_rawDescGZIP(), []int{2}
}

func (x *GetGatewayResponse) GetGatewayDetails() *GatewayDetails {
	if x != nil {
		return x.GatewayDetails
	}
	return nil
}

type ListGatewaysRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListGatewaysRequest) Reset() {
	*x = ListGatewaysRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_gateway_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGatewaysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGatewaysRequest) ProtoMessage() {}

func (x *ListGatewaysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_gateway_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGatewaysRequest.ProtoReflect.Descriptor instead.
func (*ListGatewaysRequest) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_gateway_proto_rawDescGZIP(), []int{3}
}

type ListGatewaysResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GatewayDetails []*GatewayDetails `protobuf:"bytes,1,rep,name=gateway_details,json=gatewayDetails,proto3" json:"gateway_details,omitempty"`
}

func (x *ListGatewaysResponse) Reset() {
	*x = ListGatewaysResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_gateway_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGatewaysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGatewaysResponse) ProtoMessage() {}

func (x *ListGatewaysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_gateway_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGatewaysResponse.ProtoReflect.Descriptor instead.
func (*ListGatewaysResponse) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_gateway_proto_rawDescGZIP(), []int{4}
}

func (x *ListGatewaysResponse) GetGatewayDetails() []*GatewayDetails {
	if x != nil {
		return x.GatewayDetails
	}
	return nil
}

type UpdateGatewayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gateway *v1.Gateway `protobuf:"bytes,1,opt,name=gateway,proto3" json:"gateway,omitempty"`
}

func (x *UpdateGatewayRequest) Reset() {
	*x = UpdateGatewayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_gateway_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGatewayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGatewayRequest) ProtoMessage() {}

func (x *UpdateGatewayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_gateway_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGatewayRequest.ProtoReflect.Descriptor instead.
func (*UpdateGatewayRequest) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_gateway_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateGatewayRequest) GetGateway() *v1.Gateway {
	if x != nil {
		return x.Gateway
	}
	return nil
}

type UpdateGatewayYamlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EditedYamlData *EditedResourceYaml `protobuf:"bytes,1,opt,name=edited_yaml_data,json=editedYamlData,proto3" json:"edited_yaml_data,omitempty"`
}

func (x *UpdateGatewayYamlRequest) Reset() {
	*x = UpdateGatewayYamlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_gateway_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGatewayYamlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGatewayYamlRequest) ProtoMessage() {}

func (x *UpdateGatewayYamlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_gateway_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGatewayYamlRequest.ProtoReflect.Descriptor instead.
func (*UpdateGatewayYamlRequest) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_gateway_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateGatewayYamlRequest) GetEditedYamlData() *EditedResourceYaml {
	if x != nil {
		return x.EditedYamlData
	}
	return nil
}

type UpdateGatewayResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GatewayDetails *GatewayDetails `protobuf:"bytes,1,opt,name=gateway_details,json=gatewayDetails,proto3" json:"gateway_details,omitempty"`
}

func (x *UpdateGatewayResponse) Reset() {
	*x = UpdateGatewayResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_gateway_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGatewayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGatewayResponse) ProtoMessage() {}

func (x *UpdateGatewayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_gateway_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGatewayResponse.ProtoReflect.Descriptor instead.
func (*UpdateGatewayResponse) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_gateway_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateGatewayResponse) GetGatewayDetails() *GatewayDetails {
	if x != nil {
		return x.GatewayDetails
	}
	return nil
}

var File_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_gateway_proto protoreflect.FileDescriptor

var file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_gateway_proto_rawDesc = []byte{
	0x0a, 0x49, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6c,
	0x6f, 0x2d, 0x69, 0x6f, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x67, 0x72, 0x70, 0x63,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x67, 0x6c, 0x6f,
	0x6f, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x1a, 0x12,
	0x65, 0x78, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x78, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x3d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73,
	0x6f, 0x6c, 0x6f, 0x2d, 0x69, 0x6f, 0x2f, 0x67, 0x6c, 0x6f, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f,
	0x6c, 0x6f, 0x2d, 0x69, 0x6f, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x6b, 0x69, 0x74, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x47, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6c, 0x6f,
	0x2d, 0x69, 0x6f, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa1, 0x01, 0x0a, 0x0e, 0x47, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x32, 0x0a, 0x07, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52, 0x07, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12,
	0x28, 0x0a, 0x03, 0x72, 0x61, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67,
	0x6c, 0x6f, 0x6f, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f,
	0x2e, 0x52, 0x61, 0x77, 0x52, 0x03, 0x72, 0x61, 0x77, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6c, 0x6f, 0x6f,
	0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x40, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2b, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x52, 0x03, 0x72, 0x65, 0x66, 0x22, 0x60,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x67, 0x6c, 0x6f, 0x6f, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69,
	0x6f, 0x2e, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x0e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x22, 0x15, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x62, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x47,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4a, 0x0a, 0x0f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x65,
	0x65, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0e, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x4a, 0x0a, 0x14, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x07, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x73,
	0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52, 0x07,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x22, 0x6b, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x59, 0x61, 0x6d, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x4f, 0x0a, 0x10, 0x65, 0x64, 0x69, 0x74, 0x65, 0x64, 0x5f, 0x79, 0x61,
	0x6d, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x67, 0x6c, 0x6f, 0x6f, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69,
	0x6f, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x59, 0x61, 0x6d, 0x6c, 0x52, 0x0e, 0x65, 0x64, 0x69, 0x74, 0x65, 0x64, 0x59, 0x61, 0x6d, 0x6c,
	0x44, 0x61, 0x74, 0x61, 0x22, 0x63, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a,
	0x0f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x65, 0x65, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x32, 0xa0, 0x03, 0x0a, 0x0a, 0x47, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x41, 0x70, 0x69, 0x12, 0x5b, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x47,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0x24, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x65, 0x65, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x67,
	0x6c, 0x6f, 0x6f, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f,
	0x2e, 0x47, 0x65, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x73, 0x12, 0x26, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x65, 0x65, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e,
	0x67, 0x6c, 0x6f, 0x6f, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69,
	0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0x27, 0x2e, 0x67, 0x6c, 0x6f, 0x6f,
	0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x28, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6c,
	0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x59,
	0x61, 0x6d, 0x6c, 0x12, 0x2b, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x59, 0x61, 0x6d, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x28, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6f, 0x6c,
	0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x41, 0x5a, 0x3b,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d,
	0x69, 0x6f, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0xc0, 0xf5, 0x04, 0x01, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_gateway_proto_rawDescOnce sync.Once
	file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_gateway_proto_rawDescData = file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_gateway_proto_rawDesc
)

func file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_gateway_proto_rawDescGZIP() []byte {
	file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_gateway_proto_rawDescOnce.Do(func() {
		file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_gateway_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_gateway_proto_rawDescData)
	})
	return file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_gateway_proto_rawDescData
}

var file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_gateway_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_gateway_proto_goTypes = []interface{}{
	(*GatewayDetails)(nil),           // 0: glooeeapi.solo.io.GatewayDetails
	(*GetGatewayRequest)(nil),        // 1: glooeeapi.solo.io.GetGatewayRequest
	(*GetGatewayResponse)(nil),       // 2: glooeeapi.solo.io.GetGatewayResponse
	(*ListGatewaysRequest)(nil),      // 3: glooeeapi.solo.io.ListGatewaysRequest
	(*ListGatewaysResponse)(nil),     // 4: glooeeapi.solo.io.ListGatewaysResponse
	(*UpdateGatewayRequest)(nil),     // 5: glooeeapi.solo.io.UpdateGatewayRequest
	(*UpdateGatewayYamlRequest)(nil), // 6: glooeeapi.solo.io.UpdateGatewayYamlRequest
	(*UpdateGatewayResponse)(nil),    // 7: glooeeapi.solo.io.UpdateGatewayResponse
	(*v1.Gateway)(nil),               // 8: gateway.solo.io.Gateway
	(*Raw)(nil),                      // 9: glooeeapi.solo.io.Raw
	(*Status)(nil),                   // 10: glooeeapi.solo.io.Status
	(*core.ResourceRef)(nil),         // 11: core.solo.io.ResourceRef
	(*EditedResourceYaml)(nil),       // 12: glooeeapi.solo.io.EditedResourceYaml
}
var file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_gateway_proto_depIdxs = []int32{
	8,  // 0: glooeeapi.solo.io.GatewayDetails.gateway:type_name -> gateway.solo.io.Gateway
	9,  // 1: glooeeapi.solo.io.GatewayDetails.raw:type_name -> glooeeapi.solo.io.Raw
	10, // 2: glooeeapi.solo.io.GatewayDetails.status:type_name -> glooeeapi.solo.io.Status
	11, // 3: glooeeapi.solo.io.GetGatewayRequest.ref:type_name -> core.solo.io.ResourceRef
	0,  // 4: glooeeapi.solo.io.GetGatewayResponse.gateway_details:type_name -> glooeeapi.solo.io.GatewayDetails
	0,  // 5: glooeeapi.solo.io.ListGatewaysResponse.gateway_details:type_name -> glooeeapi.solo.io.GatewayDetails
	8,  // 6: glooeeapi.solo.io.UpdateGatewayRequest.gateway:type_name -> gateway.solo.io.Gateway
	12, // 7: glooeeapi.solo.io.UpdateGatewayYamlRequest.edited_yaml_data:type_name -> glooeeapi.solo.io.EditedResourceYaml
	0,  // 8: glooeeapi.solo.io.UpdateGatewayResponse.gateway_details:type_name -> glooeeapi.solo.io.GatewayDetails
	1,  // 9: glooeeapi.solo.io.GatewayApi.GetGateway:input_type -> glooeeapi.solo.io.GetGatewayRequest
	3,  // 10: glooeeapi.solo.io.GatewayApi.ListGateways:input_type -> glooeeapi.solo.io.ListGatewaysRequest
	5,  // 11: glooeeapi.solo.io.GatewayApi.UpdateGateway:input_type -> glooeeapi.solo.io.UpdateGatewayRequest
	6,  // 12: glooeeapi.solo.io.GatewayApi.UpdateGatewayYaml:input_type -> glooeeapi.solo.io.UpdateGatewayYamlRequest
	2,  // 13: glooeeapi.solo.io.GatewayApi.GetGateway:output_type -> glooeeapi.solo.io.GetGatewayResponse
	4,  // 14: glooeeapi.solo.io.GatewayApi.ListGateways:output_type -> glooeeapi.solo.io.ListGatewaysResponse
	7,  // 15: glooeeapi.solo.io.GatewayApi.UpdateGateway:output_type -> glooeeapi.solo.io.UpdateGatewayResponse
	7,  // 16: glooeeapi.solo.io.GatewayApi.UpdateGatewayYaml:output_type -> glooeeapi.solo.io.UpdateGatewayResponse
	13, // [13:17] is the sub-list for method output_type
	9,  // [9:13] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_gateway_proto_init() }
func file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_gateway_proto_init() {
	if File_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_gateway_proto != nil {
		return
	}
	file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_gateway_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GatewayDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_gateway_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGatewayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_gateway_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGatewayResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_gateway_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGatewaysRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_gateway_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGatewaysResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_gateway_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGatewayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_gateway_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGatewayYamlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_gateway_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGatewayResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_gateway_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_gateway_proto_goTypes,
		DependencyIndexes: file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_gateway_proto_depIdxs,
		MessageInfos:      file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_gateway_proto_msgTypes,
	}.Build()
	File_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_gateway_proto = out.File
	file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_gateway_proto_rawDesc = nil
	file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_gateway_proto_goTypes = nil
	file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_gateway_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GatewayApiClient is the client API for GatewayApi service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GatewayApiClient interface {
	GetGateway(ctx context.Context, in *GetGatewayRequest, opts ...grpc.CallOption) (*GetGatewayResponse, error)
	ListGateways(ctx context.Context, in *ListGatewaysRequest, opts ...grpc.CallOption) (*ListGatewaysResponse, error)
	UpdateGateway(ctx context.Context, in *UpdateGatewayRequest, opts ...grpc.CallOption) (*UpdateGatewayResponse, error)
	UpdateGatewayYaml(ctx context.Context, in *UpdateGatewayYamlRequest, opts ...grpc.CallOption) (*UpdateGatewayResponse, error)
}

type gatewayApiClient struct {
	cc grpc.ClientConnInterface
}

func NewGatewayApiClient(cc grpc.ClientConnInterface) GatewayApiClient {
	return &gatewayApiClient{cc}
}

func (c *gatewayApiClient) GetGateway(ctx context.Context, in *GetGatewayRequest, opts ...grpc.CallOption) (*GetGatewayResponse, error) {
	out := new(GetGatewayResponse)
	err := c.cc.Invoke(ctx, "/glooeeapi.solo.io.GatewayApi/GetGateway", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayApiClient) ListGateways(ctx context.Context, in *ListGatewaysRequest, opts ...grpc.CallOption) (*ListGatewaysResponse, error) {
	out := new(ListGatewaysResponse)
	err := c.cc.Invoke(ctx, "/glooeeapi.solo.io.GatewayApi/ListGateways", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayApiClient) UpdateGateway(ctx context.Context, in *UpdateGatewayRequest, opts ...grpc.CallOption) (*UpdateGatewayResponse, error) {
	out := new(UpdateGatewayResponse)
	err := c.cc.Invoke(ctx, "/glooeeapi.solo.io.GatewayApi/UpdateGateway", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayApiClient) UpdateGatewayYaml(ctx context.Context, in *UpdateGatewayYamlRequest, opts ...grpc.CallOption) (*UpdateGatewayResponse, error) {
	out := new(UpdateGatewayResponse)
	err := c.cc.Invoke(ctx, "/glooeeapi.solo.io.GatewayApi/UpdateGatewayYaml", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GatewayApiServer is the server API for GatewayApi service.
type GatewayApiServer interface {
	GetGateway(context.Context, *GetGatewayRequest) (*GetGatewayResponse, error)
	ListGateways(context.Context, *ListGatewaysRequest) (*ListGatewaysResponse, error)
	UpdateGateway(context.Context, *UpdateGatewayRequest) (*UpdateGatewayResponse, error)
	UpdateGatewayYaml(context.Context, *UpdateGatewayYamlRequest) (*UpdateGatewayResponse, error)
}

// UnimplementedGatewayApiServer can be embedded to have forward compatible implementations.
type UnimplementedGatewayApiServer struct {
}

func (*UnimplementedGatewayApiServer) GetGateway(context.Context, *GetGatewayRequest) (*GetGatewayResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGateway not implemented")
}
func (*UnimplementedGatewayApiServer) ListGateways(context.Context, *ListGatewaysRequest) (*ListGatewaysResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListGateways not implemented")
}
func (*UnimplementedGatewayApiServer) UpdateGateway(context.Context, *UpdateGatewayRequest) (*UpdateGatewayResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateGateway not implemented")
}
func (*UnimplementedGatewayApiServer) UpdateGatewayYaml(context.Context, *UpdateGatewayYamlRequest) (*UpdateGatewayResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateGatewayYaml not implemented")
}

func RegisterGatewayApiServer(s *grpc.Server, srv GatewayApiServer) {
	s.RegisterService(&_GatewayApi_serviceDesc, srv)
}

func _GatewayApi_GetGateway_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGatewayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayApiServer).GetGateway(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/glooeeapi.solo.io.GatewayApi/GetGateway",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayApiServer).GetGateway(ctx, req.(*GetGatewayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GatewayApi_ListGateways_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListGatewaysRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayApiServer).ListGateways(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/glooeeapi.solo.io.GatewayApi/ListGateways",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayApiServer).ListGateways(ctx, req.(*ListGatewaysRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GatewayApi_UpdateGateway_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateGatewayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayApiServer).UpdateGateway(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/glooeeapi.solo.io.GatewayApi/UpdateGateway",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayApiServer).UpdateGateway(ctx, req.(*UpdateGatewayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GatewayApi_UpdateGatewayYaml_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateGatewayYamlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayApiServer).UpdateGatewayYaml(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/glooeeapi.solo.io.GatewayApi/UpdateGatewayYaml",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayApiServer).UpdateGatewayYaml(ctx, req.(*UpdateGatewayYamlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GatewayApi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "glooeeapi.solo.io.GatewayApi",
	HandlerType: (*GatewayApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetGateway",
			Handler:    _GatewayApi_GetGateway_Handler,
		},
		{
			MethodName: "ListGateways",
			Handler:    _GatewayApi_ListGateways_Handler,
		},
		{
			MethodName: "UpdateGateway",
			Handler:    _GatewayApi_UpdateGateway_Handler,
		},
		{
			MethodName: "UpdateGatewayYaml",
			Handler:    _GatewayApi_UpdateGatewayYaml_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/solo-io/solo-projects/projects/grpcserver/api/v1/gateway.proto",
}
