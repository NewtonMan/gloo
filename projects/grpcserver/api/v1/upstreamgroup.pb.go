// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.6.1
// source: github.com/solo-io/solo-projects/projects/grpcserver/api/v1/upstreamgroup.proto

package v1

import (
	context "context"
	reflect "reflect"
	sync "sync"

	proto "github.com/golang/protobuf/proto"
	v1 "github.com/solo-io/gloo/projects/gloo/pkg/api/v1"
	_ "github.com/solo-io/protoc-gen-ext/extproto"
	core "github.com/solo-io/solo-kit/pkg/api/v1/resources/core"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type UpstreamGroupDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpstreamGroup *v1.UpstreamGroup `protobuf:"bytes,1,opt,name=upstream_group,json=upstreamGroup,proto3" json:"upstream_group,omitempty"`
	Raw           *Raw              `protobuf:"bytes,2,opt,name=raw,proto3" json:"raw,omitempty"`
}

func (x *UpstreamGroupDetails) Reset() {
	*x = UpstreamGroupDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpstreamGroupDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpstreamGroupDetails) ProtoMessage() {}

func (x *UpstreamGroupDetails) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpstreamGroupDetails.ProtoReflect.Descriptor instead.
func (*UpstreamGroupDetails) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_rawDescGZIP(), []int{0}
}

func (x *UpstreamGroupDetails) GetUpstreamGroup() *v1.UpstreamGroup {
	if x != nil {
		return x.UpstreamGroup
	}
	return nil
}

func (x *UpstreamGroupDetails) GetRaw() *Raw {
	if x != nil {
		return x.Raw
	}
	return nil
}

type GetUpstreamGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ref *core.ResourceRef `protobuf:"bytes,1,opt,name=ref,proto3" json:"ref,omitempty"`
}

func (x *GetUpstreamGroupRequest) Reset() {
	*x = GetUpstreamGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUpstreamGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUpstreamGroupRequest) ProtoMessage() {}

func (x *GetUpstreamGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUpstreamGroupRequest.ProtoReflect.Descriptor instead.
func (*GetUpstreamGroupRequest) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_rawDescGZIP(), []int{1}
}

func (x *GetUpstreamGroupRequest) GetRef() *core.ResourceRef {
	if x != nil {
		return x.Ref
	}
	return nil
}

type GetUpstreamGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpstreamGroupDetails *UpstreamGroupDetails `protobuf:"bytes,1,opt,name=upstream_group_details,json=upstreamGroupDetails,proto3" json:"upstream_group_details,omitempty"`
}

func (x *GetUpstreamGroupResponse) Reset() {
	*x = GetUpstreamGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUpstreamGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUpstreamGroupResponse) ProtoMessage() {}

func (x *GetUpstreamGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUpstreamGroupResponse.ProtoReflect.Descriptor instead.
func (*GetUpstreamGroupResponse) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_rawDescGZIP(), []int{2}
}

func (x *GetUpstreamGroupResponse) GetUpstreamGroupDetails() *UpstreamGroupDetails {
	if x != nil {
		return x.UpstreamGroupDetails
	}
	return nil
}

type ListUpstreamGroupsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListUpstreamGroupsRequest) Reset() {
	*x = ListUpstreamGroupsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUpstreamGroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUpstreamGroupsRequest) ProtoMessage() {}

func (x *ListUpstreamGroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUpstreamGroupsRequest.ProtoReflect.Descriptor instead.
func (*ListUpstreamGroupsRequest) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_rawDescGZIP(), []int{3}
}

type ListUpstreamGroupsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpstreamGroupDetails []*UpstreamGroupDetails `protobuf:"bytes,1,rep,name=upstream_group_details,json=upstreamGroupDetails,proto3" json:"upstream_group_details,omitempty"`
}

func (x *ListUpstreamGroupsResponse) Reset() {
	*x = ListUpstreamGroupsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUpstreamGroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUpstreamGroupsResponse) ProtoMessage() {}

func (x *ListUpstreamGroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUpstreamGroupsResponse.ProtoReflect.Descriptor instead.
func (*ListUpstreamGroupsResponse) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_rawDescGZIP(), []int{4}
}

func (x *ListUpstreamGroupsResponse) GetUpstreamGroupDetails() []*UpstreamGroupDetails {
	if x != nil {
		return x.UpstreamGroupDetails
	}
	return nil
}

type CreateUpstreamGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpstreamGroup *v1.UpstreamGroup `protobuf:"bytes,1,opt,name=upstream_group,json=upstreamGroup,proto3" json:"upstream_group,omitempty"`
}

func (x *CreateUpstreamGroupRequest) Reset() {
	*x = CreateUpstreamGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUpstreamGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUpstreamGroupRequest) ProtoMessage() {}

func (x *CreateUpstreamGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUpstreamGroupRequest.ProtoReflect.Descriptor instead.
func (*CreateUpstreamGroupRequest) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_rawDescGZIP(), []int{5}
}

func (x *CreateUpstreamGroupRequest) GetUpstreamGroup() *v1.UpstreamGroup {
	if x != nil {
		return x.UpstreamGroup
	}
	return nil
}

type CreateUpstreamGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpstreamGroupDetails *UpstreamGroupDetails `protobuf:"bytes,1,opt,name=upstream_group_details,json=upstreamGroupDetails,proto3" json:"upstream_group_details,omitempty"`
}

func (x *CreateUpstreamGroupResponse) Reset() {
	*x = CreateUpstreamGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUpstreamGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUpstreamGroupResponse) ProtoMessage() {}

func (x *CreateUpstreamGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUpstreamGroupResponse.ProtoReflect.Descriptor instead.
func (*CreateUpstreamGroupResponse) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_rawDescGZIP(), []int{6}
}

func (x *CreateUpstreamGroupResponse) GetUpstreamGroupDetails() *UpstreamGroupDetails {
	if x != nil {
		return x.UpstreamGroupDetails
	}
	return nil
}

type UpdateUpstreamGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpstreamGroup *v1.UpstreamGroup `protobuf:"bytes,1,opt,name=upstream_group,json=upstreamGroup,proto3" json:"upstream_group,omitempty"`
}

func (x *UpdateUpstreamGroupRequest) Reset() {
	*x = UpdateUpstreamGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUpstreamGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUpstreamGroupRequest) ProtoMessage() {}

func (x *UpdateUpstreamGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUpstreamGroupRequest.ProtoReflect.Descriptor instead.
func (*UpdateUpstreamGroupRequest) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateUpstreamGroupRequest) GetUpstreamGroup() *v1.UpstreamGroup {
	if x != nil {
		return x.UpstreamGroup
	}
	return nil
}

type UpdateUpstreamGroupYamlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EditedYamlData *EditedResourceYaml `protobuf:"bytes,1,opt,name=edited_yaml_data,json=editedYamlData,proto3" json:"edited_yaml_data,omitempty"`
}

func (x *UpdateUpstreamGroupYamlRequest) Reset() {
	*x = UpdateUpstreamGroupYamlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUpstreamGroupYamlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUpstreamGroupYamlRequest) ProtoMessage() {}

func (x *UpdateUpstreamGroupYamlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUpstreamGroupYamlRequest.ProtoReflect.Descriptor instead.
func (*UpdateUpstreamGroupYamlRequest) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateUpstreamGroupYamlRequest) GetEditedYamlData() *EditedResourceYaml {
	if x != nil {
		return x.EditedYamlData
	}
	return nil
}

type UpdateUpstreamGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpstreamGroupDetails *UpstreamGroupDetails `protobuf:"bytes,1,opt,name=upstream_group_details,json=upstreamGroupDetails,proto3" json:"upstream_group_details,omitempty"`
}

func (x *UpdateUpstreamGroupResponse) Reset() {
	*x = UpdateUpstreamGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUpstreamGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUpstreamGroupResponse) ProtoMessage() {}

func (x *UpdateUpstreamGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUpstreamGroupResponse.ProtoReflect.Descriptor instead.
func (*UpdateUpstreamGroupResponse) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateUpstreamGroupResponse) GetUpstreamGroupDetails() *UpstreamGroupDetails {
	if x != nil {
		return x.UpstreamGroupDetails
	}
	return nil
}

type DeleteUpstreamGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ref *core.ResourceRef `protobuf:"bytes,1,opt,name=ref,proto3" json:"ref,omitempty"`
}

func (x *DeleteUpstreamGroupRequest) Reset() {
	*x = DeleteUpstreamGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUpstreamGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUpstreamGroupRequest) ProtoMessage() {}

func (x *DeleteUpstreamGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUpstreamGroupRequest.ProtoReflect.Descriptor instead.
func (*DeleteUpstreamGroupRequest) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteUpstreamGroupRequest) GetRef() *core.ResourceRef {
	if x != nil {
		return x.Ref
	}
	return nil
}

type DeleteUpstreamGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteUpstreamGroupResponse) Reset() {
	*x = DeleteUpstreamGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUpstreamGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUpstreamGroupResponse) ProtoMessage() {}

func (x *DeleteUpstreamGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUpstreamGroupResponse.ProtoReflect.Descriptor instead.
func (*DeleteUpstreamGroupResponse) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_rawDescGZIP(), []int{11}
}

var File_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto protoreflect.FileDescriptor

var file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_rawDesc = []byte{
	0x0a, 0x4f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6c,
	0x6f, 0x2d, 0x69, 0x6f, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x67, 0x72, 0x70, 0x63,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x70,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x11, 0x67, 0x6c, 0x6f, 0x6f, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6f, 0x6c,
	0x6f, 0x2e, 0x69, 0x6f, 0x1a, 0x12, 0x65, 0x78, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65,
	0x78, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x69, 0x6f, 0x2f, 0x67, 0x6c, 0x6f,
	0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x67, 0x6c, 0x6f, 0x6f, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x47, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73,
	0x6f, 0x6c, 0x6f, 0x2d, 0x69, 0x6f, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x67, 0x72,
	0x70, 0x63, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x69, 0x6f, 0x2f,
	0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x6b, 0x69, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x72, 0x65, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x84, 0x01, 0x0a, 0x14, 0x55, 0x70,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x12, 0x42, 0x0a, 0x0e, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6c, 0x6f,
	0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0d, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x28, 0x0a, 0x03, 0x72, 0x61, 0x77, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x52, 0x61, 0x77, 0x52, 0x03, 0x72, 0x61, 0x77,
	0x22, 0x46, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x03, 0x72,
	0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x66, 0x52, 0x03, 0x72, 0x65, 0x66, 0x22, 0x79, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x55,
	0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x16, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x65, 0x65, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x14, 0x75,
	0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x22, 0x1b, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x70, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x7b, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d,
	0x0a, 0x16, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e,
	0x69, 0x6f, 0x2e, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x14, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x60, 0x0a,
	0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x0e, 0x75,
	0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e,
	0x69, 0x6f, 0x2e, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x0d, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22,
	0x7c, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d,
	0x0a, 0x16, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e,
	0x69, 0x6f, 0x2e, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x14, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x60, 0x0a,
	0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x0e, 0x75,
	0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e,
	0x69, 0x6f, 0x2e, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x0d, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22,
	0x71, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x59, 0x61, 0x6d, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x4f, 0x0a, 0x10, 0x65, 0x64, 0x69, 0x74, 0x65, 0x64, 0x5f, 0x79, 0x61, 0x6d, 0x6c,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x67, 0x6c,
	0x6f, 0x6f, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e,
	0x45, 0x64, 0x69, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x59, 0x61,
	0x6d, 0x6c, 0x52, 0x0e, 0x65, 0x64, 0x69, 0x74, 0x65, 0x64, 0x59, 0x61, 0x6d, 0x6c, 0x44, 0x61,
	0x74, 0x61, 0x22, 0x7c, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x70, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x5d, 0x0a, 0x16, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6f,
	0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x14, 0x75, 0x70, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x22, 0x49, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b,
	0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x52, 0x03, 0x72, 0x65, 0x66, 0x22, 0x1d, 0x0a, 0x1b, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xde, 0x05, 0x0a, 0x10, 0x55,
	0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x69, 0x12,
	0x6d, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x2a, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x70, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2b, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6f, 0x6c, 0x6f,
	0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x73,
	0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x12, 0x2c, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x65, 0x65, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x70, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x70, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x76, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x70, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x2d, 0x2e, 0x67, 0x6c, 0x6f,
	0x6f, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x67, 0x6c, 0x6f, 0x6f,
	0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x76, 0x0a, 0x13, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x2d, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x70, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2e, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6f,
	0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x70, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x7e, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x70, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x59, 0x61, 0x6d, 0x6c, 0x12, 0x31,
	0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e,
	0x69, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x59, 0x61, 0x6d, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2e, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6f,
	0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x70, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x76, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x70, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x2d, 0x2e, 0x67, 0x6c, 0x6f,
	0x6f, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x67, 0x6c, 0x6f, 0x6f,
	0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x41, 0x5a, 0x3b, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x69,
	0x6f, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0xc0, 0xf5, 0x04, 0x01, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_rawDescOnce sync.Once
	file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_rawDescData = file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_rawDesc
)

func file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_rawDescGZIP() []byte {
	file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_rawDescOnce.Do(func() {
		file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_rawDescData)
	})
	return file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_rawDescData
}

var file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_goTypes = []interface{}{
	(*UpstreamGroupDetails)(nil),           // 0: glooeeapi.solo.io.UpstreamGroupDetails
	(*GetUpstreamGroupRequest)(nil),        // 1: glooeeapi.solo.io.GetUpstreamGroupRequest
	(*GetUpstreamGroupResponse)(nil),       // 2: glooeeapi.solo.io.GetUpstreamGroupResponse
	(*ListUpstreamGroupsRequest)(nil),      // 3: glooeeapi.solo.io.ListUpstreamGroupsRequest
	(*ListUpstreamGroupsResponse)(nil),     // 4: glooeeapi.solo.io.ListUpstreamGroupsResponse
	(*CreateUpstreamGroupRequest)(nil),     // 5: glooeeapi.solo.io.CreateUpstreamGroupRequest
	(*CreateUpstreamGroupResponse)(nil),    // 6: glooeeapi.solo.io.CreateUpstreamGroupResponse
	(*UpdateUpstreamGroupRequest)(nil),     // 7: glooeeapi.solo.io.UpdateUpstreamGroupRequest
	(*UpdateUpstreamGroupYamlRequest)(nil), // 8: glooeeapi.solo.io.UpdateUpstreamGroupYamlRequest
	(*UpdateUpstreamGroupResponse)(nil),    // 9: glooeeapi.solo.io.UpdateUpstreamGroupResponse
	(*DeleteUpstreamGroupRequest)(nil),     // 10: glooeeapi.solo.io.DeleteUpstreamGroupRequest
	(*DeleteUpstreamGroupResponse)(nil),    // 11: glooeeapi.solo.io.DeleteUpstreamGroupResponse
	(*v1.UpstreamGroup)(nil),               // 12: gloo.solo.io.UpstreamGroup
	(*Raw)(nil),                            // 13: glooeeapi.solo.io.Raw
	(*core.ResourceRef)(nil),               // 14: core.solo.io.ResourceRef
	(*EditedResourceYaml)(nil),             // 15: glooeeapi.solo.io.EditedResourceYaml
}
var file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_depIdxs = []int32{
	12, // 0: glooeeapi.solo.io.UpstreamGroupDetails.upstream_group:type_name -> gloo.solo.io.UpstreamGroup
	13, // 1: glooeeapi.solo.io.UpstreamGroupDetails.raw:type_name -> glooeeapi.solo.io.Raw
	14, // 2: glooeeapi.solo.io.GetUpstreamGroupRequest.ref:type_name -> core.solo.io.ResourceRef
	0,  // 3: glooeeapi.solo.io.GetUpstreamGroupResponse.upstream_group_details:type_name -> glooeeapi.solo.io.UpstreamGroupDetails
	0,  // 4: glooeeapi.solo.io.ListUpstreamGroupsResponse.upstream_group_details:type_name -> glooeeapi.solo.io.UpstreamGroupDetails
	12, // 5: glooeeapi.solo.io.CreateUpstreamGroupRequest.upstream_group:type_name -> gloo.solo.io.UpstreamGroup
	0,  // 6: glooeeapi.solo.io.CreateUpstreamGroupResponse.upstream_group_details:type_name -> glooeeapi.solo.io.UpstreamGroupDetails
	12, // 7: glooeeapi.solo.io.UpdateUpstreamGroupRequest.upstream_group:type_name -> gloo.solo.io.UpstreamGroup
	15, // 8: glooeeapi.solo.io.UpdateUpstreamGroupYamlRequest.edited_yaml_data:type_name -> glooeeapi.solo.io.EditedResourceYaml
	0,  // 9: glooeeapi.solo.io.UpdateUpstreamGroupResponse.upstream_group_details:type_name -> glooeeapi.solo.io.UpstreamGroupDetails
	14, // 10: glooeeapi.solo.io.DeleteUpstreamGroupRequest.ref:type_name -> core.solo.io.ResourceRef
	1,  // 11: glooeeapi.solo.io.UpstreamGroupApi.GetUpstreamGroup:input_type -> glooeeapi.solo.io.GetUpstreamGroupRequest
	3,  // 12: glooeeapi.solo.io.UpstreamGroupApi.ListUpstreamGroups:input_type -> glooeeapi.solo.io.ListUpstreamGroupsRequest
	5,  // 13: glooeeapi.solo.io.UpstreamGroupApi.CreateUpstreamGroup:input_type -> glooeeapi.solo.io.CreateUpstreamGroupRequest
	7,  // 14: glooeeapi.solo.io.UpstreamGroupApi.UpdateUpstreamGroup:input_type -> glooeeapi.solo.io.UpdateUpstreamGroupRequest
	8,  // 15: glooeeapi.solo.io.UpstreamGroupApi.UpdateUpstreamGroupYaml:input_type -> glooeeapi.solo.io.UpdateUpstreamGroupYamlRequest
	10, // 16: glooeeapi.solo.io.UpstreamGroupApi.DeleteUpstreamGroup:input_type -> glooeeapi.solo.io.DeleteUpstreamGroupRequest
	2,  // 17: glooeeapi.solo.io.UpstreamGroupApi.GetUpstreamGroup:output_type -> glooeeapi.solo.io.GetUpstreamGroupResponse
	4,  // 18: glooeeapi.solo.io.UpstreamGroupApi.ListUpstreamGroups:output_type -> glooeeapi.solo.io.ListUpstreamGroupsResponse
	6,  // 19: glooeeapi.solo.io.UpstreamGroupApi.CreateUpstreamGroup:output_type -> glooeeapi.solo.io.CreateUpstreamGroupResponse
	9,  // 20: glooeeapi.solo.io.UpstreamGroupApi.UpdateUpstreamGroup:output_type -> glooeeapi.solo.io.UpdateUpstreamGroupResponse
	9,  // 21: glooeeapi.solo.io.UpstreamGroupApi.UpdateUpstreamGroupYaml:output_type -> glooeeapi.solo.io.UpdateUpstreamGroupResponse
	11, // 22: glooeeapi.solo.io.UpstreamGroupApi.DeleteUpstreamGroup:output_type -> glooeeapi.solo.io.DeleteUpstreamGroupResponse
	17, // [17:23] is the sub-list for method output_type
	11, // [11:17] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() {
	file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_init()
}
func file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_init() {
	if File_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto != nil {
		return
	}
	file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpstreamGroupDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUpstreamGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUpstreamGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUpstreamGroupsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUpstreamGroupsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUpstreamGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUpstreamGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUpstreamGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUpstreamGroupYamlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUpstreamGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUpstreamGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUpstreamGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_goTypes,
		DependencyIndexes: file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_depIdxs,
		MessageInfos:      file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_msgTypes,
	}.Build()
	File_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto = out.File
	file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_rawDesc = nil
	file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_goTypes = nil
	file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstreamgroup_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// UpstreamGroupApiClient is the client API for UpstreamGroupApi service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UpstreamGroupApiClient interface {
	GetUpstreamGroup(ctx context.Context, in *GetUpstreamGroupRequest, opts ...grpc.CallOption) (*GetUpstreamGroupResponse, error)
	ListUpstreamGroups(ctx context.Context, in *ListUpstreamGroupsRequest, opts ...grpc.CallOption) (*ListUpstreamGroupsResponse, error)
	CreateUpstreamGroup(ctx context.Context, in *CreateUpstreamGroupRequest, opts ...grpc.CallOption) (*CreateUpstreamGroupResponse, error)
	UpdateUpstreamGroup(ctx context.Context, in *UpdateUpstreamGroupRequest, opts ...grpc.CallOption) (*UpdateUpstreamGroupResponse, error)
	UpdateUpstreamGroupYaml(ctx context.Context, in *UpdateUpstreamGroupYamlRequest, opts ...grpc.CallOption) (*UpdateUpstreamGroupResponse, error)
	DeleteUpstreamGroup(ctx context.Context, in *DeleteUpstreamGroupRequest, opts ...grpc.CallOption) (*DeleteUpstreamGroupResponse, error)
}

type upstreamGroupApiClient struct {
	cc grpc.ClientConnInterface
}

func NewUpstreamGroupApiClient(cc grpc.ClientConnInterface) UpstreamGroupApiClient {
	return &upstreamGroupApiClient{cc}
}

func (c *upstreamGroupApiClient) GetUpstreamGroup(ctx context.Context, in *GetUpstreamGroupRequest, opts ...grpc.CallOption) (*GetUpstreamGroupResponse, error) {
	out := new(GetUpstreamGroupResponse)
	err := c.cc.Invoke(ctx, "/glooeeapi.solo.io.UpstreamGroupApi/GetUpstreamGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *upstreamGroupApiClient) ListUpstreamGroups(ctx context.Context, in *ListUpstreamGroupsRequest, opts ...grpc.CallOption) (*ListUpstreamGroupsResponse, error) {
	out := new(ListUpstreamGroupsResponse)
	err := c.cc.Invoke(ctx, "/glooeeapi.solo.io.UpstreamGroupApi/ListUpstreamGroups", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *upstreamGroupApiClient) CreateUpstreamGroup(ctx context.Context, in *CreateUpstreamGroupRequest, opts ...grpc.CallOption) (*CreateUpstreamGroupResponse, error) {
	out := new(CreateUpstreamGroupResponse)
	err := c.cc.Invoke(ctx, "/glooeeapi.solo.io.UpstreamGroupApi/CreateUpstreamGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *upstreamGroupApiClient) UpdateUpstreamGroup(ctx context.Context, in *UpdateUpstreamGroupRequest, opts ...grpc.CallOption) (*UpdateUpstreamGroupResponse, error) {
	out := new(UpdateUpstreamGroupResponse)
	err := c.cc.Invoke(ctx, "/glooeeapi.solo.io.UpstreamGroupApi/UpdateUpstreamGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *upstreamGroupApiClient) UpdateUpstreamGroupYaml(ctx context.Context, in *UpdateUpstreamGroupYamlRequest, opts ...grpc.CallOption) (*UpdateUpstreamGroupResponse, error) {
	out := new(UpdateUpstreamGroupResponse)
	err := c.cc.Invoke(ctx, "/glooeeapi.solo.io.UpstreamGroupApi/UpdateUpstreamGroupYaml", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *upstreamGroupApiClient) DeleteUpstreamGroup(ctx context.Context, in *DeleteUpstreamGroupRequest, opts ...grpc.CallOption) (*DeleteUpstreamGroupResponse, error) {
	out := new(DeleteUpstreamGroupResponse)
	err := c.cc.Invoke(ctx, "/glooeeapi.solo.io.UpstreamGroupApi/DeleteUpstreamGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UpstreamGroupApiServer is the server API for UpstreamGroupApi service.
type UpstreamGroupApiServer interface {
	GetUpstreamGroup(context.Context, *GetUpstreamGroupRequest) (*GetUpstreamGroupResponse, error)
	ListUpstreamGroups(context.Context, *ListUpstreamGroupsRequest) (*ListUpstreamGroupsResponse, error)
	CreateUpstreamGroup(context.Context, *CreateUpstreamGroupRequest) (*CreateUpstreamGroupResponse, error)
	UpdateUpstreamGroup(context.Context, *UpdateUpstreamGroupRequest) (*UpdateUpstreamGroupResponse, error)
	UpdateUpstreamGroupYaml(context.Context, *UpdateUpstreamGroupYamlRequest) (*UpdateUpstreamGroupResponse, error)
	DeleteUpstreamGroup(context.Context, *DeleteUpstreamGroupRequest) (*DeleteUpstreamGroupResponse, error)
}

// UnimplementedUpstreamGroupApiServer can be embedded to have forward compatible implementations.
type UnimplementedUpstreamGroupApiServer struct {
}

func (*UnimplementedUpstreamGroupApiServer) GetUpstreamGroup(context.Context, *GetUpstreamGroupRequest) (*GetUpstreamGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUpstreamGroup not implemented")
}
func (*UnimplementedUpstreamGroupApiServer) ListUpstreamGroups(context.Context, *ListUpstreamGroupsRequest) (*ListUpstreamGroupsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListUpstreamGroups not implemented")
}
func (*UnimplementedUpstreamGroupApiServer) CreateUpstreamGroup(context.Context, *CreateUpstreamGroupRequest) (*CreateUpstreamGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUpstreamGroup not implemented")
}
func (*UnimplementedUpstreamGroupApiServer) UpdateUpstreamGroup(context.Context, *UpdateUpstreamGroupRequest) (*UpdateUpstreamGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUpstreamGroup not implemented")
}
func (*UnimplementedUpstreamGroupApiServer) UpdateUpstreamGroupYaml(context.Context, *UpdateUpstreamGroupYamlRequest) (*UpdateUpstreamGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUpstreamGroupYaml not implemented")
}
func (*UnimplementedUpstreamGroupApiServer) DeleteUpstreamGroup(context.Context, *DeleteUpstreamGroupRequest) (*DeleteUpstreamGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteUpstreamGroup not implemented")
}

func RegisterUpstreamGroupApiServer(s *grpc.Server, srv UpstreamGroupApiServer) {
	s.RegisterService(&_UpstreamGroupApi_serviceDesc, srv)
}

func _UpstreamGroupApi_GetUpstreamGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUpstreamGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UpstreamGroupApiServer).GetUpstreamGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/glooeeapi.solo.io.UpstreamGroupApi/GetUpstreamGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UpstreamGroupApiServer).GetUpstreamGroup(ctx, req.(*GetUpstreamGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UpstreamGroupApi_ListUpstreamGroups_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListUpstreamGroupsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UpstreamGroupApiServer).ListUpstreamGroups(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/glooeeapi.solo.io.UpstreamGroupApi/ListUpstreamGroups",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UpstreamGroupApiServer).ListUpstreamGroups(ctx, req.(*ListUpstreamGroupsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UpstreamGroupApi_CreateUpstreamGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUpstreamGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UpstreamGroupApiServer).CreateUpstreamGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/glooeeapi.solo.io.UpstreamGroupApi/CreateUpstreamGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UpstreamGroupApiServer).CreateUpstreamGroup(ctx, req.(*CreateUpstreamGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UpstreamGroupApi_UpdateUpstreamGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUpstreamGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UpstreamGroupApiServer).UpdateUpstreamGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/glooeeapi.solo.io.UpstreamGroupApi/UpdateUpstreamGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UpstreamGroupApiServer).UpdateUpstreamGroup(ctx, req.(*UpdateUpstreamGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UpstreamGroupApi_UpdateUpstreamGroupYaml_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUpstreamGroupYamlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UpstreamGroupApiServer).UpdateUpstreamGroupYaml(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/glooeeapi.solo.io.UpstreamGroupApi/UpdateUpstreamGroupYaml",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UpstreamGroupApiServer).UpdateUpstreamGroupYaml(ctx, req.(*UpdateUpstreamGroupYamlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UpstreamGroupApi_DeleteUpstreamGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteUpstreamGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UpstreamGroupApiServer).DeleteUpstreamGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/glooeeapi.solo.io.UpstreamGroupApi/DeleteUpstreamGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UpstreamGroupApiServer).DeleteUpstreamGroup(ctx, req.(*DeleteUpstreamGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UpstreamGroupApi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "glooeeapi.solo.io.UpstreamGroupApi",
	HandlerType: (*UpstreamGroupApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUpstreamGroup",
			Handler:    _UpstreamGroupApi_GetUpstreamGroup_Handler,
		},
		{
			MethodName: "ListUpstreamGroups",
			Handler:    _UpstreamGroupApi_ListUpstreamGroups_Handler,
		},
		{
			MethodName: "CreateUpstreamGroup",
			Handler:    _UpstreamGroupApi_CreateUpstreamGroup_Handler,
		},
		{
			MethodName: "UpdateUpstreamGroup",
			Handler:    _UpstreamGroupApi_UpdateUpstreamGroup_Handler,
		},
		{
			MethodName: "UpdateUpstreamGroupYaml",
			Handler:    _UpstreamGroupApi_UpdateUpstreamGroupYaml_Handler,
		},
		{
			MethodName: "DeleteUpstreamGroup",
			Handler:    _UpstreamGroupApi_DeleteUpstreamGroup_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/solo-io/solo-projects/projects/grpcserver/api/v1/upstreamgroup.proto",
}
