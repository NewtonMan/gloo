// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.6.1
// source: github.com/solo-io/solo-projects/projects/grpcserver/api/v1/upstream.proto

package v1

import (
	context "context"
	reflect "reflect"
	sync "sync"

	proto "github.com/golang/protobuf/proto"
	v1 "github.com/solo-io/gloo/projects/gloo/pkg/api/v1"
	_ "github.com/solo-io/protoc-gen-ext/extproto"
	core "github.com/solo-io/solo-kit/pkg/api/v1/resources/core"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type UpstreamDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Upstream *v1.Upstream `protobuf:"bytes,1,opt,name=upstream,proto3" json:"upstream,omitempty"`
	Raw      *Raw         `protobuf:"bytes,2,opt,name=raw,proto3" json:"raw,omitempty"`
}

func (x *UpstreamDetails) Reset() {
	*x = UpstreamDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpstreamDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpstreamDetails) ProtoMessage() {}

func (x *UpstreamDetails) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpstreamDetails.ProtoReflect.Descriptor instead.
func (*UpstreamDetails) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_rawDescGZIP(), []int{0}
}

func (x *UpstreamDetails) GetUpstream() *v1.Upstream {
	if x != nil {
		return x.Upstream
	}
	return nil
}

func (x *UpstreamDetails) GetRaw() *Raw {
	if x != nil {
		return x.Raw
	}
	return nil
}

type GetUpstreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ref *core.ResourceRef `protobuf:"bytes,1,opt,name=ref,proto3" json:"ref,omitempty"`
}

func (x *GetUpstreamRequest) Reset() {
	*x = GetUpstreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUpstreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUpstreamRequest) ProtoMessage() {}

func (x *GetUpstreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUpstreamRequest.ProtoReflect.Descriptor instead.
func (*GetUpstreamRequest) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_rawDescGZIP(), []int{1}
}

func (x *GetUpstreamRequest) GetRef() *core.ResourceRef {
	if x != nil {
		return x.Ref
	}
	return nil
}

type GetUpstreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpstreamDetails *UpstreamDetails `protobuf:"bytes,2,opt,name=upstream_details,json=upstreamDetails,proto3" json:"upstream_details,omitempty"`
}

func (x *GetUpstreamResponse) Reset() {
	*x = GetUpstreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUpstreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUpstreamResponse) ProtoMessage() {}

func (x *GetUpstreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUpstreamResponse.ProtoReflect.Descriptor instead.
func (*GetUpstreamResponse) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_rawDescGZIP(), []int{2}
}

func (x *GetUpstreamResponse) GetUpstreamDetails() *UpstreamDetails {
	if x != nil {
		return x.UpstreamDetails
	}
	return nil
}

type ListUpstreamsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListUpstreamsRequest) Reset() {
	*x = ListUpstreamsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUpstreamsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUpstreamsRequest) ProtoMessage() {}

func (x *ListUpstreamsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUpstreamsRequest.ProtoReflect.Descriptor instead.
func (*ListUpstreamsRequest) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_rawDescGZIP(), []int{3}
}

type ListUpstreamsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// NOTE: These upstreams are at least partially truncated.
	// As of now, that only means that the descriptor field on gRPC upstreams is omitted for performance reasons.
	UpstreamDetails []*UpstreamDetails `protobuf:"bytes,2,rep,name=upstream_details,json=upstreamDetails,proto3" json:"upstream_details,omitempty"`
}

func (x *ListUpstreamsResponse) Reset() {
	*x = ListUpstreamsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUpstreamsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUpstreamsResponse) ProtoMessage() {}

func (x *ListUpstreamsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUpstreamsResponse.ProtoReflect.Descriptor instead.
func (*ListUpstreamsResponse) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_rawDescGZIP(), []int{4}
}

func (x *ListUpstreamsResponse) GetUpstreamDetails() []*UpstreamDetails {
	if x != nil {
		return x.UpstreamDetails
	}
	return nil
}

type CreateUpstreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpstreamInput *v1.Upstream `protobuf:"bytes,2,opt,name=upstream_input,json=upstreamInput,proto3" json:"upstream_input,omitempty"`
}

func (x *CreateUpstreamRequest) Reset() {
	*x = CreateUpstreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUpstreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUpstreamRequest) ProtoMessage() {}

func (x *CreateUpstreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUpstreamRequest.ProtoReflect.Descriptor instead.
func (*CreateUpstreamRequest) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_rawDescGZIP(), []int{5}
}

func (x *CreateUpstreamRequest) GetUpstreamInput() *v1.Upstream {
	if x != nil {
		return x.UpstreamInput
	}
	return nil
}

type CreateUpstreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpstreamDetails *UpstreamDetails `protobuf:"bytes,2,opt,name=upstream_details,json=upstreamDetails,proto3" json:"upstream_details,omitempty"`
}

func (x *CreateUpstreamResponse) Reset() {
	*x = CreateUpstreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUpstreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUpstreamResponse) ProtoMessage() {}

func (x *CreateUpstreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUpstreamResponse.ProtoReflect.Descriptor instead.
func (*CreateUpstreamResponse) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_rawDescGZIP(), []int{6}
}

func (x *CreateUpstreamResponse) GetUpstreamDetails() *UpstreamDetails {
	if x != nil {
		return x.UpstreamDetails
	}
	return nil
}

type UpdateUpstreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpstreamInput *v1.Upstream `protobuf:"bytes,2,opt,name=upstream_input,json=upstreamInput,proto3" json:"upstream_input,omitempty"`
}

func (x *UpdateUpstreamRequest) Reset() {
	*x = UpdateUpstreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUpstreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUpstreamRequest) ProtoMessage() {}

func (x *UpdateUpstreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUpstreamRequest.ProtoReflect.Descriptor instead.
func (*UpdateUpstreamRequest) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateUpstreamRequest) GetUpstreamInput() *v1.Upstream {
	if x != nil {
		return x.UpstreamInput
	}
	return nil
}

type UpdateUpstreamYamlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EditedYamlData *EditedResourceYaml `protobuf:"bytes,1,opt,name=edited_yaml_data,json=editedYamlData,proto3" json:"edited_yaml_data,omitempty"`
}

func (x *UpdateUpstreamYamlRequest) Reset() {
	*x = UpdateUpstreamYamlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUpstreamYamlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUpstreamYamlRequest) ProtoMessage() {}

func (x *UpdateUpstreamYamlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUpstreamYamlRequest.ProtoReflect.Descriptor instead.
func (*UpdateUpstreamYamlRequest) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateUpstreamYamlRequest) GetEditedYamlData() *EditedResourceYaml {
	if x != nil {
		return x.EditedYamlData
	}
	return nil
}

type UpdateUpstreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpstreamDetails *UpstreamDetails `protobuf:"bytes,2,opt,name=upstream_details,json=upstreamDetails,proto3" json:"upstream_details,omitempty"`
}

func (x *UpdateUpstreamResponse) Reset() {
	*x = UpdateUpstreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUpstreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUpstreamResponse) ProtoMessage() {}

func (x *UpdateUpstreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUpstreamResponse.ProtoReflect.Descriptor instead.
func (*UpdateUpstreamResponse) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateUpstreamResponse) GetUpstreamDetails() *UpstreamDetails {
	if x != nil {
		return x.UpstreamDetails
	}
	return nil
}

type DeleteUpstreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ref *core.ResourceRef `protobuf:"bytes,1,opt,name=ref,proto3" json:"ref,omitempty"`
}

func (x *DeleteUpstreamRequest) Reset() {
	*x = DeleteUpstreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUpstreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUpstreamRequest) ProtoMessage() {}

func (x *DeleteUpstreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUpstreamRequest.ProtoReflect.Descriptor instead.
func (*DeleteUpstreamRequest) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteUpstreamRequest) GetRef() *core.ResourceRef {
	if x != nil {
		return x.Ref
	}
	return nil
}

type DeleteUpstreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteUpstreamResponse) Reset() {
	*x = DeleteUpstreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUpstreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUpstreamResponse) ProtoMessage() {}

func (x *DeleteUpstreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUpstreamResponse.ProtoReflect.Descriptor instead.
func (*DeleteUpstreamResponse) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_rawDescGZIP(), []int{11}
}

var File_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto protoreflect.FileDescriptor

var file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_rawDesc = []byte{
	0x0a, 0x4a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6c,
	0x6f, 0x2d, 0x69, 0x6f, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x67, 0x72, 0x70, 0x63,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x70,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x67, 0x6c,
	0x6f, 0x6f, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x1a,
	0x12, 0x65, 0x78, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x78, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x69, 0x6f, 0x2f, 0x67, 0x6c, 0x6f, 0x6f, 0x2f, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x67, 0x6c, 0x6f, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6c,
	0x6f, 0x2d, 0x69, 0x6f, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x6b, 0x69, 0x74, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x47,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d,
	0x69, 0x6f, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6f, 0x0a, 0x0f, 0x55, 0x70, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x32, 0x0a, 0x08, 0x75, 0x70,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67,
	0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x55, 0x70, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x52, 0x08, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x28,
	0x0a, 0x03, 0x72, 0x61, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6c,
	0x6f, 0x6f, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e,
	0x52, 0x61, 0x77, 0x52, 0x03, 0x72, 0x61, 0x77, 0x22, 0x41, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x55,
	0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b,
	0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x52, 0x03, 0x72, 0x65, 0x66, 0x22, 0x64, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4d, 0x0a, 0x10, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67,
	0x6c, 0x6f, 0x6f, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f,
	0x2e, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x0f, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x22, 0x16, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x66, 0x0a, 0x15, 0x4c, 0x69, 0x73,
	0x74, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4d, 0x0a, 0x10, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67,
	0x6c, 0x6f, 0x6f, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f,
	0x2e, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x0f, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x22, 0x56, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x70, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0e, 0x75, 0x70,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69,
	0x6f, 0x2e, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x0d, 0x75, 0x70, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x22, 0x67, 0x0a, 0x16, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x10, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x67, 0x6c, 0x6f, 0x6f, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69,
	0x6f, 0x2e, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x52, 0x0f, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x22, 0x56, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x70, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0e, 0x75,
	0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e,
	0x69, 0x6f, 0x2e, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x0d, 0x75, 0x70, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x22, 0x6c, 0x0a, 0x19, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x59, 0x61, 0x6d, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4f, 0x0a, 0x10, 0x65, 0x64, 0x69, 0x74, 0x65,
	0x64, 0x5f, 0x79, 0x61, 0x6d, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6f,
	0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x59, 0x61, 0x6d, 0x6c, 0x52, 0x0e, 0x65, 0x64, 0x69, 0x74, 0x65, 0x64,
	0x59, 0x61, 0x6d, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x22, 0x67, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4d, 0x0a, 0x10, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67,
	0x6c, 0x6f, 0x6f, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f,
	0x2e, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x0f, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x22, 0x44, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x70, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x03, 0x72, 0x65,
	0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x73,
	0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x65, 0x66, 0x52, 0x03, 0x72, 0x65, 0x66, 0x22, 0x18, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x32, 0xff, 0x04, 0x0a, 0x0b, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x41, 0x70,
	0x69, 0x12, 0x5e, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x12, 0x25, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6f, 0x6c,
	0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x65, 0x65,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x55,
	0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x64, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x73, 0x12, 0x27, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x70, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x67, 0x6c,
	0x6f, 0x6f, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x28, 0x2e, 0x67, 0x6c, 0x6f, 0x6f,
	0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x70,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x67, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x12, 0x28, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x70, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x67,
	0x6c, 0x6f, 0x6f, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x12, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x59, 0x61, 0x6d, 0x6c, 0x12,
	0x2c, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6f, 0x6c, 0x6f,
	0x2e, 0x69, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x59, 0x61, 0x6d, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e,
	0x67, 0x6c, 0x6f, 0x6f, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69,
	0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x0e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x28, 0x2e, 0x67,
	0x6c, 0x6f, 0x6f, 0x65, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x65, 0x65, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x42, 0x41, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x69, 0x6f, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x2f, 0x67, 0x72, 0x70, 0x63, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0xc0, 0xf5, 0x04, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_rawDescOnce sync.Once
	file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_rawDescData = file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_rawDesc
)

func file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_rawDescGZIP() []byte {
	file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_rawDescOnce.Do(func() {
		file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_rawDescData)
	})
	return file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_rawDescData
}

var file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_goTypes = []interface{}{
	(*UpstreamDetails)(nil),           // 0: glooeeapi.solo.io.UpstreamDetails
	(*GetUpstreamRequest)(nil),        // 1: glooeeapi.solo.io.GetUpstreamRequest
	(*GetUpstreamResponse)(nil),       // 2: glooeeapi.solo.io.GetUpstreamResponse
	(*ListUpstreamsRequest)(nil),      // 3: glooeeapi.solo.io.ListUpstreamsRequest
	(*ListUpstreamsResponse)(nil),     // 4: glooeeapi.solo.io.ListUpstreamsResponse
	(*CreateUpstreamRequest)(nil),     // 5: glooeeapi.solo.io.CreateUpstreamRequest
	(*CreateUpstreamResponse)(nil),    // 6: glooeeapi.solo.io.CreateUpstreamResponse
	(*UpdateUpstreamRequest)(nil),     // 7: glooeeapi.solo.io.UpdateUpstreamRequest
	(*UpdateUpstreamYamlRequest)(nil), // 8: glooeeapi.solo.io.UpdateUpstreamYamlRequest
	(*UpdateUpstreamResponse)(nil),    // 9: glooeeapi.solo.io.UpdateUpstreamResponse
	(*DeleteUpstreamRequest)(nil),     // 10: glooeeapi.solo.io.DeleteUpstreamRequest
	(*DeleteUpstreamResponse)(nil),    // 11: glooeeapi.solo.io.DeleteUpstreamResponse
	(*v1.Upstream)(nil),               // 12: gloo.solo.io.Upstream
	(*Raw)(nil),                       // 13: glooeeapi.solo.io.Raw
	(*core.ResourceRef)(nil),          // 14: core.solo.io.ResourceRef
	(*EditedResourceYaml)(nil),        // 15: glooeeapi.solo.io.EditedResourceYaml
}
var file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_depIdxs = []int32{
	12, // 0: glooeeapi.solo.io.UpstreamDetails.upstream:type_name -> gloo.solo.io.Upstream
	13, // 1: glooeeapi.solo.io.UpstreamDetails.raw:type_name -> glooeeapi.solo.io.Raw
	14, // 2: glooeeapi.solo.io.GetUpstreamRequest.ref:type_name -> core.solo.io.ResourceRef
	0,  // 3: glooeeapi.solo.io.GetUpstreamResponse.upstream_details:type_name -> glooeeapi.solo.io.UpstreamDetails
	0,  // 4: glooeeapi.solo.io.ListUpstreamsResponse.upstream_details:type_name -> glooeeapi.solo.io.UpstreamDetails
	12, // 5: glooeeapi.solo.io.CreateUpstreamRequest.upstream_input:type_name -> gloo.solo.io.Upstream
	0,  // 6: glooeeapi.solo.io.CreateUpstreamResponse.upstream_details:type_name -> glooeeapi.solo.io.UpstreamDetails
	12, // 7: glooeeapi.solo.io.UpdateUpstreamRequest.upstream_input:type_name -> gloo.solo.io.Upstream
	15, // 8: glooeeapi.solo.io.UpdateUpstreamYamlRequest.edited_yaml_data:type_name -> glooeeapi.solo.io.EditedResourceYaml
	0,  // 9: glooeeapi.solo.io.UpdateUpstreamResponse.upstream_details:type_name -> glooeeapi.solo.io.UpstreamDetails
	14, // 10: glooeeapi.solo.io.DeleteUpstreamRequest.ref:type_name -> core.solo.io.ResourceRef
	1,  // 11: glooeeapi.solo.io.UpstreamApi.GetUpstream:input_type -> glooeeapi.solo.io.GetUpstreamRequest
	3,  // 12: glooeeapi.solo.io.UpstreamApi.ListUpstreams:input_type -> glooeeapi.solo.io.ListUpstreamsRequest
	5,  // 13: glooeeapi.solo.io.UpstreamApi.CreateUpstream:input_type -> glooeeapi.solo.io.CreateUpstreamRequest
	7,  // 14: glooeeapi.solo.io.UpstreamApi.UpdateUpstream:input_type -> glooeeapi.solo.io.UpdateUpstreamRequest
	8,  // 15: glooeeapi.solo.io.UpstreamApi.UpdateUpstreamYaml:input_type -> glooeeapi.solo.io.UpdateUpstreamYamlRequest
	10, // 16: glooeeapi.solo.io.UpstreamApi.DeleteUpstream:input_type -> glooeeapi.solo.io.DeleteUpstreamRequest
	2,  // 17: glooeeapi.solo.io.UpstreamApi.GetUpstream:output_type -> glooeeapi.solo.io.GetUpstreamResponse
	4,  // 18: glooeeapi.solo.io.UpstreamApi.ListUpstreams:output_type -> glooeeapi.solo.io.ListUpstreamsResponse
	6,  // 19: glooeeapi.solo.io.UpstreamApi.CreateUpstream:output_type -> glooeeapi.solo.io.CreateUpstreamResponse
	9,  // 20: glooeeapi.solo.io.UpstreamApi.UpdateUpstream:output_type -> glooeeapi.solo.io.UpdateUpstreamResponse
	9,  // 21: glooeeapi.solo.io.UpstreamApi.UpdateUpstreamYaml:output_type -> glooeeapi.solo.io.UpdateUpstreamResponse
	11, // 22: glooeeapi.solo.io.UpstreamApi.DeleteUpstream:output_type -> glooeeapi.solo.io.DeleteUpstreamResponse
	17, // [17:23] is the sub-list for method output_type
	11, // [11:17] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_init() }
func file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_init() {
	if File_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto != nil {
		return
	}
	file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpstreamDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUpstreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUpstreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUpstreamsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUpstreamsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUpstreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUpstreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUpstreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUpstreamYamlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUpstreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUpstreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUpstreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_goTypes,
		DependencyIndexes: file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_depIdxs,
		MessageInfos:      file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_msgTypes,
	}.Build()
	File_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto = out.File
	file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_rawDesc = nil
	file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_goTypes = nil
	file_github_com_solo_io_solo_projects_projects_grpcserver_api_v1_upstream_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// UpstreamApiClient is the client API for UpstreamApi service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UpstreamApiClient interface {
	GetUpstream(ctx context.Context, in *GetUpstreamRequest, opts ...grpc.CallOption) (*GetUpstreamResponse, error)
	ListUpstreams(ctx context.Context, in *ListUpstreamsRequest, opts ...grpc.CallOption) (*ListUpstreamsResponse, error)
	CreateUpstream(ctx context.Context, in *CreateUpstreamRequest, opts ...grpc.CallOption) (*CreateUpstreamResponse, error)
	UpdateUpstream(ctx context.Context, in *UpdateUpstreamRequest, opts ...grpc.CallOption) (*UpdateUpstreamResponse, error)
	UpdateUpstreamYaml(ctx context.Context, in *UpdateUpstreamYamlRequest, opts ...grpc.CallOption) (*UpdateUpstreamResponse, error)
	DeleteUpstream(ctx context.Context, in *DeleteUpstreamRequest, opts ...grpc.CallOption) (*DeleteUpstreamResponse, error)
}

type upstreamApiClient struct {
	cc grpc.ClientConnInterface
}

func NewUpstreamApiClient(cc grpc.ClientConnInterface) UpstreamApiClient {
	return &upstreamApiClient{cc}
}

func (c *upstreamApiClient) GetUpstream(ctx context.Context, in *GetUpstreamRequest, opts ...grpc.CallOption) (*GetUpstreamResponse, error) {
	out := new(GetUpstreamResponse)
	err := c.cc.Invoke(ctx, "/glooeeapi.solo.io.UpstreamApi/GetUpstream", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *upstreamApiClient) ListUpstreams(ctx context.Context, in *ListUpstreamsRequest, opts ...grpc.CallOption) (*ListUpstreamsResponse, error) {
	out := new(ListUpstreamsResponse)
	err := c.cc.Invoke(ctx, "/glooeeapi.solo.io.UpstreamApi/ListUpstreams", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *upstreamApiClient) CreateUpstream(ctx context.Context, in *CreateUpstreamRequest, opts ...grpc.CallOption) (*CreateUpstreamResponse, error) {
	out := new(CreateUpstreamResponse)
	err := c.cc.Invoke(ctx, "/glooeeapi.solo.io.UpstreamApi/CreateUpstream", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *upstreamApiClient) UpdateUpstream(ctx context.Context, in *UpdateUpstreamRequest, opts ...grpc.CallOption) (*UpdateUpstreamResponse, error) {
	out := new(UpdateUpstreamResponse)
	err := c.cc.Invoke(ctx, "/glooeeapi.solo.io.UpstreamApi/UpdateUpstream", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *upstreamApiClient) UpdateUpstreamYaml(ctx context.Context, in *UpdateUpstreamYamlRequest, opts ...grpc.CallOption) (*UpdateUpstreamResponse, error) {
	out := new(UpdateUpstreamResponse)
	err := c.cc.Invoke(ctx, "/glooeeapi.solo.io.UpstreamApi/UpdateUpstreamYaml", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *upstreamApiClient) DeleteUpstream(ctx context.Context, in *DeleteUpstreamRequest, opts ...grpc.CallOption) (*DeleteUpstreamResponse, error) {
	out := new(DeleteUpstreamResponse)
	err := c.cc.Invoke(ctx, "/glooeeapi.solo.io.UpstreamApi/DeleteUpstream", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UpstreamApiServer is the server API for UpstreamApi service.
type UpstreamApiServer interface {
	GetUpstream(context.Context, *GetUpstreamRequest) (*GetUpstreamResponse, error)
	ListUpstreams(context.Context, *ListUpstreamsRequest) (*ListUpstreamsResponse, error)
	CreateUpstream(context.Context, *CreateUpstreamRequest) (*CreateUpstreamResponse, error)
	UpdateUpstream(context.Context, *UpdateUpstreamRequest) (*UpdateUpstreamResponse, error)
	UpdateUpstreamYaml(context.Context, *UpdateUpstreamYamlRequest) (*UpdateUpstreamResponse, error)
	DeleteUpstream(context.Context, *DeleteUpstreamRequest) (*DeleteUpstreamResponse, error)
}

// UnimplementedUpstreamApiServer can be embedded to have forward compatible implementations.
type UnimplementedUpstreamApiServer struct {
}

func (*UnimplementedUpstreamApiServer) GetUpstream(context.Context, *GetUpstreamRequest) (*GetUpstreamResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUpstream not implemented")
}
func (*UnimplementedUpstreamApiServer) ListUpstreams(context.Context, *ListUpstreamsRequest) (*ListUpstreamsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListUpstreams not implemented")
}
func (*UnimplementedUpstreamApiServer) CreateUpstream(context.Context, *CreateUpstreamRequest) (*CreateUpstreamResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUpstream not implemented")
}
func (*UnimplementedUpstreamApiServer) UpdateUpstream(context.Context, *UpdateUpstreamRequest) (*UpdateUpstreamResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUpstream not implemented")
}
func (*UnimplementedUpstreamApiServer) UpdateUpstreamYaml(context.Context, *UpdateUpstreamYamlRequest) (*UpdateUpstreamResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUpstreamYaml not implemented")
}
func (*UnimplementedUpstreamApiServer) DeleteUpstream(context.Context, *DeleteUpstreamRequest) (*DeleteUpstreamResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteUpstream not implemented")
}

func RegisterUpstreamApiServer(s *grpc.Server, srv UpstreamApiServer) {
	s.RegisterService(&_UpstreamApi_serviceDesc, srv)
}

func _UpstreamApi_GetUpstream_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUpstreamRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UpstreamApiServer).GetUpstream(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/glooeeapi.solo.io.UpstreamApi/GetUpstream",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UpstreamApiServer).GetUpstream(ctx, req.(*GetUpstreamRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UpstreamApi_ListUpstreams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListUpstreamsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UpstreamApiServer).ListUpstreams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/glooeeapi.solo.io.UpstreamApi/ListUpstreams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UpstreamApiServer).ListUpstreams(ctx, req.(*ListUpstreamsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UpstreamApi_CreateUpstream_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUpstreamRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UpstreamApiServer).CreateUpstream(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/glooeeapi.solo.io.UpstreamApi/CreateUpstream",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UpstreamApiServer).CreateUpstream(ctx, req.(*CreateUpstreamRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UpstreamApi_UpdateUpstream_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUpstreamRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UpstreamApiServer).UpdateUpstream(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/glooeeapi.solo.io.UpstreamApi/UpdateUpstream",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UpstreamApiServer).UpdateUpstream(ctx, req.(*UpdateUpstreamRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UpstreamApi_UpdateUpstreamYaml_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUpstreamYamlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UpstreamApiServer).UpdateUpstreamYaml(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/glooeeapi.solo.io.UpstreamApi/UpdateUpstreamYaml",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UpstreamApiServer).UpdateUpstreamYaml(ctx, req.(*UpdateUpstreamYamlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UpstreamApi_DeleteUpstream_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteUpstreamRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UpstreamApiServer).DeleteUpstream(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/glooeeapi.solo.io.UpstreamApi/DeleteUpstream",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UpstreamApiServer).DeleteUpstream(ctx, req.(*DeleteUpstreamRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UpstreamApi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "glooeeapi.solo.io.UpstreamApi",
	HandlerType: (*UpstreamApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUpstream",
			Handler:    _UpstreamApi_GetUpstream_Handler,
		},
		{
			MethodName: "ListUpstreams",
			Handler:    _UpstreamApi_ListUpstreams_Handler,
		},
		{
			MethodName: "CreateUpstream",
			Handler:    _UpstreamApi_CreateUpstream_Handler,
		},
		{
			MethodName: "UpdateUpstream",
			Handler:    _UpstreamApi_UpdateUpstream_Handler,
		},
		{
			MethodName: "UpdateUpstreamYaml",
			Handler:    _UpstreamApi_UpdateUpstreamYaml_Handler,
		},
		{
			MethodName: "DeleteUpstream",
			Handler:    _UpstreamApi_DeleteUpstream_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/solo-io/solo-projects/projects/grpcserver/api/v1/upstream.proto",
}
