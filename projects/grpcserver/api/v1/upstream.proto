syntax = "proto3";
package glooeeapi.solo.io;
option go_package = "github.com/solo-io/solo-projects/projects/grpcserver/api/v1";

import "gogoproto/gogo.proto";
option (gogoproto.equal_all) = true;

import "github.com/solo-io/gloo/projects/gloo/api/v1/upstream.proto";
import "github.com/solo-io/solo-kit/api/v1/ref.proto";
import "github.com/solo-io/solo-projects/projects/grpcserver/api/v1/types.proto";

message UpstreamDetails {
    gloo.solo.io.Upstream upstream = 1;
    Raw raw = 2;
}

message GetUpstreamRequest {
    core.solo.io.ResourceRef ref = 1;
}

message GetUpstreamResponse {
    UpstreamDetails upstream_details = 2;
}

message ListUpstreamsRequest {}

message ListUpstreamsResponse {
    // NOTE: These upstreams are at least partially truncated.
    // As of now, that only means that the descriptor field on gRPC upstreams is omitted for performance reasons.
    repeated UpstreamDetails upstream_details = 2;
}

message CreateUpstreamRequest {
    gloo.solo.io.Upstream upstream_input = 2;
}

message CreateUpstreamResponse {
    UpstreamDetails upstream_details = 2;}

message UpdateUpstreamRequest {
    gloo.solo.io.Upstream upstream_input = 2;
}

message UpdateUpstreamResponse {
    UpstreamDetails upstream_details = 2;
}

message DeleteUpstreamRequest {
    core.solo.io.ResourceRef ref = 1;
}

message DeleteUpstreamResponse {}

service UpstreamApi {
    rpc GetUpstream(GetUpstreamRequest) returns (GetUpstreamResponse) {}
    rpc ListUpstreams(ListUpstreamsRequest) returns (ListUpstreamsResponse) {}
    rpc CreateUpstream(CreateUpstreamRequest) returns (CreateUpstreamResponse) {}
    rpc UpdateUpstream(UpdateUpstreamRequest) returns (UpdateUpstreamResponse) {}
    rpc DeleteUpstream(DeleteUpstreamRequest) returns (DeleteUpstreamResponse) {}
}
