syntax = "proto3";
package glooeeapi.solo.io;
option go_package = "github.com/solo-io/solo-projects/projects/grpcserver/api/v1";

import "gogoproto/gogo.proto";
option (gogoproto.equal_all) = true;

import "github.com/solo-io/gloo/projects/gloo/api/v1/options/aws/aws.proto";
import "github.com/solo-io/gloo/projects/gloo/api/v1/options/static/static.proto";
import "github.com/solo-io/gloo/projects/gloo/api/v1/options/azure/azure.proto";
import "github.com/solo-io/gloo/projects/gloo/api/v1/options/consul/consul.proto";
import "github.com/solo-io/gloo/projects/gloo/api/v1/options/kubernetes/kubernetes.proto";
import "github.com/solo-io/gloo/projects/gloo/api/v1/options/aws/ec2/aws_ec2.proto";
import "github.com/solo-io/gloo/projects/gloo/api/v1/upstream.proto";
import "github.com/solo-io/solo-kit/api/v1/ref.proto";
import "github.com/solo-io/solo-projects/projects/grpcserver/api/v1/types.proto";

message UpstreamDetails {
    gloo.solo.io.Upstream upstream = 1;
    Raw raw = 2;
}

message GetUpstreamRequest {
    core.solo.io.ResourceRef ref = 1;
}

message GetUpstreamResponse {
    // Deprecated, use upstream_details
    gloo.solo.io.Upstream upstream = 1;
    UpstreamDetails upstream_details = 2;
}

message ListUpstreamsRequest {
    // Deprecated. `List` calls will now query all WatchNamespaces.
    repeated string namespaces = 1;
}

message ListUpstreamsResponse {
    // Deprecated, use upstream_details
    repeated gloo.solo.io.Upstream upstreams = 1;
    repeated UpstreamDetails upstream_details = 2;
}

message UpstreamInput {
    core.solo.io.ResourceRef ref = 1;
    oneof spec {
        kubernetes.options.gloo.solo.io.UpstreamSpec kube = 2;
        static.options.gloo.solo.io.UpstreamSpec static = 3;
        aws.options.gloo.solo.io.UpstreamSpec aws = 4;
        azure.options.gloo.solo.io.UpstreamSpec azure = 5;
        consul.options.gloo.solo.io.UpstreamSpec consul = 6;
        aws_ec2.options.gloo.solo.io.UpstreamSpec aws_ec2 = 7;
    }
}

message CreateUpstreamRequest {
    // Deprecated: use `upstreamInput` instead
    UpstreamInput input = 1 [deprecated=true];
    gloo.solo.io.Upstream upstream_input = 2;
}

message CreateUpstreamResponse {
    // Deprecated, use upstream_details
    gloo.solo.io.Upstream upstream = 1;
    UpstreamDetails upstream_details = 2;}

message UpdateUpstreamRequest {
    // Deprecated: use `upstreamInput` instead
    UpstreamInput input = 1 [deprecated=true];
    gloo.solo.io.Upstream upstream_input = 2;
}

message UpdateUpstreamResponse {
    // Deprecated, use upstream_details
    gloo.solo.io.Upstream upstream = 1;
    UpstreamDetails upstream_details = 2;
}

message DeleteUpstreamRequest {
    core.solo.io.ResourceRef ref = 1;
}

message DeleteUpstreamResponse {}

service UpstreamApi {
    rpc GetUpstream(GetUpstreamRequest) returns (GetUpstreamResponse) {}
    rpc ListUpstreams(ListUpstreamsRequest) returns (ListUpstreamsResponse) {}
    rpc CreateUpstream(CreateUpstreamRequest) returns (CreateUpstreamResponse) {}
    rpc UpdateUpstream(UpdateUpstreamRequest) returns (UpdateUpstreamResponse) {}
    rpc DeleteUpstream(DeleteUpstreamRequest) returns (DeleteUpstreamResponse) {}
}
