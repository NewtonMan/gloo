// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/solo-io/solo-projects/projects/grpcserver/api/v1/secret.proto

package v1

import (
	bytes "bytes"
	context "context"
	fmt "fmt"
	math "math"

	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	v1 "github.com/solo-io/gloo/projects/gloo/pkg/api/v1"
	core "github.com/solo-io/solo-kit/pkg/api/v1/resources/core"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type GetSecretRequest struct {
	Ref                  *core.ResourceRef `protobuf:"bytes,1,opt,name=ref,proto3" json:"ref,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetSecretRequest) Reset()         { *m = GetSecretRequest{} }
func (m *GetSecretRequest) String() string { return proto.CompactTextString(m) }
func (*GetSecretRequest) ProtoMessage()    {}
func (*GetSecretRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77c74ec00e5dce55, []int{0}
}
func (m *GetSecretRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSecretRequest.Unmarshal(m, b)
}
func (m *GetSecretRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSecretRequest.Marshal(b, m, deterministic)
}
func (m *GetSecretRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSecretRequest.Merge(m, src)
}
func (m *GetSecretRequest) XXX_Size() int {
	return xxx_messageInfo_GetSecretRequest.Size(m)
}
func (m *GetSecretRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSecretRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSecretRequest proto.InternalMessageInfo

func (m *GetSecretRequest) GetRef() *core.ResourceRef {
	if m != nil {
		return m.Ref
	}
	return nil
}

type GetSecretResponse struct {
	Secret               *v1.Secret `protobuf:"bytes,1,opt,name=secret,proto3" json:"secret,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetSecretResponse) Reset()         { *m = GetSecretResponse{} }
func (m *GetSecretResponse) String() string { return proto.CompactTextString(m) }
func (*GetSecretResponse) ProtoMessage()    {}
func (*GetSecretResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77c74ec00e5dce55, []int{1}
}
func (m *GetSecretResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSecretResponse.Unmarshal(m, b)
}
func (m *GetSecretResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSecretResponse.Marshal(b, m, deterministic)
}
func (m *GetSecretResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSecretResponse.Merge(m, src)
}
func (m *GetSecretResponse) XXX_Size() int {
	return xxx_messageInfo_GetSecretResponse.Size(m)
}
func (m *GetSecretResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSecretResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetSecretResponse proto.InternalMessageInfo

func (m *GetSecretResponse) GetSecret() *v1.Secret {
	if m != nil {
		return m.Secret
	}
	return nil
}

type ListSecretsRequest struct {
	NamespaceList        []string `protobuf:"bytes,1,rep,name=namespace_list,json=namespaceList,proto3" json:"namespace_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListSecretsRequest) Reset()         { *m = ListSecretsRequest{} }
func (m *ListSecretsRequest) String() string { return proto.CompactTextString(m) }
func (*ListSecretsRequest) ProtoMessage()    {}
func (*ListSecretsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77c74ec00e5dce55, []int{2}
}
func (m *ListSecretsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListSecretsRequest.Unmarshal(m, b)
}
func (m *ListSecretsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListSecretsRequest.Marshal(b, m, deterministic)
}
func (m *ListSecretsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListSecretsRequest.Merge(m, src)
}
func (m *ListSecretsRequest) XXX_Size() int {
	return xxx_messageInfo_ListSecretsRequest.Size(m)
}
func (m *ListSecretsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListSecretsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListSecretsRequest proto.InternalMessageInfo

func (m *ListSecretsRequest) GetNamespaceList() []string {
	if m != nil {
		return m.NamespaceList
	}
	return nil
}

type ListSecretsResponse struct {
	SecretList           []*v1.Secret `protobuf:"bytes,1,rep,name=secret_list,json=secretList,proto3" json:"secret_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ListSecretsResponse) Reset()         { *m = ListSecretsResponse{} }
func (m *ListSecretsResponse) String() string { return proto.CompactTextString(m) }
func (*ListSecretsResponse) ProtoMessage()    {}
func (*ListSecretsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77c74ec00e5dce55, []int{3}
}
func (m *ListSecretsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListSecretsResponse.Unmarshal(m, b)
}
func (m *ListSecretsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListSecretsResponse.Marshal(b, m, deterministic)
}
func (m *ListSecretsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListSecretsResponse.Merge(m, src)
}
func (m *ListSecretsResponse) XXX_Size() int {
	return xxx_messageInfo_ListSecretsResponse.Size(m)
}
func (m *ListSecretsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListSecretsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListSecretsResponse proto.InternalMessageInfo

func (m *ListSecretsResponse) GetSecretList() []*v1.Secret {
	if m != nil {
		return m.SecretList
	}
	return nil
}

type CreateSecretRequest struct {
	Ref *core.ResourceRef `protobuf:"bytes,1,opt,name=ref,proto3" json:"ref,omitempty"`
	// Types that are valid to be assigned to Kind:
	//	*CreateSecretRequest_Aws
	//	*CreateSecretRequest_Azure
	//	*CreateSecretRequest_Tls
	//	*CreateSecretRequest_Extension
	Kind                 isCreateSecretRequest_Kind `protobuf_oneof:"kind"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *CreateSecretRequest) Reset()         { *m = CreateSecretRequest{} }
func (m *CreateSecretRequest) String() string { return proto.CompactTextString(m) }
func (*CreateSecretRequest) ProtoMessage()    {}
func (*CreateSecretRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77c74ec00e5dce55, []int{4}
}
func (m *CreateSecretRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSecretRequest.Unmarshal(m, b)
}
func (m *CreateSecretRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSecretRequest.Marshal(b, m, deterministic)
}
func (m *CreateSecretRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSecretRequest.Merge(m, src)
}
func (m *CreateSecretRequest) XXX_Size() int {
	return xxx_messageInfo_CreateSecretRequest.Size(m)
}
func (m *CreateSecretRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSecretRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSecretRequest proto.InternalMessageInfo

type isCreateSecretRequest_Kind interface {
	isCreateSecretRequest_Kind()
	Equal(interface{}) bool
}

type CreateSecretRequest_Aws struct {
	Aws *v1.AwsSecret `protobuf:"bytes,2,opt,name=aws,proto3,oneof"`
}
type CreateSecretRequest_Azure struct {
	Azure *v1.AzureSecret `protobuf:"bytes,3,opt,name=azure,proto3,oneof"`
}
type CreateSecretRequest_Tls struct {
	Tls *v1.TlsSecret `protobuf:"bytes,4,opt,name=tls,proto3,oneof"`
}
type CreateSecretRequest_Extension struct {
	Extension *v1.Extension `protobuf:"bytes,5,opt,name=extension,proto3,oneof"`
}

func (*CreateSecretRequest_Aws) isCreateSecretRequest_Kind()       {}
func (*CreateSecretRequest_Azure) isCreateSecretRequest_Kind()     {}
func (*CreateSecretRequest_Tls) isCreateSecretRequest_Kind()       {}
func (*CreateSecretRequest_Extension) isCreateSecretRequest_Kind() {}

func (m *CreateSecretRequest) GetKind() isCreateSecretRequest_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (m *CreateSecretRequest) GetRef() *core.ResourceRef {
	if m != nil {
		return m.Ref
	}
	return nil
}

func (m *CreateSecretRequest) GetAws() *v1.AwsSecret {
	if x, ok := m.GetKind().(*CreateSecretRequest_Aws); ok {
		return x.Aws
	}
	return nil
}

func (m *CreateSecretRequest) GetAzure() *v1.AzureSecret {
	if x, ok := m.GetKind().(*CreateSecretRequest_Azure); ok {
		return x.Azure
	}
	return nil
}

func (m *CreateSecretRequest) GetTls() *v1.TlsSecret {
	if x, ok := m.GetKind().(*CreateSecretRequest_Tls); ok {
		return x.Tls
	}
	return nil
}

func (m *CreateSecretRequest) GetExtension() *v1.Extension {
	if x, ok := m.GetKind().(*CreateSecretRequest_Extension); ok {
		return x.Extension
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*CreateSecretRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _CreateSecretRequest_OneofMarshaler, _CreateSecretRequest_OneofUnmarshaler, _CreateSecretRequest_OneofSizer, []interface{}{
		(*CreateSecretRequest_Aws)(nil),
		(*CreateSecretRequest_Azure)(nil),
		(*CreateSecretRequest_Tls)(nil),
		(*CreateSecretRequest_Extension)(nil),
	}
}

func _CreateSecretRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*CreateSecretRequest)
	// kind
	switch x := m.Kind.(type) {
	case *CreateSecretRequest_Aws:
		_ = b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Aws); err != nil {
			return err
		}
	case *CreateSecretRequest_Azure:
		_ = b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Azure); err != nil {
			return err
		}
	case *CreateSecretRequest_Tls:
		_ = b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Tls); err != nil {
			return err
		}
	case *CreateSecretRequest_Extension:
		_ = b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Extension); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("CreateSecretRequest.Kind has unexpected type %T", x)
	}
	return nil
}

func _CreateSecretRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*CreateSecretRequest)
	switch tag {
	case 2: // kind.aws
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(v1.AwsSecret)
		err := b.DecodeMessage(msg)
		m.Kind = &CreateSecretRequest_Aws{msg}
		return true, err
	case 3: // kind.azure
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(v1.AzureSecret)
		err := b.DecodeMessage(msg)
		m.Kind = &CreateSecretRequest_Azure{msg}
		return true, err
	case 4: // kind.tls
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(v1.TlsSecret)
		err := b.DecodeMessage(msg)
		m.Kind = &CreateSecretRequest_Tls{msg}
		return true, err
	case 5: // kind.extension
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(v1.Extension)
		err := b.DecodeMessage(msg)
		m.Kind = &CreateSecretRequest_Extension{msg}
		return true, err
	default:
		return false, nil
	}
}

func _CreateSecretRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*CreateSecretRequest)
	// kind
	switch x := m.Kind.(type) {
	case *CreateSecretRequest_Aws:
		s := proto.Size(x.Aws)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CreateSecretRequest_Azure:
		s := proto.Size(x.Azure)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CreateSecretRequest_Tls:
		s := proto.Size(x.Tls)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CreateSecretRequest_Extension:
		s := proto.Size(x.Extension)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type CreateSecretResponse struct {
	Secret               *v1.Secret `protobuf:"bytes,1,opt,name=secret,proto3" json:"secret,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CreateSecretResponse) Reset()         { *m = CreateSecretResponse{} }
func (m *CreateSecretResponse) String() string { return proto.CompactTextString(m) }
func (*CreateSecretResponse) ProtoMessage()    {}
func (*CreateSecretResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77c74ec00e5dce55, []int{5}
}
func (m *CreateSecretResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSecretResponse.Unmarshal(m, b)
}
func (m *CreateSecretResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSecretResponse.Marshal(b, m, deterministic)
}
func (m *CreateSecretResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSecretResponse.Merge(m, src)
}
func (m *CreateSecretResponse) XXX_Size() int {
	return xxx_messageInfo_CreateSecretResponse.Size(m)
}
func (m *CreateSecretResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSecretResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSecretResponse proto.InternalMessageInfo

func (m *CreateSecretResponse) GetSecret() *v1.Secret {
	if m != nil {
		return m.Secret
	}
	return nil
}

type UpdateSecretRequest struct {
	Ref *core.ResourceRef `protobuf:"bytes,1,opt,name=ref,proto3" json:"ref,omitempty"`
	// Types that are valid to be assigned to Kind:
	//	*UpdateSecretRequest_Aws
	//	*UpdateSecretRequest_Azure
	//	*UpdateSecretRequest_Tls
	//	*UpdateSecretRequest_Extension
	Kind                 isUpdateSecretRequest_Kind `protobuf_oneof:"kind"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *UpdateSecretRequest) Reset()         { *m = UpdateSecretRequest{} }
func (m *UpdateSecretRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateSecretRequest) ProtoMessage()    {}
func (*UpdateSecretRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77c74ec00e5dce55, []int{6}
}
func (m *UpdateSecretRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateSecretRequest.Unmarshal(m, b)
}
func (m *UpdateSecretRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateSecretRequest.Marshal(b, m, deterministic)
}
func (m *UpdateSecretRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateSecretRequest.Merge(m, src)
}
func (m *UpdateSecretRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateSecretRequest.Size(m)
}
func (m *UpdateSecretRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateSecretRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateSecretRequest proto.InternalMessageInfo

type isUpdateSecretRequest_Kind interface {
	isUpdateSecretRequest_Kind()
	Equal(interface{}) bool
}

type UpdateSecretRequest_Aws struct {
	Aws *v1.AwsSecret `protobuf:"bytes,2,opt,name=aws,proto3,oneof"`
}
type UpdateSecretRequest_Azure struct {
	Azure *v1.AzureSecret `protobuf:"bytes,3,opt,name=azure,proto3,oneof"`
}
type UpdateSecretRequest_Tls struct {
	Tls *v1.TlsSecret `protobuf:"bytes,4,opt,name=tls,proto3,oneof"`
}
type UpdateSecretRequest_Extension struct {
	Extension *v1.Extension `protobuf:"bytes,5,opt,name=extension,proto3,oneof"`
}

func (*UpdateSecretRequest_Aws) isUpdateSecretRequest_Kind()       {}
func (*UpdateSecretRequest_Azure) isUpdateSecretRequest_Kind()     {}
func (*UpdateSecretRequest_Tls) isUpdateSecretRequest_Kind()       {}
func (*UpdateSecretRequest_Extension) isUpdateSecretRequest_Kind() {}

func (m *UpdateSecretRequest) GetKind() isUpdateSecretRequest_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (m *UpdateSecretRequest) GetRef() *core.ResourceRef {
	if m != nil {
		return m.Ref
	}
	return nil
}

func (m *UpdateSecretRequest) GetAws() *v1.AwsSecret {
	if x, ok := m.GetKind().(*UpdateSecretRequest_Aws); ok {
		return x.Aws
	}
	return nil
}

func (m *UpdateSecretRequest) GetAzure() *v1.AzureSecret {
	if x, ok := m.GetKind().(*UpdateSecretRequest_Azure); ok {
		return x.Azure
	}
	return nil
}

func (m *UpdateSecretRequest) GetTls() *v1.TlsSecret {
	if x, ok := m.GetKind().(*UpdateSecretRequest_Tls); ok {
		return x.Tls
	}
	return nil
}

func (m *UpdateSecretRequest) GetExtension() *v1.Extension {
	if x, ok := m.GetKind().(*UpdateSecretRequest_Extension); ok {
		return x.Extension
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*UpdateSecretRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _UpdateSecretRequest_OneofMarshaler, _UpdateSecretRequest_OneofUnmarshaler, _UpdateSecretRequest_OneofSizer, []interface{}{
		(*UpdateSecretRequest_Aws)(nil),
		(*UpdateSecretRequest_Azure)(nil),
		(*UpdateSecretRequest_Tls)(nil),
		(*UpdateSecretRequest_Extension)(nil),
	}
}

func _UpdateSecretRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*UpdateSecretRequest)
	// kind
	switch x := m.Kind.(type) {
	case *UpdateSecretRequest_Aws:
		_ = b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Aws); err != nil {
			return err
		}
	case *UpdateSecretRequest_Azure:
		_ = b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Azure); err != nil {
			return err
		}
	case *UpdateSecretRequest_Tls:
		_ = b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Tls); err != nil {
			return err
		}
	case *UpdateSecretRequest_Extension:
		_ = b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Extension); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("UpdateSecretRequest.Kind has unexpected type %T", x)
	}
	return nil
}

func _UpdateSecretRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*UpdateSecretRequest)
	switch tag {
	case 2: // kind.aws
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(v1.AwsSecret)
		err := b.DecodeMessage(msg)
		m.Kind = &UpdateSecretRequest_Aws{msg}
		return true, err
	case 3: // kind.azure
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(v1.AzureSecret)
		err := b.DecodeMessage(msg)
		m.Kind = &UpdateSecretRequest_Azure{msg}
		return true, err
	case 4: // kind.tls
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(v1.TlsSecret)
		err := b.DecodeMessage(msg)
		m.Kind = &UpdateSecretRequest_Tls{msg}
		return true, err
	case 5: // kind.extension
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(v1.Extension)
		err := b.DecodeMessage(msg)
		m.Kind = &UpdateSecretRequest_Extension{msg}
		return true, err
	default:
		return false, nil
	}
}

func _UpdateSecretRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*UpdateSecretRequest)
	// kind
	switch x := m.Kind.(type) {
	case *UpdateSecretRequest_Aws:
		s := proto.Size(x.Aws)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UpdateSecretRequest_Azure:
		s := proto.Size(x.Azure)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UpdateSecretRequest_Tls:
		s := proto.Size(x.Tls)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UpdateSecretRequest_Extension:
		s := proto.Size(x.Extension)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type UpdateSecretResponse struct {
	Secret               *v1.Secret `protobuf:"bytes,1,opt,name=secret,proto3" json:"secret,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *UpdateSecretResponse) Reset()         { *m = UpdateSecretResponse{} }
func (m *UpdateSecretResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateSecretResponse) ProtoMessage()    {}
func (*UpdateSecretResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77c74ec00e5dce55, []int{7}
}
func (m *UpdateSecretResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateSecretResponse.Unmarshal(m, b)
}
func (m *UpdateSecretResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateSecretResponse.Marshal(b, m, deterministic)
}
func (m *UpdateSecretResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateSecretResponse.Merge(m, src)
}
func (m *UpdateSecretResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateSecretResponse.Size(m)
}
func (m *UpdateSecretResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateSecretResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateSecretResponse proto.InternalMessageInfo

func (m *UpdateSecretResponse) GetSecret() *v1.Secret {
	if m != nil {
		return m.Secret
	}
	return nil
}

type DeleteSecretRequest struct {
	Ref                  *core.ResourceRef `protobuf:"bytes,1,opt,name=ref,proto3" json:"ref,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *DeleteSecretRequest) Reset()         { *m = DeleteSecretRequest{} }
func (m *DeleteSecretRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteSecretRequest) ProtoMessage()    {}
func (*DeleteSecretRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77c74ec00e5dce55, []int{8}
}
func (m *DeleteSecretRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteSecretRequest.Unmarshal(m, b)
}
func (m *DeleteSecretRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteSecretRequest.Marshal(b, m, deterministic)
}
func (m *DeleteSecretRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteSecretRequest.Merge(m, src)
}
func (m *DeleteSecretRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteSecretRequest.Size(m)
}
func (m *DeleteSecretRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteSecretRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteSecretRequest proto.InternalMessageInfo

func (m *DeleteSecretRequest) GetRef() *core.ResourceRef {
	if m != nil {
		return m.Ref
	}
	return nil
}

type DeleteSecretResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteSecretResponse) Reset()         { *m = DeleteSecretResponse{} }
func (m *DeleteSecretResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteSecretResponse) ProtoMessage()    {}
func (*DeleteSecretResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77c74ec00e5dce55, []int{9}
}
func (m *DeleteSecretResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteSecretResponse.Unmarshal(m, b)
}
func (m *DeleteSecretResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteSecretResponse.Marshal(b, m, deterministic)
}
func (m *DeleteSecretResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteSecretResponse.Merge(m, src)
}
func (m *DeleteSecretResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteSecretResponse.Size(m)
}
func (m *DeleteSecretResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteSecretResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteSecretResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*GetSecretRequest)(nil), "glooeeapi.solo.io.GetSecretRequest")
	proto.RegisterType((*GetSecretResponse)(nil), "glooeeapi.solo.io.GetSecretResponse")
	proto.RegisterType((*ListSecretsRequest)(nil), "glooeeapi.solo.io.ListSecretsRequest")
	proto.RegisterType((*ListSecretsResponse)(nil), "glooeeapi.solo.io.ListSecretsResponse")
	proto.RegisterType((*CreateSecretRequest)(nil), "glooeeapi.solo.io.CreateSecretRequest")
	proto.RegisterType((*CreateSecretResponse)(nil), "glooeeapi.solo.io.CreateSecretResponse")
	proto.RegisterType((*UpdateSecretRequest)(nil), "glooeeapi.solo.io.UpdateSecretRequest")
	proto.RegisterType((*UpdateSecretResponse)(nil), "glooeeapi.solo.io.UpdateSecretResponse")
	proto.RegisterType((*DeleteSecretRequest)(nil), "glooeeapi.solo.io.DeleteSecretRequest")
	proto.RegisterType((*DeleteSecretResponse)(nil), "glooeeapi.solo.io.DeleteSecretResponse")
}

func init() {
	proto.RegisterFile("github.com/solo-io/solo-projects/projects/grpcserver/api/v1/secret.proto", fileDescriptor_77c74ec00e5dce55)
}

var fileDescriptor_77c74ec00e5dce55 = []byte{
	// 540 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x55, 0xdd, 0x6e, 0xd3, 0x30,
	0x14, 0x6e, 0xd7, 0xad, 0x52, 0x4f, 0x01, 0x31, 0xb7, 0x82, 0x90, 0x0b, 0x84, 0x02, 0x83, 0x49,
	0x8c, 0x44, 0x1b, 0x42, 0x08, 0x4d, 0x08, 0xb5, 0x0c, 0xd1, 0x8b, 0x5d, 0x05, 0x90, 0x10, 0x17,
	0xa0, 0x2c, 0x3b, 0x0d, 0x66, 0x59, 0x1c, 0x7c, 0xdc, 0x0d, 0xf1, 0x14, 0x3c, 0x06, 0xcf, 0xc5,
	0x03, 0xf0, 0x0c, 0xc8, 0x71, 0x9a, 0x25, 0xcc, 0x63, 0xa2, 0xbb, 0xdd, 0x55, 0xd3, 0xf8, 0xfb,
	0x39, 0xf9, 0xce, 0xb1, 0x0d, 0x93, 0x84, 0xab, 0xcf, 0xb3, 0x3d, 0x3f, 0x16, 0x87, 0x01, 0x89,
	0x54, 0x3c, 0xe2, 0xc2, 0xfc, 0xe6, 0x52, 0x7c, 0xc1, 0x58, 0x51, 0x50, 0x3d, 0x24, 0x32, 0x8f,
	0x09, 0xe5, 0x11, 0xca, 0x20, 0xca, 0x79, 0x70, 0xb4, 0x19, 0x10, 0xc6, 0x12, 0x95, 0x9f, 0x4b,
	0xa1, 0x04, 0x5b, 0x4d, 0x52, 0x21, 0x10, 0xa3, 0x9c, 0xfb, 0x5a, 0xc0, 0xe7, 0xc2, 0x1d, 0x26,
	0x22, 0x11, 0xc5, 0x6a, 0xa0, 0x9f, 0x0c, 0xd0, 0x7d, 0x6e, 0xb1, 0xd4, 0xdc, 0x9a, 0x93, 0xfe,
	0x57, 0x7a, 0xe0, 0x37, 0x85, 0x19, 0x71, 0x91, 0x51, 0x49, 0x7f, 0xf6, 0x5f, 0xf4, 0x7a, 0x89,
	0xee, 0xc6, 0x59, 0x1f, 0x7b, 0xc0, 0xd5, 0x9c, 0x20, 0x71, 0x6a, 0xd0, 0xde, 0x0b, 0xb8, 0xfe,
	0x1a, 0xd5, 0x9b, 0x42, 0x20, 0xc4, 0xaf, 0x33, 0x24, 0xc5, 0x1e, 0x42, 0x47, 0xe2, 0xd4, 0x69,
	0xdf, 0x69, 0xaf, 0xf7, 0xb7, 0x6e, 0xf9, 0xb1, 0x90, 0x38, 0xff, 0x5a, 0x3f, 0x44, 0x12, 0x33,
	0x19, 0x63, 0x88, 0xd3, 0x50, 0xa3, 0xbc, 0x11, 0xac, 0xd6, 0x04, 0x28, 0x17, 0x19, 0x21, 0xdb,
	0x80, 0xae, 0xa9, 0xa9, 0x14, 0x19, 0xfa, 0xba, 0xdc, 0x4a, 0xa4, 0x44, 0x97, 0x18, 0x6f, 0x1b,
	0xd8, 0x2e, 0xa7, 0x52, 0x83, 0xe6, 0x55, 0xac, 0xc1, 0xb5, 0x2c, 0x3a, 0x44, 0xca, 0xa3, 0x18,
	0x3f, 0xa5, 0x9c, 0xb4, 0x56, 0x67, 0xbd, 0x17, 0x5e, 0xad, 0xde, 0x6a, 0x92, 0xb7, 0x0b, 0x83,
	0x06, 0xb9, 0xac, 0xe0, 0x09, 0xf4, 0x8d, 0xfa, 0x09, 0xf5, 0xac, 0x32, 0xc0, 0x00, 0x0b, 0xb5,
	0x1f, 0x4b, 0x30, 0x78, 0x29, 0x31, 0x52, 0xb8, 0x78, 0x24, 0x1a, 0x1c, 0x1d, 0x93, 0xb3, 0x54,
	0x80, 0x6f, 0x36, 0x3d, 0x47, 0xc7, 0x64, 0x94, 0x27, 0xad, 0x50, 0xa3, 0xd8, 0x26, 0xac, 0x44,
	0xdf, 0x67, 0x12, 0x9d, 0x4e, 0xa9, 0xdd, 0x84, 0xeb, 0xa5, 0x8a, 0x60, 0x90, 0x5a, 0x5f, 0xa5,
	0xe4, 0x2c, 0xdb, 0xf4, 0xdf, 0xa6, 0x35, 0x7d, 0x95, 0x12, 0x7b, 0x0a, 0xbd, 0x6a, 0xba, 0x9c,
	0x15, 0x1b, 0xe5, 0xd5, 0x7c, 0x79, 0xd2, 0x0a, 0x4f, 0xb0, 0xe3, 0x2e, 0x2c, 0x1f, 0xf0, 0x6c,
	0xdf, 0xdb, 0x81, 0x61, 0x33, 0x91, 0x85, 0x7a, 0xac, 0x83, 0x7d, 0x97, 0xef, 0x5f, 0x06, 0xdb,
	0x08, 0xb6, 0x99, 0xc8, 0x42, 0xc1, 0x8e, 0x61, 0xb0, 0x83, 0x29, 0x5e, 0x24, 0x57, 0xef, 0x06,
	0x0c, 0x9b, 0x1a, 0xa6, 0x92, 0xad, 0xdf, 0x1d, 0xe8, 0x99, 0x57, 0xa3, 0x9c, 0xb3, 0xf7, 0xd0,
	0xab, 0x76, 0x3a, 0xbb, 0xeb, 0x9f, 0x3a, 0x09, 0xfd, 0xbf, 0x0f, 0x12, 0xf7, 0xde, 0xbf, 0x41,
	0xc6, 0xc5, 0x6b, 0xb1, 0x8f, 0xd0, 0xaf, 0xed, 0x61, 0xb6, 0x66, 0xa1, 0x9d, 0x3e, 0x20, 0xdc,
	0xfb, 0xe7, 0xc1, 0x2a, 0xfd, 0x08, 0xae, 0xd4, 0x47, 0x98, 0xd9, 0x98, 0x96, 0x5d, 0xef, 0x3e,
	0x38, 0x17, 0x57, 0xb7, 0xa8, 0x37, 0xd3, 0x6a, 0x61, 0x99, 0x7f, 0xab, 0x85, 0x6d, 0x2a, 0x8c,
	0x45, 0xbd, 0x4b, 0x56, 0x0b, 0xcb, 0x28, 0x58, 0x2d, 0x6c, 0xed, 0xf6, 0x5a, 0xe3, 0xd1, 0xcf,
	0x5f, 0xb7, 0xdb, 0x1f, 0xb6, 0x2f, 0x70, 0x5d, 0xee, 0x75, 0x8b, 0x7b, 0xe5, 0xf1, 0x9f, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x70, 0x54, 0x36, 0x5e, 0x74, 0x07, 0x00, 0x00,
}

func (this *GetSecretRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSecretRequest)
	if !ok {
		that2, ok := that.(GetSecretRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Ref.Equal(that1.Ref) {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *GetSecretResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSecretResponse)
	if !ok {
		that2, ok := that.(GetSecretResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Secret.Equal(that1.Secret) {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *ListSecretsRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ListSecretsRequest)
	if !ok {
		that2, ok := that.(ListSecretsRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.NamespaceList) != len(that1.NamespaceList) {
		return false
	}
	for i := range this.NamespaceList {
		if this.NamespaceList[i] != that1.NamespaceList[i] {
			return false
		}
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *ListSecretsResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ListSecretsResponse)
	if !ok {
		that2, ok := that.(ListSecretsResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.SecretList) != len(that1.SecretList) {
		return false
	}
	for i := range this.SecretList {
		if !this.SecretList[i].Equal(that1.SecretList[i]) {
			return false
		}
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *CreateSecretRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSecretRequest)
	if !ok {
		that2, ok := that.(CreateSecretRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Ref.Equal(that1.Ref) {
		return false
	}
	if that1.Kind == nil {
		if this.Kind != nil {
			return false
		}
	} else if this.Kind == nil {
		return false
	} else if !this.Kind.Equal(that1.Kind) {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *CreateSecretRequest_Aws) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSecretRequest_Aws)
	if !ok {
		that2, ok := that.(CreateSecretRequest_Aws)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Aws.Equal(that1.Aws) {
		return false
	}
	return true
}
func (this *CreateSecretRequest_Azure) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSecretRequest_Azure)
	if !ok {
		that2, ok := that.(CreateSecretRequest_Azure)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Azure.Equal(that1.Azure) {
		return false
	}
	return true
}
func (this *CreateSecretRequest_Tls) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSecretRequest_Tls)
	if !ok {
		that2, ok := that.(CreateSecretRequest_Tls)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Tls.Equal(that1.Tls) {
		return false
	}
	return true
}
func (this *CreateSecretRequest_Extension) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSecretRequest_Extension)
	if !ok {
		that2, ok := that.(CreateSecretRequest_Extension)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Extension.Equal(that1.Extension) {
		return false
	}
	return true
}
func (this *CreateSecretResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSecretResponse)
	if !ok {
		that2, ok := that.(CreateSecretResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Secret.Equal(that1.Secret) {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *UpdateSecretRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*UpdateSecretRequest)
	if !ok {
		that2, ok := that.(UpdateSecretRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Ref.Equal(that1.Ref) {
		return false
	}
	if that1.Kind == nil {
		if this.Kind != nil {
			return false
		}
	} else if this.Kind == nil {
		return false
	} else if !this.Kind.Equal(that1.Kind) {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *UpdateSecretRequest_Aws) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*UpdateSecretRequest_Aws)
	if !ok {
		that2, ok := that.(UpdateSecretRequest_Aws)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Aws.Equal(that1.Aws) {
		return false
	}
	return true
}
func (this *UpdateSecretRequest_Azure) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*UpdateSecretRequest_Azure)
	if !ok {
		that2, ok := that.(UpdateSecretRequest_Azure)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Azure.Equal(that1.Azure) {
		return false
	}
	return true
}
func (this *UpdateSecretRequest_Tls) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*UpdateSecretRequest_Tls)
	if !ok {
		that2, ok := that.(UpdateSecretRequest_Tls)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Tls.Equal(that1.Tls) {
		return false
	}
	return true
}
func (this *UpdateSecretRequest_Extension) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*UpdateSecretRequest_Extension)
	if !ok {
		that2, ok := that.(UpdateSecretRequest_Extension)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Extension.Equal(that1.Extension) {
		return false
	}
	return true
}
func (this *UpdateSecretResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*UpdateSecretResponse)
	if !ok {
		that2, ok := that.(UpdateSecretResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Secret.Equal(that1.Secret) {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *DeleteSecretRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*DeleteSecretRequest)
	if !ok {
		that2, ok := that.(DeleteSecretRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Ref.Equal(that1.Ref) {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *DeleteSecretResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*DeleteSecretResponse)
	if !ok {
		that2, ok := that.(DeleteSecretResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SecretApiClient is the client API for SecretApi service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SecretApiClient interface {
	GetSecret(ctx context.Context, in *GetSecretRequest, opts ...grpc.CallOption) (*GetSecretResponse, error)
	ListSecrets(ctx context.Context, in *ListSecretsRequest, opts ...grpc.CallOption) (*ListSecretsResponse, error)
	CreateSecret(ctx context.Context, in *CreateSecretRequest, opts ...grpc.CallOption) (*CreateSecretResponse, error)
	UpdateSecret(ctx context.Context, in *UpdateSecretRequest, opts ...grpc.CallOption) (*UpdateSecretResponse, error)
	DeleteSecret(ctx context.Context, in *DeleteSecretRequest, opts ...grpc.CallOption) (*DeleteSecretResponse, error)
}

type secretApiClient struct {
	cc *grpc.ClientConn
}

func NewSecretApiClient(cc *grpc.ClientConn) SecretApiClient {
	return &secretApiClient{cc}
}

func (c *secretApiClient) GetSecret(ctx context.Context, in *GetSecretRequest, opts ...grpc.CallOption) (*GetSecretResponse, error) {
	out := new(GetSecretResponse)
	err := c.cc.Invoke(ctx, "/glooeeapi.solo.io.SecretApi/GetSecret", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *secretApiClient) ListSecrets(ctx context.Context, in *ListSecretsRequest, opts ...grpc.CallOption) (*ListSecretsResponse, error) {
	out := new(ListSecretsResponse)
	err := c.cc.Invoke(ctx, "/glooeeapi.solo.io.SecretApi/ListSecrets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *secretApiClient) CreateSecret(ctx context.Context, in *CreateSecretRequest, opts ...grpc.CallOption) (*CreateSecretResponse, error) {
	out := new(CreateSecretResponse)
	err := c.cc.Invoke(ctx, "/glooeeapi.solo.io.SecretApi/CreateSecret", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *secretApiClient) UpdateSecret(ctx context.Context, in *UpdateSecretRequest, opts ...grpc.CallOption) (*UpdateSecretResponse, error) {
	out := new(UpdateSecretResponse)
	err := c.cc.Invoke(ctx, "/glooeeapi.solo.io.SecretApi/UpdateSecret", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *secretApiClient) DeleteSecret(ctx context.Context, in *DeleteSecretRequest, opts ...grpc.CallOption) (*DeleteSecretResponse, error) {
	out := new(DeleteSecretResponse)
	err := c.cc.Invoke(ctx, "/glooeeapi.solo.io.SecretApi/DeleteSecret", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SecretApiServer is the server API for SecretApi service.
type SecretApiServer interface {
	GetSecret(context.Context, *GetSecretRequest) (*GetSecretResponse, error)
	ListSecrets(context.Context, *ListSecretsRequest) (*ListSecretsResponse, error)
	CreateSecret(context.Context, *CreateSecretRequest) (*CreateSecretResponse, error)
	UpdateSecret(context.Context, *UpdateSecretRequest) (*UpdateSecretResponse, error)
	DeleteSecret(context.Context, *DeleteSecretRequest) (*DeleteSecretResponse, error)
}

// UnimplementedSecretApiServer can be embedded to have forward compatible implementations.
type UnimplementedSecretApiServer struct {
}

func (*UnimplementedSecretApiServer) GetSecret(ctx context.Context, req *GetSecretRequest) (*GetSecretResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSecret not implemented")
}
func (*UnimplementedSecretApiServer) ListSecrets(ctx context.Context, req *ListSecretsRequest) (*ListSecretsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListSecrets not implemented")
}
func (*UnimplementedSecretApiServer) CreateSecret(ctx context.Context, req *CreateSecretRequest) (*CreateSecretResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSecret not implemented")
}
func (*UnimplementedSecretApiServer) UpdateSecret(ctx context.Context, req *UpdateSecretRequest) (*UpdateSecretResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSecret not implemented")
}
func (*UnimplementedSecretApiServer) DeleteSecret(ctx context.Context, req *DeleteSecretRequest) (*DeleteSecretResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSecret not implemented")
}

func RegisterSecretApiServer(s *grpc.Server, srv SecretApiServer) {
	s.RegisterService(&_SecretApi_serviceDesc, srv)
}

func _SecretApi_GetSecret_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSecretRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SecretApiServer).GetSecret(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/glooeeapi.solo.io.SecretApi/GetSecret",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SecretApiServer).GetSecret(ctx, req.(*GetSecretRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SecretApi_ListSecrets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListSecretsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SecretApiServer).ListSecrets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/glooeeapi.solo.io.SecretApi/ListSecrets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SecretApiServer).ListSecrets(ctx, req.(*ListSecretsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SecretApi_CreateSecret_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSecretRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SecretApiServer).CreateSecret(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/glooeeapi.solo.io.SecretApi/CreateSecret",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SecretApiServer).CreateSecret(ctx, req.(*CreateSecretRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SecretApi_UpdateSecret_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSecretRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SecretApiServer).UpdateSecret(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/glooeeapi.solo.io.SecretApi/UpdateSecret",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SecretApiServer).UpdateSecret(ctx, req.(*UpdateSecretRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SecretApi_DeleteSecret_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteSecretRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SecretApiServer).DeleteSecret(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/glooeeapi.solo.io.SecretApi/DeleteSecret",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SecretApiServer).DeleteSecret(ctx, req.(*DeleteSecretRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SecretApi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "glooeeapi.solo.io.SecretApi",
	HandlerType: (*SecretApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSecret",
			Handler:    _SecretApi_GetSecret_Handler,
		},
		{
			MethodName: "ListSecrets",
			Handler:    _SecretApi_ListSecrets_Handler,
		},
		{
			MethodName: "CreateSecret",
			Handler:    _SecretApi_CreateSecret_Handler,
		},
		{
			MethodName: "UpdateSecret",
			Handler:    _SecretApi_UpdateSecret_Handler,
		},
		{
			MethodName: "DeleteSecret",
			Handler:    _SecretApi_DeleteSecret_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/solo-io/solo-projects/projects/grpcserver/api/v1/secret.proto",
}
