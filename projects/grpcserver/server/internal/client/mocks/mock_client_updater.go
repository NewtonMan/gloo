// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/solo-io/solo-projects/projects/grpcserver/server/internal/client (interfaces: Updater)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUpdater is a mock of Updater interface
type MockUpdater struct {
	ctrl     *gomock.Controller
	recorder *MockUpdaterMockRecorder
}

// MockUpdaterMockRecorder is the mock recorder for MockUpdater
type MockUpdaterMockRecorder struct {
	mock *MockUpdater
}

// NewMockUpdater creates a new mock instance
func NewMockUpdater(ctrl *gomock.Controller) *MockUpdater {
	mock := &MockUpdater{ctrl: ctrl}
	mock.recorder = &MockUpdaterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockUpdater) EXPECT() *MockUpdaterMockRecorder {
	return m.recorder
}

// StartWatch mocks base method
func (m *MockUpdater) StartWatch() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StartWatch")
	ret0, _ := ret[0].(error)
	return ret0
}

// StartWatch indicates an expected call of StartWatch
func (mr *MockUpdaterMockRecorder) StartWatch() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StartWatch", reflect.TypeOf((*MockUpdater)(nil).StartWatch))
}
