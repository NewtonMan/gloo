// Code generated by MockGen. DO NOT EDIT.
// Source: ./projects/grpcserver/server/service/internal/kube/namespace_client.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockNamespaceClient is a mock of NamespaceClient interface
type MockNamespaceClient struct {
	ctrl     *gomock.Controller
	recorder *MockNamespaceClientMockRecorder
}

// MockNamespaceClientMockRecorder is the mock recorder for MockNamespaceClient
type MockNamespaceClientMockRecorder struct {
	mock *MockNamespaceClient
}

// NewMockNamespaceClient creates a new mock instance
func NewMockNamespaceClient(ctrl *gomock.Controller) *MockNamespaceClient {
	mock := &MockNamespaceClient{ctrl: ctrl}
	mock.recorder = &MockNamespaceClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockNamespaceClient) EXPECT() *MockNamespaceClientMockRecorder {
	return m.recorder
}

// ListNamespaces mocks base method
func (m *MockNamespaceClient) ListNamespaces() ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListNamespaces")
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListNamespaces indicates an expected call of ListNamespaces
func (mr *MockNamespaceClientMockRecorder) ListNamespaces() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListNamespaces", reflect.TypeOf((*MockNamespaceClient)(nil).ListNamespaces))
}
