// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/solo-io/solo-projects/projects/grpcserver/server/service/envoysvc/envoydetails (interfaces: EnvoyStatusGetter)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1 "github.com/solo-io/solo-projects/projects/grpcserver/api/v1"
	v10 "k8s.io/api/core/v1"
)

// MockEnvoyStatusGetter is a mock of EnvoyStatusGetter interface.
type MockEnvoyStatusGetter struct {
	ctrl     *gomock.Controller
	recorder *MockEnvoyStatusGetterMockRecorder
}

// MockEnvoyStatusGetterMockRecorder is the mock recorder for MockEnvoyStatusGetter.
type MockEnvoyStatusGetterMockRecorder struct {
	mock *MockEnvoyStatusGetter
}

// NewMockEnvoyStatusGetter creates a new mock instance.
func NewMockEnvoyStatusGetter(ctrl *gomock.Controller) *MockEnvoyStatusGetter {
	mock := &MockEnvoyStatusGetter{ctrl: ctrl}
	mock.recorder = &MockEnvoyStatusGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEnvoyStatusGetter) EXPECT() *MockEnvoyStatusGetterMockRecorder {
	return m.recorder
}

// GetEnvoyStatus mocks base method.
func (m *MockEnvoyStatusGetter) GetEnvoyStatus(arg0 context.Context, arg1 v10.Pod) *v1.Status {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEnvoyStatus", arg0, arg1)
	ret0, _ := ret[0].(*v1.Status)
	return ret0
}

// GetEnvoyStatus indicates an expected call of GetEnvoyStatus.
func (mr *MockEnvoyStatusGetterMockRecorder) GetEnvoyStatus(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEnvoyStatus", reflect.TypeOf((*MockEnvoyStatusGetter)(nil).GetEnvoyStatus), arg0, arg1)
}
