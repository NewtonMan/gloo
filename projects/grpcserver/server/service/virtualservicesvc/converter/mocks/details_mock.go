// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/solo-io/solo-projects/projects/grpcserver/server/service/virtualservicesvc/converter (interfaces: VirtualServiceDetailsConverter)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1 "github.com/solo-io/gloo/projects/gateway/pkg/api/v1"
	v10 "github.com/solo-io/solo-projects/projects/grpcserver/api/v1"
)

// MockVirtualServiceDetailsConverter is a mock of VirtualServiceDetailsConverter interface.
type MockVirtualServiceDetailsConverter struct {
	ctrl     *gomock.Controller
	recorder *MockVirtualServiceDetailsConverterMockRecorder
}

// MockVirtualServiceDetailsConverterMockRecorder is the mock recorder for MockVirtualServiceDetailsConverter.
type MockVirtualServiceDetailsConverterMockRecorder struct {
	mock *MockVirtualServiceDetailsConverter
}

// NewMockVirtualServiceDetailsConverter creates a new mock instance.
func NewMockVirtualServiceDetailsConverter(ctrl *gomock.Controller) *MockVirtualServiceDetailsConverter {
	mock := &MockVirtualServiceDetailsConverter{ctrl: ctrl}
	mock.recorder = &MockVirtualServiceDetailsConverterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockVirtualServiceDetailsConverter) EXPECT() *MockVirtualServiceDetailsConverterMockRecorder {
	return m.recorder
}

// GetDetails mocks base method.
func (m *MockVirtualServiceDetailsConverter) GetDetails(arg0 context.Context, arg1 *v1.VirtualService) *v10.VirtualServiceDetails {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDetails", arg0, arg1)
	ret0, _ := ret[0].(*v10.VirtualServiceDetails)
	return ret0
}

// GetDetails indicates an expected call of GetDetails.
func (mr *MockVirtualServiceDetailsConverterMockRecorder) GetDetails(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDetails", reflect.TypeOf((*MockVirtualServiceDetailsConverter)(nil).GetDetails), arg0, arg1)
}
