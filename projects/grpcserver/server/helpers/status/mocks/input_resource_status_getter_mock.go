// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/solo-io/solo-projects/projects/grpcserver/server/helpers/status (interfaces: InputResourceStatusGetter)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	resources "github.com/solo-io/solo-kit/pkg/api/v1/resources"
	v1 "github.com/solo-io/solo-projects/projects/grpcserver/api/v1"
)

// MockInputResourceStatusGetter is a mock of InputResourceStatusGetter interface
type MockInputResourceStatusGetter struct {
	ctrl     *gomock.Controller
	recorder *MockInputResourceStatusGetterMockRecorder
}

// MockInputResourceStatusGetterMockRecorder is the mock recorder for MockInputResourceStatusGetter
type MockInputResourceStatusGetterMockRecorder struct {
	mock *MockInputResourceStatusGetter
}

// NewMockInputResourceStatusGetter creates a new mock instance
func NewMockInputResourceStatusGetter(ctrl *gomock.Controller) *MockInputResourceStatusGetter {
	mock := &MockInputResourceStatusGetter{ctrl: ctrl}
	mock.recorder = &MockInputResourceStatusGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockInputResourceStatusGetter) EXPECT() *MockInputResourceStatusGetterMockRecorder {
	return m.recorder
}

// GetApiStatusFromResource mocks base method
func (m *MockInputResourceStatusGetter) GetApiStatusFromResource(arg0 resources.InputResource) *v1.Status {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetApiStatusFromResource", arg0)
	ret0, _ := ret[0].(*v1.Status)
	return ret0
}

// GetApiStatusFromResource indicates an expected call of GetApiStatusFromResource
func (mr *MockInputResourceStatusGetterMockRecorder) GetApiStatusFromResource(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetApiStatusFromResource", reflect.TypeOf((*MockInputResourceStatusGetter)(nil).GetApiStatusFromResource), arg0)
}
