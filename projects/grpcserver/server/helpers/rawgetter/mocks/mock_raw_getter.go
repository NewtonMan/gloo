// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/solo-io/solo-projects/projects/grpcserver/server/helpers/rawgetter (interfaces: RawGetter)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	crd "github.com/solo-io/solo-kit/pkg/api/v1/clients/kube/crd"
	resources "github.com/solo-io/solo-kit/pkg/api/v1/resources"
	v1 "github.com/solo-io/solo-projects/projects/grpcserver/api/v1"
)

// MockRawGetter is a mock of RawGetter interface
type MockRawGetter struct {
	ctrl     *gomock.Controller
	recorder *MockRawGetterMockRecorder
}

// MockRawGetterMockRecorder is the mock recorder for MockRawGetter
type MockRawGetterMockRecorder struct {
	mock *MockRawGetter
}

// NewMockRawGetter creates a new mock instance
func NewMockRawGetter(ctrl *gomock.Controller) *MockRawGetter {
	mock := &MockRawGetter{ctrl: ctrl}
	mock.recorder = &MockRawGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRawGetter) EXPECT() *MockRawGetterMockRecorder {
	return m.recorder
}

// GetRaw mocks base method
func (m *MockRawGetter) GetRaw(arg0 resources.InputResource, arg1 crd.Crd) (*v1.Raw, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRaw", arg0, arg1)
	ret0, _ := ret[0].(*v1.Raw)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRaw indicates an expected call of GetRaw
func (mr *MockRawGetterMockRecorder) GetRaw(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRaw", reflect.TypeOf((*MockRawGetter)(nil).GetRaw), arg0, arg1)
}
