// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/solo-io/solo-projects/projects/observability/pkg/grafana/template (interfaces: TemplateGenerator)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTemplateGenerator is a mock of TemplateGenerator interface
type MockTemplateGenerator struct {
	ctrl     *gomock.Controller
	recorder *MockTemplateGeneratorMockRecorder
}

// MockTemplateGeneratorMockRecorder is the mock recorder for MockTemplateGenerator
type MockTemplateGeneratorMockRecorder struct {
	mock *MockTemplateGenerator
}

// NewMockTemplateGenerator creates a new mock instance
func NewMockTemplateGenerator(ctrl *gomock.Controller) *MockTemplateGenerator {
	mock := &MockTemplateGenerator{ctrl: ctrl}
	mock.recorder = &MockTemplateGeneratorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTemplateGenerator) EXPECT() *MockTemplateGeneratorMockRecorder {
	return m.recorder
}

// GenerateDashboard mocks base method
func (m *MockTemplateGenerator) GenerateDashboard(arg0 uint) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateDashboard", arg0)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateDashboard indicates an expected call of GenerateDashboard
func (mr *MockTemplateGeneratorMockRecorder) GenerateDashboard(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateDashboard", reflect.TypeOf((*MockTemplateGenerator)(nil).GenerateDashboard), arg0)
}

// GenerateSnapshot mocks base method
func (m *MockTemplateGenerator) GenerateSnapshot() ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateSnapshot")
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateSnapshot indicates an expected call of GenerateSnapshot
func (mr *MockTemplateGeneratorMockRecorder) GenerateSnapshot() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateSnapshot", reflect.TypeOf((*MockTemplateGenerator)(nil).GenerateSnapshot))
}

// GenerateUid mocks base method
func (m *MockTemplateGenerator) GenerateUid() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateUid")
	ret0, _ := ret[0].(string)
	return ret0
}

// GenerateUid indicates an expected call of GenerateUid
func (mr *MockTemplateGeneratorMockRecorder) GenerateUid() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateUid", reflect.TypeOf((*MockTemplateGenerator)(nil).GenerateUid))
}
