listeners:
- aggregateListener:
    httpFilterChains:
    - matcher: {}
      virtualHostRefs:
      - http~example_com
    httpResources:
      virtualHosts:
        http~example_com:
          domains:
          - example.com
          name: http~example_com
          routes:
          - matchers:
            - prefix: /
            name: httproute-example-route-default-0-0
            options: {}
            routeAction:
              single:
                kube:
                  port: 80
                  ref:
                    name: example-svc
                    namespace: default
  bindAddress: '::'
  bindPort: 8080
  metadataStatic:
    sources:
    - resourceKind: gateway.networking.k8s.io/Gateway
      resourceRef:
        name: http
        namespace: default
  name: http
- aggregateListener:
    httpFilterChains:
    - matcher: {}
      virtualHostRefs:
      - bar~bar_example_com
      - bar~example_com
    httpResources:
      virtualHosts:
        bar~bar_example_com:
          domains:
          - bar.example.com
          name: bar~bar_example_com
          routes:
          - matchers:
            - headers:
              - name: env
                value: canary
              prefix: /
            name: httproute-bar-route-default-0-0
            options: {}
            routeAction:
              single:
                kube:
                  port: 8080
                  ref:
                    name: bar-svc-canary
                    namespace: default
          - matchers:
            - prefix: /
            name: httproute-bar-route-default-1-0
            options: {}
            routeAction:
              single:
                kube:
                  port: 8080
                  ref:
                    name: bar-svc
                    namespace: default
        bar~example_com:
          domains:
          - example.com
          name: bar~example_com
          routes:
          - matchers:
            - prefix: /
            name: httproute-example-route-default-0-0
            options: {}
            routeAction:
              single:
                kube:
                  port: 80
                  ref:
                    name: example-svc
                    namespace: default
  bindAddress: '::'
  bindPort: 8082
  metadataStatic:
    sources:
    - resourceKind: gateway.networking.k8s.io/Gateway
      resourceRef:
        name: bar
        namespace: default
  name: bar
- aggregateListener:
    httpFilterChains:
    - matcher: {}
      virtualHostRefs:
      - foo~example_com
      - foo~foo_example_com
    httpResources:
      virtualHosts:
        foo~example_com:
          domains:
          - example.com
          name: foo~example_com
          routes:
          - matchers:
            - prefix: /
            name: httproute-example-route-default-0-0
            options: {}
            routeAction:
              single:
                kube:
                  port: 80
                  ref:
                    name: example-svc
                    namespace: default
        foo~foo_example_com:
          domains:
          - foo.example.com
          name: foo~foo_example_com
          routes:
          - matchers:
            - prefix: /login
            name: httproute-foo-route-default-0-0
            options: {}
            routeAction:
              single:
                kube:
                  port: 8080
                  ref:
                    name: foo-svc
                    namespace: default
  bindAddress: '::'
  bindPort: 8081
  metadataStatic:
    sources:
    - resourceKind: gateway.networking.k8s.io/Gateway
      resourceRef:
        name: foo
        namespace: default
  name: foo
metadata:
  labels:
    created_by: gloo-kube-gateway-api
    gateway_namespace: default
  name: default-example-gateway
  namespace: gloo-system
