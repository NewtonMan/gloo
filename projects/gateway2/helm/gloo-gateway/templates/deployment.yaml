{{- if .Values.controlPlane.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "gloo-gateway.controlPlane.fullname" . }}
  labels:
    {{- include "gloo-gateway.gateway.const_labels" . | nindent 4 }}
    {{- include "gloo-gateway.controlPlane.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.controlPlane.replicaCount }}
  selector:
    matchLabels:
      {{- include "gloo-gateway.controlPlane.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.controlPlane.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "gloo-gateway.controlPlane.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.controlPlane.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "gloo-gateway.controlPlane.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.controlPlane.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.controlPlane.securityContext | nindent 12 }}
          image: "{{ .Values.controlPlane.image.repository }}:{{ .Values.controlPlane.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.controlPlane.image.pullPolicy }}
          args:
          - controller
          - "--class-name"
          - "{{ .Values.gatewayClass.className }}"
          - "--controller-name"
          - "{{ .Values.gatewayClass.controllerName }}"
          {{- if .Values.develop }}
          - "--dev-mode"
          {{- end }}
          {{- if .Values.controlPlane.autoProvision }}
          - "--auto-provision"
          {{- end }}
          - --xds-server
          - {{ printf "%s.%s" (include "gloo-gateway.controlPlane.fullname" . ) .Release.Namespace }}
          - --xds-port
          - "{{ .Values.controlPlane.service.port }}"
          - --release-name={{ .Release.Name }}
          ports:
            - name: health
              containerPort: 9091
              protocol: TCP
            - name: metrics
              containerPort: 9090
              protocol: TCP
            - name: http
              containerPort: {{ .Values.controlPlane.service.port }}
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /readyz
              port: health
          resources:
            {{- toYaml .Values.controlPlane.resources | nindent 12 }}
        - name: sds
          image: quay.io/solo-io/sds:1.0.0-ci # TODO: unhard code
          imagePullPolicy: IfNotPresent
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: ISTIO_MTLS_SDS_ENABLED
              value: "true"
          volumeMounts:
            - mountPath: /etc/istio-certs/
              name: istio-certs
            - mountPath: /etc/envoy
              name: envoy-config
          ports:
            - containerPort: 8234
              name: sds
              protocol: TCP
          readinessProbe:
            tcpSocket:
              port: 8234
            initialDelaySeconds: 3
            periodSeconds: 10
            failureThreshold: 3
        - name: istio-proxy
          image: quay.io/solo-io/proxyv2:1.0.0-ci # TODO: unhard code
          imagePullPolicy: IfNotPresent
          args:
            - proxy
            - sidecar
            - --domain
            - $(POD_NAMESPACE).svc.cluster.local
            - --configPath
            - /etc/istio/proxy
            - --binaryPath
            - /usr/local/bin/envoy
            - --serviceCluster
            - istio-proxy-prometheus
            - --drainDuration
            - 45s
            - --parentShutdownDuration
            - 1m0s
            - --proxyLogLevel=warning
            - --proxyComponentLogLevel=misc:error
            - --connectTimeout
            - 10s
            - --proxyAdminPort
            - "15000"
            - --controlPlaneAuthPolicy
            - NONE
            - --dnsRefreshRate
            - 300s
            - --statusPort
            - "15021"
            - --trust-domain=cluster.local
            - --controlPlaneBootstrap=false
          env:
            - name: OUTPUT_CERTS
              value: "/etc/istio-certs"
            - name: JWT_POLICY
              value: third-party-jwt
            - name: PILOT_CERT_PROVIDER
              value: istiod
            - name: CA_ADDR
              value: "istiod.istio-system.svc:15012"
            - name: ISTIO_META_MESH_ID
              value: "cluster.local"
            - name: ISTIO_META_CLUSTER_ID
              value:  "Kubernetes"
            - name: PROXY_CONFIG
              value: |
                {"discoveryAddress": "istiod.istio-system.svc:15012" }
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: INSTANCE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: SERVICE_ACCOUNT
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: ISTIO_META_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: ISTIO_META_CONFIG_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz/ready
              port: 15021
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          volumeMounts:
            - mountPath: /var/run/secrets/istio
              name: istiod-ca-cert
            - mountPath: /etc/istio/proxy
              name: istio-envoy
            - mountPath: /etc/istio-certs/
              name: istio-certs
            - mountPath: /var/run/secrets/tokens
              name: istio-token
            - mountPath: /var/run/secrets/credential-uds
              name: credential-socket
            - mountPath: /var/run/secrets/workload-spiffe-uds
              name: workload-socket
            - mountPath: /var/run/secrets/workload-spiffe-credentials
              name: workload-certs
      volumes:
        - configMap:
            name: gloo-envoy-config
          name: envoy-config
        - name: istio-certs
          emptyDir:
            medium: Memory
        - name: istiod-ca-cert
          configMap:
            defaultMode: 420
            name: istio-ca-root-cert
        - emptyDir:
            medium: Memory
          name: istio-envoy
        - name: istio-token
          projected:
            defaultMode: 420
            sources:
              - serviceAccountToken:
                  audience: istio-ca
                  expirationSeconds: 43200
                  path: istio-token
        - name: credential-socket
          emptyDir: {}
        - name: workload-socket
          emptyDir: {}
        - name: workload-certs
          emptyDir: {}
      {{- with .Values.controlPlane.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controlPlane.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controlPlane.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
