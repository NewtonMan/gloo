// Code generated by MockGen. DO NOT EDIT.
// Source: ./factory.go

// Package mock_translator is a generated GoMock package.
package mock_translator

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	translator "github.com/solo-io/solo-projects/projects/gloo-fed/pkg/discovery/translator"
)

// MockGlooInstanceTranslatorFactory is a mock of GlooInstanceTranslatorFactory interface
type MockGlooInstanceTranslatorFactory struct {
	ctrl     *gomock.Controller
	recorder *MockGlooInstanceTranslatorFactoryMockRecorder
}

// MockGlooInstanceTranslatorFactoryMockRecorder is the mock recorder for MockGlooInstanceTranslatorFactory
type MockGlooInstanceTranslatorFactoryMockRecorder struct {
	mock *MockGlooInstanceTranslatorFactory
}

// NewMockGlooInstanceTranslatorFactory creates a new mock instance
func NewMockGlooInstanceTranslatorFactory(ctrl *gomock.Controller) *MockGlooInstanceTranslatorFactory {
	mock := &MockGlooInstanceTranslatorFactory{ctrl: ctrl}
	mock.recorder = &MockGlooInstanceTranslatorFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockGlooInstanceTranslatorFactory) EXPECT() *MockGlooInstanceTranslatorFactoryMockRecorder {
	return m.recorder
}

// GetTranslator mocks base method
func (m *MockGlooInstanceTranslatorFactory) GetTranslator(cluster string) (translator.GlooInstanceTranslator, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTranslator", cluster)
	ret0, _ := ret[0].(translator.GlooInstanceTranslator)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTranslator indicates an expected call of GetTranslator
func (mr *MockGlooInstanceTranslatorFactoryMockRecorder) GetTranslator(cluster interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTranslator", reflect.TypeOf((*MockGlooInstanceTranslatorFactory)(nil).GetTranslator), cluster)
}
