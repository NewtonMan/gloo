// Code generated by skv2. DO NOT EDIT.

package v1alpha2

import (
	gateway_networking_k8s_io_v1alpha2 "github.com/solo-io/gloo/projects/gloo/cli/pkg/cmd/gatewayapi/envoy/gloo-mesh-client-go/k8s-gw/apis/gateway.networking.k8s.io/v1alpha2"

	"k8s.io/client-go/rest"
	"sigs.k8s.io/controller-runtime/pkg/client"
)

/*
  The intention of these providers are to be used for Mocking.
  They expose the Clients as interfaces, as well as factories to provide mocked versions
  of the clients when they require building within a component.

  See package `github.com/solo-io/skv2/pkg/multicluster/register` for example
*/

// Provider for TCPRouteClient from Clientset
func TCPRouteClientFromClientsetProvider(clients gateway_networking_k8s_io_v1alpha2.Clientset) gateway_networking_k8s_io_v1alpha2.TCPRouteClient {
	return clients.TCPRoutes()
}

// Provider for TCPRoute Client from Client
func TCPRouteClientProvider(client client.Client) gateway_networking_k8s_io_v1alpha2.TCPRouteClient {
	return gateway_networking_k8s_io_v1alpha2.NewTCPRouteClient(client)
}

type TCPRouteClientFactory func(client client.Client) gateway_networking_k8s_io_v1alpha2.TCPRouteClient

func TCPRouteClientFactoryProvider() TCPRouteClientFactory {
	return TCPRouteClientProvider
}

type TCPRouteClientFromConfigFactory func(cfg *rest.Config) (gateway_networking_k8s_io_v1alpha2.TCPRouteClient, error)

func TCPRouteClientFromConfigFactoryProvider() TCPRouteClientFromConfigFactory {
	return func(cfg *rest.Config) (gateway_networking_k8s_io_v1alpha2.TCPRouteClient, error) {
		clients, err := gateway_networking_k8s_io_v1alpha2.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.TCPRoutes(), nil
	}
}
