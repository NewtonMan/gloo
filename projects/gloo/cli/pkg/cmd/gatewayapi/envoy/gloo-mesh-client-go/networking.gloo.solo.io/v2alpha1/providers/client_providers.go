// Code generated by skv2. DO NOT EDIT.

package v2alpha1

import (
	networking_gloo_solo_io_v2alpha1 "github.com/solo-io/gloo/projects/gloo/cli/pkg/cmd/gatewayapi/envoy/gloo-mesh-client-go/networking.gloo.solo.io/v2alpha1"

	"k8s.io/client-go/rest"
	"sigs.k8s.io/controller-runtime/pkg/client"
)

/*
  The intention of these providers are to be used for Mocking.
  They expose the Clients as interfaces, as well as factories to provide mocked versions
  of the clients when they require building within a component.

  See package `github.com/solo-io/skv2/pkg/multicluster/register` for example
*/

// Provider for ExternalWorkloadClient from Clientset
func ExternalWorkloadClientFromClientsetProvider(clients networking_gloo_solo_io_v2alpha1.Clientset) networking_gloo_solo_io_v2alpha1.ExternalWorkloadClient {
	return clients.ExternalWorkloads()
}

// Provider for ExternalWorkload Client from Client
func ExternalWorkloadClientProvider(client client.Client) networking_gloo_solo_io_v2alpha1.ExternalWorkloadClient {
	return networking_gloo_solo_io_v2alpha1.NewExternalWorkloadClient(client)
}

type ExternalWorkloadClientFactory func(client client.Client) networking_gloo_solo_io_v2alpha1.ExternalWorkloadClient

func ExternalWorkloadClientFactoryProvider() ExternalWorkloadClientFactory {
	return ExternalWorkloadClientProvider
}

type ExternalWorkloadClientFromConfigFactory func(cfg *rest.Config) (networking_gloo_solo_io_v2alpha1.ExternalWorkloadClient, error)

func ExternalWorkloadClientFromConfigFactoryProvider() ExternalWorkloadClientFromConfigFactory {
	return func(cfg *rest.Config) (networking_gloo_solo_io_v2alpha1.ExternalWorkloadClient, error) {
		clients, err := networking_gloo_solo_io_v2alpha1.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.ExternalWorkloads(), nil
	}
}

// Provider for ProgressiveDeliveryClient from Clientset
func ProgressiveDeliveryClientFromClientsetProvider(clients networking_gloo_solo_io_v2alpha1.Clientset) networking_gloo_solo_io_v2alpha1.ProgressiveDeliveryClient {
	return clients.ProgressiveDeliveries()
}

// Provider for ProgressiveDelivery Client from Client
func ProgressiveDeliveryClientProvider(client client.Client) networking_gloo_solo_io_v2alpha1.ProgressiveDeliveryClient {
	return networking_gloo_solo_io_v2alpha1.NewProgressiveDeliveryClient(client)
}

type ProgressiveDeliveryClientFactory func(client client.Client) networking_gloo_solo_io_v2alpha1.ProgressiveDeliveryClient

func ProgressiveDeliveryClientFactoryProvider() ProgressiveDeliveryClientFactory {
	return ProgressiveDeliveryClientProvider
}

type ProgressiveDeliveryClientFromConfigFactory func(cfg *rest.Config) (networking_gloo_solo_io_v2alpha1.ProgressiveDeliveryClient, error)

func ProgressiveDeliveryClientFromConfigFactoryProvider() ProgressiveDeliveryClientFromConfigFactory {
	return func(cfg *rest.Config) (networking_gloo_solo_io_v2alpha1.ProgressiveDeliveryClient, error) {
		clients, err := networking_gloo_solo_io_v2alpha1.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.ProgressiveDeliveries(), nil
	}
}
