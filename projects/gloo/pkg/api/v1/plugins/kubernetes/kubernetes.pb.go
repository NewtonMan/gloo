// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: plugins/kubernetes/kubernetes.proto

package kubernetes // import "github.com/solo-io/solo-projects/projects/gloo/pkg/api/v1/plugins/kubernetes"

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"
import plugins "github.com/solo-io/solo-projects/projects/gloo/pkg/api/v1/plugins"

import bytes "bytes"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// Upstream Spec for Kubernetes Upstreams
// Kubernetes Upstreams represent a set of one or more addressable pods for a Kubernetes Service
// the Gloo Kubernetes Upstream maps to a single service port. Because Kubernetes Services support mulitple ports,
// Gloo requires that a different upstream be created for each port
// Kubernetes Upstreams are typically generated automatically by Gloo from the Kubernetes API
type UpstreamSpec struct {
	// The name of the Kubernetes Service
	ServiceName string `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	// The namespace where the Service lives
	ServiceNamespace string `protobuf:"bytes,2,opt,name=service_namespace,json=serviceNamespace,proto3" json:"service_namespace,omitempty"`
	// The port where the Service is listening.
	ServicePort uint32 `protobuf:"varint,3,opt,name=service_port,json=servicePort,proto3" json:"service_port,omitempty"`
	// Allows finer-grained filtering of pods for the Upstream. Gloo will select pods based on their labels if
	// any are provided here.
	// (see [Kubernetes labels and selectors](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/)
	Selector map[string]string `protobuf:"bytes,4,rep,name=selector" json:"selector,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	//     An optional Service Spec describing the service listening at this address
	ServiceSpec          *plugins.ServiceSpec `protobuf:"bytes,5,opt,name=service_spec,json=serviceSpec" json:"service_spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *UpstreamSpec) Reset()         { *m = UpstreamSpec{} }
func (m *UpstreamSpec) String() string { return proto.CompactTextString(m) }
func (*UpstreamSpec) ProtoMessage()    {}
func (*UpstreamSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_kubernetes_61f4c5782b98d47b, []int{0}
}
func (m *UpstreamSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpstreamSpec.Unmarshal(m, b)
}
func (m *UpstreamSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpstreamSpec.Marshal(b, m, deterministic)
}
func (dst *UpstreamSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpstreamSpec.Merge(dst, src)
}
func (m *UpstreamSpec) XXX_Size() int {
	return xxx_messageInfo_UpstreamSpec.Size(m)
}
func (m *UpstreamSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_UpstreamSpec.DiscardUnknown(m)
}

var xxx_messageInfo_UpstreamSpec proto.InternalMessageInfo

func (m *UpstreamSpec) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *UpstreamSpec) GetServiceNamespace() string {
	if m != nil {
		return m.ServiceNamespace
	}
	return ""
}

func (m *UpstreamSpec) GetServicePort() uint32 {
	if m != nil {
		return m.ServicePort
	}
	return 0
}

func (m *UpstreamSpec) GetSelector() map[string]string {
	if m != nil {
		return m.Selector
	}
	return nil
}

func (m *UpstreamSpec) GetServiceSpec() *plugins.ServiceSpec {
	if m != nil {
		return m.ServiceSpec
	}
	return nil
}

func init() {
	proto.RegisterType((*UpstreamSpec)(nil), "kubernetes.plugins.gloo.solo.io.UpstreamSpec")
	proto.RegisterMapType((map[string]string)(nil), "kubernetes.plugins.gloo.solo.io.UpstreamSpec.SelectorEntry")
}
func (this *UpstreamSpec) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*UpstreamSpec)
	if !ok {
		that2, ok := that.(UpstreamSpec)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.ServiceName != that1.ServiceName {
		return false
	}
	if this.ServiceNamespace != that1.ServiceNamespace {
		return false
	}
	if this.ServicePort != that1.ServicePort {
		return false
	}
	if len(this.Selector) != len(that1.Selector) {
		return false
	}
	for i := range this.Selector {
		if this.Selector[i] != that1.Selector[i] {
			return false
		}
	}
	if !this.ServiceSpec.Equal(that1.ServiceSpec) {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}

func init() {
	proto.RegisterFile("plugins/kubernetes/kubernetes.proto", fileDescriptor_kubernetes_61f4c5782b98d47b)
}

var fileDescriptor_kubernetes_61f4c5782b98d47b = []byte{
	// 332 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x91, 0xc1, 0x4a, 0xfb, 0x40,
	0x10, 0xc6, 0x49, 0xfb, 0xef, 0x1f, 0xdd, 0xb6, 0x50, 0x97, 0x1e, 0x42, 0x0f, 0x9a, 0xea, 0x25,
	0x20, 0xee, 0x62, 0xbd, 0x88, 0xbd, 0x89, 0xde, 0x44, 0x4a, 0x8b, 0x08, 0x5e, 0x24, 0x5d, 0x86,
	0x18, 0x9b, 0x64, 0x96, 0xdd, 0x4d, 0xa1, 0x6f, 0xe4, 0x4b, 0x79, 0xf1, 0x49, 0x64, 0x93, 0x26,
	0x5d, 0x45, 0x10, 0x4f, 0xf9, 0x76, 0xf8, 0xcd, 0x37, 0x93, 0x6f, 0xc8, 0x89, 0x4c, 0x8b, 0x38,
	0xc9, 0x35, 0x5f, 0x15, 0x4b, 0x50, 0x39, 0x18, 0x70, 0x25, 0x93, 0x0a, 0x0d, 0xd2, 0x23, 0xb7,
	0x52, 0xf1, 0x2c, 0x4e, 0x11, 0x99, 0xc6, 0x14, 0x59, 0x82, 0xa3, 0x61, 0x8c, 0x31, 0x96, 0x2c,
	0xb7, 0xaa, 0x6a, 0x1b, 0xcd, 0xe2, 0xc4, 0xbc, 0x14, 0x4b, 0x26, 0x30, 0xe3, 0x96, 0x3c, 0x4b,
	0xb0, 0xfa, 0x4a, 0x85, 0xaf, 0x20, 0x8c, 0xe6, 0x8d, 0xb0, 0x6e, 0x3c, 0x92, 0x09, 0x5f, 0x9f,
	0xf3, 0x7a, 0x23, 0x0d, 0x6a, 0x9d, 0x08, 0x78, 0xd6, 0x12, 0x44, 0xe5, 0x78, 0xfc, 0xde, 0x22,
	0xbd, 0x07, 0xa9, 0x8d, 0x82, 0x28, 0x5b, 0x48, 0x10, 0x74, 0x4c, 0x7a, 0x35, 0x96, 0x47, 0x19,
	0xf8, 0x5e, 0xe0, 0x85, 0xfb, 0xf3, 0xee, 0xb6, 0x76, 0x1f, 0x65, 0x40, 0x4f, 0xc9, 0x81, 0x8b,
	0x68, 0x19, 0x09, 0xf0, 0x5b, 0x25, 0x37, 0x70, 0xb8, 0xb2, 0xee, 0xfa, 0x49, 0x54, 0xc6, 0x6f,
	0x07, 0x5e, 0xd8, 0x6f, 0xfc, 0x66, 0xa8, 0x0c, 0x7d, 0x24, 0x7b, 0x1a, 0x52, 0x10, 0x06, 0x95,
	0xff, 0x2f, 0x68, 0x87, 0xdd, 0xc9, 0x94, 0xfd, 0x92, 0x0f, 0x73, 0x77, 0x66, 0x8b, 0x6d, 0xf7,
	0x6d, 0x6e, 0xd4, 0x66, 0xde, 0x98, 0xd1, 0x9b, 0xdd, 0x6c, 0xfb, 0xcb, 0x7e, 0x27, 0xf0, 0xc2,
	0xee, 0x64, 0xfc, 0xb3, 0xe3, 0xa2, 0x22, 0xad, 0x61, 0xb3, 0x9e, 0x7d, 0x8c, 0xa6, 0xa4, 0xff,
	0x65, 0x00, 0x1d, 0x90, 0xf6, 0x0a, 0x36, 0xdb, 0x64, 0xac, 0xa4, 0x43, 0xd2, 0x59, 0x47, 0x69,
	0x51, 0xa7, 0x50, 0x3d, 0xae, 0x5a, 0x97, 0xde, 0xf5, 0xfc, 0xed, 0xe3, 0xd0, 0x7b, 0xba, 0xfb,
	0xe3, 0xdd, 0xe4, 0x2a, 0xfe, 0x7e, 0xbb, 0x5d, 0x20, 0xcb, 0xff, 0xe5, 0xe9, 0x2e, 0x3e, 0x03,
	0x00, 0x00, 0xff, 0xff, 0x1e, 0xc8, 0x2d, 0xb2, 0x6a, 0x02, 0x00, 0x00,
}
