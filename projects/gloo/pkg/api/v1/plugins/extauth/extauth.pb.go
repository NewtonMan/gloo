// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/solo-io/solo-projects/projects/gloo/api/v1/plugins/extauth/extauth.proto

package extauth

import (
	bytes "bytes"
	context "context"
	fmt "fmt"
	math "math"

	v2 "github.com/envoyproxy/go-control-plane/envoy/api/v2"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	core "github.com/solo-io/solo-kit/pkg/api/v1/resources/core"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type Settings struct {
	// Types that are valid to be assigned to ExtauthzServer:
	//	*Settings_ExtauthzServerRef
	//	*Settings_ExtauthzServerUri
	ExtauthzServer       isSettings_ExtauthzServer `protobuf_oneof:"extauthz_server"`
	UserIdHeader         string                    `protobuf:"bytes,3,opt,name=user_id_header,json=userIdHeader,proto3" json:"user_id_header,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *Settings) Reset()         { *m = Settings{} }
func (m *Settings) String() string { return proto.CompactTextString(m) }
func (*Settings) ProtoMessage()    {}
func (*Settings) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f58f3ab230e4111, []int{0}
}
func (m *Settings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Settings.Unmarshal(m, b)
}
func (m *Settings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Settings.Marshal(b, m, deterministic)
}
func (m *Settings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Settings.Merge(m, src)
}
func (m *Settings) XXX_Size() int {
	return xxx_messageInfo_Settings.Size(m)
}
func (m *Settings) XXX_DiscardUnknown() {
	xxx_messageInfo_Settings.DiscardUnknown(m)
}

var xxx_messageInfo_Settings proto.InternalMessageInfo

type isSettings_ExtauthzServer interface {
	isSettings_ExtauthzServer()
	Equal(interface{}) bool
}

type Settings_ExtauthzServerRef struct {
	ExtauthzServerRef *core.ResourceRef `protobuf:"bytes,1,opt,name=extauthz_server_ref,json=extauthzServerRef,proto3,oneof"`
}
type Settings_ExtauthzServerUri struct {
	ExtauthzServerUri string `protobuf:"bytes,2,opt,name=extauthz_server_uri,json=extauthzServerUri,proto3,oneof"`
}

func (*Settings_ExtauthzServerRef) isSettings_ExtauthzServer() {}
func (*Settings_ExtauthzServerUri) isSettings_ExtauthzServer() {}

func (m *Settings) GetExtauthzServer() isSettings_ExtauthzServer {
	if m != nil {
		return m.ExtauthzServer
	}
	return nil
}

func (m *Settings) GetExtauthzServerRef() *core.ResourceRef {
	if x, ok := m.GetExtauthzServer().(*Settings_ExtauthzServerRef); ok {
		return x.ExtauthzServerRef
	}
	return nil
}

func (m *Settings) GetExtauthzServerUri() string {
	if x, ok := m.GetExtauthzServer().(*Settings_ExtauthzServerUri); ok {
		return x.ExtauthzServerUri
	}
	return ""
}

func (m *Settings) GetUserIdHeader() string {
	if m != nil {
		return m.UserIdHeader
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Settings) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Settings_OneofMarshaler, _Settings_OneofUnmarshaler, _Settings_OneofSizer, []interface{}{
		(*Settings_ExtauthzServerRef)(nil),
		(*Settings_ExtauthzServerUri)(nil),
	}
}

func _Settings_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Settings)
	// extauthz_server
	switch x := m.ExtauthzServer.(type) {
	case *Settings_ExtauthzServerRef:
		_ = b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ExtauthzServerRef); err != nil {
			return err
		}
	case *Settings_ExtauthzServerUri:
		_ = b.EncodeVarint(2<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.ExtauthzServerUri)
	case nil:
	default:
		return fmt.Errorf("Settings.ExtauthzServer has unexpected type %T", x)
	}
	return nil
}

func _Settings_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Settings)
	switch tag {
	case 1: // extauthz_server.extauthz_server_ref
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(core.ResourceRef)
		err := b.DecodeMessage(msg)
		m.ExtauthzServer = &Settings_ExtauthzServerRef{msg}
		return true, err
	case 2: // extauthz_server.extauthz_server_uri
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.ExtauthzServer = &Settings_ExtauthzServerUri{x}
		return true, err
	default:
		return false, nil
	}
}

func _Settings_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Settings)
	// extauthz_server
	switch x := m.ExtauthzServer.(type) {
	case *Settings_ExtauthzServerRef:
		s := proto.Size(x.ExtauthzServerRef)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Settings_ExtauthzServerUri:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.ExtauthzServerUri)))
		n += len(x.ExtauthzServerUri)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type BasicAuth struct {
	Realm                string         `protobuf:"bytes,1,opt,name=realm,proto3" json:"realm,omitempty"`
	Apr                  *BasicAuth_Apr `protobuf:"bytes,2,opt,name=apr,proto3" json:"apr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *BasicAuth) Reset()         { *m = BasicAuth{} }
func (m *BasicAuth) String() string { return proto.CompactTextString(m) }
func (*BasicAuth) ProtoMessage()    {}
func (*BasicAuth) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f58f3ab230e4111, []int{1}
}
func (m *BasicAuth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BasicAuth.Unmarshal(m, b)
}
func (m *BasicAuth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BasicAuth.Marshal(b, m, deterministic)
}
func (m *BasicAuth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BasicAuth.Merge(m, src)
}
func (m *BasicAuth) XXX_Size() int {
	return xxx_messageInfo_BasicAuth.Size(m)
}
func (m *BasicAuth) XXX_DiscardUnknown() {
	xxx_messageInfo_BasicAuth.DiscardUnknown(m)
}

var xxx_messageInfo_BasicAuth proto.InternalMessageInfo

func (m *BasicAuth) GetRealm() string {
	if m != nil {
		return m.Realm
	}
	return ""
}

func (m *BasicAuth) GetApr() *BasicAuth_Apr {
	if m != nil {
		return m.Apr
	}
	return nil
}

type BasicAuth_Apr struct {
	Users                map[string]*BasicAuth_Apr_SaltedHashedPassword `protobuf:"bytes,2,rep,name=users,proto3" json:"users,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                                       `json:"-"`
	XXX_unrecognized     []byte                                         `json:"-"`
	XXX_sizecache        int32                                          `json:"-"`
}

func (m *BasicAuth_Apr) Reset()         { *m = BasicAuth_Apr{} }
func (m *BasicAuth_Apr) String() string { return proto.CompactTextString(m) }
func (*BasicAuth_Apr) ProtoMessage()    {}
func (*BasicAuth_Apr) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f58f3ab230e4111, []int{1, 0}
}
func (m *BasicAuth_Apr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BasicAuth_Apr.Unmarshal(m, b)
}
func (m *BasicAuth_Apr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BasicAuth_Apr.Marshal(b, m, deterministic)
}
func (m *BasicAuth_Apr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BasicAuth_Apr.Merge(m, src)
}
func (m *BasicAuth_Apr) XXX_Size() int {
	return xxx_messageInfo_BasicAuth_Apr.Size(m)
}
func (m *BasicAuth_Apr) XXX_DiscardUnknown() {
	xxx_messageInfo_BasicAuth_Apr.DiscardUnknown(m)
}

var xxx_messageInfo_BasicAuth_Apr proto.InternalMessageInfo

func (m *BasicAuth_Apr) GetUsers() map[string]*BasicAuth_Apr_SaltedHashedPassword {
	if m != nil {
		return m.Users
	}
	return nil
}

type BasicAuth_Apr_SaltedHashedPassword struct {
	Salt                 string   `protobuf:"bytes,1,opt,name=salt,proto3" json:"salt,omitempty"`
	HashedPassword       string   `protobuf:"bytes,2,opt,name=hashed_password,json=hashedPassword,proto3" json:"hashed_password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BasicAuth_Apr_SaltedHashedPassword) Reset()         { *m = BasicAuth_Apr_SaltedHashedPassword{} }
func (m *BasicAuth_Apr_SaltedHashedPassword) String() string { return proto.CompactTextString(m) }
func (*BasicAuth_Apr_SaltedHashedPassword) ProtoMessage()    {}
func (*BasicAuth_Apr_SaltedHashedPassword) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f58f3ab230e4111, []int{1, 0, 0}
}
func (m *BasicAuth_Apr_SaltedHashedPassword) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BasicAuth_Apr_SaltedHashedPassword.Unmarshal(m, b)
}
func (m *BasicAuth_Apr_SaltedHashedPassword) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BasicAuth_Apr_SaltedHashedPassword.Marshal(b, m, deterministic)
}
func (m *BasicAuth_Apr_SaltedHashedPassword) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BasicAuth_Apr_SaltedHashedPassword.Merge(m, src)
}
func (m *BasicAuth_Apr_SaltedHashedPassword) XXX_Size() int {
	return xxx_messageInfo_BasicAuth_Apr_SaltedHashedPassword.Size(m)
}
func (m *BasicAuth_Apr_SaltedHashedPassword) XXX_DiscardUnknown() {
	xxx_messageInfo_BasicAuth_Apr_SaltedHashedPassword.DiscardUnknown(m)
}

var xxx_messageInfo_BasicAuth_Apr_SaltedHashedPassword proto.InternalMessageInfo

func (m *BasicAuth_Apr_SaltedHashedPassword) GetSalt() string {
	if m != nil {
		return m.Salt
	}
	return ""
}

func (m *BasicAuth_Apr_SaltedHashedPassword) GetHashedPassword() string {
	if m != nil {
		return m.HashedPassword
	}
	return ""
}

type OAuth struct {
	// your client id as registered with the issuer
	ClientId string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	// your client secret as registered with the issuer
	ClientSecretRef *core.ResourceRef `protobuf:"bytes,2,opt,name=client_secret_ref,json=clientSecretRef,proto3" json:"client_secret_ref,omitempty"`
	// The url of the issuer. We will look for OIDC information in issuerUrl+
	// ".well-known/openid-configuration"
	IssuerUrl string `protobuf:"bytes,3,opt,name=issuer_url,json=issuerUrl,proto3" json:"issuer_url,omitempty"`
	// we to redirect after successful auth, if we can't determine the original
	// url this should be your publicly available app url.
	AppUrl string `protobuf:"bytes,4,opt,name=app_url,json=appUrl,proto3" json:"app_url,omitempty"`
	// a callback path relative to app url that will be used for OIDC callbacks.
	// needs to not be used by the application
	CallbackPath         string   `protobuf:"bytes,5,opt,name=callback_path,json=callbackPath,proto3" json:"callback_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OAuth) Reset()         { *m = OAuth{} }
func (m *OAuth) String() string { return proto.CompactTextString(m) }
func (*OAuth) ProtoMessage()    {}
func (*OAuth) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f58f3ab230e4111, []int{2}
}
func (m *OAuth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OAuth.Unmarshal(m, b)
}
func (m *OAuth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OAuth.Marshal(b, m, deterministic)
}
func (m *OAuth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OAuth.Merge(m, src)
}
func (m *OAuth) XXX_Size() int {
	return xxx_messageInfo_OAuth.Size(m)
}
func (m *OAuth) XXX_DiscardUnknown() {
	xxx_messageInfo_OAuth.DiscardUnknown(m)
}

var xxx_messageInfo_OAuth proto.InternalMessageInfo

func (m *OAuth) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *OAuth) GetClientSecretRef() *core.ResourceRef {
	if m != nil {
		return m.ClientSecretRef
	}
	return nil
}

func (m *OAuth) GetIssuerUrl() string {
	if m != nil {
		return m.IssuerUrl
	}
	return ""
}

func (m *OAuth) GetAppUrl() string {
	if m != nil {
		return m.AppUrl
	}
	return ""
}

func (m *OAuth) GetCallbackPath() string {
	if m != nil {
		return m.CallbackPath
	}
	return ""
}

type OauthSecret struct {
	ClientSecret         string   `protobuf:"bytes,1,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OauthSecret) Reset()         { *m = OauthSecret{} }
func (m *OauthSecret) String() string { return proto.CompactTextString(m) }
func (*OauthSecret) ProtoMessage()    {}
func (*OauthSecret) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f58f3ab230e4111, []int{3}
}
func (m *OauthSecret) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OauthSecret.Unmarshal(m, b)
}
func (m *OauthSecret) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OauthSecret.Marshal(b, m, deterministic)
}
func (m *OauthSecret) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OauthSecret.Merge(m, src)
}
func (m *OauthSecret) XXX_Size() int {
	return xxx_messageInfo_OauthSecret.Size(m)
}
func (m *OauthSecret) XXX_DiscardUnknown() {
	xxx_messageInfo_OauthSecret.DiscardUnknown(m)
}

var xxx_messageInfo_OauthSecret proto.InternalMessageInfo

func (m *OauthSecret) GetClientSecret() string {
	if m != nil {
		return m.ClientSecret
	}
	return ""
}

type VhostExtension struct {
	// Types that are valid to be assigned to AuthConfig:
	//	*VhostExtension_BasicAuth
	//	*VhostExtension_Oauth
	AuthConfig           isVhostExtension_AuthConfig `protobuf_oneof:"auth_config"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *VhostExtension) Reset()         { *m = VhostExtension{} }
func (m *VhostExtension) String() string { return proto.CompactTextString(m) }
func (*VhostExtension) ProtoMessage()    {}
func (*VhostExtension) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f58f3ab230e4111, []int{4}
}
func (m *VhostExtension) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VhostExtension.Unmarshal(m, b)
}
func (m *VhostExtension) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VhostExtension.Marshal(b, m, deterministic)
}
func (m *VhostExtension) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VhostExtension.Merge(m, src)
}
func (m *VhostExtension) XXX_Size() int {
	return xxx_messageInfo_VhostExtension.Size(m)
}
func (m *VhostExtension) XXX_DiscardUnknown() {
	xxx_messageInfo_VhostExtension.DiscardUnknown(m)
}

var xxx_messageInfo_VhostExtension proto.InternalMessageInfo

type isVhostExtension_AuthConfig interface {
	isVhostExtension_AuthConfig()
	Equal(interface{}) bool
}

type VhostExtension_BasicAuth struct {
	BasicAuth *BasicAuth `protobuf:"bytes,1,opt,name=basic_auth,json=basicAuth,proto3,oneof"`
}
type VhostExtension_Oauth struct {
	Oauth *OAuth `protobuf:"bytes,2,opt,name=oauth,proto3,oneof"`
}

func (*VhostExtension_BasicAuth) isVhostExtension_AuthConfig() {}
func (*VhostExtension_Oauth) isVhostExtension_AuthConfig()     {}

func (m *VhostExtension) GetAuthConfig() isVhostExtension_AuthConfig {
	if m != nil {
		return m.AuthConfig
	}
	return nil
}

func (m *VhostExtension) GetBasicAuth() *BasicAuth {
	if x, ok := m.GetAuthConfig().(*VhostExtension_BasicAuth); ok {
		return x.BasicAuth
	}
	return nil
}

func (m *VhostExtension) GetOauth() *OAuth {
	if x, ok := m.GetAuthConfig().(*VhostExtension_Oauth); ok {
		return x.Oauth
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*VhostExtension) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _VhostExtension_OneofMarshaler, _VhostExtension_OneofUnmarshaler, _VhostExtension_OneofSizer, []interface{}{
		(*VhostExtension_BasicAuth)(nil),
		(*VhostExtension_Oauth)(nil),
	}
}

func _VhostExtension_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*VhostExtension)
	// auth_config
	switch x := m.AuthConfig.(type) {
	case *VhostExtension_BasicAuth:
		_ = b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BasicAuth); err != nil {
			return err
		}
	case *VhostExtension_Oauth:
		_ = b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Oauth); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("VhostExtension.AuthConfig has unexpected type %T", x)
	}
	return nil
}

func _VhostExtension_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*VhostExtension)
	switch tag {
	case 1: // auth_config.basic_auth
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BasicAuth)
		err := b.DecodeMessage(msg)
		m.AuthConfig = &VhostExtension_BasicAuth{msg}
		return true, err
	case 2: // auth_config.oauth
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(OAuth)
		err := b.DecodeMessage(msg)
		m.AuthConfig = &VhostExtension_Oauth{msg}
		return true, err
	default:
		return false, nil
	}
}

func _VhostExtension_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*VhostExtension)
	// auth_config
	switch x := m.AuthConfig.(type) {
	case *VhostExtension_BasicAuth:
		s := proto.Size(x.BasicAuth)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *VhostExtension_Oauth:
		s := proto.Size(x.Oauth)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type RouteExtension struct {
	Disable              bool     `protobuf:"varint,1,opt,name=disable,proto3" json:"disable,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RouteExtension) Reset()         { *m = RouteExtension{} }
func (m *RouteExtension) String() string { return proto.CompactTextString(m) }
func (*RouteExtension) ProtoMessage()    {}
func (*RouteExtension) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f58f3ab230e4111, []int{5}
}
func (m *RouteExtension) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RouteExtension.Unmarshal(m, b)
}
func (m *RouteExtension) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RouteExtension.Marshal(b, m, deterministic)
}
func (m *RouteExtension) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RouteExtension.Merge(m, src)
}
func (m *RouteExtension) XXX_Size() int {
	return xxx_messageInfo_RouteExtension.Size(m)
}
func (m *RouteExtension) XXX_DiscardUnknown() {
	xxx_messageInfo_RouteExtension.DiscardUnknown(m)
}

var xxx_messageInfo_RouteExtension proto.InternalMessageInfo

func (m *RouteExtension) GetDisable() bool {
	if m != nil {
		return m.Disable
	}
	return false
}

//
//@solo-kit:xds-service=ExtAuthDiscoveryService
//@solo-kit:resource.no_references
type ExtAuthConfig struct {
	// @solo-kit:resource.name
	Vhost string `protobuf:"bytes,1,opt,name=vhost,proto3" json:"vhost,omitempty"`
	// Types that are valid to be assigned to AuthConfig:
	//	*ExtAuthConfig_Oauth
	//	*ExtAuthConfig_BasicAuth
	AuthConfig           isExtAuthConfig_AuthConfig `protobuf_oneof:"auth_config"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *ExtAuthConfig) Reset()         { *m = ExtAuthConfig{} }
func (m *ExtAuthConfig) String() string { return proto.CompactTextString(m) }
func (*ExtAuthConfig) ProtoMessage()    {}
func (*ExtAuthConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f58f3ab230e4111, []int{6}
}
func (m *ExtAuthConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExtAuthConfig.Unmarshal(m, b)
}
func (m *ExtAuthConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExtAuthConfig.Marshal(b, m, deterministic)
}
func (m *ExtAuthConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExtAuthConfig.Merge(m, src)
}
func (m *ExtAuthConfig) XXX_Size() int {
	return xxx_messageInfo_ExtAuthConfig.Size(m)
}
func (m *ExtAuthConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ExtAuthConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ExtAuthConfig proto.InternalMessageInfo

type isExtAuthConfig_AuthConfig interface {
	isExtAuthConfig_AuthConfig()
	Equal(interface{}) bool
}

type ExtAuthConfig_Oauth struct {
	Oauth *ExtAuthConfig_OAuthConfig `protobuf:"bytes,3,opt,name=oauth,proto3,oneof"`
}
type ExtAuthConfig_BasicAuth struct {
	BasicAuth *BasicAuth `protobuf:"bytes,4,opt,name=basic_auth,json=basicAuth,proto3,oneof"`
}

func (*ExtAuthConfig_Oauth) isExtAuthConfig_AuthConfig()     {}
func (*ExtAuthConfig_BasicAuth) isExtAuthConfig_AuthConfig() {}

func (m *ExtAuthConfig) GetAuthConfig() isExtAuthConfig_AuthConfig {
	if m != nil {
		return m.AuthConfig
	}
	return nil
}

func (m *ExtAuthConfig) GetVhost() string {
	if m != nil {
		return m.Vhost
	}
	return ""
}

func (m *ExtAuthConfig) GetOauth() *ExtAuthConfig_OAuthConfig {
	if x, ok := m.GetAuthConfig().(*ExtAuthConfig_Oauth); ok {
		return x.Oauth
	}
	return nil
}

func (m *ExtAuthConfig) GetBasicAuth() *BasicAuth {
	if x, ok := m.GetAuthConfig().(*ExtAuthConfig_BasicAuth); ok {
		return x.BasicAuth
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ExtAuthConfig) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ExtAuthConfig_OneofMarshaler, _ExtAuthConfig_OneofUnmarshaler, _ExtAuthConfig_OneofSizer, []interface{}{
		(*ExtAuthConfig_Oauth)(nil),
		(*ExtAuthConfig_BasicAuth)(nil),
	}
}

func _ExtAuthConfig_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ExtAuthConfig)
	// auth_config
	switch x := m.AuthConfig.(type) {
	case *ExtAuthConfig_Oauth:
		_ = b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Oauth); err != nil {
			return err
		}
	case *ExtAuthConfig_BasicAuth:
		_ = b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BasicAuth); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ExtAuthConfig.AuthConfig has unexpected type %T", x)
	}
	return nil
}

func _ExtAuthConfig_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ExtAuthConfig)
	switch tag {
	case 3: // auth_config.oauth
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ExtAuthConfig_OAuthConfig)
		err := b.DecodeMessage(msg)
		m.AuthConfig = &ExtAuthConfig_Oauth{msg}
		return true, err
	case 4: // auth_config.basic_auth
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BasicAuth)
		err := b.DecodeMessage(msg)
		m.AuthConfig = &ExtAuthConfig_BasicAuth{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ExtAuthConfig_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ExtAuthConfig)
	// auth_config
	switch x := m.AuthConfig.(type) {
	case *ExtAuthConfig_Oauth:
		s := proto.Size(x.Oauth)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ExtAuthConfig_BasicAuth:
		s := proto.Size(x.BasicAuth)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ExtAuthConfig_OAuthConfig struct {
	// your client id as registered with the issuer
	ClientId string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	// your client secret as registered with the issuer
	ClientSecret string `protobuf:"bytes,2,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
	// The url of the issuer. We will look for OIDC information in issuerUrl+
	// ".well-known/openid-configuration"
	IssuerUrl string `protobuf:"bytes,3,opt,name=issuer_url,json=issuerUrl,proto3" json:"issuer_url,omitempty"`
	// we to redirect after successful auth, if we can't determine the original
	// url this should be your publicly available app url.
	AppUrl string `protobuf:"bytes,4,opt,name=app_url,json=appUrl,proto3" json:"app_url,omitempty"`
	// a callback path relative to app url that will be used for OIDC callbacks.
	// needs to not be used by the application
	CallbackPath         string   `protobuf:"bytes,5,opt,name=callback_path,json=callbackPath,proto3" json:"callback_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExtAuthConfig_OAuthConfig) Reset()         { *m = ExtAuthConfig_OAuthConfig{} }
func (m *ExtAuthConfig_OAuthConfig) String() string { return proto.CompactTextString(m) }
func (*ExtAuthConfig_OAuthConfig) ProtoMessage()    {}
func (*ExtAuthConfig_OAuthConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f58f3ab230e4111, []int{6, 0}
}
func (m *ExtAuthConfig_OAuthConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExtAuthConfig_OAuthConfig.Unmarshal(m, b)
}
func (m *ExtAuthConfig_OAuthConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExtAuthConfig_OAuthConfig.Marshal(b, m, deterministic)
}
func (m *ExtAuthConfig_OAuthConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExtAuthConfig_OAuthConfig.Merge(m, src)
}
func (m *ExtAuthConfig_OAuthConfig) XXX_Size() int {
	return xxx_messageInfo_ExtAuthConfig_OAuthConfig.Size(m)
}
func (m *ExtAuthConfig_OAuthConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ExtAuthConfig_OAuthConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ExtAuthConfig_OAuthConfig proto.InternalMessageInfo

func (m *ExtAuthConfig_OAuthConfig) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *ExtAuthConfig_OAuthConfig) GetClientSecret() string {
	if m != nil {
		return m.ClientSecret
	}
	return ""
}

func (m *ExtAuthConfig_OAuthConfig) GetIssuerUrl() string {
	if m != nil {
		return m.IssuerUrl
	}
	return ""
}

func (m *ExtAuthConfig_OAuthConfig) GetAppUrl() string {
	if m != nil {
		return m.AppUrl
	}
	return ""
}

func (m *ExtAuthConfig_OAuthConfig) GetCallbackPath() string {
	if m != nil {
		return m.CallbackPath
	}
	return ""
}

func init() {
	proto.RegisterType((*Settings)(nil), "extauth.plugins.gloo.solo.io.Settings")
	proto.RegisterType((*BasicAuth)(nil), "extauth.plugins.gloo.solo.io.BasicAuth")
	proto.RegisterType((*BasicAuth_Apr)(nil), "extauth.plugins.gloo.solo.io.BasicAuth.Apr")
	proto.RegisterMapType((map[string]*BasicAuth_Apr_SaltedHashedPassword)(nil), "extauth.plugins.gloo.solo.io.BasicAuth.Apr.UsersEntry")
	proto.RegisterType((*BasicAuth_Apr_SaltedHashedPassword)(nil), "extauth.plugins.gloo.solo.io.BasicAuth.Apr.SaltedHashedPassword")
	proto.RegisterType((*OAuth)(nil), "extauth.plugins.gloo.solo.io.OAuth")
	proto.RegisterType((*OauthSecret)(nil), "extauth.plugins.gloo.solo.io.OauthSecret")
	proto.RegisterType((*VhostExtension)(nil), "extauth.plugins.gloo.solo.io.VhostExtension")
	proto.RegisterType((*RouteExtension)(nil), "extauth.plugins.gloo.solo.io.RouteExtension")
	proto.RegisterType((*ExtAuthConfig)(nil), "extauth.plugins.gloo.solo.io.ExtAuthConfig")
	proto.RegisterType((*ExtAuthConfig_OAuthConfig)(nil), "extauth.plugins.gloo.solo.io.ExtAuthConfig.OAuthConfig")
}

func init() {
	proto.RegisterFile("github.com/solo-io/solo-projects/projects/gloo/api/v1/plugins/extauth/extauth.proto", fileDescriptor_2f58f3ab230e4111)
}

var fileDescriptor_2f58f3ab230e4111 = []byte{
	// 873 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0x51, 0x6f, 0xdc, 0x44,
	0x10, 0xae, 0x7d, 0xb9, 0x36, 0x37, 0xd7, 0x24, 0x64, 0x1b, 0xa9, 0xc7, 0xb5, 0x94, 0xc8, 0x45,
	0x34, 0x04, 0xf0, 0x95, 0x43, 0x02, 0x14, 0x84, 0x44, 0x02, 0x41, 0x17, 0x81, 0x74, 0x95, 0x4f,
	0xe9, 0x03, 0x42, 0xb2, 0xf6, 0xec, 0x39, 0x7b, 0x89, 0xe3, 0x35, 0xbb, 0xeb, 0x6b, 0x52, 0x89,
	0x17, 0x5e, 0xf8, 0x01, 0xfc, 0x05, 0x84, 0x78, 0xe0, 0x57, 0xf0, 0xc4, 0x3b, 0xff, 0x00, 0xf1,
	0xce, 0x3f, 0x40, 0x68, 0x77, 0xed, 0x6b, 0x2e, 0x47, 0x42, 0x83, 0xe0, 0xc9, 0xbb, 0x33, 0xf3,
	0x7d, 0xf3, 0xed, 0xcc, 0xd8, 0x6b, 0x18, 0x25, 0x4c, 0xa5, 0xe5, 0xd8, 0x8f, 0xf8, 0x71, 0x4f,
	0xf2, 0x8c, 0xbf, 0xc9, 0xb8, 0x7d, 0x16, 0x82, 0x7f, 0x89, 0x91, 0x92, 0xbd, 0xd9, 0x22, 0xc9,
	0x38, 0xef, 0xd1, 0x82, 0xf5, 0xa6, 0x6f, 0xf5, 0x8a, 0xac, 0x4c, 0x58, 0x2e, 0x7b, 0x78, 0xa2,
	0x68, 0xa9, 0xd2, 0xfa, 0xe9, 0x17, 0x82, 0x2b, 0x4e, 0xee, 0xce, 0xb6, 0x36, 0xcc, 0xd7, 0x50,
	0x5f, 0xd3, 0xfa, 0x8c, 0x77, 0xdf, 0xb8, 0x28, 0xe5, 0x11, 0x53, 0x35, 0xbf, 0xc0, 0x89, 0xe5,
	0xea, 0x6e, 0x24, 0x3c, 0xe1, 0x66, 0xd9, 0xd3, 0xab, 0xca, 0x7a, 0x17, 0xf3, 0x29, 0x3f, 0xb5,
	0xd1, 0xfd, 0x5e, 0xcc, 0x64, 0xc4, 0xa7, 0x28, 0x4e, 0x6b, 0x6f, 0xc2, 0x79, 0x92, 0xa1, 0x71,
	0xd3, 0x3c, 0xe7, 0x8a, 0x2a, 0xc6, 0x73, 0x69, 0xbd, 0xde, 0xcf, 0x0e, 0x2c, 0x8f, 0x50, 0x29,
	0x96, 0x27, 0x92, 0x7c, 0x0a, 0xb7, 0x2a, 0xb1, 0x4f, 0x43, 0x89, 0x62, 0x8a, 0x22, 0x14, 0x38,
	0xe9, 0x38, 0x9b, 0xce, 0x56, 0xbb, 0xff, 0xa2, 0x1f, 0x71, 0x81, 0xb5, 0x70, 0x3f, 0x40, 0xc9,
	0x4b, 0x11, 0x61, 0x80, 0x93, 0xc1, 0xb5, 0x60, 0xbd, 0xc6, 0x8d, 0x0c, 0x2c, 0xc0, 0x09, 0x79,
	0xb8, 0x48, 0x56, 0x0a, 0xd6, 0x71, 0x37, 0x9d, 0xad, 0xd6, 0x22, 0xe2, 0x50, 0x30, 0xf2, 0x0a,
	0xac, 0x96, 0x12, 0x45, 0xc8, 0xe2, 0x30, 0x45, 0x1a, 0xa3, 0xe8, 0x34, 0x74, 0x70, 0x70, 0x53,
	0x5b, 0x0f, 0xe2, 0x81, 0xb1, 0xed, 0xad, 0xc3, 0xda, 0x39, 0x5e, 0xef, 0xdb, 0x06, 0xb4, 0xf6,
	0xa8, 0x64, 0xd1, 0x6e, 0xa9, 0x52, 0xb2, 0x01, 0x4d, 0x81, 0x34, 0x3b, 0x36, 0xba, 0x5b, 0x81,
	0xdd, 0x90, 0x0f, 0xa0, 0x41, 0x0b, 0x61, 0xd2, 0xb7, 0xfb, 0xaf, 0xfb, 0x97, 0x35, 0xc5, 0x9f,
	0x71, 0xf9, 0xbb, 0x85, 0x08, 0x34, 0xae, 0xfb, 0xbd, 0x0b, 0x8d, 0xdd, 0x42, 0x90, 0xcf, 0xa0,
	0xa9, 0xd5, 0xc8, 0x8e, 0xbb, 0xd9, 0xd8, 0x6a, 0xf7, 0xdf, 0xb9, 0x02, 0x91, 0x7f, 0xa8, 0x81,
	0xfb, 0xb9, 0x12, 0xa7, 0x81, 0x25, 0xe9, 0x8e, 0x60, 0x63, 0x44, 0x33, 0x85, 0xf1, 0x80, 0xca,
	0x14, 0xe3, 0x47, 0x54, 0xca, 0x27, 0x5c, 0xc4, 0x84, 0xc0, 0x92, 0xa4, 0x99, 0xaa, 0x4e, 0x60,
	0xd6, 0xe4, 0x01, 0xac, 0xa5, 0x26, 0x2a, 0x2c, 0xaa, 0x30, 0x5b, 0xcb, 0x60, 0x35, 0x9d, 0x03,
	0x77, 0x9f, 0x02, 0x3c, 0xcb, 0x44, 0x5e, 0x80, 0xc6, 0x11, 0x9e, 0x56, 0x4c, 0x7a, 0x49, 0x1e,
	0x43, 0x73, 0x4a, 0xb3, 0x12, 0xab, 0x5a, 0x7c, 0x78, 0x95, 0x23, 0xfc, 0x9d, 0xda, 0xc0, 0xd2,
	0xed, 0xb8, 0xef, 0x39, 0xde, 0x2f, 0x0e, 0x34, 0x87, 0xa6, 0x0b, 0x77, 0xa0, 0x15, 0x65, 0x0c,
	0x73, 0x15, 0xb2, 0xb8, 0xca, 0xbe, 0x6c, 0x0d, 0x07, 0x31, 0xd9, 0x87, 0xf5, 0xca, 0x29, 0x31,
	0x12, 0xa8, 0xcc, 0x98, 0xb9, 0xff, 0x30, 0x66, 0xc1, 0x9a, 0xc5, 0x8c, 0x0c, 0x44, 0x8f, 0xd8,
	0x4b, 0x00, 0x4c, 0xca, 0xd2, 0x4c, 0x56, 0x56, 0x0d, 0x4b, 0xcb, 0x5a, 0x0e, 0x45, 0x46, 0x6e,
	0xc3, 0x0d, 0x5a, 0x14, 0xc6, 0xb7, 0x64, 0x7c, 0xd7, 0x69, 0x51, 0x68, 0xc7, 0x7d, 0x58, 0x89,
	0x68, 0x96, 0x8d, 0x69, 0x74, 0x14, 0x16, 0x54, 0xa5, 0x9d, 0xa6, 0x9d, 0xb3, 0xda, 0xf8, 0x88,
	0xaa, 0xd4, 0xeb, 0x43, 0x7b, 0xa8, 0xcb, 0x62, 0xd3, 0x19, 0xcc, 0x59, 0xc9, 0xd5, 0x99, 0x6e,
	0x9e, 0xd5, 0xe4, 0xfd, 0xe0, 0xc0, 0xea, 0xe3, 0x94, 0x4b, 0xb5, 0x7f, 0xa2, 0x30, 0x97, 0x8c,
	0xe7, 0x64, 0x00, 0x30, 0xd6, 0x25, 0x0c, 0x35, 0x57, 0xf5, 0x2a, 0x3d, 0x78, 0xce, 0x92, 0x0f,
	0xae, 0x05, 0xad, 0xf1, 0x6c, 0xae, 0xdf, 0x87, 0x26, 0x37, 0x24, 0xb6, 0x50, 0xf7, 0x2f, 0x27,
	0x19, 0x56, 0x04, 0x16, 0xb3, 0xb7, 0x02, 0x6d, 0xfd, 0x0c, 0x23, 0x9e, 0x4f, 0x58, 0xe2, 0x6d,
	0xc3, 0x6a, 0xc0, 0x4b, 0x85, 0xcf, 0x74, 0x76, 0xe0, 0x46, 0xcc, 0x24, 0x1d, 0x67, 0x68, 0x44,
	0x2e, 0x07, 0xf5, 0xd6, 0xfb, 0xd3, 0x85, 0x95, 0xfd, 0x13, 0xa5, 0xf9, 0x3e, 0x32, 0x68, 0xfd,
	0x86, 0x4d, 0xf5, 0x29, 0xeb, 0x37, 0xcc, 0x6c, 0xc8, 0xb0, 0xd6, 0xd7, 0x30, 0xfa, 0xde, 0xbd,
	0x5c, 0xdf, 0x1c, 0xa3, 0x55, 0x6b, 0xd7, 0x33, 0xcd, 0xe7, 0x4a, 0xb7, 0xf4, 0xef, 0x4b, 0xd7,
	0xfd, 0xc9, 0x81, 0xf6, 0x99, 0x14, 0x97, 0x0f, 0xe7, 0x42, 0xa7, 0xdd, 0xc5, 0x4e, 0xff, 0xaf,
	0xa3, 0x77, 0xae, 0x59, 0xfd, 0x3f, 0x5c, 0xb8, 0x5d, 0x95, 0xeb, 0xe3, 0xfa, 0xe3, 0xae, 0xbf,
	0x9a, 0x2c, 0x42, 0xf2, 0x05, 0xdc, 0x1a, 0x29, 0x81, 0xf4, 0x78, 0xbe, 0x43, 0xf7, 0x7c, 0x73,
	0x27, 0xf8, 0xb4, 0x60, 0xfe, 0xb4, 0xef, 0xcf, 0x60, 0x01, 0x7e, 0x55, 0xa2, 0x54, 0xdd, 0x97,
	0x2f, 0xf4, 0xcb, 0x82, 0xe7, 0x12, 0xbd, 0x6b, 0x5b, 0xce, 0x43, 0x87, 0x3c, 0x81, 0xce, 0x41,
	0x1e, 0x09, 0x3c, 0xc6, 0x5c, 0xd1, 0x6c, 0x3e, 0xc5, 0x6b, 0xf3, 0x14, 0x67, 0xe2, 0x16, 0xb2,
	0x6d, 0x3f, 0x4f, 0xe8, 0x5c, 0xe2, 0xaf, 0x81, 0x7c, 0x82, 0x2a, 0x4a, 0xff, 0xe3, 0x53, 0xbd,
	0xfa, 0xcd, 0xaf, 0xbf, 0x7f, 0xe7, 0x6e, 0x7a, 0x77, 0xe6, 0x2e, 0xca, 0x9d, 0x6a, 0xa4, 0x6c,
	0xb9, 0x77, 0x9c, 0xed, 0xbd, 0xe1, 0x8f, 0xbf, 0xdd, 0x73, 0x3e, 0x3f, 0xb8, 0xe2, 0xef, 0x40,
	0x71, 0x94, 0x5c, 0xf0, 0x4b, 0x30, 0xbe, 0x6e, 0x6e, 0xdb, 0xb7, 0xff, 0x0a, 0x00, 0x00, 0xff,
	0xff, 0xfd, 0x31, 0x7d, 0x01, 0x62, 0x08, 0x00, 0x00,
}

func (this *Settings) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Settings)
	if !ok {
		that2, ok := that.(Settings)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if that1.ExtauthzServer == nil {
		if this.ExtauthzServer != nil {
			return false
		}
	} else if this.ExtauthzServer == nil {
		return false
	} else if !this.ExtauthzServer.Equal(that1.ExtauthzServer) {
		return false
	}
	if this.UserIdHeader != that1.UserIdHeader {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *Settings_ExtauthzServerRef) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Settings_ExtauthzServerRef)
	if !ok {
		that2, ok := that.(Settings_ExtauthzServerRef)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ExtauthzServerRef.Equal(that1.ExtauthzServerRef) {
		return false
	}
	return true
}
func (this *Settings_ExtauthzServerUri) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Settings_ExtauthzServerUri)
	if !ok {
		that2, ok := that.(Settings_ExtauthzServerUri)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.ExtauthzServerUri != that1.ExtauthzServerUri {
		return false
	}
	return true
}
func (this *BasicAuth) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*BasicAuth)
	if !ok {
		that2, ok := that.(BasicAuth)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Realm != that1.Realm {
		return false
	}
	if !this.Apr.Equal(that1.Apr) {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *BasicAuth_Apr) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*BasicAuth_Apr)
	if !ok {
		that2, ok := that.(BasicAuth_Apr)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Users) != len(that1.Users) {
		return false
	}
	for i := range this.Users {
		if !this.Users[i].Equal(that1.Users[i]) {
			return false
		}
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *BasicAuth_Apr_SaltedHashedPassword) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*BasicAuth_Apr_SaltedHashedPassword)
	if !ok {
		that2, ok := that.(BasicAuth_Apr_SaltedHashedPassword)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Salt != that1.Salt {
		return false
	}
	if this.HashedPassword != that1.HashedPassword {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *OAuth) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*OAuth)
	if !ok {
		that2, ok := that.(OAuth)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.ClientId != that1.ClientId {
		return false
	}
	if !this.ClientSecretRef.Equal(that1.ClientSecretRef) {
		return false
	}
	if this.IssuerUrl != that1.IssuerUrl {
		return false
	}
	if this.AppUrl != that1.AppUrl {
		return false
	}
	if this.CallbackPath != that1.CallbackPath {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *OauthSecret) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*OauthSecret)
	if !ok {
		that2, ok := that.(OauthSecret)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.ClientSecret != that1.ClientSecret {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *VhostExtension) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*VhostExtension)
	if !ok {
		that2, ok := that.(VhostExtension)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if that1.AuthConfig == nil {
		if this.AuthConfig != nil {
			return false
		}
	} else if this.AuthConfig == nil {
		return false
	} else if !this.AuthConfig.Equal(that1.AuthConfig) {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *VhostExtension_BasicAuth) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*VhostExtension_BasicAuth)
	if !ok {
		that2, ok := that.(VhostExtension_BasicAuth)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.BasicAuth.Equal(that1.BasicAuth) {
		return false
	}
	return true
}
func (this *VhostExtension_Oauth) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*VhostExtension_Oauth)
	if !ok {
		that2, ok := that.(VhostExtension_Oauth)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Oauth.Equal(that1.Oauth) {
		return false
	}
	return true
}
func (this *RouteExtension) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*RouteExtension)
	if !ok {
		that2, ok := that.(RouteExtension)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Disable != that1.Disable {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *ExtAuthConfig) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ExtAuthConfig)
	if !ok {
		that2, ok := that.(ExtAuthConfig)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Vhost != that1.Vhost {
		return false
	}
	if that1.AuthConfig == nil {
		if this.AuthConfig != nil {
			return false
		}
	} else if this.AuthConfig == nil {
		return false
	} else if !this.AuthConfig.Equal(that1.AuthConfig) {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *ExtAuthConfig_Oauth) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ExtAuthConfig_Oauth)
	if !ok {
		that2, ok := that.(ExtAuthConfig_Oauth)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Oauth.Equal(that1.Oauth) {
		return false
	}
	return true
}
func (this *ExtAuthConfig_BasicAuth) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ExtAuthConfig_BasicAuth)
	if !ok {
		that2, ok := that.(ExtAuthConfig_BasicAuth)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.BasicAuth.Equal(that1.BasicAuth) {
		return false
	}
	return true
}
func (this *ExtAuthConfig_OAuthConfig) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ExtAuthConfig_OAuthConfig)
	if !ok {
		that2, ok := that.(ExtAuthConfig_OAuthConfig)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.ClientId != that1.ClientId {
		return false
	}
	if this.ClientSecret != that1.ClientSecret {
		return false
	}
	if this.IssuerUrl != that1.IssuerUrl {
		return false
	}
	if this.AppUrl != that1.AppUrl {
		return false
	}
	if this.CallbackPath != that1.CallbackPath {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ExtAuthDiscoveryServiceClient is the client API for ExtAuthDiscoveryService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ExtAuthDiscoveryServiceClient interface {
	StreamExtAuthConfig(ctx context.Context, opts ...grpc.CallOption) (ExtAuthDiscoveryService_StreamExtAuthConfigClient, error)
	IncrementalExtAuthConfig(ctx context.Context, opts ...grpc.CallOption) (ExtAuthDiscoveryService_IncrementalExtAuthConfigClient, error)
	FetchExtAuthConfig(ctx context.Context, in *v2.DiscoveryRequest, opts ...grpc.CallOption) (*v2.DiscoveryResponse, error)
}

type extAuthDiscoveryServiceClient struct {
	cc *grpc.ClientConn
}

func NewExtAuthDiscoveryServiceClient(cc *grpc.ClientConn) ExtAuthDiscoveryServiceClient {
	return &extAuthDiscoveryServiceClient{cc}
}

func (c *extAuthDiscoveryServiceClient) StreamExtAuthConfig(ctx context.Context, opts ...grpc.CallOption) (ExtAuthDiscoveryService_StreamExtAuthConfigClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ExtAuthDiscoveryService_serviceDesc.Streams[0], "/extauth.plugins.gloo.solo.io.ExtAuthDiscoveryService/StreamExtAuthConfig", opts...)
	if err != nil {
		return nil, err
	}
	x := &extAuthDiscoveryServiceStreamExtAuthConfigClient{stream}
	return x, nil
}

type ExtAuthDiscoveryService_StreamExtAuthConfigClient interface {
	Send(*v2.DiscoveryRequest) error
	Recv() (*v2.DiscoveryResponse, error)
	grpc.ClientStream
}

type extAuthDiscoveryServiceStreamExtAuthConfigClient struct {
	grpc.ClientStream
}

func (x *extAuthDiscoveryServiceStreamExtAuthConfigClient) Send(m *v2.DiscoveryRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *extAuthDiscoveryServiceStreamExtAuthConfigClient) Recv() (*v2.DiscoveryResponse, error) {
	m := new(v2.DiscoveryResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *extAuthDiscoveryServiceClient) IncrementalExtAuthConfig(ctx context.Context, opts ...grpc.CallOption) (ExtAuthDiscoveryService_IncrementalExtAuthConfigClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ExtAuthDiscoveryService_serviceDesc.Streams[1], "/extauth.plugins.gloo.solo.io.ExtAuthDiscoveryService/IncrementalExtAuthConfig", opts...)
	if err != nil {
		return nil, err
	}
	x := &extAuthDiscoveryServiceIncrementalExtAuthConfigClient{stream}
	return x, nil
}

type ExtAuthDiscoveryService_IncrementalExtAuthConfigClient interface {
	Send(*v2.IncrementalDiscoveryRequest) error
	Recv() (*v2.IncrementalDiscoveryResponse, error)
	grpc.ClientStream
}

type extAuthDiscoveryServiceIncrementalExtAuthConfigClient struct {
	grpc.ClientStream
}

func (x *extAuthDiscoveryServiceIncrementalExtAuthConfigClient) Send(m *v2.IncrementalDiscoveryRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *extAuthDiscoveryServiceIncrementalExtAuthConfigClient) Recv() (*v2.IncrementalDiscoveryResponse, error) {
	m := new(v2.IncrementalDiscoveryResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *extAuthDiscoveryServiceClient) FetchExtAuthConfig(ctx context.Context, in *v2.DiscoveryRequest, opts ...grpc.CallOption) (*v2.DiscoveryResponse, error) {
	out := new(v2.DiscoveryResponse)
	err := c.cc.Invoke(ctx, "/extauth.plugins.gloo.solo.io.ExtAuthDiscoveryService/FetchExtAuthConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ExtAuthDiscoveryServiceServer is the server API for ExtAuthDiscoveryService service.
type ExtAuthDiscoveryServiceServer interface {
	StreamExtAuthConfig(ExtAuthDiscoveryService_StreamExtAuthConfigServer) error
	IncrementalExtAuthConfig(ExtAuthDiscoveryService_IncrementalExtAuthConfigServer) error
	FetchExtAuthConfig(context.Context, *v2.DiscoveryRequest) (*v2.DiscoveryResponse, error)
}

func RegisterExtAuthDiscoveryServiceServer(s *grpc.Server, srv ExtAuthDiscoveryServiceServer) {
	s.RegisterService(&_ExtAuthDiscoveryService_serviceDesc, srv)
}

func _ExtAuthDiscoveryService_StreamExtAuthConfig_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ExtAuthDiscoveryServiceServer).StreamExtAuthConfig(&extAuthDiscoveryServiceStreamExtAuthConfigServer{stream})
}

type ExtAuthDiscoveryService_StreamExtAuthConfigServer interface {
	Send(*v2.DiscoveryResponse) error
	Recv() (*v2.DiscoveryRequest, error)
	grpc.ServerStream
}

type extAuthDiscoveryServiceStreamExtAuthConfigServer struct {
	grpc.ServerStream
}

func (x *extAuthDiscoveryServiceStreamExtAuthConfigServer) Send(m *v2.DiscoveryResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *extAuthDiscoveryServiceStreamExtAuthConfigServer) Recv() (*v2.DiscoveryRequest, error) {
	m := new(v2.DiscoveryRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _ExtAuthDiscoveryService_IncrementalExtAuthConfig_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ExtAuthDiscoveryServiceServer).IncrementalExtAuthConfig(&extAuthDiscoveryServiceIncrementalExtAuthConfigServer{stream})
}

type ExtAuthDiscoveryService_IncrementalExtAuthConfigServer interface {
	Send(*v2.IncrementalDiscoveryResponse) error
	Recv() (*v2.IncrementalDiscoveryRequest, error)
	grpc.ServerStream
}

type extAuthDiscoveryServiceIncrementalExtAuthConfigServer struct {
	grpc.ServerStream
}

func (x *extAuthDiscoveryServiceIncrementalExtAuthConfigServer) Send(m *v2.IncrementalDiscoveryResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *extAuthDiscoveryServiceIncrementalExtAuthConfigServer) Recv() (*v2.IncrementalDiscoveryRequest, error) {
	m := new(v2.IncrementalDiscoveryRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _ExtAuthDiscoveryService_FetchExtAuthConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(v2.DiscoveryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExtAuthDiscoveryServiceServer).FetchExtAuthConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/extauth.plugins.gloo.solo.io.ExtAuthDiscoveryService/FetchExtAuthConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExtAuthDiscoveryServiceServer).FetchExtAuthConfig(ctx, req.(*v2.DiscoveryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ExtAuthDiscoveryService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "extauth.plugins.gloo.solo.io.ExtAuthDiscoveryService",
	HandlerType: (*ExtAuthDiscoveryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FetchExtAuthConfig",
			Handler:    _ExtAuthDiscoveryService_FetchExtAuthConfig_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StreamExtAuthConfig",
			Handler:       _ExtAuthDiscoveryService_StreamExtAuthConfig_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "IncrementalExtAuthConfig",
			Handler:       _ExtAuthDiscoveryService_IncrementalExtAuthConfig_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "github.com/solo-io/solo-projects/projects/gloo/api/v1/plugins/extauth/extauth.proto",
}
