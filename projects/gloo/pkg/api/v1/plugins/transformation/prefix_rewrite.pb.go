// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: plugins/transformation/prefix_rewrite.proto

package transformation // import "github.com/solo-io/solo-projects/projects/gloo/pkg/api/v1/plugins/transformation"

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"

import bytes "bytes"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// if set, prefix_rewrite will be used to rewrite the matched HTTP Path prefix on requests to this value.
type PrefixRewrite struct {
	// Set to an empty string to remove the matched HTTP Path prefix
	PrefixRewrite        string   `protobuf:"bytes,1,opt,name=prefix_rewrite,json=prefixRewrite,proto3" json:"prefix_rewrite,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrefixRewrite) Reset()         { *m = PrefixRewrite{} }
func (m *PrefixRewrite) String() string { return proto.CompactTextString(m) }
func (*PrefixRewrite) ProtoMessage()    {}
func (*PrefixRewrite) Descriptor() ([]byte, []int) {
	return fileDescriptor_prefix_rewrite_d4dc520cf3557bb5, []int{0}
}
func (m *PrefixRewrite) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrefixRewrite.Unmarshal(m, b)
}
func (m *PrefixRewrite) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrefixRewrite.Marshal(b, m, deterministic)
}
func (dst *PrefixRewrite) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrefixRewrite.Merge(dst, src)
}
func (m *PrefixRewrite) XXX_Size() int {
	return xxx_messageInfo_PrefixRewrite.Size(m)
}
func (m *PrefixRewrite) XXX_DiscardUnknown() {
	xxx_messageInfo_PrefixRewrite.DiscardUnknown(m)
}

var xxx_messageInfo_PrefixRewrite proto.InternalMessageInfo

func (m *PrefixRewrite) GetPrefixRewrite() string {
	if m != nil {
		return m.PrefixRewrite
	}
	return ""
}

func init() {
	proto.RegisterType((*PrefixRewrite)(nil), "transformation.plugins.gloo.solo.io.PrefixRewrite")
}
func (this *PrefixRewrite) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*PrefixRewrite)
	if !ok {
		that2, ok := that.(PrefixRewrite)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.PrefixRewrite != that1.PrefixRewrite {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}

func init() {
	proto.RegisterFile("plugins/transformation/prefix_rewrite.proto", fileDescriptor_prefix_rewrite_d4dc520cf3557bb5)
}

var fileDescriptor_prefix_rewrite_d4dc520cf3557bb5 = []byte{
	// 188 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xd2, 0x2e, 0xc8, 0x29, 0x4d,
	0xcf, 0xcc, 0x2b, 0xd6, 0x2f, 0x29, 0x4a, 0xcc, 0x2b, 0x4e, 0xcb, 0x2f, 0xca, 0x4d, 0x2c, 0xc9,
	0xcc, 0xcf, 0xd3, 0x2f, 0x28, 0x4a, 0x4d, 0xcb, 0xac, 0x88, 0x2f, 0x4a, 0x2d, 0x2f, 0xca, 0x2c,
	0x49, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x52, 0x46, 0x55, 0xa4, 0x07, 0xd5, 0xab, 0x97,
	0x9e, 0x93, 0x9f, 0xaf, 0x57, 0x9c, 0x9f, 0x93, 0xaf, 0x97, 0x99, 0x2f, 0x25, 0x92, 0x9e, 0x9f,
	0x9e, 0x0f, 0x56, 0xaf, 0x0f, 0x62, 0x41, 0xb4, 0x2a, 0x99, 0x71, 0xf1, 0x06, 0x80, 0x8d, 0x0c,
	0x82, 0x98, 0x28, 0xa4, 0xca, 0xc5, 0x87, 0x6a, 0x87, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0x67, 0x10,
	0x6f, 0x01, 0xb2, 0x32, 0xa7, 0xb0, 0x15, 0x8f, 0xe4, 0x18, 0xa3, 0x02, 0xd2, 0x33, 0x4b, 0x32,
	0x4a, 0x93, 0xf4, 0x92, 0xf3, 0x73, 0xf5, 0x41, 0xf6, 0xe8, 0x66, 0xe6, 0x43, 0xe8, 0x82, 0xa2,
	0xfc, 0xac, 0xd4, 0xe4, 0x92, 0x62, 0x7d, 0x38, 0x03, 0xe4, 0x16, 0xfd, 0x82, 0xec, 0x74, 0xfd,
	0xc4, 0x82, 0x4c, 0xfd, 0x32, 0x43, 0x7d, 0xec, 0xfe, 0x4b, 0x62, 0x03, 0x3b, 0xcb, 0x18, 0x10,
	0x00, 0x00, 0xff, 0xff, 0x0f, 0x32, 0xb7, 0xb0, 0x00, 0x01, 0x00, 0x00,
}
