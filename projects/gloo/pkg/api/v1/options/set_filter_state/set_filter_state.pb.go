// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.6.1
// source: github.com/solo-io/gloo/projects/gloo/api/v1/options/set_filter_state/set_filter_state.proto

package set_filter_state

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	v3 "github.com/solo-io/gloo/projects/gloo/pkg/api/external/envoy/config/core/v3"
	_ "github.com/solo-io/protoc-gen-ext/extproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FilterStateValue_SharedWithUpstream int32

const (
	// Object is not shared with the upstream internal connections.
	FilterStateValue_NONE FilterStateValue_SharedWithUpstream = 0
	// Object is shared with the upstream internal connection.
	FilterStateValue_ONCE FilterStateValue_SharedWithUpstream = 1
	// Object is shared with the upstream internal connection and any internal connection upstream from it.
	FilterStateValue_TRANSITIVE FilterStateValue_SharedWithUpstream = 2
)

// Enum value maps for FilterStateValue_SharedWithUpstream.
var (
	FilterStateValue_SharedWithUpstream_name = map[int32]string{
		0: "NONE",
		1: "ONCE",
		2: "TRANSITIVE",
	}
	FilterStateValue_SharedWithUpstream_value = map[string]int32{
		"NONE":       0,
		"ONCE":       1,
		"TRANSITIVE": 2,
	}
)

func (x FilterStateValue_SharedWithUpstream) Enum() *FilterStateValue_SharedWithUpstream {
	p := new(FilterStateValue_SharedWithUpstream)
	*p = x
	return p
}

func (x FilterStateValue_SharedWithUpstream) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FilterStateValue_SharedWithUpstream) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_solo_io_gloo_projects_gloo_api_v1_options_set_filter_state_set_filter_state_proto_enumTypes[0].Descriptor()
}

func (FilterStateValue_SharedWithUpstream) Type() protoreflect.EnumType {
	return &file_github_com_solo_io_gloo_projects_gloo_api_v1_options_set_filter_state_set_filter_state_proto_enumTypes[0]
}

func (x FilterStateValue_SharedWithUpstream) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FilterStateValue_SharedWithUpstream.Descriptor instead.
func (FilterStateValue_SharedWithUpstream) EnumDescriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_v1_options_set_filter_state_set_filter_state_proto_rawDescGZIP(), []int{1, 0}
}

// Configuration for the Set-Filter-State HTTP Filter
type SetFilterState struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	OnRequestHeaders []*FilterStateValue    `protobuf:"bytes,1,rep,name=on_request_headers,json=onRequestHeaders,proto3" json:"on_request_headers,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SetFilterState) Reset() {
	*x = SetFilterState{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_options_set_filter_state_set_filter_state_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetFilterState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetFilterState) ProtoMessage() {}

func (x *SetFilterState) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_options_set_filter_state_set_filter_state_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetFilterState.ProtoReflect.Descriptor instead.
func (*SetFilterState) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_v1_options_set_filter_state_set_filter_state_proto_rawDescGZIP(), []int{0}
}

func (x *SetFilterState) GetOnRequestHeaders() []*FilterStateValue {
	if x != nil {
		return x.OnRequestHeaders
	}
	return nil
}

// A filter state key and value pair.
type FilterStateValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Key:
	//
	//	*FilterStateValue_ObjectKey
	Key isFilterStateValue_Key `protobuf_oneof:"key"`
	// Optional filter object factory lookup key. See :ref:`the well-known filter state keys <well_known_filter_state>`
	// for a list of valid factory keys.
	FactoryKey string `protobuf:"bytes,6,opt,name=factory_key,json=factoryKey,proto3" json:"factory_key,omitempty"`
	// Types that are valid to be assigned to Value:
	//
	//	*FilterStateValue_FormatString
	Value isFilterStateValue_Value `protobuf_oneof:"value"`
	// If marked as read-only, the filter state key value is locked, and cannot
	// be overridden by any filter, including this filter.
	ReadOnly bool `protobuf:"varint,3,opt,name=read_only,json=readOnly,proto3" json:"read_only,omitempty"`
	// Configures the object to be shared with the upstream internal connections. See :ref:`internal upstream
	// transport <config_internal_upstream_transport>` for more details on the filter state sharing with
	// the internal connections.
	SharedWithUpstream FilterStateValue_SharedWithUpstream `protobuf:"varint,4,opt,name=shared_with_upstream,json=sharedWithUpstream,proto3,enum=set_filter_state.options.gloo.solo.io.FilterStateValue_SharedWithUpstream" json:"shared_with_upstream,omitempty"`
	// Skip the update if the value evaluates to an empty string.
	// This option can be used to supply multiple alternatives for the same filter state object key.
	SkipIfEmpty   bool `protobuf:"varint,5,opt,name=skip_if_empty,json=skipIfEmpty,proto3" json:"skip_if_empty,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilterStateValue) Reset() {
	*x = FilterStateValue{}
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_options_set_filter_state_set_filter_state_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilterStateValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterStateValue) ProtoMessage() {}

func (x *FilterStateValue) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_v1_options_set_filter_state_set_filter_state_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterStateValue.ProtoReflect.Descriptor instead.
func (*FilterStateValue) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_v1_options_set_filter_state_set_filter_state_proto_rawDescGZIP(), []int{1}
}

func (x *FilterStateValue) GetKey() isFilterStateValue_Key {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *FilterStateValue) GetObjectKey() string {
	if x != nil {
		if x, ok := x.Key.(*FilterStateValue_ObjectKey); ok {
			return x.ObjectKey
		}
	}
	return ""
}

func (x *FilterStateValue) GetFactoryKey() string {
	if x != nil {
		return x.FactoryKey
	}
	return ""
}

func (x *FilterStateValue) GetValue() isFilterStateValue_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *FilterStateValue) GetFormatString() *v3.SubstitutionFormatString {
	if x != nil {
		if x, ok := x.Value.(*FilterStateValue_FormatString); ok {
			return x.FormatString
		}
	}
	return nil
}

func (x *FilterStateValue) GetReadOnly() bool {
	if x != nil {
		return x.ReadOnly
	}
	return false
}

func (x *FilterStateValue) GetSharedWithUpstream() FilterStateValue_SharedWithUpstream {
	if x != nil {
		return x.SharedWithUpstream
	}
	return FilterStateValue_NONE
}

func (x *FilterStateValue) GetSkipIfEmpty() bool {
	if x != nil {
		return x.SkipIfEmpty
	}
	return false
}

type isFilterStateValue_Key interface {
	isFilterStateValue_Key()
}

type FilterStateValue_ObjectKey struct {
	// Filter state object key. The key is used to lookup the object factory, unless :ref:`factory_key
	// <envoy_v3_api_field_extensions.filters.common.set_filter_state.v3.FilterStateValue.factory_key>` is set. See
	// :ref:`the well-known filter state keys <well_known_filter_state>` for a list of valid object keys.
	ObjectKey string `protobuf:"bytes,1,opt,name=object_key,json=objectKey,proto3,oneof"`
}

func (*FilterStateValue_ObjectKey) isFilterStateValue_Key() {}

type isFilterStateValue_Value interface {
	isFilterStateValue_Value()
}

type FilterStateValue_FormatString struct {
	// Uses the :ref:`format string <config_access_log_format_strings>` to
	// instantiate the filter state object value.
	FormatString *v3.SubstitutionFormatString `protobuf:"bytes,2,opt,name=format_string,json=formatString,proto3,oneof"`
}

func (*FilterStateValue_FormatString) isFilterStateValue_Value() {}

var File_github_com_solo_io_gloo_projects_gloo_api_v1_options_set_filter_state_set_filter_state_proto protoreflect.FileDescriptor

var file_github_com_solo_io_gloo_projects_gloo_api_v1_options_set_filter_state_set_filter_state_proto_rawDesc = string([]byte{
	0x0a, 0x5c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6c,
	0x6f, 0x2d, 0x69, 0x6f, 0x2f, 0x67, 0x6c, 0x6f, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x2f, 0x67, 0x6c, 0x6f, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x73, 0x65, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2f, 0x73, 0x65, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x25,
	0x73, 0x65, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f,
	0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x1a, 0x12, 0x65, 0x78, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x65, 0x78, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x68, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73,
	0x6f, 0x6c, 0x6f, 0x2d, 0x69, 0x6f, 0x2f, 0x67, 0x6c, 0x6f, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x2f, 0x67, 0x6c, 0x6f, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x33, 0x2f, 0x73, 0x75, 0x62, 0x73,
	0x74, 0x69, 0x74, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x77, 0x0a, 0x0e,
	0x53, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x65,
	0x0a, 0x12, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x73, 0x65, 0x74,
	0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e,
	0x69, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x10, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x73, 0x22, 0xcf, 0x03, 0x0a, 0x10, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x28, 0x0a, 0x0a, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x48, 0x00, 0x52, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x4b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x5d, 0x0a, 0x0d, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x73,
	0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x33, 0x2e, 0x53, 0x75, 0x62, 0x73,
	0x74, 0x69, 0x74, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x48, 0x01, 0x52, 0x0c, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6f, 0x6e, 0x6c,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x6c,
	0x79, 0x12, 0x7c, 0x0a, 0x14, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x77, 0x69, 0x74, 0x68,
	0x5f, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x4a, 0x2e, 0x73, 0x65, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e,
	0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x57,
	0x69, 0x74, 0x68, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x12, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x57, 0x69, 0x74, 0x68, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12,
	0x22, 0x0a, 0x0d, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x69, 0x66, 0x5f, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x73, 0x6b, 0x69, 0x70, 0x49, 0x66, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x38, 0x0a, 0x12, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x57, 0x69, 0x74,
	0x68, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4f, 0x4e, 0x43, 0x45, 0x10, 0x01, 0x12, 0x0e, 0x0a,
	0x0a, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x49, 0x54, 0x49, 0x56, 0x45, 0x10, 0x02, 0x42, 0x0a, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x03, 0xf8, 0x42, 0x01, 0x42, 0x0c, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x03, 0xf8, 0x42, 0x01, 0x42, 0x4b, 0x5a, 0x49, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x69, 0x6f, 0x2f, 0x67, 0x6c,
	0x6f, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x67, 0x6c, 0x6f, 0x6f,
	0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x73, 0x65, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_github_com_solo_io_gloo_projects_gloo_api_v1_options_set_filter_state_set_filter_state_proto_rawDescOnce sync.Once
	file_github_com_solo_io_gloo_projects_gloo_api_v1_options_set_filter_state_set_filter_state_proto_rawDescData []byte
)

func file_github_com_solo_io_gloo_projects_gloo_api_v1_options_set_filter_state_set_filter_state_proto_rawDescGZIP() []byte {
	file_github_com_solo_io_gloo_projects_gloo_api_v1_options_set_filter_state_set_filter_state_proto_rawDescOnce.Do(func() {
		file_github_com_solo_io_gloo_projects_gloo_api_v1_options_set_filter_state_set_filter_state_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_github_com_solo_io_gloo_projects_gloo_api_v1_options_set_filter_state_set_filter_state_proto_rawDesc), len(file_github_com_solo_io_gloo_projects_gloo_api_v1_options_set_filter_state_set_filter_state_proto_rawDesc)))
	})
	return file_github_com_solo_io_gloo_projects_gloo_api_v1_options_set_filter_state_set_filter_state_proto_rawDescData
}

var file_github_com_solo_io_gloo_projects_gloo_api_v1_options_set_filter_state_set_filter_state_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_github_com_solo_io_gloo_projects_gloo_api_v1_options_set_filter_state_set_filter_state_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_github_com_solo_io_gloo_projects_gloo_api_v1_options_set_filter_state_set_filter_state_proto_goTypes = []any{
	(FilterStateValue_SharedWithUpstream)(0), // 0: set_filter_state.options.gloo.solo.io.FilterStateValue.SharedWithUpstream
	(*SetFilterState)(nil),                   // 1: set_filter_state.options.gloo.solo.io.SetFilterState
	(*FilterStateValue)(nil),                 // 2: set_filter_state.options.gloo.solo.io.FilterStateValue
	(*v3.SubstitutionFormatString)(nil),      // 3: solo.io.envoy.config.core.v3.SubstitutionFormatString
}
var file_github_com_solo_io_gloo_projects_gloo_api_v1_options_set_filter_state_set_filter_state_proto_depIdxs = []int32{
	2, // 0: set_filter_state.options.gloo.solo.io.SetFilterState.on_request_headers:type_name -> set_filter_state.options.gloo.solo.io.FilterStateValue
	3, // 1: set_filter_state.options.gloo.solo.io.FilterStateValue.format_string:type_name -> solo.io.envoy.config.core.v3.SubstitutionFormatString
	0, // 2: set_filter_state.options.gloo.solo.io.FilterStateValue.shared_with_upstream:type_name -> set_filter_state.options.gloo.solo.io.FilterStateValue.SharedWithUpstream
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() {
	file_github_com_solo_io_gloo_projects_gloo_api_v1_options_set_filter_state_set_filter_state_proto_init()
}
func file_github_com_solo_io_gloo_projects_gloo_api_v1_options_set_filter_state_set_filter_state_proto_init() {
	if File_github_com_solo_io_gloo_projects_gloo_api_v1_options_set_filter_state_set_filter_state_proto != nil {
		return
	}
	file_github_com_solo_io_gloo_projects_gloo_api_v1_options_set_filter_state_set_filter_state_proto_msgTypes[1].OneofWrappers = []any{
		(*FilterStateValue_ObjectKey)(nil),
		(*FilterStateValue_FormatString)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_github_com_solo_io_gloo_projects_gloo_api_v1_options_set_filter_state_set_filter_state_proto_rawDesc), len(file_github_com_solo_io_gloo_projects_gloo_api_v1_options_set_filter_state_set_filter_state_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_solo_io_gloo_projects_gloo_api_v1_options_set_filter_state_set_filter_state_proto_goTypes,
		DependencyIndexes: file_github_com_solo_io_gloo_projects_gloo_api_v1_options_set_filter_state_set_filter_state_proto_depIdxs,
		EnumInfos:         file_github_com_solo_io_gloo_projects_gloo_api_v1_options_set_filter_state_set_filter_state_proto_enumTypes,
		MessageInfos:      file_github_com_solo_io_gloo_projects_gloo_api_v1_options_set_filter_state_set_filter_state_proto_msgTypes,
	}.Build()
	File_github_com_solo_io_gloo_projects_gloo_api_v1_options_set_filter_state_set_filter_state_proto = out.File
	file_github_com_solo_io_gloo_projects_gloo_api_v1_options_set_filter_state_set_filter_state_proto_goTypes = nil
	file_github_com_solo_io_gloo_projects_gloo_api_v1_options_set_filter_state_set_filter_state_proto_depIdxs = nil
}
