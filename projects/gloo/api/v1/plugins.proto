syntax = "proto3";
package gloo.solo.io;
option go_package = "github.com/solo-io/gloo/projects/gloo/pkg/api/v1";

import "gogoproto/gogo.proto";
option (gogoproto.equal_all) = true;

import "github.com/solo-io/solo-projects/projects/gloo/api/v1/plugins/sqoop/sqoop.proto";
import "github.com/solo-io/solo-projects/projects/gloo/api/v1/plugins/ratelimit/ratelimit.proto";

// Plugin-specific configuration that lives on listeners
// Each ListenerPlugin object contains configuration for a specific plugin
// Note to developers: new Listener Plugins must be added to this struct
// to be usable by Gloo.
message ListenerPlugins {}

// Plugin-specific configuration that lives on virtual hosts
// Each VirtualHostPlugin object contains configuration for a specific plugin
// Note to developers: new Virtual Host Plugins must be added to this struct
// to be usable by Gloo.
message VirtualHostPlugins {
    ratelimit.plugins.gloo.solo.io.IngressRateLimit rate_limits = 1;
}

// Plugin-specific configuration that lives on routes
// Each RoutePlugin object contains configuration for a specific plugin
// Note to developers: new Route Plugins must be added to this struct
// to be usable by Gloo.
message RoutePlugins {
}

// Configuration for Destinations that are tied to the UpstreamSpec or ServiceSpec on that destination
message DestinationSpec {
    // Note to developers: new DestinationSpecs must be added to this oneof field
    // to be usable by Gloo.
    oneof destination_type {
        sqoop.plugins.gloo.solo.io.DestinationSpec sqoop = 5;
    }
}

// Each upstream in Gloo has a type. Supported types include `static`, `kubernetes`, `aws`, `consul`, and more.
// Each upstream type is handled by a corresponding Gloo plugin.
message UpstreamSpec {
    // Note to developers: new Upstream Plugins must be added to this oneof field
    // to be usable by Gloo.
    oneof upstream_type {
    }
}
