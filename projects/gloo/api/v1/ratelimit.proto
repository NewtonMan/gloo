syntax = "proto3";
package gloo.solo.io;
option go_package = "github.com/solo-io/solo-projects/projects/gloo/pkg/api/v1";

import "envoy/api/v2/discovery.proto";
import "google/api/annotations.proto";
import "github.com/solo-io/solo-projects/projects/gloo/api/v1/plugins/ratelimit/ratelimit.proto";


import "gogoproto/gogo.proto";
option (gogoproto.equal_all) = true;


/*
@solo-kit:xds-service=RateLimitDiscoveryService
@solo-kit:resource.no_references
 */
message RateLimitConfig {
    // @solo-kit:resource.name
    string domain = 1;
    repeated ratelimit.plugins.gloo.solo.io.Descriptor descriptors = 2;
}

/*
@solo-kit:resource.xds-enabled
*/
service RateLimitDiscoveryService {
    rpc StreamRateLimitConfig(stream envoy.api.v2.DiscoveryRequest) returns (stream envoy.api.v2.DiscoveryResponse) {
    }

    rpc IncrementalRateLimitConfig(stream envoy.api.v2.IncrementalDiscoveryRequest)
        returns (stream envoy.api.v2.IncrementalDiscoveryResponse) {
    }

    rpc FetchRateLimitConfig(envoy.api.v2.DiscoveryRequest) returns (envoy.api.v2.DiscoveryResponse) {
        option (google.api.http) = {
        post: "/v2/discovery:ratelimitconfig"
        body: "*"
        };
    }
}
