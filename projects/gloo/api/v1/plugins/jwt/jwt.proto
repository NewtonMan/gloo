syntax = "proto3";
package jwt.plugins.gloo.solo.io;

option go_package = "github.com/solo-io/solo-projects/projects/gloo/pkg/api/v1/plugins/jwt";

import "github.com/solo-io/solo-kit/api/v1/ref.proto";

import "gogoproto/gogo.proto";
option (gogoproto.equal_all) = true;

message VhostExtension {
    message RemoteJwks {
        // The url used when accessing the upstream for Json Web Key Set.
        // This is used to set the host and path in the request
        string url = 1;
        // The Upstream representing the Json Web Key Set server
        core.solo.io.ResourceRef upstream_ref = 2;
    }

    message LocalJwks {
        // Inline key. this can be json web key, key-set or PEM format.
        string key = 1;
    }

    message Jwks {
        oneof jwks {
            // Use a remote JWKS server
            RemoteJwks remote = 1;
            // Use an inline JWKS
            LocalJwks local   = 2;
        }
    }
    // The source for the keys to validate JWTs.
    Jwks jwks = 1;

    // An incoming JWT must have an 'aud' claim and it must be in this list.
    repeated string audiences = 2;
    // Issuer of the JWT. the 'iss' claim of the JWT must match this.
    string issuer = 3;
}

message RouteExtension {
    // Disable JWT checks on this route.
    bool disable = 1;
}
