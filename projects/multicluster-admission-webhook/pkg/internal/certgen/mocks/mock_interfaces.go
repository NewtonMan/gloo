// Code generated by MockGen. DO NOT EDIT.
// Source: ./interfaces.go

// Package mock_certgen is a generated GoMock package.
package mock_certgen

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockWebhookCAManager is a mock of WebhookCAManager interface.
type MockWebhookCAManager struct {
	ctrl     *gomock.Controller
	recorder *MockWebhookCAManagerMockRecorder
}

// MockWebhookCAManagerMockRecorder is the mock recorder for MockWebhookCAManager.
type MockWebhookCAManagerMockRecorder struct {
	mock *MockWebhookCAManager
}

// NewMockWebhookCAManager creates a new mock instance.
func NewMockWebhookCAManager(ctrl *gomock.Controller) *MockWebhookCAManager {
	mock := &MockWebhookCAManager{ctrl: ctrl}
	mock.recorder = &MockWebhookCAManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWebhookCAManager) EXPECT() *MockWebhookCAManagerMockRecorder {
	return m.recorder
}

// EnsureCaCerts mocks base method.
func (m *MockWebhookCAManager) EnsureCaCerts(ctx context.Context, secretName, secretNamespace, svcName, svcNamespace string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EnsureCaCerts", ctx, secretName, secretNamespace, svcName, svcNamespace)
	ret0, _ := ret[0].(error)
	return ret0
}

// EnsureCaCerts indicates an expected call of EnsureCaCerts.
func (mr *MockWebhookCAManagerMockRecorder) EnsureCaCerts(ctx, secretName, secretNamespace, svcName, svcNamespace interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EnsureCaCerts", reflect.TypeOf((*MockWebhookCAManager)(nil).EnsureCaCerts), ctx, secretName, secretNamespace, svcName, svcNamespace)
}
