// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/solo-io/solo-projects/projects/extauth/plugins/ldap/pkg (interfaces: ClientBuilder)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	ldap "github.com/go-ldap/ldap"
	gomock "github.com/golang/mock/gomock"
)

// MockClientBuilder is a mock of ClientBuilder interface
type MockClientBuilder struct {
	ctrl     *gomock.Controller
	recorder *MockClientBuilderMockRecorder
}

// MockClientBuilderMockRecorder is the mock recorder for MockClientBuilder
type MockClientBuilderMockRecorder struct {
	mock *MockClientBuilder
}

// NewMockClientBuilder creates a new mock instance
func NewMockClientBuilder(ctrl *gomock.Controller) *MockClientBuilder {
	mock := &MockClientBuilder{ctrl: ctrl}
	mock.recorder = &MockClientBuilderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockClientBuilder) EXPECT() *MockClientBuilderMockRecorder {
	return m.recorder
}

// Dial mocks base method
func (m *MockClientBuilder) Dial(arg0, arg1 string) (ldap.Client, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Dial", arg0, arg1)
	ret0, _ := ret[0].(ldap.Client)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Dial indicates an expected call of Dial
func (mr *MockClientBuilderMockRecorder) Dial(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Dial", reflect.TypeOf((*MockClientBuilder)(nil).Dial), arg0, arg1)
}
