// Code generated by MockGen. DO NOT EDIT.
// Source: ./client.go

// Package mock_envoy_admin is a generated GoMock package.
package mock_envoy_admin

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1 "github.com/solo-io/solo-projects/projects/apiserver/pkg/api/rpc.edge.gloo/v1"
	rest "k8s.io/client-go/rest"
)

// MockEnvoyAdminClient is a mock of EnvoyAdminClient interface.
type MockEnvoyAdminClient struct {
	ctrl     *gomock.Controller
	recorder *MockEnvoyAdminClientMockRecorder
}

// MockEnvoyAdminClientMockRecorder is the mock recorder for MockEnvoyAdminClient.
type MockEnvoyAdminClientMockRecorder struct {
	mock *MockEnvoyAdminClient
}

// NewMockEnvoyAdminClient creates a new mock instance.
func NewMockEnvoyAdminClient(ctrl *gomock.Controller) *MockEnvoyAdminClient {
	mock := &MockEnvoyAdminClient{ctrl: ctrl}
	mock.recorder = &MockEnvoyAdminClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEnvoyAdminClient) EXPECT() *MockEnvoyAdminClientMockRecorder {
	return m.recorder
}

// GetConfigs mocks base method.
func (m *MockEnvoyAdminClient) GetConfigs(ctx context.Context, glooInstance *v1.GlooInstance, restClient rest.Interface) ([]*v1.ConfigDump, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetConfigs", ctx, glooInstance, restClient)
	ret0, _ := ret[0].([]*v1.ConfigDump)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetConfigs indicates an expected call of GetConfigs.
func (mr *MockEnvoyAdminClientMockRecorder) GetConfigs(ctx, glooInstance, restClient interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConfigs", reflect.TypeOf((*MockEnvoyAdminClient)(nil).GetConfigs), ctx, glooInstance, restClient)
}

// GetHostsByUpstream mocks base method.
func (m *MockEnvoyAdminClient) GetHostsByUpstream(ctx context.Context, glooInstance *v1.GlooInstance, restClient rest.Interface) (map[string]*v1.HostList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetHostsByUpstream", ctx, glooInstance, restClient)
	ret0, _ := ret[0].(map[string]*v1.HostList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetHostsByUpstream indicates an expected call of GetHostsByUpstream.
func (mr *MockEnvoyAdminClientMockRecorder) GetHostsByUpstream(ctx, glooInstance, restClient interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetHostsByUpstream", reflect.TypeOf((*MockEnvoyAdminClient)(nil).GetHostsByUpstream), ctx, glooInstance, restClient)
}
