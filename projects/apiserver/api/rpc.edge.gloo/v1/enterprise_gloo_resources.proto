// Code generated by skv2. DO NOT EDIT.

syntax = "proto3";
package rpc.edge.gloo.solo.io;
option go_package = "github.com/solo-io/solo-projects/projects/apiserver/pkg/api/rpc.edge.gloo/v1";

import "extproto/ext.proto";
option (extproto.equal_all) = true;
option (extproto.hash_all) = true;
import "github.com/solo-io/solo-apis/api/gloo/enterprise.gloo/v1/auth_config.proto";
import "github.com/solo-io/skv2/api/core/v1/core.proto";
import "github.com/solo-io/solo-projects/projects/apiserver/api/rpc.edge.gloo/v1/common.proto";

message AuthConfig {
    .rpc.edge.gloo.solo.io.ObjectMeta metadata = 1;
    .enterprise.gloo.solo.io.AuthConfigSpec spec = 2;
    .enterprise.gloo.solo.io.AuthConfigStatus status = 3;
    .core.skv2.solo.io.ObjectRef gloo_instance = 4;
}

message ListAuthConfigsRequest {
    .core.skv2.solo.io.ObjectRef gloo_instance_ref = 1;
    .rpc.edge.gloo.solo.io.Pagination pagination = 2;
    string query_string = 3;
    .rpc.edge.gloo.solo.io.StatusFilter status_filter = 4;
    .rpc.edge.gloo.solo.io.SortOptions sort_options = 5;
}

message ListAuthConfigsResponse {
    repeated AuthConfig auth_configs = 1;
    int32 total = 2;
}

message GetAuthConfigYamlRequest {
    .core.skv2.solo.io.ClusterObjectRef auth_config_ref = 1;
}

message GetAuthConfigYamlResponse {
    .rpc.edge.gloo.solo.io.ResourceYaml yaml_data = 1;
}

service EnterpriseGlooResourceApi {

    rpc ListAuthConfigs (ListAuthConfigsRequest) returns (ListAuthConfigsResponse) {}
    rpc GetAuthConfigYaml (GetAuthConfigYamlRequest) returns (GetAuthConfigYamlResponse) {}
}