// Code generated by skv2. DO NOT EDIT.

syntax = "proto3";
package rpc.edge.gloo.solo.io;
option go_package = "github.com/solo-io/solo-projects/projects/apiserver/pkg/api/rpc.edge.gloo/v1";

import "extproto/ext.proto";
option (extproto.equal_all) = true;
option (extproto.hash_all) = true;
import "github.com/solo-io/solo-apis/api/rate-limiter/v1alpha1/ratelimit.proto";
import "github.com/solo-io/skv2/api/core/v1/core.proto";
import "github.com/solo-io/solo-projects/projects/apiserver/api/rpc.edge.gloo/v1/common.proto";

message RateLimitConfig {
    .rpc.edge.gloo.solo.io.ObjectMeta metadata = 1;
    .ratelimit.api.solo.io.RateLimitConfigSpec spec = 2;
    .ratelimit.api.solo.io.RateLimitConfigStatus status = 3;
    .core.skv2.solo.io.ObjectRef gloo_instance = 4;
}

message ListRateLimitConfigsRequest {
    .core.skv2.solo.io.ObjectRef gloo_instance_ref = 1;
}

message ListRateLimitConfigsResponse {
    repeated RateLimitConfig rate_limit_configs = 1;
}

message GetRateLimitConfigYamlRequest {
    .core.skv2.solo.io.ClusterObjectRef rate_limit_config_ref = 1;
}

message GetRateLimitConfigYamlResponse {
    .rpc.edge.gloo.solo.io.ResourceYaml yaml_data = 1;
}

service RatelimitResourceApi {

    rpc ListRateLimitConfigs (ListRateLimitConfigsRequest) returns (ListRateLimitConfigsResponse) {}
    rpc GetRateLimitConfigYaml (GetRateLimitConfigYamlRequest) returns (GetRateLimitConfigYamlResponse) {}
}