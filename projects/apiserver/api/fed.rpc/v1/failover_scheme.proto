syntax = "proto3";
package fed.rpc.solo.io;

option (extproto.equal_all) = true;
import "extproto/ext.proto";
option (extproto.hash_all) = true;

option go_package = "github.com/solo-io/solo-projects/projects/apiserver/pkg/api/fed.rpc/v1";

import "github.com/solo-io/solo-projects/projects/gloo-fed/api/fed/v1/failover.proto";
import "github.com/solo-io/solo-projects/projects/apiserver/api/rpc.edge.gloo/v1/common.proto";
import "github.com/solo-io/skv2/api/core/v1/core.proto";

message FailoverScheme {
    .rpc.edge.gloo.solo.io.ObjectMeta metadata = 1;
    .fed.solo.io.FailoverSchemeSpec spec = 2;
    .fed.solo.io.FailoverSchemeStatus status = 3;
}

message GetFailoverSchemeRequest {
    .core.skv2.solo.io.ClusterObjectRef upstream_ref = 1;
}

message GetFailoverSchemeResponse {
    FailoverScheme failover_scheme = 1;
}

message GetFailoverSchemeYamlRequest {
    .core.skv2.solo.io.ObjectRef failover_scheme_ref = 1;
}

message GetFailoverSchemeYamlResponse {
    .rpc.edge.gloo.solo.io.ResourceYaml yaml_data = 1;
}

service FailoverSchemeApi {
    rpc GetFailoverScheme (GetFailoverSchemeRequest) returns (GetFailoverSchemeResponse) {}
    rpc GetFailoverSchemeYaml (GetFailoverSchemeYamlRequest) returns (GetFailoverSchemeYamlResponse) {}
}