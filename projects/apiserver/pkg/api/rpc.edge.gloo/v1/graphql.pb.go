// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.6.1
// source: github.com/solo-io/solo-projects/projects/apiserver/api/rpc.edge.gloo/v1/graphql.proto

package v1

import (
	context "context"
	reflect "reflect"
	sync "sync"

	_ "github.com/solo-io/protoc-gen-ext/extproto"
	v1 "github.com/solo-io/skv2/pkg/api/core.skv2.solo.io/v1"
	v1alpha1 "github.com/solo-io/solo-apis/pkg/api/graphql.gloo.solo.io/v1alpha1"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ValidateResolverYamlRequest_ResolverType int32

const (
	ValidateResolverYamlRequest_RESOLVER_NOT_SET ValidateResolverYamlRequest_ResolverType = 0
	ValidateResolverYamlRequest_REST_RESOLVER    ValidateResolverYamlRequest_ResolverType = 1
	ValidateResolverYamlRequest_GRPC_RESOLVER    ValidateResolverYamlRequest_ResolverType = 2
)

// Enum value maps for ValidateResolverYamlRequest_ResolverType.
var (
	ValidateResolverYamlRequest_ResolverType_name = map[int32]string{
		0: "RESOLVER_NOT_SET",
		1: "REST_RESOLVER",
		2: "GRPC_RESOLVER",
	}
	ValidateResolverYamlRequest_ResolverType_value = map[string]int32{
		"RESOLVER_NOT_SET": 0,
		"REST_RESOLVER":    1,
		"GRPC_RESOLVER":    2,
	}
)

func (x ValidateResolverYamlRequest_ResolverType) Enum() *ValidateResolverYamlRequest_ResolverType {
	p := new(ValidateResolverYamlRequest_ResolverType)
	*p = x
	return p
}

func (x ValidateResolverYamlRequest_ResolverType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ValidateResolverYamlRequest_ResolverType) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_enumTypes[0].Descriptor()
}

func (ValidateResolverYamlRequest_ResolverType) Type() protoreflect.EnumType {
	return &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_enumTypes[0]
}

func (x ValidateResolverYamlRequest_ResolverType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ValidateResolverYamlRequest_ResolverType.Descriptor instead.
func (ValidateResolverYamlRequest_ResolverType) EnumDescriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDescGZIP(), []int{14, 0}
}

// GraphQLApi CR details.
type GraphqlApi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata     *ObjectMeta                `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec         *v1alpha1.GraphQLApiSpec   `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	Status       *v1alpha1.GraphQLApiStatus `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	GlooInstance *v1.ObjectRef              `protobuf:"bytes,4,opt,name=gloo_instance,json=glooInstance,proto3" json:"gloo_instance,omitempty"`
}

func (x *GraphqlApi) Reset() {
	*x = GraphqlApi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GraphqlApi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GraphqlApi) ProtoMessage() {}

func (x *GraphqlApi) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GraphqlApi.ProtoReflect.Descriptor instead.
func (*GraphqlApi) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDescGZIP(), []int{0}
}

func (x *GraphqlApi) GetMetadata() *ObjectMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *GraphqlApi) GetSpec() *v1alpha1.GraphQLApiSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *GraphqlApi) GetStatus() *v1alpha1.GraphQLApiStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *GraphqlApi) GetGlooInstance() *v1.ObjectRef {
	if x != nil {
		return x.GlooInstance
	}
	return nil
}

// Summary fields of a GraphQLApi to be shown on list/table views.
type GraphqlApiSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata     *ObjectMeta                `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Status       *v1alpha1.GraphQLApiStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	GlooInstance *v1.ObjectRef              `protobuf:"bytes,3,opt,name=gloo_instance,json=glooInstance,proto3" json:"gloo_instance,omitempty"`
	// Types that are assignable to ApiTypeSummary:
	//	*GraphqlApiSummary_Executable
	//	*GraphqlApiSummary_Stitched
	ApiTypeSummary isGraphqlApiSummary_ApiTypeSummary `protobuf_oneof:"api_type_summary"`
}

func (x *GraphqlApiSummary) Reset() {
	*x = GraphqlApiSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GraphqlApiSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GraphqlApiSummary) ProtoMessage() {}

func (x *GraphqlApiSummary) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GraphqlApiSummary.ProtoReflect.Descriptor instead.
func (*GraphqlApiSummary) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDescGZIP(), []int{1}
}

func (x *GraphqlApiSummary) GetMetadata() *ObjectMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *GraphqlApiSummary) GetStatus() *v1alpha1.GraphQLApiStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *GraphqlApiSummary) GetGlooInstance() *v1.ObjectRef {
	if x != nil {
		return x.GlooInstance
	}
	return nil
}

func (m *GraphqlApiSummary) GetApiTypeSummary() isGraphqlApiSummary_ApiTypeSummary {
	if m != nil {
		return m.ApiTypeSummary
	}
	return nil
}

func (x *GraphqlApiSummary) GetExecutable() *GraphqlApiSummary_ExecutableSchemaSummary {
	if x, ok := x.GetApiTypeSummary().(*GraphqlApiSummary_Executable); ok {
		return x.Executable
	}
	return nil
}

func (x *GraphqlApiSummary) GetStitched() *GraphqlApiSummary_StitchedSchemaSummary {
	if x, ok := x.GetApiTypeSummary().(*GraphqlApiSummary_Stitched); ok {
		return x.Stitched
	}
	return nil
}

type isGraphqlApiSummary_ApiTypeSummary interface {
	isGraphqlApiSummary_ApiTypeSummary()
}

type GraphqlApiSummary_Executable struct {
	Executable *GraphqlApiSummary_ExecutableSchemaSummary `protobuf:"bytes,4,opt,name=executable,proto3,oneof"`
}

type GraphqlApiSummary_Stitched struct {
	Stitched *GraphqlApiSummary_StitchedSchemaSummary `protobuf:"bytes,5,opt,name=stitched,proto3,oneof"`
}

func (*GraphqlApiSummary_Executable) isGraphqlApiSummary_ApiTypeSummary() {}

func (*GraphqlApiSummary_Stitched) isGraphqlApiSummary_ApiTypeSummary() {}

// Gets a GraphQLApi CR by reference.
type GetGraphqlApiRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A reference to the GraphQLApi. If this is a single-cluster (non-federated) Gloo Edge installation,
	// cluster name is not used.
	GraphqlApiRef *v1.ClusterObjectRef `protobuf:"bytes,1,opt,name=graphql_api_ref,json=graphqlApiRef,proto3" json:"graphql_api_ref,omitempty"`
}

func (x *GetGraphqlApiRequest) Reset() {
	*x = GetGraphqlApiRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGraphqlApiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGraphqlApiRequest) ProtoMessage() {}

func (x *GetGraphqlApiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGraphqlApiRequest.ProtoReflect.Descriptor instead.
func (*GetGraphqlApiRequest) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDescGZIP(), []int{2}
}

func (x *GetGraphqlApiRequest) GetGraphqlApiRef() *v1.ClusterObjectRef {
	if x != nil {
		return x.GraphqlApiRef
	}
	return nil
}

type GetGraphqlApiResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GraphqlApi *GraphqlApi `protobuf:"bytes,1,opt,name=graphql_api,json=graphqlApi,proto3" json:"graphql_api,omitempty"`
}

func (x *GetGraphqlApiResponse) Reset() {
	*x = GetGraphqlApiResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGraphqlApiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGraphqlApiResponse) ProtoMessage() {}

func (x *GetGraphqlApiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGraphqlApiResponse.ProtoReflect.Descriptor instead.
func (*GetGraphqlApiResponse) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDescGZIP(), []int{3}
}

func (x *GetGraphqlApiResponse) GetGraphqlApi() *GraphqlApi {
	if x != nil {
		return x.GraphqlApi
	}
	return nil
}

// Gets a list of GraphQLApi CRs.
type ListGraphqlApisRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// (Optional) A reference to a Gloo Edge instance. If provided, only GraphQLApis on this Gloo Edge instance will be
	// returned. Otherwise, all GraphQLApis across all Gloo Edge instances will be returned.
	GlooInstanceRef *v1.ObjectRef `protobuf:"bytes,1,opt,name=gloo_instance_ref,json=glooInstanceRef,proto3" json:"gloo_instance_ref,omitempty"`
}

func (x *ListGraphqlApisRequest) Reset() {
	*x = ListGraphqlApisRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGraphqlApisRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGraphqlApisRequest) ProtoMessage() {}

func (x *ListGraphqlApisRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGraphqlApisRequest.ProtoReflect.Descriptor instead.
func (*ListGraphqlApisRequest) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDescGZIP(), []int{4}
}

func (x *ListGraphqlApisRequest) GetGlooInstanceRef() *v1.ObjectRef {
	if x != nil {
		return x.GlooInstanceRef
	}
	return nil
}

type ListGraphqlApisResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GraphqlApis []*GraphqlApiSummary `protobuf:"bytes,1,rep,name=graphql_apis,json=graphqlApis,proto3" json:"graphql_apis,omitempty"`
}

func (x *ListGraphqlApisResponse) Reset() {
	*x = ListGraphqlApisResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGraphqlApisResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGraphqlApisResponse) ProtoMessage() {}

func (x *ListGraphqlApisResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGraphqlApisResponse.ProtoReflect.Descriptor instead.
func (*ListGraphqlApisResponse) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDescGZIP(), []int{5}
}

func (x *ListGraphqlApisResponse) GetGraphqlApis() []*GraphqlApiSummary {
	if x != nil {
		return x.GraphqlApis
	}
	return nil
}

// Gets the yaml for a GraphQLApi CR.
type GetGraphqlApiYamlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A reference to the GraphQLApi. If this is a single-cluster (non-federated) Gloo Edge installation,
	// cluster name is not used.
	GraphqlApiRef *v1.ClusterObjectRef `protobuf:"bytes,1,opt,name=graphql_api_ref,json=graphqlApiRef,proto3" json:"graphql_api_ref,omitempty"`
}

func (x *GetGraphqlApiYamlRequest) Reset() {
	*x = GetGraphqlApiYamlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGraphqlApiYamlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGraphqlApiYamlRequest) ProtoMessage() {}

func (x *GetGraphqlApiYamlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGraphqlApiYamlRequest.ProtoReflect.Descriptor instead.
func (*GetGraphqlApiYamlRequest) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDescGZIP(), []int{6}
}

func (x *GetGraphqlApiYamlRequest) GetGraphqlApiRef() *v1.ClusterObjectRef {
	if x != nil {
		return x.GraphqlApiRef
	}
	return nil
}

type GetGraphqlApiYamlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	YamlData *ResourceYaml `protobuf:"bytes,1,opt,name=yaml_data,json=yamlData,proto3" json:"yaml_data,omitempty"`
}

func (x *GetGraphqlApiYamlResponse) Reset() {
	*x = GetGraphqlApiYamlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGraphqlApiYamlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGraphqlApiYamlResponse) ProtoMessage() {}

func (x *GetGraphqlApiYamlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGraphqlApiYamlResponse.ProtoReflect.Descriptor instead.
func (*GetGraphqlApiYamlResponse) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDescGZIP(), []int{7}
}

func (x *GetGraphqlApiYamlResponse) GetYamlData() *ResourceYaml {
	if x != nil {
		return x.YamlData
	}
	return nil
}

// Creates a new GraphQLApi.
type CreateGraphqlApiRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A reference to the GraphQLApi to create. If this is a single-cluster (non-federated) Gloo Edge installation,
	// cluster name is not used.
	GraphqlApiRef *v1.ClusterObjectRef `protobuf:"bytes,1,opt,name=graphql_api_ref,json=graphqlApiRef,proto3" json:"graphql_api_ref,omitempty"`
	// The spec for the new GraphQLApi.
	Spec *v1alpha1.GraphQLApiSpec `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *CreateGraphqlApiRequest) Reset() {
	*x = CreateGraphqlApiRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGraphqlApiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGraphqlApiRequest) ProtoMessage() {}

func (x *CreateGraphqlApiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGraphqlApiRequest.ProtoReflect.Descriptor instead.
func (*CreateGraphqlApiRequest) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDescGZIP(), []int{8}
}

func (x *CreateGraphqlApiRequest) GetGraphqlApiRef() *v1.ClusterObjectRef {
	if x != nil {
		return x.GraphqlApiRef
	}
	return nil
}

func (x *CreateGraphqlApiRequest) GetSpec() *v1alpha1.GraphQLApiSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type CreateGraphqlApiResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The updated GraphQLApi.
	GraphqlApi *GraphqlApi `protobuf:"bytes,1,opt,name=graphql_api,json=graphqlApi,proto3" json:"graphql_api,omitempty"`
}

func (x *CreateGraphqlApiResponse) Reset() {
	*x = CreateGraphqlApiResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGraphqlApiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGraphqlApiResponse) ProtoMessage() {}

func (x *CreateGraphqlApiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGraphqlApiResponse.ProtoReflect.Descriptor instead.
func (*CreateGraphqlApiResponse) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDescGZIP(), []int{9}
}

func (x *CreateGraphqlApiResponse) GetGraphqlApi() *GraphqlApi {
	if x != nil {
		return x.GraphqlApi
	}
	return nil
}

// Updates an existing GraphQLApi.
type UpdateGraphqlApiRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A reference to an existing GraphQLApi to update. If this is a single-cluster (non-federated) Gloo Edge installation,
	// cluster name is not used.
	GraphqlApiRef *v1.ClusterObjectRef `protobuf:"bytes,1,opt,name=graphql_api_ref,json=graphqlApiRef,proto3" json:"graphql_api_ref,omitempty"`
	// The updated GraphQLApi spec.
	Spec *v1alpha1.GraphQLApiSpec `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *UpdateGraphqlApiRequest) Reset() {
	*x = UpdateGraphqlApiRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGraphqlApiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGraphqlApiRequest) ProtoMessage() {}

func (x *UpdateGraphqlApiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGraphqlApiRequest.ProtoReflect.Descriptor instead.
func (*UpdateGraphqlApiRequest) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateGraphqlApiRequest) GetGraphqlApiRef() *v1.ClusterObjectRef {
	if x != nil {
		return x.GraphqlApiRef
	}
	return nil
}

func (x *UpdateGraphqlApiRequest) GetSpec() *v1alpha1.GraphQLApiSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type UpdateGraphqlApiResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The updated GraphQLApi.
	GraphqlApi *GraphqlApi `protobuf:"bytes,1,opt,name=graphql_api,json=graphqlApi,proto3" json:"graphql_api,omitempty"`
}

func (x *UpdateGraphqlApiResponse) Reset() {
	*x = UpdateGraphqlApiResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGraphqlApiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGraphqlApiResponse) ProtoMessage() {}

func (x *UpdateGraphqlApiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGraphqlApiResponse.ProtoReflect.Descriptor instead.
func (*UpdateGraphqlApiResponse) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateGraphqlApiResponse) GetGraphqlApi() *GraphqlApi {
	if x != nil {
		return x.GraphqlApi
	}
	return nil
}

// Deletes a GraphQLApi by reference.
type DeleteGraphqlApiRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A reference to the GraphQLApi to delete. If this is a single-cluster (non-federated) Gloo Edge installation,
	// cluster name is not used.
	GraphqlApiRef *v1.ClusterObjectRef `protobuf:"bytes,1,opt,name=graphql_api_ref,json=graphqlApiRef,proto3" json:"graphql_api_ref,omitempty"`
}

func (x *DeleteGraphqlApiRequest) Reset() {
	*x = DeleteGraphqlApiRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGraphqlApiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGraphqlApiRequest) ProtoMessage() {}

func (x *DeleteGraphqlApiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGraphqlApiRequest.ProtoReflect.Descriptor instead.
func (*DeleteGraphqlApiRequest) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteGraphqlApiRequest) GetGraphqlApiRef() *v1.ClusterObjectRef {
	if x != nil {
		return x.GraphqlApiRef
	}
	return nil
}

type DeleteGraphqlApiResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Reference to the deleted GraphQLApi.
	GraphqlApiRef *v1.ClusterObjectRef `protobuf:"bytes,1,opt,name=graphql_api_ref,json=graphqlApiRef,proto3" json:"graphql_api_ref,omitempty"`
}

func (x *DeleteGraphqlApiResponse) Reset() {
	*x = DeleteGraphqlApiResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGraphqlApiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGraphqlApiResponse) ProtoMessage() {}

func (x *DeleteGraphqlApiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGraphqlApiResponse.ProtoReflect.Descriptor instead.
func (*DeleteGraphqlApiResponse) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteGraphqlApiResponse) GetGraphqlApiRef() *v1.ClusterObjectRef {
	if x != nil {
		return x.GraphqlApiRef
	}
	return nil
}

// Validates the given resolver yaml.
type ValidateResolverYamlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The resolver yaml to validate.
	Yaml string `protobuf:"bytes,1,opt,name=yaml,proto3" json:"yaml,omitempty"`
	// The type of resolver.
	ResolverType ValidateResolverYamlRequest_ResolverType `protobuf:"varint,2,opt,name=resolver_type,json=resolverType,proto3,enum=rpc.edge.gloo.solo.io.ValidateResolverYamlRequest_ResolverType" json:"resolver_type,omitempty"`
}

func (x *ValidateResolverYamlRequest) Reset() {
	*x = ValidateResolverYamlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateResolverYamlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateResolverYamlRequest) ProtoMessage() {}

func (x *ValidateResolverYamlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateResolverYamlRequest.ProtoReflect.Descriptor instead.
func (*ValidateResolverYamlRequest) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDescGZIP(), []int{14}
}

func (x *ValidateResolverYamlRequest) GetYaml() string {
	if x != nil {
		return x.Yaml
	}
	return ""
}

func (x *ValidateResolverYamlRequest) GetResolverType() ValidateResolverYamlRequest_ResolverType {
	if x != nil {
		return x.ResolverType
	}
	return ValidateResolverYamlRequest_RESOLVER_NOT_SET
}

// This empty response is returned if validation succeeded. Otherwise, an error is returned.
type ValidateResolverYamlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ValidateResolverYamlResponse) Reset() {
	*x = ValidateResolverYamlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateResolverYamlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateResolverYamlResponse) ProtoMessage() {}

func (x *ValidateResolverYamlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateResolverYamlResponse.ProtoReflect.Descriptor instead.
func (*ValidateResolverYamlResponse) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDescGZIP(), []int{15}
}

// Validates a schema definition.
//
// The input to the request can be either a schema definition string or a GraphQLApi spec:
// - When creating a new GraphQLApi from scratch, the schema definition string should be passed in.
// - When editing an existing GraphQLApi, the full GraphQLApi spec should be passed in.
//
// This endpoint will currently validate the following:
// 1. The schema definition string can be parsed.
// 2. All usages of supported directives are syntactically correct.
// 3. Resolver names referenced via `@resolve` directives in the schema definition have a corresponding
//    entry in the GraphQLApi's resolutions map.
type ValidateSchemaDefinitionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Input:
	//	*ValidateSchemaDefinitionRequest_SchemaDefinition
	//	*ValidateSchemaDefinitionRequest_Spec
	Input isValidateSchemaDefinitionRequest_Input `protobuf_oneof:"input"`
}

func (x *ValidateSchemaDefinitionRequest) Reset() {
	*x = ValidateSchemaDefinitionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateSchemaDefinitionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateSchemaDefinitionRequest) ProtoMessage() {}

func (x *ValidateSchemaDefinitionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateSchemaDefinitionRequest.ProtoReflect.Descriptor instead.
func (*ValidateSchemaDefinitionRequest) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDescGZIP(), []int{16}
}

func (m *ValidateSchemaDefinitionRequest) GetInput() isValidateSchemaDefinitionRequest_Input {
	if m != nil {
		return m.Input
	}
	return nil
}

func (x *ValidateSchemaDefinitionRequest) GetSchemaDefinition() string {
	if x, ok := x.GetInput().(*ValidateSchemaDefinitionRequest_SchemaDefinition); ok {
		return x.SchemaDefinition
	}
	return ""
}

func (x *ValidateSchemaDefinitionRequest) GetSpec() *v1alpha1.GraphQLApiSpec {
	if x, ok := x.GetInput().(*ValidateSchemaDefinitionRequest_Spec); ok {
		return x.Spec
	}
	return nil
}

type isValidateSchemaDefinitionRequest_Input interface {
	isValidateSchemaDefinitionRequest_Input()
}

type ValidateSchemaDefinitionRequest_SchemaDefinition struct {
	// A schema definition string.
	SchemaDefinition string `protobuf:"bytes,1,opt,name=schema_definition,json=schemaDefinition,proto3,oneof"`
}

type ValidateSchemaDefinitionRequest_Spec struct {
	// A GraphQLApi spec.
	Spec *v1alpha1.GraphQLApiSpec `protobuf:"bytes,2,opt,name=spec,proto3,oneof"`
}

func (*ValidateSchemaDefinitionRequest_SchemaDefinition) isValidateSchemaDefinitionRequest_Input() {}

func (*ValidateSchemaDefinitionRequest_Spec) isValidateSchemaDefinitionRequest_Input() {}

// This empty response is returned if validation succeeded. Otherwise, an error is returned.
type ValidateSchemaDefinitionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ValidateSchemaDefinitionResponse) Reset() {
	*x = ValidateSchemaDefinitionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateSchemaDefinitionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateSchemaDefinitionResponse) ProtoMessage() {}

func (x *ValidateSchemaDefinitionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateSchemaDefinitionResponse.ProtoReflect.Descriptor instead.
func (*ValidateSchemaDefinitionResponse) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDescGZIP(), []int{17}
}

type GetStitchedSchemaDefinitionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// This is the ref to the stitched schema we want the definition of
	StitchedSchemaApiRef *v1.ClusterObjectRef `protobuf:"bytes,1,opt,name=stitched_schema_api_ref,json=stitchedSchemaApiRef,proto3" json:"stitched_schema_api_ref,omitempty"`
}

func (x *GetStitchedSchemaDefinitionRequest) Reset() {
	*x = GetStitchedSchemaDefinitionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStitchedSchemaDefinitionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStitchedSchemaDefinitionRequest) ProtoMessage() {}

func (x *GetStitchedSchemaDefinitionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStitchedSchemaDefinitionRequest.ProtoReflect.Descriptor instead.
func (*GetStitchedSchemaDefinitionRequest) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDescGZIP(), []int{18}
}

func (x *GetStitchedSchemaDefinitionRequest) GetStitchedSchemaApiRef() *v1.ClusterObjectRef {
	if x != nil {
		return x.StitchedSchemaApiRef
	}
	return nil
}

// Returns the stitched schema SDL as a string if processing stitched schema config succeeded,
// else an error is returned and stitched_schema_sdl is empty.
type GetStitchedSchemaDefinitionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StitchedSchemaSdl string `protobuf:"bytes,1,opt,name=stitched_schema_sdl,json=stitchedSchemaSdl,proto3" json:"stitched_schema_sdl,omitempty"`
}

func (x *GetStitchedSchemaDefinitionResponse) Reset() {
	*x = GetStitchedSchemaDefinitionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStitchedSchemaDefinitionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStitchedSchemaDefinitionResponse) ProtoMessage() {}

func (x *GetStitchedSchemaDefinitionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStitchedSchemaDefinitionResponse.ProtoReflect.Descriptor instead.
func (*GetStitchedSchemaDefinitionResponse) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDescGZIP(), []int{19}
}

func (x *GetStitchedSchemaDefinitionResponse) GetStitchedSchemaSdl() string {
	if x != nil {
		return x.StitchedSchemaSdl
	}
	return ""
}

type GraphqlApiSummary_ExecutableSchemaSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumResolvers uint32 `protobuf:"varint,1,opt,name=num_resolvers,json=numResolvers,proto3" json:"num_resolvers,omitempty"`
}

func (x *GraphqlApiSummary_ExecutableSchemaSummary) Reset() {
	*x = GraphqlApiSummary_ExecutableSchemaSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GraphqlApiSummary_ExecutableSchemaSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GraphqlApiSummary_ExecutableSchemaSummary) ProtoMessage() {}

func (x *GraphqlApiSummary_ExecutableSchemaSummary) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GraphqlApiSummary_ExecutableSchemaSummary.ProtoReflect.Descriptor instead.
func (*GraphqlApiSummary_ExecutableSchemaSummary) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDescGZIP(), []int{1, 0}
}

func (x *GraphqlApiSummary_ExecutableSchemaSummary) GetNumResolvers() uint32 {
	if x != nil {
		return x.NumResolvers
	}
	return 0
}

type GraphqlApiSummary_StitchedSchemaSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumSubschemas uint32 `protobuf:"varint,1,opt,name=num_subschemas,json=numSubschemas,proto3" json:"num_subschemas,omitempty"`
}

func (x *GraphqlApiSummary_StitchedSchemaSummary) Reset() {
	*x = GraphqlApiSummary_StitchedSchemaSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GraphqlApiSummary_StitchedSchemaSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GraphqlApiSummary_StitchedSchemaSummary) ProtoMessage() {}

func (x *GraphqlApiSummary_StitchedSchemaSummary) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GraphqlApiSummary_StitchedSchemaSummary.ProtoReflect.Descriptor instead.
func (*GraphqlApiSummary_StitchedSchemaSummary) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDescGZIP(), []int{1, 1}
}

func (x *GraphqlApiSummary_StitchedSchemaSummary) GetNumSubschemas() uint32 {
	if x != nil {
		return x.NumSubschemas
	}
	return 0
}

var File_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto protoreflect.FileDescriptor

var file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDesc = []byte{
	0x0a, 0x56, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6c,
	0x6f, 0x2d, 0x69, 0x6f, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64,
	0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x71, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64,
	0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x1a,
	0x12, 0x65, 0x78, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x78, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x69, 0x6f, 0x2f, 0x73, 0x6b, 0x76, 0x32, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x49, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x69, 0x6f, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x61, 0x70, 0x69,
	0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x6c, 0x6f, 0x6f, 0x2f, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x71, 0x6c, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x55,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d,
	0x69, 0x6f, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65,
	0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x88, 0x02, 0x0a, 0x0a, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71,
	0x6c, 0x41, 0x70, 0x69, 0x12, 0x3d, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67,
	0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x38, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x2e, 0x67, 0x6c, 0x6f, 0x6f,
	0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x51, 0x4c,
	0x41, 0x70, 0x69, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x3e, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c,
	0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x51, 0x4c, 0x41, 0x70, 0x69, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x41, 0x0a,
	0x0d, 0x67, 0x6c, 0x6f, 0x6f, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x73, 0x6b, 0x76, 0x32,
	0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x66, 0x52, 0x0c, 0x67, 0x6c, 0x6f, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x22, 0xab, 0x04, 0x0a, 0x11, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x41, 0x70, 0x69, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x3d, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x65,
	0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x2e,
	0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x72, 0x61,
	0x70, 0x68, 0x51, 0x4c, 0x41, 0x70, 0x69, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x41, 0x0a, 0x0d, 0x67, 0x6c, 0x6f, 0x6f, 0x5f, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x73, 0x6b, 0x76, 0x32, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x66, 0x52, 0x0c, 0x67, 0x6c, 0x6f, 0x6f,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x62, 0x0a, 0x0a, 0x65, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c,
	0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x41, 0x70, 0x69, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x48, 0x00,
	0x52, 0x0a, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x5c, 0x0a, 0x08,
	0x73, 0x74, 0x69, 0x74, 0x63, 0x68, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73,
	0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x41, 0x70,
	0x69, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x2e, 0x53, 0x74, 0x69, 0x74, 0x63, 0x68, 0x65,
	0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x48, 0x00,
	0x52, 0x08, 0x73, 0x74, 0x69, 0x74, 0x63, 0x68, 0x65, 0x64, 0x1a, 0x3e, 0x0a, 0x17, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x6e, 0x75, 0x6d, 0x5f, 0x72, 0x65, 0x73,
	0x6f, 0x6c, 0x76, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6e, 0x75,
	0x6d, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x73, 0x1a, 0x3e, 0x0a, 0x15, 0x53, 0x74,
	0x69, 0x74, 0x63, 0x68, 0x65, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x6e, 0x75, 0x6d, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6e, 0x75, 0x6d,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x42, 0x12, 0x0a, 0x10, 0x61, 0x70,
	0x69, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x22, 0x63,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x41, 0x70, 0x69, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x0f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71,
	0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x73, 0x6b, 0x76, 0x32, 0x2e, 0x73, 0x6f, 0x6c, 0x6f,
	0x2e, 0x69, 0x6f, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x66, 0x52, 0x0d, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x41, 0x70, 0x69,
	0x52, 0x65, 0x66, 0x22, 0x5b, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71,
	0x6c, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0b,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f,
	0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71,
	0x6c, 0x41, 0x70, 0x69, 0x52, 0x0a, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x41, 0x70, 0x69,
	0x22, 0x62, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x41,
	0x70, 0x69, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x48, 0x0a, 0x11, 0x67, 0x6c,
	0x6f, 0x6f, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x73, 0x6b, 0x76,
	0x32, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x66, 0x52, 0x0f, 0x67, 0x6c, 0x6f, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x66, 0x22, 0x66, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x61, 0x70,
	0x68, 0x71, 0x6c, 0x41, 0x70, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4b, 0x0a, 0x0c, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65,
	0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x72,
	0x61, 0x70, 0x68, 0x71, 0x6c, 0x41, 0x70, 0x69, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52,
	0x0b, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x41, 0x70, 0x69, 0x73, 0x22, 0x67, 0x0a, 0x18,
	0x47, 0x65, 0x74, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x41, 0x70, 0x69, 0x59, 0x61, 0x6d,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x0f, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x71, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x73, 0x6b, 0x76, 0x32, 0x2e, 0x73, 0x6f,
	0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x66, 0x52, 0x0d, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x41,
	0x70, 0x69, 0x52, 0x65, 0x66, 0x22, 0x5d, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x47, 0x72, 0x61, 0x70,
	0x68, 0x71, 0x6c, 0x41, 0x70, 0x69, 0x59, 0x61, 0x6d, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x40, 0x0a, 0x09, 0x79, 0x61, 0x6d, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65,
	0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x59, 0x61, 0x6d, 0x6c, 0x52, 0x08, 0x79, 0x61, 0x6d, 0x6c,
	0x44, 0x61, 0x74, 0x61, 0x22, 0xa0, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47,
	0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x41, 0x70, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x4b, 0x0a, 0x0f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f,
	0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x73, 0x6b, 0x76, 0x32, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x66, 0x52, 0x0d,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x41, 0x70, 0x69, 0x52, 0x65, 0x66, 0x12, 0x38, 0x0a,
	0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x71, 0x6c, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e,
	0x69, 0x6f, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x51, 0x4c, 0x41, 0x70, 0x69, 0x53, 0x70, 0x65,
	0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0x5e, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0b, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x5f, 0x61,
	0x70, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x65,
	0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f,
	0x2e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x41, 0x70, 0x69, 0x52, 0x0a, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x71, 0x6c, 0x41, 0x70, 0x69, 0x22, 0xa0, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x41, 0x70, 0x69, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x0f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x5f, 0x61,
	0x70, 0x69, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x73, 0x6b, 0x76, 0x32, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f,
	0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x66, 0x52, 0x0d, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x41, 0x70, 0x69, 0x52, 0x65, 0x66,
	0x12, 0x38, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f,
	0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x51, 0x4c, 0x41, 0x70, 0x69,
	0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0x5e, 0x0a, 0x18, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x41, 0x70, 0x69, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0b, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71,
	0x6c, 0x5f, 0x61, 0x70, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f,
	0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x41, 0x70, 0x69, 0x52, 0x0a,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x41, 0x70, 0x69, 0x22, 0x66, 0x0a, 0x17, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x41, 0x70, 0x69, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x0f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c,
	0x5f, 0x61, 0x70, 0x69, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x73, 0x6b, 0x76, 0x32, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e,
	0x69, 0x6f, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x66, 0x52, 0x0d, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x41, 0x70, 0x69, 0x52,
	0x65, 0x66, 0x22, 0x67, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x61, 0x70,
	0x68, 0x71, 0x6c, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b,
	0x0a, 0x0f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x72, 0x65,
	0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x73,
	0x6b, 0x76, 0x32, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x66, 0x52, 0x0d, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x71, 0x6c, 0x41, 0x70, 0x69, 0x52, 0x65, 0x66, 0x22, 0xe3, 0x01, 0x0a, 0x1b,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72,
	0x59, 0x61, 0x6d, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x79,
	0x61, 0x6d, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x79, 0x61, 0x6d, 0x6c, 0x12,
	0x64, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3f, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67,
	0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x59,
	0x61, 0x6d, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c,
	0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x4a, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x45, 0x53, 0x4f, 0x4c, 0x56, 0x45,
	0x52, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x52,
	0x45, 0x53, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x4c, 0x56, 0x45, 0x52, 0x10, 0x01, 0x12, 0x11,
	0x0a, 0x0d, 0x47, 0x52, 0x50, 0x43, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x4c, 0x56, 0x45, 0x52, 0x10,
	0x02, 0x22, 0x1e, 0x0a, 0x1c, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x6f, 0x6c, 0x76, 0x65, 0x72, 0x59, 0x61, 0x6d, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x95, 0x01, 0x0a, 0x1f, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x11, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x10, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x2e, 0x67, 0x6c, 0x6f,
	0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x51,
	0x4c, 0x41, 0x70, 0x69, 0x53, 0x70, 0x65, 0x63, 0x48, 0x00, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63,
	0x42, 0x07, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x22, 0x22, 0x0a, 0x20, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x80, 0x01,
	0x0a, 0x22, 0x47, 0x65, 0x74, 0x53, 0x74, 0x69, 0x74, 0x63, 0x68, 0x65, 0x64, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x5a, 0x0a, 0x17, 0x73, 0x74, 0x69, 0x74, 0x63, 0x68, 0x65, 0x64,
	0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x72, 0x65, 0x66, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x73, 0x6b, 0x76,
	0x32, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x66, 0x52, 0x14, 0x73, 0x74, 0x69, 0x74,
	0x63, 0x68, 0x65, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x41, 0x70, 0x69, 0x52, 0x65, 0x66,
	0x22, 0x55, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x53, 0x74, 0x69, 0x74, 0x63, 0x68, 0x65, 0x64, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x74, 0x69, 0x74, 0x63,
	0x68, 0x65, 0x64, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x73, 0x64, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x74, 0x69, 0x74, 0x63, 0x68, 0x65, 0x64, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x53, 0x64, 0x6c, 0x32, 0x80, 0x09, 0x0a, 0x10, 0x47, 0x72, 0x61, 0x70,
	0x68, 0x71, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x70, 0x69, 0x12, 0x6c, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x41, 0x70, 0x69, 0x12, 0x2b, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f,
	0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c,
	0x41, 0x70, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e,
	0x69, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x41, 0x70, 0x69,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x72, 0x0a, 0x0f, 0x4c, 0x69,
	0x73, 0x74, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x41, 0x70, 0x69, 0x73, 0x12, 0x2d, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f,
	0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71,
	0x6c, 0x41, 0x70, 0x69, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c,
	0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c,
	0x41, 0x70, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x78,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x41, 0x70, 0x69, 0x59,
	0x61, 0x6d, 0x6c, 0x12, 0x2f, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x67,
	0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x47,
	0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x41, 0x70, 0x69, 0x59, 0x61, 0x6d, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e,
	0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x65, 0x74,
	0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x41, 0x70, 0x69, 0x59, 0x61, 0x6d, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x75, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x41, 0x70, 0x69, 0x12, 0x2e, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c,
	0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x61, 0x70, 0x68,
	0x71, 0x6c, 0x41, 0x70, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c,
	0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x61, 0x70, 0x68,
	0x71, 0x6c, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x75, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c,
	0x41, 0x70, 0x69, 0x12, 0x2e, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x67,
	0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x41, 0x70, 0x69, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x67,
	0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x75, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x41, 0x70, 0x69, 0x12, 0x2e, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e,
	0x69, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c,
	0x41, 0x70, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e,
	0x69, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c,
	0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x81, 0x01,
	0x0a, 0x14, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76,
	0x65, 0x72, 0x59, 0x61, 0x6d, 0x6c, 0x12, 0x32, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67,
	0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x59,
	0x61, 0x6d, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e,
	0x69, 0x6f, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x6c,
	0x76, 0x65, 0x72, 0x59, 0x61, 0x6d, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x8d, 0x01, 0x0a, 0x18, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73,
	0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67,
	0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x96, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x53, 0x74, 0x69, 0x74, 0x63, 0x68, 0x65,
	0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x39, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f,
	0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x69,
	0x74, 0x63, 0x68, 0x65, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c,
	0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x69, 0x74, 0x63, 0x68, 0x65, 0x64,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x56, 0x5a, 0x4c, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x69, 0x6f,
	0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64,
	0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2f, 0x76, 0x31, 0xc0, 0xf5, 0x04, 0x01, 0xb8, 0xf5,
	0x04, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDescOnce sync.Once
	file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDescData = file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDesc
)

func file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDescGZIP() []byte {
	file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDescOnce.Do(func() {
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDescData)
	})
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDescData
}

var file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_goTypes = []interface{}{
	(ValidateResolverYamlRequest_ResolverType)(0),     // 0: rpc.edge.gloo.solo.io.ValidateResolverYamlRequest.ResolverType
	(*GraphqlApi)(nil),                                // 1: rpc.edge.gloo.solo.io.GraphqlApi
	(*GraphqlApiSummary)(nil),                         // 2: rpc.edge.gloo.solo.io.GraphqlApiSummary
	(*GetGraphqlApiRequest)(nil),                      // 3: rpc.edge.gloo.solo.io.GetGraphqlApiRequest
	(*GetGraphqlApiResponse)(nil),                     // 4: rpc.edge.gloo.solo.io.GetGraphqlApiResponse
	(*ListGraphqlApisRequest)(nil),                    // 5: rpc.edge.gloo.solo.io.ListGraphqlApisRequest
	(*ListGraphqlApisResponse)(nil),                   // 6: rpc.edge.gloo.solo.io.ListGraphqlApisResponse
	(*GetGraphqlApiYamlRequest)(nil),                  // 7: rpc.edge.gloo.solo.io.GetGraphqlApiYamlRequest
	(*GetGraphqlApiYamlResponse)(nil),                 // 8: rpc.edge.gloo.solo.io.GetGraphqlApiYamlResponse
	(*CreateGraphqlApiRequest)(nil),                   // 9: rpc.edge.gloo.solo.io.CreateGraphqlApiRequest
	(*CreateGraphqlApiResponse)(nil),                  // 10: rpc.edge.gloo.solo.io.CreateGraphqlApiResponse
	(*UpdateGraphqlApiRequest)(nil),                   // 11: rpc.edge.gloo.solo.io.UpdateGraphqlApiRequest
	(*UpdateGraphqlApiResponse)(nil),                  // 12: rpc.edge.gloo.solo.io.UpdateGraphqlApiResponse
	(*DeleteGraphqlApiRequest)(nil),                   // 13: rpc.edge.gloo.solo.io.DeleteGraphqlApiRequest
	(*DeleteGraphqlApiResponse)(nil),                  // 14: rpc.edge.gloo.solo.io.DeleteGraphqlApiResponse
	(*ValidateResolverYamlRequest)(nil),               // 15: rpc.edge.gloo.solo.io.ValidateResolverYamlRequest
	(*ValidateResolverYamlResponse)(nil),              // 16: rpc.edge.gloo.solo.io.ValidateResolverYamlResponse
	(*ValidateSchemaDefinitionRequest)(nil),           // 17: rpc.edge.gloo.solo.io.ValidateSchemaDefinitionRequest
	(*ValidateSchemaDefinitionResponse)(nil),          // 18: rpc.edge.gloo.solo.io.ValidateSchemaDefinitionResponse
	(*GetStitchedSchemaDefinitionRequest)(nil),        // 19: rpc.edge.gloo.solo.io.GetStitchedSchemaDefinitionRequest
	(*GetStitchedSchemaDefinitionResponse)(nil),       // 20: rpc.edge.gloo.solo.io.GetStitchedSchemaDefinitionResponse
	(*GraphqlApiSummary_ExecutableSchemaSummary)(nil), // 21: rpc.edge.gloo.solo.io.GraphqlApiSummary.ExecutableSchemaSummary
	(*GraphqlApiSummary_StitchedSchemaSummary)(nil),   // 22: rpc.edge.gloo.solo.io.GraphqlApiSummary.StitchedSchemaSummary
	(*ObjectMeta)(nil),                                // 23: rpc.edge.gloo.solo.io.ObjectMeta
	(*v1alpha1.GraphQLApiSpec)(nil),                   // 24: graphql.gloo.solo.io.GraphQLApiSpec
	(*v1alpha1.GraphQLApiStatus)(nil),                 // 25: graphql.gloo.solo.io.GraphQLApiStatus
	(*v1.ObjectRef)(nil),                              // 26: core.skv2.solo.io.ObjectRef
	(*v1.ClusterObjectRef)(nil),                       // 27: core.skv2.solo.io.ClusterObjectRef
	(*ResourceYaml)(nil),                              // 28: rpc.edge.gloo.solo.io.ResourceYaml
}
var file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_depIdxs = []int32{
	23, // 0: rpc.edge.gloo.solo.io.GraphqlApi.metadata:type_name -> rpc.edge.gloo.solo.io.ObjectMeta
	24, // 1: rpc.edge.gloo.solo.io.GraphqlApi.spec:type_name -> graphql.gloo.solo.io.GraphQLApiSpec
	25, // 2: rpc.edge.gloo.solo.io.GraphqlApi.status:type_name -> graphql.gloo.solo.io.GraphQLApiStatus
	26, // 3: rpc.edge.gloo.solo.io.GraphqlApi.gloo_instance:type_name -> core.skv2.solo.io.ObjectRef
	23, // 4: rpc.edge.gloo.solo.io.GraphqlApiSummary.metadata:type_name -> rpc.edge.gloo.solo.io.ObjectMeta
	25, // 5: rpc.edge.gloo.solo.io.GraphqlApiSummary.status:type_name -> graphql.gloo.solo.io.GraphQLApiStatus
	26, // 6: rpc.edge.gloo.solo.io.GraphqlApiSummary.gloo_instance:type_name -> core.skv2.solo.io.ObjectRef
	21, // 7: rpc.edge.gloo.solo.io.GraphqlApiSummary.executable:type_name -> rpc.edge.gloo.solo.io.GraphqlApiSummary.ExecutableSchemaSummary
	22, // 8: rpc.edge.gloo.solo.io.GraphqlApiSummary.stitched:type_name -> rpc.edge.gloo.solo.io.GraphqlApiSummary.StitchedSchemaSummary
	27, // 9: rpc.edge.gloo.solo.io.GetGraphqlApiRequest.graphql_api_ref:type_name -> core.skv2.solo.io.ClusterObjectRef
	1,  // 10: rpc.edge.gloo.solo.io.GetGraphqlApiResponse.graphql_api:type_name -> rpc.edge.gloo.solo.io.GraphqlApi
	26, // 11: rpc.edge.gloo.solo.io.ListGraphqlApisRequest.gloo_instance_ref:type_name -> core.skv2.solo.io.ObjectRef
	2,  // 12: rpc.edge.gloo.solo.io.ListGraphqlApisResponse.graphql_apis:type_name -> rpc.edge.gloo.solo.io.GraphqlApiSummary
	27, // 13: rpc.edge.gloo.solo.io.GetGraphqlApiYamlRequest.graphql_api_ref:type_name -> core.skv2.solo.io.ClusterObjectRef
	28, // 14: rpc.edge.gloo.solo.io.GetGraphqlApiYamlResponse.yaml_data:type_name -> rpc.edge.gloo.solo.io.ResourceYaml
	27, // 15: rpc.edge.gloo.solo.io.CreateGraphqlApiRequest.graphql_api_ref:type_name -> core.skv2.solo.io.ClusterObjectRef
	24, // 16: rpc.edge.gloo.solo.io.CreateGraphqlApiRequest.spec:type_name -> graphql.gloo.solo.io.GraphQLApiSpec
	1,  // 17: rpc.edge.gloo.solo.io.CreateGraphqlApiResponse.graphql_api:type_name -> rpc.edge.gloo.solo.io.GraphqlApi
	27, // 18: rpc.edge.gloo.solo.io.UpdateGraphqlApiRequest.graphql_api_ref:type_name -> core.skv2.solo.io.ClusterObjectRef
	24, // 19: rpc.edge.gloo.solo.io.UpdateGraphqlApiRequest.spec:type_name -> graphql.gloo.solo.io.GraphQLApiSpec
	1,  // 20: rpc.edge.gloo.solo.io.UpdateGraphqlApiResponse.graphql_api:type_name -> rpc.edge.gloo.solo.io.GraphqlApi
	27, // 21: rpc.edge.gloo.solo.io.DeleteGraphqlApiRequest.graphql_api_ref:type_name -> core.skv2.solo.io.ClusterObjectRef
	27, // 22: rpc.edge.gloo.solo.io.DeleteGraphqlApiResponse.graphql_api_ref:type_name -> core.skv2.solo.io.ClusterObjectRef
	0,  // 23: rpc.edge.gloo.solo.io.ValidateResolverYamlRequest.resolver_type:type_name -> rpc.edge.gloo.solo.io.ValidateResolverYamlRequest.ResolverType
	24, // 24: rpc.edge.gloo.solo.io.ValidateSchemaDefinitionRequest.spec:type_name -> graphql.gloo.solo.io.GraphQLApiSpec
	27, // 25: rpc.edge.gloo.solo.io.GetStitchedSchemaDefinitionRequest.stitched_schema_api_ref:type_name -> core.skv2.solo.io.ClusterObjectRef
	3,  // 26: rpc.edge.gloo.solo.io.GraphqlConfigApi.GetGraphqlApi:input_type -> rpc.edge.gloo.solo.io.GetGraphqlApiRequest
	5,  // 27: rpc.edge.gloo.solo.io.GraphqlConfigApi.ListGraphqlApis:input_type -> rpc.edge.gloo.solo.io.ListGraphqlApisRequest
	7,  // 28: rpc.edge.gloo.solo.io.GraphqlConfigApi.GetGraphqlApiYaml:input_type -> rpc.edge.gloo.solo.io.GetGraphqlApiYamlRequest
	9,  // 29: rpc.edge.gloo.solo.io.GraphqlConfigApi.CreateGraphqlApi:input_type -> rpc.edge.gloo.solo.io.CreateGraphqlApiRequest
	11, // 30: rpc.edge.gloo.solo.io.GraphqlConfigApi.UpdateGraphqlApi:input_type -> rpc.edge.gloo.solo.io.UpdateGraphqlApiRequest
	13, // 31: rpc.edge.gloo.solo.io.GraphqlConfigApi.DeleteGraphqlApi:input_type -> rpc.edge.gloo.solo.io.DeleteGraphqlApiRequest
	15, // 32: rpc.edge.gloo.solo.io.GraphqlConfigApi.ValidateResolverYaml:input_type -> rpc.edge.gloo.solo.io.ValidateResolverYamlRequest
	17, // 33: rpc.edge.gloo.solo.io.GraphqlConfigApi.ValidateSchemaDefinition:input_type -> rpc.edge.gloo.solo.io.ValidateSchemaDefinitionRequest
	19, // 34: rpc.edge.gloo.solo.io.GraphqlConfigApi.GetStitchedSchemaDefinition:input_type -> rpc.edge.gloo.solo.io.GetStitchedSchemaDefinitionRequest
	4,  // 35: rpc.edge.gloo.solo.io.GraphqlConfigApi.GetGraphqlApi:output_type -> rpc.edge.gloo.solo.io.GetGraphqlApiResponse
	6,  // 36: rpc.edge.gloo.solo.io.GraphqlConfigApi.ListGraphqlApis:output_type -> rpc.edge.gloo.solo.io.ListGraphqlApisResponse
	8,  // 37: rpc.edge.gloo.solo.io.GraphqlConfigApi.GetGraphqlApiYaml:output_type -> rpc.edge.gloo.solo.io.GetGraphqlApiYamlResponse
	10, // 38: rpc.edge.gloo.solo.io.GraphqlConfigApi.CreateGraphqlApi:output_type -> rpc.edge.gloo.solo.io.CreateGraphqlApiResponse
	12, // 39: rpc.edge.gloo.solo.io.GraphqlConfigApi.UpdateGraphqlApi:output_type -> rpc.edge.gloo.solo.io.UpdateGraphqlApiResponse
	14, // 40: rpc.edge.gloo.solo.io.GraphqlConfigApi.DeleteGraphqlApi:output_type -> rpc.edge.gloo.solo.io.DeleteGraphqlApiResponse
	16, // 41: rpc.edge.gloo.solo.io.GraphqlConfigApi.ValidateResolverYaml:output_type -> rpc.edge.gloo.solo.io.ValidateResolverYamlResponse
	18, // 42: rpc.edge.gloo.solo.io.GraphqlConfigApi.ValidateSchemaDefinition:output_type -> rpc.edge.gloo.solo.io.ValidateSchemaDefinitionResponse
	20, // 43: rpc.edge.gloo.solo.io.GraphqlConfigApi.GetStitchedSchemaDefinition:output_type -> rpc.edge.gloo.solo.io.GetStitchedSchemaDefinitionResponse
	35, // [35:44] is the sub-list for method output_type
	26, // [26:35] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() {
	file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_init()
}
func file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_init() {
	if File_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto != nil {
		return
	}
	file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GraphqlApi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GraphqlApiSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGraphqlApiRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGraphqlApiResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGraphqlApisRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGraphqlApisResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGraphqlApiYamlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGraphqlApiYamlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGraphqlApiRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGraphqlApiResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGraphqlApiRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGraphqlApiResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGraphqlApiRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGraphqlApiResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateResolverYamlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateResolverYamlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateSchemaDefinitionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateSchemaDefinitionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStitchedSchemaDefinitionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStitchedSchemaDefinitionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GraphqlApiSummary_ExecutableSchemaSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GraphqlApiSummary_StitchedSchemaSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*GraphqlApiSummary_Executable)(nil),
		(*GraphqlApiSummary_Stitched)(nil),
	}
	file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[16].OneofWrappers = []interface{}{
		(*ValidateSchemaDefinitionRequest_SchemaDefinition)(nil),
		(*ValidateSchemaDefinitionRequest_Spec)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_goTypes,
		DependencyIndexes: file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_depIdxs,
		EnumInfos:         file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_enumTypes,
		MessageInfos:      file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes,
	}.Build()
	File_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto = out.File
	file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDesc = nil
	file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_goTypes = nil
	file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GraphqlConfigApiClient is the client API for GraphqlConfigApi service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GraphqlConfigApiClient interface {
	GetGraphqlApi(ctx context.Context, in *GetGraphqlApiRequest, opts ...grpc.CallOption) (*GetGraphqlApiResponse, error)
	ListGraphqlApis(ctx context.Context, in *ListGraphqlApisRequest, opts ...grpc.CallOption) (*ListGraphqlApisResponse, error)
	GetGraphqlApiYaml(ctx context.Context, in *GetGraphqlApiYamlRequest, opts ...grpc.CallOption) (*GetGraphqlApiYamlResponse, error)
	CreateGraphqlApi(ctx context.Context, in *CreateGraphqlApiRequest, opts ...grpc.CallOption) (*CreateGraphqlApiResponse, error)
	UpdateGraphqlApi(ctx context.Context, in *UpdateGraphqlApiRequest, opts ...grpc.CallOption) (*UpdateGraphqlApiResponse, error)
	DeleteGraphqlApi(ctx context.Context, in *DeleteGraphqlApiRequest, opts ...grpc.CallOption) (*DeleteGraphqlApiResponse, error)
	ValidateResolverYaml(ctx context.Context, in *ValidateResolverYamlRequest, opts ...grpc.CallOption) (*ValidateResolverYamlResponse, error)
	ValidateSchemaDefinition(ctx context.Context, in *ValidateSchemaDefinitionRequest, opts ...grpc.CallOption) (*ValidateSchemaDefinitionResponse, error)
	GetStitchedSchemaDefinition(ctx context.Context, in *GetStitchedSchemaDefinitionRequest, opts ...grpc.CallOption) (*GetStitchedSchemaDefinitionResponse, error)
}

type graphqlConfigApiClient struct {
	cc grpc.ClientConnInterface
}

func NewGraphqlConfigApiClient(cc grpc.ClientConnInterface) GraphqlConfigApiClient {
	return &graphqlConfigApiClient{cc}
}

func (c *graphqlConfigApiClient) GetGraphqlApi(ctx context.Context, in *GetGraphqlApiRequest, opts ...grpc.CallOption) (*GetGraphqlApiResponse, error) {
	out := new(GetGraphqlApiResponse)
	err := c.cc.Invoke(ctx, "/rpc.edge.gloo.solo.io.GraphqlConfigApi/GetGraphqlApi", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *graphqlConfigApiClient) ListGraphqlApis(ctx context.Context, in *ListGraphqlApisRequest, opts ...grpc.CallOption) (*ListGraphqlApisResponse, error) {
	out := new(ListGraphqlApisResponse)
	err := c.cc.Invoke(ctx, "/rpc.edge.gloo.solo.io.GraphqlConfigApi/ListGraphqlApis", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *graphqlConfigApiClient) GetGraphqlApiYaml(ctx context.Context, in *GetGraphqlApiYamlRequest, opts ...grpc.CallOption) (*GetGraphqlApiYamlResponse, error) {
	out := new(GetGraphqlApiYamlResponse)
	err := c.cc.Invoke(ctx, "/rpc.edge.gloo.solo.io.GraphqlConfigApi/GetGraphqlApiYaml", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *graphqlConfigApiClient) CreateGraphqlApi(ctx context.Context, in *CreateGraphqlApiRequest, opts ...grpc.CallOption) (*CreateGraphqlApiResponse, error) {
	out := new(CreateGraphqlApiResponse)
	err := c.cc.Invoke(ctx, "/rpc.edge.gloo.solo.io.GraphqlConfigApi/CreateGraphqlApi", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *graphqlConfigApiClient) UpdateGraphqlApi(ctx context.Context, in *UpdateGraphqlApiRequest, opts ...grpc.CallOption) (*UpdateGraphqlApiResponse, error) {
	out := new(UpdateGraphqlApiResponse)
	err := c.cc.Invoke(ctx, "/rpc.edge.gloo.solo.io.GraphqlConfigApi/UpdateGraphqlApi", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *graphqlConfigApiClient) DeleteGraphqlApi(ctx context.Context, in *DeleteGraphqlApiRequest, opts ...grpc.CallOption) (*DeleteGraphqlApiResponse, error) {
	out := new(DeleteGraphqlApiResponse)
	err := c.cc.Invoke(ctx, "/rpc.edge.gloo.solo.io.GraphqlConfigApi/DeleteGraphqlApi", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *graphqlConfigApiClient) ValidateResolverYaml(ctx context.Context, in *ValidateResolverYamlRequest, opts ...grpc.CallOption) (*ValidateResolverYamlResponse, error) {
	out := new(ValidateResolverYamlResponse)
	err := c.cc.Invoke(ctx, "/rpc.edge.gloo.solo.io.GraphqlConfigApi/ValidateResolverYaml", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *graphqlConfigApiClient) ValidateSchemaDefinition(ctx context.Context, in *ValidateSchemaDefinitionRequest, opts ...grpc.CallOption) (*ValidateSchemaDefinitionResponse, error) {
	out := new(ValidateSchemaDefinitionResponse)
	err := c.cc.Invoke(ctx, "/rpc.edge.gloo.solo.io.GraphqlConfigApi/ValidateSchemaDefinition", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *graphqlConfigApiClient) GetStitchedSchemaDefinition(ctx context.Context, in *GetStitchedSchemaDefinitionRequest, opts ...grpc.CallOption) (*GetStitchedSchemaDefinitionResponse, error) {
	out := new(GetStitchedSchemaDefinitionResponse)
	err := c.cc.Invoke(ctx, "/rpc.edge.gloo.solo.io.GraphqlConfigApi/GetStitchedSchemaDefinition", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GraphqlConfigApiServer is the server API for GraphqlConfigApi service.
type GraphqlConfigApiServer interface {
	GetGraphqlApi(context.Context, *GetGraphqlApiRequest) (*GetGraphqlApiResponse, error)
	ListGraphqlApis(context.Context, *ListGraphqlApisRequest) (*ListGraphqlApisResponse, error)
	GetGraphqlApiYaml(context.Context, *GetGraphqlApiYamlRequest) (*GetGraphqlApiYamlResponse, error)
	CreateGraphqlApi(context.Context, *CreateGraphqlApiRequest) (*CreateGraphqlApiResponse, error)
	UpdateGraphqlApi(context.Context, *UpdateGraphqlApiRequest) (*UpdateGraphqlApiResponse, error)
	DeleteGraphqlApi(context.Context, *DeleteGraphqlApiRequest) (*DeleteGraphqlApiResponse, error)
	ValidateResolverYaml(context.Context, *ValidateResolverYamlRequest) (*ValidateResolverYamlResponse, error)
	ValidateSchemaDefinition(context.Context, *ValidateSchemaDefinitionRequest) (*ValidateSchemaDefinitionResponse, error)
	GetStitchedSchemaDefinition(context.Context, *GetStitchedSchemaDefinitionRequest) (*GetStitchedSchemaDefinitionResponse, error)
}

// UnimplementedGraphqlConfigApiServer can be embedded to have forward compatible implementations.
type UnimplementedGraphqlConfigApiServer struct {
}

func (*UnimplementedGraphqlConfigApiServer) GetGraphqlApi(context.Context, *GetGraphqlApiRequest) (*GetGraphqlApiResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGraphqlApi not implemented")
}
func (*UnimplementedGraphqlConfigApiServer) ListGraphqlApis(context.Context, *ListGraphqlApisRequest) (*ListGraphqlApisResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListGraphqlApis not implemented")
}
func (*UnimplementedGraphqlConfigApiServer) GetGraphqlApiYaml(context.Context, *GetGraphqlApiYamlRequest) (*GetGraphqlApiYamlResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGraphqlApiYaml not implemented")
}
func (*UnimplementedGraphqlConfigApiServer) CreateGraphqlApi(context.Context, *CreateGraphqlApiRequest) (*CreateGraphqlApiResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateGraphqlApi not implemented")
}
func (*UnimplementedGraphqlConfigApiServer) UpdateGraphqlApi(context.Context, *UpdateGraphqlApiRequest) (*UpdateGraphqlApiResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateGraphqlApi not implemented")
}
func (*UnimplementedGraphqlConfigApiServer) DeleteGraphqlApi(context.Context, *DeleteGraphqlApiRequest) (*DeleteGraphqlApiResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteGraphqlApi not implemented")
}
func (*UnimplementedGraphqlConfigApiServer) ValidateResolverYaml(context.Context, *ValidateResolverYamlRequest) (*ValidateResolverYamlResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidateResolverYaml not implemented")
}
func (*UnimplementedGraphqlConfigApiServer) ValidateSchemaDefinition(context.Context, *ValidateSchemaDefinitionRequest) (*ValidateSchemaDefinitionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidateSchemaDefinition not implemented")
}
func (*UnimplementedGraphqlConfigApiServer) GetStitchedSchemaDefinition(context.Context, *GetStitchedSchemaDefinitionRequest) (*GetStitchedSchemaDefinitionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStitchedSchemaDefinition not implemented")
}

func RegisterGraphqlConfigApiServer(s *grpc.Server, srv GraphqlConfigApiServer) {
	s.RegisterService(&_GraphqlConfigApi_serviceDesc, srv)
}

func _GraphqlConfigApi_GetGraphqlApi_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGraphqlApiRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GraphqlConfigApiServer).GetGraphqlApi(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.edge.gloo.solo.io.GraphqlConfigApi/GetGraphqlApi",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GraphqlConfigApiServer).GetGraphqlApi(ctx, req.(*GetGraphqlApiRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GraphqlConfigApi_ListGraphqlApis_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListGraphqlApisRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GraphqlConfigApiServer).ListGraphqlApis(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.edge.gloo.solo.io.GraphqlConfigApi/ListGraphqlApis",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GraphqlConfigApiServer).ListGraphqlApis(ctx, req.(*ListGraphqlApisRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GraphqlConfigApi_GetGraphqlApiYaml_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGraphqlApiYamlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GraphqlConfigApiServer).GetGraphqlApiYaml(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.edge.gloo.solo.io.GraphqlConfigApi/GetGraphqlApiYaml",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GraphqlConfigApiServer).GetGraphqlApiYaml(ctx, req.(*GetGraphqlApiYamlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GraphqlConfigApi_CreateGraphqlApi_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateGraphqlApiRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GraphqlConfigApiServer).CreateGraphqlApi(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.edge.gloo.solo.io.GraphqlConfigApi/CreateGraphqlApi",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GraphqlConfigApiServer).CreateGraphqlApi(ctx, req.(*CreateGraphqlApiRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GraphqlConfigApi_UpdateGraphqlApi_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateGraphqlApiRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GraphqlConfigApiServer).UpdateGraphqlApi(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.edge.gloo.solo.io.GraphqlConfigApi/UpdateGraphqlApi",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GraphqlConfigApiServer).UpdateGraphqlApi(ctx, req.(*UpdateGraphqlApiRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GraphqlConfigApi_DeleteGraphqlApi_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteGraphqlApiRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GraphqlConfigApiServer).DeleteGraphqlApi(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.edge.gloo.solo.io.GraphqlConfigApi/DeleteGraphqlApi",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GraphqlConfigApiServer).DeleteGraphqlApi(ctx, req.(*DeleteGraphqlApiRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GraphqlConfigApi_ValidateResolverYaml_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidateResolverYamlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GraphqlConfigApiServer).ValidateResolverYaml(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.edge.gloo.solo.io.GraphqlConfigApi/ValidateResolverYaml",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GraphqlConfigApiServer).ValidateResolverYaml(ctx, req.(*ValidateResolverYamlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GraphqlConfigApi_ValidateSchemaDefinition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidateSchemaDefinitionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GraphqlConfigApiServer).ValidateSchemaDefinition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.edge.gloo.solo.io.GraphqlConfigApi/ValidateSchemaDefinition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GraphqlConfigApiServer).ValidateSchemaDefinition(ctx, req.(*ValidateSchemaDefinitionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GraphqlConfigApi_GetStitchedSchemaDefinition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStitchedSchemaDefinitionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GraphqlConfigApiServer).GetStitchedSchemaDefinition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.edge.gloo.solo.io.GraphqlConfigApi/GetStitchedSchemaDefinition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GraphqlConfigApiServer).GetStitchedSchemaDefinition(ctx, req.(*GetStitchedSchemaDefinitionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GraphqlConfigApi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.edge.gloo.solo.io.GraphqlConfigApi",
	HandlerType: (*GraphqlConfigApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetGraphqlApi",
			Handler:    _GraphqlConfigApi_GetGraphqlApi_Handler,
		},
		{
			MethodName: "ListGraphqlApis",
			Handler:    _GraphqlConfigApi_ListGraphqlApis_Handler,
		},
		{
			MethodName: "GetGraphqlApiYaml",
			Handler:    _GraphqlConfigApi_GetGraphqlApiYaml_Handler,
		},
		{
			MethodName: "CreateGraphqlApi",
			Handler:    _GraphqlConfigApi_CreateGraphqlApi_Handler,
		},
		{
			MethodName: "UpdateGraphqlApi",
			Handler:    _GraphqlConfigApi_UpdateGraphqlApi_Handler,
		},
		{
			MethodName: "DeleteGraphqlApi",
			Handler:    _GraphqlConfigApi_DeleteGraphqlApi_Handler,
		},
		{
			MethodName: "ValidateResolverYaml",
			Handler:    _GraphqlConfigApi_ValidateResolverYaml_Handler,
		},
		{
			MethodName: "ValidateSchemaDefinition",
			Handler:    _GraphqlConfigApi_ValidateSchemaDefinition_Handler,
		},
		{
			MethodName: "GetStitchedSchemaDefinition",
			Handler:    _GraphqlConfigApi_GetStitchedSchemaDefinition_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/solo-io/solo-projects/projects/apiserver/api/rpc.edge.gloo/v1/graphql.proto",
}
