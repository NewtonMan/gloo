// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.6.1
// source: github.com/solo-io/solo-projects/projects/apiserver/api/rpc.edge.gloo/v1/graphql.proto

package v1

import (
	context "context"
	reflect "reflect"
	sync "sync"

	_ "github.com/solo-io/protoc-gen-ext/extproto"
	v1 "github.com/solo-io/skv2/pkg/api/core.skv2.solo.io/v1"
	v1alpha1 "github.com/solo-io/solo-apis/pkg/api/graphql.gloo.solo.io/v1alpha1"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ValidateResolverYamlRequest_ResolverType int32

const (
	ValidateResolverYamlRequest_RESOLVER_NOT_SET ValidateResolverYamlRequest_ResolverType = 0
	ValidateResolverYamlRequest_REST_RESOLVER    ValidateResolverYamlRequest_ResolverType = 1
	ValidateResolverYamlRequest_GRPC_RESOLVER    ValidateResolverYamlRequest_ResolverType = 2
)

// Enum value maps for ValidateResolverYamlRequest_ResolverType.
var (
	ValidateResolverYamlRequest_ResolverType_name = map[int32]string{
		0: "RESOLVER_NOT_SET",
		1: "REST_RESOLVER",
		2: "GRPC_RESOLVER",
	}
	ValidateResolverYamlRequest_ResolverType_value = map[string]int32{
		"RESOLVER_NOT_SET": 0,
		"REST_RESOLVER":    1,
		"GRPC_RESOLVER":    2,
	}
)

func (x ValidateResolverYamlRequest_ResolverType) Enum() *ValidateResolverYamlRequest_ResolverType {
	p := new(ValidateResolverYamlRequest_ResolverType)
	*p = x
	return p
}

func (x ValidateResolverYamlRequest_ResolverType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ValidateResolverYamlRequest_ResolverType) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_enumTypes[0].Descriptor()
}

func (ValidateResolverYamlRequest_ResolverType) Type() protoreflect.EnumType {
	return &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_enumTypes[0]
}

func (x ValidateResolverYamlRequest_ResolverType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ValidateResolverYamlRequest_ResolverType.Descriptor instead.
func (ValidateResolverYamlRequest_ResolverType) EnumDescriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDescGZIP(), []int{13, 0}
}

// GraphQLSchema CR details.
type GraphqlSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata     *ObjectMeta                   `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec         *v1alpha1.GraphQLSchemaSpec   `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	Status       *v1alpha1.GraphQLSchemaStatus `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	GlooInstance *v1.ObjectRef                 `protobuf:"bytes,4,opt,name=gloo_instance,json=glooInstance,proto3" json:"gloo_instance,omitempty"`
}

func (x *GraphqlSchema) Reset() {
	*x = GraphqlSchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GraphqlSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GraphqlSchema) ProtoMessage() {}

func (x *GraphqlSchema) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GraphqlSchema.ProtoReflect.Descriptor instead.
func (*GraphqlSchema) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDescGZIP(), []int{0}
}

func (x *GraphqlSchema) GetMetadata() *ObjectMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *GraphqlSchema) GetSpec() *v1alpha1.GraphQLSchemaSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *GraphqlSchema) GetStatus() *v1alpha1.GraphQLSchemaStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *GraphqlSchema) GetGlooInstance() *v1.ObjectRef {
	if x != nil {
		return x.GlooInstance
	}
	return nil
}

// Gets a GraphQLSchema CR by reference.
type GetGraphqlSchemaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A reference to the GraphQLSchema. If this is a single-cluster (non-federated) Gloo Edge installation,
	// cluster name is not used.
	GraphqlSchemaRef *v1.ClusterObjectRef `protobuf:"bytes,1,opt,name=graphql_schema_ref,json=graphqlSchemaRef,proto3" json:"graphql_schema_ref,omitempty"`
}

func (x *GetGraphqlSchemaRequest) Reset() {
	*x = GetGraphqlSchemaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGraphqlSchemaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGraphqlSchemaRequest) ProtoMessage() {}

func (x *GetGraphqlSchemaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGraphqlSchemaRequest.ProtoReflect.Descriptor instead.
func (*GetGraphqlSchemaRequest) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDescGZIP(), []int{1}
}

func (x *GetGraphqlSchemaRequest) GetGraphqlSchemaRef() *v1.ClusterObjectRef {
	if x != nil {
		return x.GraphqlSchemaRef
	}
	return nil
}

type GetGraphqlSchemaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GraphqlSchema *GraphqlSchema `protobuf:"bytes,1,opt,name=graphql_schema,json=graphqlSchema,proto3" json:"graphql_schema,omitempty"`
}

func (x *GetGraphqlSchemaResponse) Reset() {
	*x = GetGraphqlSchemaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGraphqlSchemaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGraphqlSchemaResponse) ProtoMessage() {}

func (x *GetGraphqlSchemaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGraphqlSchemaResponse.ProtoReflect.Descriptor instead.
func (*GetGraphqlSchemaResponse) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDescGZIP(), []int{2}
}

func (x *GetGraphqlSchemaResponse) GetGraphqlSchema() *GraphqlSchema {
	if x != nil {
		return x.GraphqlSchema
	}
	return nil
}

// Gets a list of GraphQLSchema CRs.
type ListGraphqlSchemasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// (Optional) A reference to a Gloo Edge instance. If provided, only GraphQLSchemas on this Gloo Edge instance will be
	// returned. Otherwise, all GraphQLSchemas across all Gloo Edge instances will be returned.
	GlooInstanceRef *v1.ObjectRef `protobuf:"bytes,1,opt,name=gloo_instance_ref,json=glooInstanceRef,proto3" json:"gloo_instance_ref,omitempty"`
}

func (x *ListGraphqlSchemasRequest) Reset() {
	*x = ListGraphqlSchemasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGraphqlSchemasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGraphqlSchemasRequest) ProtoMessage() {}

func (x *ListGraphqlSchemasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGraphqlSchemasRequest.ProtoReflect.Descriptor instead.
func (*ListGraphqlSchemasRequest) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDescGZIP(), []int{3}
}

func (x *ListGraphqlSchemasRequest) GetGlooInstanceRef() *v1.ObjectRef {
	if x != nil {
		return x.GlooInstanceRef
	}
	return nil
}

type ListGraphqlSchemasResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GraphqlSchemas []*GraphqlSchema `protobuf:"bytes,1,rep,name=graphql_schemas,json=graphqlSchemas,proto3" json:"graphql_schemas,omitempty"`
}

func (x *ListGraphqlSchemasResponse) Reset() {
	*x = ListGraphqlSchemasResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGraphqlSchemasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGraphqlSchemasResponse) ProtoMessage() {}

func (x *ListGraphqlSchemasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGraphqlSchemasResponse.ProtoReflect.Descriptor instead.
func (*ListGraphqlSchemasResponse) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDescGZIP(), []int{4}
}

func (x *ListGraphqlSchemasResponse) GetGraphqlSchemas() []*GraphqlSchema {
	if x != nil {
		return x.GraphqlSchemas
	}
	return nil
}

// Gets the yaml for a GraphQLSchema CR.
type GetGraphqlSchemaYamlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A reference to the GraphQLSchema. If this is a single-cluster (non-federated) Gloo Edge installation,
	// cluster name is not used.
	GraphqlSchemaRef *v1.ClusterObjectRef `protobuf:"bytes,1,opt,name=graphql_schema_ref,json=graphqlSchemaRef,proto3" json:"graphql_schema_ref,omitempty"`
}

func (x *GetGraphqlSchemaYamlRequest) Reset() {
	*x = GetGraphqlSchemaYamlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGraphqlSchemaYamlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGraphqlSchemaYamlRequest) ProtoMessage() {}

func (x *GetGraphqlSchemaYamlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGraphqlSchemaYamlRequest.ProtoReflect.Descriptor instead.
func (*GetGraphqlSchemaYamlRequest) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDescGZIP(), []int{5}
}

func (x *GetGraphqlSchemaYamlRequest) GetGraphqlSchemaRef() *v1.ClusterObjectRef {
	if x != nil {
		return x.GraphqlSchemaRef
	}
	return nil
}

type GetGraphqlSchemaYamlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	YamlData *ResourceYaml `protobuf:"bytes,1,opt,name=yaml_data,json=yamlData,proto3" json:"yaml_data,omitempty"`
}

func (x *GetGraphqlSchemaYamlResponse) Reset() {
	*x = GetGraphqlSchemaYamlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGraphqlSchemaYamlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGraphqlSchemaYamlResponse) ProtoMessage() {}

func (x *GetGraphqlSchemaYamlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGraphqlSchemaYamlResponse.ProtoReflect.Descriptor instead.
func (*GetGraphqlSchemaYamlResponse) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDescGZIP(), []int{6}
}

func (x *GetGraphqlSchemaYamlResponse) GetYamlData() *ResourceYaml {
	if x != nil {
		return x.YamlData
	}
	return nil
}

// Creates a new GraphQLSchema.
type CreateGraphqlSchemaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A reference to the GraphQLSchema to create. If this is a single-cluster (non-federated) Gloo Edge installation,
	// cluster name is not used.
	GraphqlSchemaRef *v1.ClusterObjectRef `protobuf:"bytes,1,opt,name=graphql_schema_ref,json=graphqlSchemaRef,proto3" json:"graphql_schema_ref,omitempty"`
	// The spec for the new GraphQLSchema.
	Spec *v1alpha1.GraphQLSchemaSpec `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *CreateGraphqlSchemaRequest) Reset() {
	*x = CreateGraphqlSchemaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGraphqlSchemaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGraphqlSchemaRequest) ProtoMessage() {}

func (x *CreateGraphqlSchemaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGraphqlSchemaRequest.ProtoReflect.Descriptor instead.
func (*CreateGraphqlSchemaRequest) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDescGZIP(), []int{7}
}

func (x *CreateGraphqlSchemaRequest) GetGraphqlSchemaRef() *v1.ClusterObjectRef {
	if x != nil {
		return x.GraphqlSchemaRef
	}
	return nil
}

func (x *CreateGraphqlSchemaRequest) GetSpec() *v1alpha1.GraphQLSchemaSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type CreateGraphqlSchemaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The updated GraphQLSchema.
	GraphqlSchema *GraphqlSchema `protobuf:"bytes,1,opt,name=graphql_schema,json=graphqlSchema,proto3" json:"graphql_schema,omitempty"`
}

func (x *CreateGraphqlSchemaResponse) Reset() {
	*x = CreateGraphqlSchemaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGraphqlSchemaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGraphqlSchemaResponse) ProtoMessage() {}

func (x *CreateGraphqlSchemaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGraphqlSchemaResponse.ProtoReflect.Descriptor instead.
func (*CreateGraphqlSchemaResponse) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDescGZIP(), []int{8}
}

func (x *CreateGraphqlSchemaResponse) GetGraphqlSchema() *GraphqlSchema {
	if x != nil {
		return x.GraphqlSchema
	}
	return nil
}

// Updates an existing GraphQLSchema.
type UpdateGraphqlSchemaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A reference to an existing GraphQLSchema to update. If this is a single-cluster (non-federated) Gloo Edge installation,
	// cluster name is not used.
	GraphqlSchemaRef *v1.ClusterObjectRef `protobuf:"bytes,1,opt,name=graphql_schema_ref,json=graphqlSchemaRef,proto3" json:"graphql_schema_ref,omitempty"`
	// The updated GraphQLSchema spec.
	Spec *v1alpha1.GraphQLSchemaSpec `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *UpdateGraphqlSchemaRequest) Reset() {
	*x = UpdateGraphqlSchemaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGraphqlSchemaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGraphqlSchemaRequest) ProtoMessage() {}

func (x *UpdateGraphqlSchemaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGraphqlSchemaRequest.ProtoReflect.Descriptor instead.
func (*UpdateGraphqlSchemaRequest) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateGraphqlSchemaRequest) GetGraphqlSchemaRef() *v1.ClusterObjectRef {
	if x != nil {
		return x.GraphqlSchemaRef
	}
	return nil
}

func (x *UpdateGraphqlSchemaRequest) GetSpec() *v1alpha1.GraphQLSchemaSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type UpdateGraphqlSchemaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The updated GraphQLSchema.
	GraphqlSchema *GraphqlSchema `protobuf:"bytes,1,opt,name=graphql_schema,json=graphqlSchema,proto3" json:"graphql_schema,omitempty"`
}

func (x *UpdateGraphqlSchemaResponse) Reset() {
	*x = UpdateGraphqlSchemaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGraphqlSchemaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGraphqlSchemaResponse) ProtoMessage() {}

func (x *UpdateGraphqlSchemaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGraphqlSchemaResponse.ProtoReflect.Descriptor instead.
func (*UpdateGraphqlSchemaResponse) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateGraphqlSchemaResponse) GetGraphqlSchema() *GraphqlSchema {
	if x != nil {
		return x.GraphqlSchema
	}
	return nil
}

// Deletes a GraphQLSchema by reference.
type DeleteGraphqlSchemaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A reference to the GraphQLSchema to delete. If this is a single-cluster (non-federated) Gloo Edge installation,
	// cluster name is not used.
	GraphqlSchemaRef *v1.ClusterObjectRef `protobuf:"bytes,1,opt,name=graphql_schema_ref,json=graphqlSchemaRef,proto3" json:"graphql_schema_ref,omitempty"`
}

func (x *DeleteGraphqlSchemaRequest) Reset() {
	*x = DeleteGraphqlSchemaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGraphqlSchemaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGraphqlSchemaRequest) ProtoMessage() {}

func (x *DeleteGraphqlSchemaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGraphqlSchemaRequest.ProtoReflect.Descriptor instead.
func (*DeleteGraphqlSchemaRequest) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteGraphqlSchemaRequest) GetGraphqlSchemaRef() *v1.ClusterObjectRef {
	if x != nil {
		return x.GraphqlSchemaRef
	}
	return nil
}

type DeleteGraphqlSchemaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Reference to the deleted GraphQLSchema.
	GraphqlSchemaRef *v1.ClusterObjectRef `protobuf:"bytes,1,opt,name=graphql_schema_ref,json=graphqlSchemaRef,proto3" json:"graphql_schema_ref,omitempty"`
}

func (x *DeleteGraphqlSchemaResponse) Reset() {
	*x = DeleteGraphqlSchemaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGraphqlSchemaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGraphqlSchemaResponse) ProtoMessage() {}

func (x *DeleteGraphqlSchemaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGraphqlSchemaResponse.ProtoReflect.Descriptor instead.
func (*DeleteGraphqlSchemaResponse) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteGraphqlSchemaResponse) GetGraphqlSchemaRef() *v1.ClusterObjectRef {
	if x != nil {
		return x.GraphqlSchemaRef
	}
	return nil
}

// Validates the given resolver yaml.
type ValidateResolverYamlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The resolver yaml to validate.
	Yaml string `protobuf:"bytes,1,opt,name=yaml,proto3" json:"yaml,omitempty"`
	// The type of resolver.
	ResolverType ValidateResolverYamlRequest_ResolverType `protobuf:"varint,2,opt,name=resolver_type,json=resolverType,proto3,enum=rpc.edge.gloo.solo.io.ValidateResolverYamlRequest_ResolverType" json:"resolver_type,omitempty"`
}

func (x *ValidateResolverYamlRequest) Reset() {
	*x = ValidateResolverYamlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateResolverYamlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateResolverYamlRequest) ProtoMessage() {}

func (x *ValidateResolverYamlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateResolverYamlRequest.ProtoReflect.Descriptor instead.
func (*ValidateResolverYamlRequest) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDescGZIP(), []int{13}
}

func (x *ValidateResolverYamlRequest) GetYaml() string {
	if x != nil {
		return x.Yaml
	}
	return ""
}

func (x *ValidateResolverYamlRequest) GetResolverType() ValidateResolverYamlRequest_ResolverType {
	if x != nil {
		return x.ResolverType
	}
	return ValidateResolverYamlRequest_RESOLVER_NOT_SET
}

// This empty response is returned if validation succeeded. Otherwise, an error is returned.
type ValidateResolverYamlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ValidateResolverYamlResponse) Reset() {
	*x = ValidateResolverYamlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateResolverYamlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateResolverYamlResponse) ProtoMessage() {}

func (x *ValidateResolverYamlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateResolverYamlResponse.ProtoReflect.Descriptor instead.
func (*ValidateResolverYamlResponse) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDescGZIP(), []int{14}
}

// Validates a schema definition.
//
// The input to the request can be either a schema definition string or a GraphQLSchema spec:
// - When creating a new GraphQLSchema from scratch, the schema definition string should be passed in.
// - When editing an existing GraphQLSchema, the full GraphQLSchema spec should be passed in.
//
// This endpoint will currently validate the following:
// 1. The schema definition string can be parsed.
// 2. All usages of supported directives are syntactically correct.
// 3. Resolver names referenced via `@resolve` directives in the schema definition have a corresponding
//    entry in the GraphQLSchema's resolutions map.
type ValidateSchemaDefinitionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Input:
	//	*ValidateSchemaDefinitionRequest_SchemaDefinition
	//	*ValidateSchemaDefinitionRequest_Spec
	Input isValidateSchemaDefinitionRequest_Input `protobuf_oneof:"input"`
}

func (x *ValidateSchemaDefinitionRequest) Reset() {
	*x = ValidateSchemaDefinitionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateSchemaDefinitionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateSchemaDefinitionRequest) ProtoMessage() {}

func (x *ValidateSchemaDefinitionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateSchemaDefinitionRequest.ProtoReflect.Descriptor instead.
func (*ValidateSchemaDefinitionRequest) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDescGZIP(), []int{15}
}

func (m *ValidateSchemaDefinitionRequest) GetInput() isValidateSchemaDefinitionRequest_Input {
	if m != nil {
		return m.Input
	}
	return nil
}

func (x *ValidateSchemaDefinitionRequest) GetSchemaDefinition() string {
	if x, ok := x.GetInput().(*ValidateSchemaDefinitionRequest_SchemaDefinition); ok {
		return x.SchemaDefinition
	}
	return ""
}

func (x *ValidateSchemaDefinitionRequest) GetSpec() *v1alpha1.GraphQLSchemaSpec {
	if x, ok := x.GetInput().(*ValidateSchemaDefinitionRequest_Spec); ok {
		return x.Spec
	}
	return nil
}

type isValidateSchemaDefinitionRequest_Input interface {
	isValidateSchemaDefinitionRequest_Input()
}

type ValidateSchemaDefinitionRequest_SchemaDefinition struct {
	// A schema definition string.
	SchemaDefinition string `protobuf:"bytes,1,opt,name=schema_definition,json=schemaDefinition,proto3,oneof"`
}

type ValidateSchemaDefinitionRequest_Spec struct {
	// A GraphQLSchema spec.
	Spec *v1alpha1.GraphQLSchemaSpec `protobuf:"bytes,2,opt,name=spec,proto3,oneof"`
}

func (*ValidateSchemaDefinitionRequest_SchemaDefinition) isValidateSchemaDefinitionRequest_Input() {}

func (*ValidateSchemaDefinitionRequest_Spec) isValidateSchemaDefinitionRequest_Input() {}

// This empty response is returned if validation succeeded. Otherwise, an error is returned.
type ValidateSchemaDefinitionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ValidateSchemaDefinitionResponse) Reset() {
	*x = ValidateSchemaDefinitionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateSchemaDefinitionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateSchemaDefinitionResponse) ProtoMessage() {}

func (x *ValidateSchemaDefinitionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateSchemaDefinitionResponse.ProtoReflect.Descriptor instead.
func (*ValidateSchemaDefinitionResponse) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDescGZIP(), []int{16}
}

var File_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto protoreflect.FileDescriptor

var file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDesc = []byte{
	0x0a, 0x56, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6c,
	0x6f, 0x2d, 0x69, 0x6f, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64,
	0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x71, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64,
	0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x1a,
	0x12, 0x65, 0x78, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x78, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x69, 0x6f, 0x2f, 0x73, 0x6b, 0x76, 0x32, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x49, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x69, 0x6f, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x61, 0x70, 0x69,
	0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x6c, 0x6f, 0x6f, 0x2f, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x71, 0x6c, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x55,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d,
	0x69, 0x6f, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65,
	0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x91, 0x02, 0x0a, 0x0d, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71,
	0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x3d, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x65, 0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69,
	0x6f, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3b, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x2e, 0x67,
	0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x72, 0x61, 0x70,
	0x68, 0x51, 0x4c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73,
	0x70, 0x65, 0x63, 0x12, 0x41, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x2e, 0x67, 0x6c,
	0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68,
	0x51, 0x4c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x41, 0x0a, 0x0d, 0x67, 0x6c, 0x6f, 0x6f, 0x5f, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x73, 0x6b, 0x76, 0x32, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69,
	0x6f, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x66, 0x52, 0x0c, 0x67, 0x6c, 0x6f,
	0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x6c, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x51, 0x0a, 0x12, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x5f,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x73, 0x6b, 0x76, 0x32, 0x2e, 0x73, 0x6f, 0x6c,
	0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x66, 0x52, 0x10, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x66, 0x22, 0x67, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x47, 0x72,
	0x61, 0x70, 0x68, 0x71, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x5f, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f,
	0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x52, 0x0d, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x22, 0x65, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x48, 0x0a,
	0x11, 0x67, 0x6c, 0x6f, 0x6f, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x72,
	0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x73, 0x6b, 0x76, 0x32, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x66, 0x52, 0x0f, 0x67, 0x6c, 0x6f, 0x6f, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x66, 0x22, 0x6b, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x47,
	0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c,
	0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73,
	0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x52, 0x0e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x73, 0x22, 0x70, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x47, 0x72, 0x61, 0x70, 0x68,
	0x71, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x59, 0x61, 0x6d, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x51, 0x0a, 0x12, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x5f, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x73, 0x6b, 0x76, 0x32, 0x2e, 0x73, 0x6f, 0x6c, 0x6f,
	0x2e, 0x69, 0x6f, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x66, 0x52, 0x10, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x52, 0x65, 0x66, 0x22, 0x60, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x47, 0x72, 0x61,
	0x70, 0x68, 0x71, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x59, 0x61, 0x6d, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x09, 0x79, 0x61, 0x6d, 0x6c, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x65, 0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69,
	0x6f, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x59, 0x61, 0x6d, 0x6c, 0x52, 0x08,
	0x79, 0x61, 0x6d, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x22, 0xac, 0x01, 0x0a, 0x1a, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x51, 0x0a, 0x12, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x71, 0x6c, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x73, 0x6b, 0x76, 0x32, 0x2e,
	0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x66, 0x52, 0x10, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71,
	0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x66, 0x12, 0x3b, 0x0a, 0x04, 0x73, 0x70,
	0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x71, 0x6c, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e,
	0x47, 0x72, 0x61, 0x70, 0x68, 0x51, 0x4c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x53, 0x70, 0x65,
	0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0x6a, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71,
	0x6c, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73,
	0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x52, 0x0d, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x22, 0xac, 0x01, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72,
	0x61, 0x70, 0x68, 0x71, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x51, 0x0a, 0x12, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x5f, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x73, 0x6b, 0x76, 0x32, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e,
	0x69, 0x6f, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x66, 0x52, 0x10, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x52, 0x65, 0x66, 0x12, 0x3b, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x2e, 0x67, 0x6c,
	0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68,
	0x51, 0x4c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70,
	0x65, 0x63, 0x22, 0x6a, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x61, 0x70,
	0x68, 0x71, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4b, 0x0a, 0x0e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x5f, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x65, 0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69,
	0x6f, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52,
	0x0d, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x22, 0x6f,
	0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x51, 0x0a, 0x12,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x72,
	0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x73, 0x6b, 0x76, 0x32, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x66, 0x52, 0x10, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x66, 0x22,
	0x70, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51,
	0x0a, 0x12, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x5f, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x73, 0x6b, 0x76, 0x32, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x66, 0x52,
	0x10, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65,
	0x66, 0x22, 0xe3, 0x01, 0x0a, 0x1b, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x59, 0x61, 0x6d, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x61, 0x6d, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x79, 0x61, 0x6d, 0x6c, 0x12, 0x64, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65,
	0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3f, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c,
	0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x6f, 0x6c, 0x76, 0x65, 0x72, 0x59, 0x61, 0x6d, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x72,
	0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x4a, 0x0a, 0x0c, 0x52,
	0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x52,
	0x45, 0x53, 0x4f, 0x4c, 0x56, 0x45, 0x52, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x45, 0x54, 0x10,
	0x00, 0x12, 0x11, 0x0a, 0x0d, 0x52, 0x45, 0x53, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x4c, 0x56,
	0x45, 0x52, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x47, 0x52, 0x50, 0x43, 0x5f, 0x52, 0x45, 0x53,
	0x4f, 0x4c, 0x56, 0x45, 0x52, 0x10, 0x02, 0x22, 0x1e, 0x0a, 0x1c, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x59, 0x61, 0x6d, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x98, 0x01, 0x0a, 0x1f, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x11, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x10, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x04, 0x73, 0x70,
	0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x71, 0x6c, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e,
	0x47, 0x72, 0x61, 0x70, 0x68, 0x51, 0x4c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x53, 0x70, 0x65,
	0x63, 0x48, 0x00, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x42, 0x07, 0x0a, 0x05, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x22, 0x22, 0x0a, 0x20, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x98, 0x08, 0x0a, 0x0a, 0x47, 0x72, 0x61, 0x70, 0x68,
	0x71, 0x6c, 0x41, 0x70, 0x69, 0x12, 0x75, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x47, 0x72, 0x61, 0x70,
	0x68, 0x71, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x2e, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x65, 0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69,
	0x6f, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x65, 0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69,
	0x6f, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7b, 0x0a, 0x12,
	0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x73, 0x12, 0x30, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c,
	0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47,
	0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e,
	0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x81, 0x01, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x59, 0x61,
	0x6d, 0x6c, 0x12, 0x32, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c,
	0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72,
	0x61, 0x70, 0x68, 0x71, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x59, 0x61, 0x6d, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67,
	0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47,
	0x65, 0x74, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x59,
	0x61, 0x6d, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7e, 0x0a,
	0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x12, 0x31, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e,
	0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64,
	0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7e, 0x0a,
	0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x12, 0x31, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e,
	0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64,
	0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7e, 0x0a,
	0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x12, 0x31, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e,
	0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64,
	0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x81, 0x01,
	0x0a, 0x14, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76,
	0x65, 0x72, 0x59, 0x61, 0x6d, 0x6c, 0x12, 0x32, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67,
	0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x59,
	0x61, 0x6d, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e,
	0x69, 0x6f, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x6c,
	0x76, 0x65, 0x72, 0x59, 0x61, 0x6d, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x8d, 0x01, 0x0a, 0x18, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73,
	0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67,
	0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0x56, 0x5a, 0x4c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x69, 0x6f, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x61,
	0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2f, 0x76,
	0x31, 0xc0, 0xf5, 0x04, 0x01, 0xb8, 0xf5, 0x04, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDescOnce sync.Once
	file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDescData = file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDesc
)

func file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDescGZIP() []byte {
	file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDescOnce.Do(func() {
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDescData)
	})
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDescData
}

var file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_goTypes = []interface{}{
	(ValidateResolverYamlRequest_ResolverType)(0), // 0: rpc.edge.gloo.solo.io.ValidateResolverYamlRequest.ResolverType
	(*GraphqlSchema)(nil),                         // 1: rpc.edge.gloo.solo.io.GraphqlSchema
	(*GetGraphqlSchemaRequest)(nil),               // 2: rpc.edge.gloo.solo.io.GetGraphqlSchemaRequest
	(*GetGraphqlSchemaResponse)(nil),              // 3: rpc.edge.gloo.solo.io.GetGraphqlSchemaResponse
	(*ListGraphqlSchemasRequest)(nil),             // 4: rpc.edge.gloo.solo.io.ListGraphqlSchemasRequest
	(*ListGraphqlSchemasResponse)(nil),            // 5: rpc.edge.gloo.solo.io.ListGraphqlSchemasResponse
	(*GetGraphqlSchemaYamlRequest)(nil),           // 6: rpc.edge.gloo.solo.io.GetGraphqlSchemaYamlRequest
	(*GetGraphqlSchemaYamlResponse)(nil),          // 7: rpc.edge.gloo.solo.io.GetGraphqlSchemaYamlResponse
	(*CreateGraphqlSchemaRequest)(nil),            // 8: rpc.edge.gloo.solo.io.CreateGraphqlSchemaRequest
	(*CreateGraphqlSchemaResponse)(nil),           // 9: rpc.edge.gloo.solo.io.CreateGraphqlSchemaResponse
	(*UpdateGraphqlSchemaRequest)(nil),            // 10: rpc.edge.gloo.solo.io.UpdateGraphqlSchemaRequest
	(*UpdateGraphqlSchemaResponse)(nil),           // 11: rpc.edge.gloo.solo.io.UpdateGraphqlSchemaResponse
	(*DeleteGraphqlSchemaRequest)(nil),            // 12: rpc.edge.gloo.solo.io.DeleteGraphqlSchemaRequest
	(*DeleteGraphqlSchemaResponse)(nil),           // 13: rpc.edge.gloo.solo.io.DeleteGraphqlSchemaResponse
	(*ValidateResolverYamlRequest)(nil),           // 14: rpc.edge.gloo.solo.io.ValidateResolverYamlRequest
	(*ValidateResolverYamlResponse)(nil),          // 15: rpc.edge.gloo.solo.io.ValidateResolverYamlResponse
	(*ValidateSchemaDefinitionRequest)(nil),       // 16: rpc.edge.gloo.solo.io.ValidateSchemaDefinitionRequest
	(*ValidateSchemaDefinitionResponse)(nil),      // 17: rpc.edge.gloo.solo.io.ValidateSchemaDefinitionResponse
	(*ObjectMeta)(nil),                            // 18: rpc.edge.gloo.solo.io.ObjectMeta
	(*v1alpha1.GraphQLSchemaSpec)(nil),            // 19: graphql.gloo.solo.io.GraphQLSchemaSpec
	(*v1alpha1.GraphQLSchemaStatus)(nil),          // 20: graphql.gloo.solo.io.GraphQLSchemaStatus
	(*v1.ObjectRef)(nil),                          // 21: core.skv2.solo.io.ObjectRef
	(*v1.ClusterObjectRef)(nil),                   // 22: core.skv2.solo.io.ClusterObjectRef
	(*ResourceYaml)(nil),                          // 23: rpc.edge.gloo.solo.io.ResourceYaml
}
var file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_depIdxs = []int32{
	18, // 0: rpc.edge.gloo.solo.io.GraphqlSchema.metadata:type_name -> rpc.edge.gloo.solo.io.ObjectMeta
	19, // 1: rpc.edge.gloo.solo.io.GraphqlSchema.spec:type_name -> graphql.gloo.solo.io.GraphQLSchemaSpec
	20, // 2: rpc.edge.gloo.solo.io.GraphqlSchema.status:type_name -> graphql.gloo.solo.io.GraphQLSchemaStatus
	21, // 3: rpc.edge.gloo.solo.io.GraphqlSchema.gloo_instance:type_name -> core.skv2.solo.io.ObjectRef
	22, // 4: rpc.edge.gloo.solo.io.GetGraphqlSchemaRequest.graphql_schema_ref:type_name -> core.skv2.solo.io.ClusterObjectRef
	1,  // 5: rpc.edge.gloo.solo.io.GetGraphqlSchemaResponse.graphql_schema:type_name -> rpc.edge.gloo.solo.io.GraphqlSchema
	21, // 6: rpc.edge.gloo.solo.io.ListGraphqlSchemasRequest.gloo_instance_ref:type_name -> core.skv2.solo.io.ObjectRef
	1,  // 7: rpc.edge.gloo.solo.io.ListGraphqlSchemasResponse.graphql_schemas:type_name -> rpc.edge.gloo.solo.io.GraphqlSchema
	22, // 8: rpc.edge.gloo.solo.io.GetGraphqlSchemaYamlRequest.graphql_schema_ref:type_name -> core.skv2.solo.io.ClusterObjectRef
	23, // 9: rpc.edge.gloo.solo.io.GetGraphqlSchemaYamlResponse.yaml_data:type_name -> rpc.edge.gloo.solo.io.ResourceYaml
	22, // 10: rpc.edge.gloo.solo.io.CreateGraphqlSchemaRequest.graphql_schema_ref:type_name -> core.skv2.solo.io.ClusterObjectRef
	19, // 11: rpc.edge.gloo.solo.io.CreateGraphqlSchemaRequest.spec:type_name -> graphql.gloo.solo.io.GraphQLSchemaSpec
	1,  // 12: rpc.edge.gloo.solo.io.CreateGraphqlSchemaResponse.graphql_schema:type_name -> rpc.edge.gloo.solo.io.GraphqlSchema
	22, // 13: rpc.edge.gloo.solo.io.UpdateGraphqlSchemaRequest.graphql_schema_ref:type_name -> core.skv2.solo.io.ClusterObjectRef
	19, // 14: rpc.edge.gloo.solo.io.UpdateGraphqlSchemaRequest.spec:type_name -> graphql.gloo.solo.io.GraphQLSchemaSpec
	1,  // 15: rpc.edge.gloo.solo.io.UpdateGraphqlSchemaResponse.graphql_schema:type_name -> rpc.edge.gloo.solo.io.GraphqlSchema
	22, // 16: rpc.edge.gloo.solo.io.DeleteGraphqlSchemaRequest.graphql_schema_ref:type_name -> core.skv2.solo.io.ClusterObjectRef
	22, // 17: rpc.edge.gloo.solo.io.DeleteGraphqlSchemaResponse.graphql_schema_ref:type_name -> core.skv2.solo.io.ClusterObjectRef
	0,  // 18: rpc.edge.gloo.solo.io.ValidateResolverYamlRequest.resolver_type:type_name -> rpc.edge.gloo.solo.io.ValidateResolverYamlRequest.ResolverType
	19, // 19: rpc.edge.gloo.solo.io.ValidateSchemaDefinitionRequest.spec:type_name -> graphql.gloo.solo.io.GraphQLSchemaSpec
	2,  // 20: rpc.edge.gloo.solo.io.GraphqlApi.GetGraphqlSchema:input_type -> rpc.edge.gloo.solo.io.GetGraphqlSchemaRequest
	4,  // 21: rpc.edge.gloo.solo.io.GraphqlApi.ListGraphqlSchemas:input_type -> rpc.edge.gloo.solo.io.ListGraphqlSchemasRequest
	6,  // 22: rpc.edge.gloo.solo.io.GraphqlApi.GetGraphqlSchemaYaml:input_type -> rpc.edge.gloo.solo.io.GetGraphqlSchemaYamlRequest
	8,  // 23: rpc.edge.gloo.solo.io.GraphqlApi.CreateGraphqlSchema:input_type -> rpc.edge.gloo.solo.io.CreateGraphqlSchemaRequest
	10, // 24: rpc.edge.gloo.solo.io.GraphqlApi.UpdateGraphqlSchema:input_type -> rpc.edge.gloo.solo.io.UpdateGraphqlSchemaRequest
	12, // 25: rpc.edge.gloo.solo.io.GraphqlApi.DeleteGraphqlSchema:input_type -> rpc.edge.gloo.solo.io.DeleteGraphqlSchemaRequest
	14, // 26: rpc.edge.gloo.solo.io.GraphqlApi.ValidateResolverYaml:input_type -> rpc.edge.gloo.solo.io.ValidateResolverYamlRequest
	16, // 27: rpc.edge.gloo.solo.io.GraphqlApi.ValidateSchemaDefinition:input_type -> rpc.edge.gloo.solo.io.ValidateSchemaDefinitionRequest
	3,  // 28: rpc.edge.gloo.solo.io.GraphqlApi.GetGraphqlSchema:output_type -> rpc.edge.gloo.solo.io.GetGraphqlSchemaResponse
	5,  // 29: rpc.edge.gloo.solo.io.GraphqlApi.ListGraphqlSchemas:output_type -> rpc.edge.gloo.solo.io.ListGraphqlSchemasResponse
	7,  // 30: rpc.edge.gloo.solo.io.GraphqlApi.GetGraphqlSchemaYaml:output_type -> rpc.edge.gloo.solo.io.GetGraphqlSchemaYamlResponse
	9,  // 31: rpc.edge.gloo.solo.io.GraphqlApi.CreateGraphqlSchema:output_type -> rpc.edge.gloo.solo.io.CreateGraphqlSchemaResponse
	11, // 32: rpc.edge.gloo.solo.io.GraphqlApi.UpdateGraphqlSchema:output_type -> rpc.edge.gloo.solo.io.UpdateGraphqlSchemaResponse
	13, // 33: rpc.edge.gloo.solo.io.GraphqlApi.DeleteGraphqlSchema:output_type -> rpc.edge.gloo.solo.io.DeleteGraphqlSchemaResponse
	15, // 34: rpc.edge.gloo.solo.io.GraphqlApi.ValidateResolverYaml:output_type -> rpc.edge.gloo.solo.io.ValidateResolverYamlResponse
	17, // 35: rpc.edge.gloo.solo.io.GraphqlApi.ValidateSchemaDefinition:output_type -> rpc.edge.gloo.solo.io.ValidateSchemaDefinitionResponse
	28, // [28:36] is the sub-list for method output_type
	20, // [20:28] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() {
	file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_init()
}
func file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_init() {
	if File_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto != nil {
		return
	}
	file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GraphqlSchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGraphqlSchemaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGraphqlSchemaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGraphqlSchemasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGraphqlSchemasResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGraphqlSchemaYamlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGraphqlSchemaYamlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGraphqlSchemaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGraphqlSchemaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGraphqlSchemaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGraphqlSchemaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGraphqlSchemaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGraphqlSchemaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateResolverYamlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateResolverYamlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateSchemaDefinitionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateSchemaDefinitionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes[15].OneofWrappers = []interface{}{
		(*ValidateSchemaDefinitionRequest_SchemaDefinition)(nil),
		(*ValidateSchemaDefinitionRequest_Spec)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_goTypes,
		DependencyIndexes: file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_depIdxs,
		EnumInfos:         file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_enumTypes,
		MessageInfos:      file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_msgTypes,
	}.Build()
	File_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto = out.File
	file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_rawDesc = nil
	file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_goTypes = nil
	file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_graphql_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GraphqlApiClient is the client API for GraphqlApi service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GraphqlApiClient interface {
	GetGraphqlSchema(ctx context.Context, in *GetGraphqlSchemaRequest, opts ...grpc.CallOption) (*GetGraphqlSchemaResponse, error)
	ListGraphqlSchemas(ctx context.Context, in *ListGraphqlSchemasRequest, opts ...grpc.CallOption) (*ListGraphqlSchemasResponse, error)
	GetGraphqlSchemaYaml(ctx context.Context, in *GetGraphqlSchemaYamlRequest, opts ...grpc.CallOption) (*GetGraphqlSchemaYamlResponse, error)
	CreateGraphqlSchema(ctx context.Context, in *CreateGraphqlSchemaRequest, opts ...grpc.CallOption) (*CreateGraphqlSchemaResponse, error)
	UpdateGraphqlSchema(ctx context.Context, in *UpdateGraphqlSchemaRequest, opts ...grpc.CallOption) (*UpdateGraphqlSchemaResponse, error)
	DeleteGraphqlSchema(ctx context.Context, in *DeleteGraphqlSchemaRequest, opts ...grpc.CallOption) (*DeleteGraphqlSchemaResponse, error)
	ValidateResolverYaml(ctx context.Context, in *ValidateResolverYamlRequest, opts ...grpc.CallOption) (*ValidateResolverYamlResponse, error)
	ValidateSchemaDefinition(ctx context.Context, in *ValidateSchemaDefinitionRequest, opts ...grpc.CallOption) (*ValidateSchemaDefinitionResponse, error)
}

type graphqlApiClient struct {
	cc grpc.ClientConnInterface
}

func NewGraphqlApiClient(cc grpc.ClientConnInterface) GraphqlApiClient {
	return &graphqlApiClient{cc}
}

func (c *graphqlApiClient) GetGraphqlSchema(ctx context.Context, in *GetGraphqlSchemaRequest, opts ...grpc.CallOption) (*GetGraphqlSchemaResponse, error) {
	out := new(GetGraphqlSchemaResponse)
	err := c.cc.Invoke(ctx, "/rpc.edge.gloo.solo.io.GraphqlApi/GetGraphqlSchema", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *graphqlApiClient) ListGraphqlSchemas(ctx context.Context, in *ListGraphqlSchemasRequest, opts ...grpc.CallOption) (*ListGraphqlSchemasResponse, error) {
	out := new(ListGraphqlSchemasResponse)
	err := c.cc.Invoke(ctx, "/rpc.edge.gloo.solo.io.GraphqlApi/ListGraphqlSchemas", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *graphqlApiClient) GetGraphqlSchemaYaml(ctx context.Context, in *GetGraphqlSchemaYamlRequest, opts ...grpc.CallOption) (*GetGraphqlSchemaYamlResponse, error) {
	out := new(GetGraphqlSchemaYamlResponse)
	err := c.cc.Invoke(ctx, "/rpc.edge.gloo.solo.io.GraphqlApi/GetGraphqlSchemaYaml", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *graphqlApiClient) CreateGraphqlSchema(ctx context.Context, in *CreateGraphqlSchemaRequest, opts ...grpc.CallOption) (*CreateGraphqlSchemaResponse, error) {
	out := new(CreateGraphqlSchemaResponse)
	err := c.cc.Invoke(ctx, "/rpc.edge.gloo.solo.io.GraphqlApi/CreateGraphqlSchema", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *graphqlApiClient) UpdateGraphqlSchema(ctx context.Context, in *UpdateGraphqlSchemaRequest, opts ...grpc.CallOption) (*UpdateGraphqlSchemaResponse, error) {
	out := new(UpdateGraphqlSchemaResponse)
	err := c.cc.Invoke(ctx, "/rpc.edge.gloo.solo.io.GraphqlApi/UpdateGraphqlSchema", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *graphqlApiClient) DeleteGraphqlSchema(ctx context.Context, in *DeleteGraphqlSchemaRequest, opts ...grpc.CallOption) (*DeleteGraphqlSchemaResponse, error) {
	out := new(DeleteGraphqlSchemaResponse)
	err := c.cc.Invoke(ctx, "/rpc.edge.gloo.solo.io.GraphqlApi/DeleteGraphqlSchema", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *graphqlApiClient) ValidateResolverYaml(ctx context.Context, in *ValidateResolverYamlRequest, opts ...grpc.CallOption) (*ValidateResolverYamlResponse, error) {
	out := new(ValidateResolverYamlResponse)
	err := c.cc.Invoke(ctx, "/rpc.edge.gloo.solo.io.GraphqlApi/ValidateResolverYaml", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *graphqlApiClient) ValidateSchemaDefinition(ctx context.Context, in *ValidateSchemaDefinitionRequest, opts ...grpc.CallOption) (*ValidateSchemaDefinitionResponse, error) {
	out := new(ValidateSchemaDefinitionResponse)
	err := c.cc.Invoke(ctx, "/rpc.edge.gloo.solo.io.GraphqlApi/ValidateSchemaDefinition", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GraphqlApiServer is the server API for GraphqlApi service.
type GraphqlApiServer interface {
	GetGraphqlSchema(context.Context, *GetGraphqlSchemaRequest) (*GetGraphqlSchemaResponse, error)
	ListGraphqlSchemas(context.Context, *ListGraphqlSchemasRequest) (*ListGraphqlSchemasResponse, error)
	GetGraphqlSchemaYaml(context.Context, *GetGraphqlSchemaYamlRequest) (*GetGraphqlSchemaYamlResponse, error)
	CreateGraphqlSchema(context.Context, *CreateGraphqlSchemaRequest) (*CreateGraphqlSchemaResponse, error)
	UpdateGraphqlSchema(context.Context, *UpdateGraphqlSchemaRequest) (*UpdateGraphqlSchemaResponse, error)
	DeleteGraphqlSchema(context.Context, *DeleteGraphqlSchemaRequest) (*DeleteGraphqlSchemaResponse, error)
	ValidateResolverYaml(context.Context, *ValidateResolverYamlRequest) (*ValidateResolverYamlResponse, error)
	ValidateSchemaDefinition(context.Context, *ValidateSchemaDefinitionRequest) (*ValidateSchemaDefinitionResponse, error)
}

// UnimplementedGraphqlApiServer can be embedded to have forward compatible implementations.
type UnimplementedGraphqlApiServer struct {
}

func (*UnimplementedGraphqlApiServer) GetGraphqlSchema(context.Context, *GetGraphqlSchemaRequest) (*GetGraphqlSchemaResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGraphqlSchema not implemented")
}
func (*UnimplementedGraphqlApiServer) ListGraphqlSchemas(context.Context, *ListGraphqlSchemasRequest) (*ListGraphqlSchemasResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListGraphqlSchemas not implemented")
}
func (*UnimplementedGraphqlApiServer) GetGraphqlSchemaYaml(context.Context, *GetGraphqlSchemaYamlRequest) (*GetGraphqlSchemaYamlResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGraphqlSchemaYaml not implemented")
}
func (*UnimplementedGraphqlApiServer) CreateGraphqlSchema(context.Context, *CreateGraphqlSchemaRequest) (*CreateGraphqlSchemaResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateGraphqlSchema not implemented")
}
func (*UnimplementedGraphqlApiServer) UpdateGraphqlSchema(context.Context, *UpdateGraphqlSchemaRequest) (*UpdateGraphqlSchemaResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateGraphqlSchema not implemented")
}
func (*UnimplementedGraphqlApiServer) DeleteGraphqlSchema(context.Context, *DeleteGraphqlSchemaRequest) (*DeleteGraphqlSchemaResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteGraphqlSchema not implemented")
}
func (*UnimplementedGraphqlApiServer) ValidateResolverYaml(context.Context, *ValidateResolverYamlRequest) (*ValidateResolverYamlResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidateResolverYaml not implemented")
}
func (*UnimplementedGraphqlApiServer) ValidateSchemaDefinition(context.Context, *ValidateSchemaDefinitionRequest) (*ValidateSchemaDefinitionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidateSchemaDefinition not implemented")
}

func RegisterGraphqlApiServer(s *grpc.Server, srv GraphqlApiServer) {
	s.RegisterService(&_GraphqlApi_serviceDesc, srv)
}

func _GraphqlApi_GetGraphqlSchema_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGraphqlSchemaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GraphqlApiServer).GetGraphqlSchema(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.edge.gloo.solo.io.GraphqlApi/GetGraphqlSchema",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GraphqlApiServer).GetGraphqlSchema(ctx, req.(*GetGraphqlSchemaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GraphqlApi_ListGraphqlSchemas_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListGraphqlSchemasRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GraphqlApiServer).ListGraphqlSchemas(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.edge.gloo.solo.io.GraphqlApi/ListGraphqlSchemas",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GraphqlApiServer).ListGraphqlSchemas(ctx, req.(*ListGraphqlSchemasRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GraphqlApi_GetGraphqlSchemaYaml_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGraphqlSchemaYamlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GraphqlApiServer).GetGraphqlSchemaYaml(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.edge.gloo.solo.io.GraphqlApi/GetGraphqlSchemaYaml",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GraphqlApiServer).GetGraphqlSchemaYaml(ctx, req.(*GetGraphqlSchemaYamlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GraphqlApi_CreateGraphqlSchema_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateGraphqlSchemaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GraphqlApiServer).CreateGraphqlSchema(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.edge.gloo.solo.io.GraphqlApi/CreateGraphqlSchema",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GraphqlApiServer).CreateGraphqlSchema(ctx, req.(*CreateGraphqlSchemaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GraphqlApi_UpdateGraphqlSchema_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateGraphqlSchemaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GraphqlApiServer).UpdateGraphqlSchema(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.edge.gloo.solo.io.GraphqlApi/UpdateGraphqlSchema",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GraphqlApiServer).UpdateGraphqlSchema(ctx, req.(*UpdateGraphqlSchemaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GraphqlApi_DeleteGraphqlSchema_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteGraphqlSchemaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GraphqlApiServer).DeleteGraphqlSchema(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.edge.gloo.solo.io.GraphqlApi/DeleteGraphqlSchema",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GraphqlApiServer).DeleteGraphqlSchema(ctx, req.(*DeleteGraphqlSchemaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GraphqlApi_ValidateResolverYaml_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidateResolverYamlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GraphqlApiServer).ValidateResolverYaml(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.edge.gloo.solo.io.GraphqlApi/ValidateResolverYaml",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GraphqlApiServer).ValidateResolverYaml(ctx, req.(*ValidateResolverYamlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GraphqlApi_ValidateSchemaDefinition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidateSchemaDefinitionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GraphqlApiServer).ValidateSchemaDefinition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.edge.gloo.solo.io.GraphqlApi/ValidateSchemaDefinition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GraphqlApiServer).ValidateSchemaDefinition(ctx, req.(*ValidateSchemaDefinitionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GraphqlApi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.edge.gloo.solo.io.GraphqlApi",
	HandlerType: (*GraphqlApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetGraphqlSchema",
			Handler:    _GraphqlApi_GetGraphqlSchema_Handler,
		},
		{
			MethodName: "ListGraphqlSchemas",
			Handler:    _GraphqlApi_ListGraphqlSchemas_Handler,
		},
		{
			MethodName: "GetGraphqlSchemaYaml",
			Handler:    _GraphqlApi_GetGraphqlSchemaYaml_Handler,
		},
		{
			MethodName: "CreateGraphqlSchema",
			Handler:    _GraphqlApi_CreateGraphqlSchema_Handler,
		},
		{
			MethodName: "UpdateGraphqlSchema",
			Handler:    _GraphqlApi_UpdateGraphqlSchema_Handler,
		},
		{
			MethodName: "DeleteGraphqlSchema",
			Handler:    _GraphqlApi_DeleteGraphqlSchema_Handler,
		},
		{
			MethodName: "ValidateResolverYaml",
			Handler:    _GraphqlApi_ValidateResolverYaml_Handler,
		},
		{
			MethodName: "ValidateSchemaDefinition",
			Handler:    _GraphqlApi_ValidateSchemaDefinition_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/solo-io/solo-projects/projects/apiserver/api/rpc.edge.gloo/v1/graphql.proto",
}
