// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.6.1
// source: github.com/solo-io/solo-projects/projects/apiserver/api/rpc.edge.gloo/v1/glooinstance.proto

package v1

import (
	context "context"
	reflect "reflect"
	sync "sync"

	_ "github.com/solo-io/protoc-gen-ext/extproto"
	v1 "github.com/solo-io/skv2/pkg/api/core.skv2.solo.io/v1"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GlooInstance_GlooInstanceSpec_Proxy_WorkloadController int32

const (
	GlooInstance_GlooInstanceSpec_Proxy_UNDEFINED  GlooInstance_GlooInstanceSpec_Proxy_WorkloadController = 0
	GlooInstance_GlooInstanceSpec_Proxy_DEPLOYMENT GlooInstance_GlooInstanceSpec_Proxy_WorkloadController = 1
	GlooInstance_GlooInstanceSpec_Proxy_DAEMON_SET GlooInstance_GlooInstanceSpec_Proxy_WorkloadController = 2
)

// Enum value maps for GlooInstance_GlooInstanceSpec_Proxy_WorkloadController.
var (
	GlooInstance_GlooInstanceSpec_Proxy_WorkloadController_name = map[int32]string{
		0: "UNDEFINED",
		1: "DEPLOYMENT",
		2: "DAEMON_SET",
	}
	GlooInstance_GlooInstanceSpec_Proxy_WorkloadController_value = map[string]int32{
		"UNDEFINED":  0,
		"DEPLOYMENT": 1,
		"DAEMON_SET": 2,
	}
)

func (x GlooInstance_GlooInstanceSpec_Proxy_WorkloadController) Enum() *GlooInstance_GlooInstanceSpec_Proxy_WorkloadController {
	p := new(GlooInstance_GlooInstanceSpec_Proxy_WorkloadController)
	*p = x
	return p
}

func (x GlooInstance_GlooInstanceSpec_Proxy_WorkloadController) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GlooInstance_GlooInstanceSpec_Proxy_WorkloadController) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_enumTypes[0].Descriptor()
}

func (GlooInstance_GlooInstanceSpec_Proxy_WorkloadController) Type() protoreflect.EnumType {
	return &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_enumTypes[0]
}

func (x GlooInstance_GlooInstanceSpec_Proxy_WorkloadController) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GlooInstance_GlooInstanceSpec_Proxy_WorkloadController.Descriptor instead.
func (GlooInstance_GlooInstanceSpec_Proxy_WorkloadController) EnumDescriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_rawDescGZIP(), []int{0, 0, 1, 0}
}

type GlooInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *ObjectMeta                      `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec     *GlooInstance_GlooInstanceSpec   `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	Status   *GlooInstance_GlooInstanceStatus `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *GlooInstance) Reset() {
	*x = GlooInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlooInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlooInstance) ProtoMessage() {}

func (x *GlooInstance) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlooInstance.ProtoReflect.Descriptor instead.
func (*GlooInstance) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_rawDescGZIP(), []int{0}
}

func (x *GlooInstance) GetMetadata() *ObjectMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *GlooInstance) GetSpec() *GlooInstance_GlooInstanceSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *GlooInstance) GetStatus() *GlooInstance_GlooInstanceStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type ListGlooInstancesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListGlooInstancesRequest) Reset() {
	*x = ListGlooInstancesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGlooInstancesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGlooInstancesRequest) ProtoMessage() {}

func (x *ListGlooInstancesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGlooInstancesRequest.ProtoReflect.Descriptor instead.
func (*ListGlooInstancesRequest) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_rawDescGZIP(), []int{1}
}

type ListGlooInstancesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GlooInstances []*GlooInstance `protobuf:"bytes,1,rep,name=gloo_instances,json=glooInstances,proto3" json:"gloo_instances,omitempty"`
}

func (x *ListGlooInstancesResponse) Reset() {
	*x = ListGlooInstancesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGlooInstancesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGlooInstancesResponse) ProtoMessage() {}

func (x *ListGlooInstancesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGlooInstancesResponse.ProtoReflect.Descriptor instead.
func (*ListGlooInstancesResponse) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_rawDescGZIP(), []int{2}
}

func (x *ListGlooInstancesResponse) GetGlooInstances() []*GlooInstance {
	if x != nil {
		return x.GlooInstances
	}
	return nil
}

type ClusterDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cluster       string          `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	GlooInstances []*GlooInstance `protobuf:"bytes,2,rep,name=gloo_instances,json=glooInstances,proto3" json:"gloo_instances,omitempty"`
}

func (x *ClusterDetails) Reset() {
	*x = ClusterDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterDetails) ProtoMessage() {}

func (x *ClusterDetails) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterDetails.ProtoReflect.Descriptor instead.
func (*ClusterDetails) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_rawDescGZIP(), []int{3}
}

func (x *ClusterDetails) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

func (x *ClusterDetails) GetGlooInstances() []*GlooInstance {
	if x != nil {
		return x.GlooInstances
	}
	return nil
}

type ListClusterDetailsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListClusterDetailsRequest) Reset() {
	*x = ListClusterDetailsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListClusterDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClusterDetailsRequest) ProtoMessage() {}

func (x *ListClusterDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClusterDetailsRequest.ProtoReflect.Descriptor instead.
func (*ListClusterDetailsRequest) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_rawDescGZIP(), []int{4}
}

type ListClusterDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterDetails []*ClusterDetails `protobuf:"bytes,1,rep,name=cluster_details,json=clusterDetails,proto3" json:"cluster_details,omitempty"`
}

func (x *ListClusterDetailsResponse) Reset() {
	*x = ListClusterDetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListClusterDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClusterDetailsResponse) ProtoMessage() {}

func (x *ListClusterDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClusterDetailsResponse.ProtoReflect.Descriptor instead.
func (*ListClusterDetailsResponse) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_rawDescGZIP(), []int{5}
}

func (x *ListClusterDetailsResponse) GetClusterDetails() []*ClusterDetails {
	if x != nil {
		return x.ClusterDetails
	}
	return nil
}

type ConfigDump struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Raw   string `protobuf:"bytes,2,opt,name=raw,proto3" json:"raw,omitempty"`
	Error string `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ConfigDump) Reset() {
	*x = ConfigDump{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigDump) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigDump) ProtoMessage() {}

func (x *ConfigDump) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigDump.ProtoReflect.Descriptor instead.
func (*ConfigDump) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_rawDescGZIP(), []int{6}
}

func (x *ConfigDump) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ConfigDump) GetRaw() string {
	if x != nil {
		return x.Raw
	}
	return ""
}

func (x *ConfigDump) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetConfigDumpsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A reference to the gloo instance to get the config dumps for. This field is required.
	GlooInstanceRef *v1.ObjectRef `protobuf:"bytes,1,opt,name=gloo_instance_ref,json=glooInstanceRef,proto3" json:"gloo_instance_ref,omitempty"`
}

func (x *GetConfigDumpsRequest) Reset() {
	*x = GetConfigDumpsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigDumpsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigDumpsRequest) ProtoMessage() {}

func (x *GetConfigDumpsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigDumpsRequest.ProtoReflect.Descriptor instead.
func (*GetConfigDumpsRequest) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_rawDescGZIP(), []int{7}
}

func (x *GetConfigDumpsRequest) GetGlooInstanceRef() *v1.ObjectRef {
	if x != nil {
		return x.GlooInstanceRef
	}
	return nil
}

type GetConfigDumpsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigDumps []*ConfigDump `protobuf:"bytes,1,rep,name=config_dumps,json=configDumps,proto3" json:"config_dumps,omitempty"`
}

func (x *GetConfigDumpsResponse) Reset() {
	*x = GetConfigDumpsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigDumpsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigDumpsResponse) ProtoMessage() {}

func (x *GetConfigDumpsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigDumpsResponse.ProtoReflect.Descriptor instead.
func (*GetConfigDumpsResponse) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_rawDescGZIP(), []int{8}
}

func (x *GetConfigDumpsResponse) GetConfigDumps() []*ConfigDump {
	if x != nil {
		return x.ConfigDumps
	}
	return nil
}

type GetUpstreamHostsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A reference to the gloo instance to get the upstream hosts mapping for. This field is required.
	GlooInstanceRef *v1.ObjectRef `protobuf:"bytes,1,opt,name=gloo_instance_ref,json=glooInstanceRef,proto3" json:"gloo_instance_ref,omitempty"`
}

func (x *GetUpstreamHostsRequest) Reset() {
	*x = GetUpstreamHostsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUpstreamHostsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUpstreamHostsRequest) ProtoMessage() {}

func (x *GetUpstreamHostsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUpstreamHostsRequest.ProtoReflect.Descriptor instead.
func (*GetUpstreamHostsRequest) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_rawDescGZIP(), []int{9}
}

func (x *GetUpstreamHostsRequest) GetGlooInstanceRef() *v1.ObjectRef {
	if x != nil {
		return x.GlooInstanceRef
	}
	return nil
}

type GetUpstreamHostsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// map of upstream key (<namespace>.<name>) to list of hosts for the upstream
	UpstreamHosts map[string]*HostList `protobuf:"bytes,1,rep,name=upstream_hosts,json=upstreamHosts,proto3" json:"upstream_hosts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetUpstreamHostsResponse) Reset() {
	*x = GetUpstreamHostsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUpstreamHostsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUpstreamHostsResponse) ProtoMessage() {}

func (x *GetUpstreamHostsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUpstreamHostsResponse.ProtoReflect.Descriptor instead.
func (*GetUpstreamHostsResponse) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_rawDescGZIP(), []int{10}
}

func (x *GetUpstreamHostsResponse) GetUpstreamHosts() map[string]*HostList {
	if x != nil {
		return x.UpstreamHosts
	}
	return nil
}

type HostList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hosts []*Host `protobuf:"bytes,1,rep,name=hosts,proto3" json:"hosts,omitempty"`
}

func (x *HostList) Reset() {
	*x = HostList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostList) ProtoMessage() {}

func (x *HostList) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostList.ProtoReflect.Descriptor instead.
func (*HostList) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_rawDescGZIP(), []int{11}
}

func (x *HostList) GetHosts() []*Host {
	if x != nil {
		return x.Hosts
	}
	return nil
}

// Represents an upstream host
type Host struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// IP or hostname
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// Listening port
	Port uint32 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	// Load balancing weight
	Weight uint32 `protobuf:"varint,3,opt,name=weight,proto3" json:"weight,omitempty"`
	// A reference to the proxy that this host is associated with
	ProxyRef *v1.ObjectRef `protobuf:"bytes,4,opt,name=proxy_ref,json=proxyRef,proto3" json:"proxy_ref,omitempty"`
}

func (x *Host) Reset() {
	*x = Host{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Host) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Host) ProtoMessage() {}

func (x *Host) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Host.ProtoReflect.Descriptor instead.
func (*Host) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_rawDescGZIP(), []int{12}
}

func (x *Host) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Host) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Host) GetWeight() uint32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *Host) GetProxyRef() *v1.ObjectRef {
	if x != nil {
		return x.ProxyRef
	}
	return nil
}

// The following is a copy of the spec from `projects/gloo-fed/api/fed/v1/instance.proto`.
// We have a copy here so we can use it without having a direct dependency on the Gloo Fed APIs
// (since this is also used by the Single Cluster Gloo apiserver)
type GlooInstance_GlooInstanceSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The cluster on which this Gloo instance is located
	Cluster      string                                      `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	IsEnterprise bool                                        `protobuf:"varint,2,opt,name=is_enterprise,json=isEnterprise,proto3" json:"is_enterprise,omitempty"`
	ControlPlane *GlooInstance_GlooInstanceSpec_ControlPlane `protobuf:"bytes,3,opt,name=control_plane,json=controlPlane,proto3" json:"control_plane,omitempty"`
	Proxies      []*GlooInstance_GlooInstanceSpec_Proxy      `protobuf:"bytes,4,rep,name=proxies,proto3" json:"proxies,omitempty"`
	// Geographical region in which this gloo instance is located.
	// Each proxy may potentially live in 1 or more zones, so zonal information is stored on the proxy
	Region string                               `protobuf:"bytes,5,opt,name=region,proto3" json:"region,omitempty"`
	Check  *GlooInstance_GlooInstanceSpec_Check `protobuf:"bytes,6,opt,name=check,proto3" json:"check,omitempty"`
}

func (x *GlooInstance_GlooInstanceSpec) Reset() {
	*x = GlooInstance_GlooInstanceSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlooInstance_GlooInstanceSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlooInstance_GlooInstanceSpec) ProtoMessage() {}

func (x *GlooInstance_GlooInstanceSpec) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlooInstance_GlooInstanceSpec.ProtoReflect.Descriptor instead.
func (*GlooInstance_GlooInstanceSpec) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_rawDescGZIP(), []int{0, 0}
}

func (x *GlooInstance_GlooInstanceSpec) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

func (x *GlooInstance_GlooInstanceSpec) GetIsEnterprise() bool {
	if x != nil {
		return x.IsEnterprise
	}
	return false
}

func (x *GlooInstance_GlooInstanceSpec) GetControlPlane() *GlooInstance_GlooInstanceSpec_ControlPlane {
	if x != nil {
		return x.ControlPlane
	}
	return nil
}

func (x *GlooInstance_GlooInstanceSpec) GetProxies() []*GlooInstance_GlooInstanceSpec_Proxy {
	if x != nil {
		return x.Proxies
	}
	return nil
}

func (x *GlooInstance_GlooInstanceSpec) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *GlooInstance_GlooInstanceSpec) GetCheck() *GlooInstance_GlooInstanceSpec_Check {
	if x != nil {
		return x.Check
	}
	return nil
}

type GlooInstance_GlooInstanceStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GlooInstance_GlooInstanceStatus) Reset() {
	*x = GlooInstance_GlooInstanceStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlooInstance_GlooInstanceStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlooInstance_GlooInstanceStatus) ProtoMessage() {}

func (x *GlooInstance_GlooInstanceStatus) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlooInstance_GlooInstanceStatus.ProtoReflect.Descriptor instead.
func (*GlooInstance_GlooInstanceStatus) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_rawDescGZIP(), []int{0, 1}
}

type GlooInstance_GlooInstanceSpec_ControlPlane struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The version
	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// Namespace in which the control-plane (Gloo) is located
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// An optional list of watched namespaces for Gloo resources.
	// By default, if this list is empty, we look in all namespaces.
	WatchedNamespaces []string `protobuf:"bytes,3,rep,name=watched_namespaces,json=watchedNamespaces,proto3" json:"watched_namespaces,omitempty"`
}

func (x *GlooInstance_GlooInstanceSpec_ControlPlane) Reset() {
	*x = GlooInstance_GlooInstanceSpec_ControlPlane{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlooInstance_GlooInstanceSpec_ControlPlane) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlooInstance_GlooInstanceSpec_ControlPlane) ProtoMessage() {}

func (x *GlooInstance_GlooInstanceSpec_ControlPlane) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlooInstance_GlooInstanceSpec_ControlPlane.ProtoReflect.Descriptor instead.
func (*GlooInstance_GlooInstanceSpec_ControlPlane) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *GlooInstance_GlooInstanceSpec_ControlPlane) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *GlooInstance_GlooInstanceSpec_ControlPlane) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GlooInstance_GlooInstanceSpec_ControlPlane) GetWatchedNamespaces() []string {
	if x != nil {
		return x.WatchedNamespaces
	}
	return nil
}

type GlooInstance_GlooInstanceSpec_Proxy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The number of requested proxy replicas.
	Replicas int32 `protobuf:"varint,1,opt,name=replicas,proto3" json:"replicas,omitempty"`
	// The number of available proxy replicas.
	AvailableReplicas int32 `protobuf:"varint,2,opt,name=available_replicas,json=availableReplicas,proto3" json:"available_replicas,omitempty"`
	// The number of ready proxy replicas.
	ReadyReplicas int32 `protobuf:"varint,3,opt,name=ready_replicas,json=readyReplicas,proto3" json:"ready_replicas,omitempty"`
	// Whether or not this proxy supports wasm plugins
	WasmEnabled bool `protobuf:"varint,4,opt,name=wasm_enabled,json=wasmEnabled,proto3" json:"wasm_enabled,omitempty"`
	// Whether or not this proxy allows its config dumps to be read
	ReadConfigMulticlusterEnabled bool `protobuf:"varint,11,opt,name=read_config_multicluster_enabled,json=readConfigMulticlusterEnabled,proto3" json:"read_config_multicluster_enabled,omitempty"`
	// The version
	Version string `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`
	// Name of the proxy instance, this is important to distinguish it from other proxy instances,
	// which may be in the same namespace.
	Name string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	// Namespace in which the proxy is located
	Namespace string `protobuf:"bytes,7,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Workload controller type indicates the type of workload controller managing the Proxy's pods (i.e. Deployment, DaemonSet)
	WorkloadControllerType GlooInstance_GlooInstanceSpec_Proxy_WorkloadController `protobuf:"varint,10,opt,name=workload_controller_type,json=workloadControllerType,proto3,enum=rpc.edge.gloo.solo.io.GlooInstance_GlooInstanceSpec_Proxy_WorkloadController" json:"workload_controller_type,omitempty"`
	// Zones in which the replicas of a given proxy deployment are running.
	// Kubernetes supports multi zone deployments, so 1 proxy may potentially live in multiple zones
	Zones            []string                                               `protobuf:"bytes,8,rep,name=zones,proto3" json:"zones,omitempty"`
	IngressEndpoints []*GlooInstance_GlooInstanceSpec_Proxy_IngressEndpoint `protobuf:"bytes,9,rep,name=ingress_endpoints,json=ingressEndpoints,proto3" json:"ingress_endpoints,omitempty"`
}

func (x *GlooInstance_GlooInstanceSpec_Proxy) Reset() {
	*x = GlooInstance_GlooInstanceSpec_Proxy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlooInstance_GlooInstanceSpec_Proxy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlooInstance_GlooInstanceSpec_Proxy) ProtoMessage() {}

func (x *GlooInstance_GlooInstanceSpec_Proxy) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlooInstance_GlooInstanceSpec_Proxy.ProtoReflect.Descriptor instead.
func (*GlooInstance_GlooInstanceSpec_Proxy) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_rawDescGZIP(), []int{0, 0, 1}
}

func (x *GlooInstance_GlooInstanceSpec_Proxy) GetReplicas() int32 {
	if x != nil {
		return x.Replicas
	}
	return 0
}

func (x *GlooInstance_GlooInstanceSpec_Proxy) GetAvailableReplicas() int32 {
	if x != nil {
		return x.AvailableReplicas
	}
	return 0
}

func (x *GlooInstance_GlooInstanceSpec_Proxy) GetReadyReplicas() int32 {
	if x != nil {
		return x.ReadyReplicas
	}
	return 0
}

func (x *GlooInstance_GlooInstanceSpec_Proxy) GetWasmEnabled() bool {
	if x != nil {
		return x.WasmEnabled
	}
	return false
}

func (x *GlooInstance_GlooInstanceSpec_Proxy) GetReadConfigMulticlusterEnabled() bool {
	if x != nil {
		return x.ReadConfigMulticlusterEnabled
	}
	return false
}

func (x *GlooInstance_GlooInstanceSpec_Proxy) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *GlooInstance_GlooInstanceSpec_Proxy) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GlooInstance_GlooInstanceSpec_Proxy) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GlooInstance_GlooInstanceSpec_Proxy) GetWorkloadControllerType() GlooInstance_GlooInstanceSpec_Proxy_WorkloadController {
	if x != nil {
		return x.WorkloadControllerType
	}
	return GlooInstance_GlooInstanceSpec_Proxy_UNDEFINED
}

func (x *GlooInstance_GlooInstanceSpec_Proxy) GetZones() []string {
	if x != nil {
		return x.Zones
	}
	return nil
}

func (x *GlooInstance_GlooInstanceSpec_Proxy) GetIngressEndpoints() []*GlooInstance_GlooInstanceSpec_Proxy_IngressEndpoint {
	if x != nil {
		return x.IngressEndpoints
	}
	return nil
}

// Check describes the status of the objects powering the GlooInstance.
type GlooInstance_GlooInstanceSpec_Check struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Gateways describes the Gateways configuring the GlooInstance.
	Gateways *GlooInstance_GlooInstanceSpec_Check_Summary `protobuf:"bytes,1,opt,name=gateways,proto3" json:"gateways,omitempty"`
	// VirtualServices describes the VirtualServices configuring the GlooInstance.
	VirtualServices *GlooInstance_GlooInstanceSpec_Check_Summary `protobuf:"bytes,2,opt,name=virtual_services,json=virtualServices,proto3" json:"virtual_services,omitempty"`
	// Route Tables describes the RouteTables available the GlooInstance.
	RouteTables *GlooInstance_GlooInstanceSpec_Check_Summary `protobuf:"bytes,3,opt,name=route_tables,json=routeTables,proto3" json:"route_tables,omitempty"`
	// Auth Configs describes the AuthConfigs available to the GlooInstance.
	AuthConfigs *GlooInstance_GlooInstanceSpec_Check_Summary `protobuf:"bytes,4,opt,name=auth_configs,json=authConfigs,proto3" json:"auth_configs,omitempty"`
	// Settings describes the Settings configuring the GlooInstance.
	Settings *GlooInstance_GlooInstanceSpec_Check_Summary `protobuf:"bytes,5,opt,name=settings,proto3" json:"settings,omitempty"`
	// Upstreams describes the Upstreams available to the GlooInstance.
	Upstreams *GlooInstance_GlooInstanceSpec_Check_Summary `protobuf:"bytes,6,opt,name=upstreams,proto3" json:"upstreams,omitempty"`
	// UpstreamGroups describes the UpstreamGroups available to the GlooInstance.
	UpstreamGroups *GlooInstance_GlooInstanceSpec_Check_Summary `protobuf:"bytes,7,opt,name=upstream_groups,json=upstreamGroups,proto3" json:"upstream_groups,omitempty"`
	// Proxies describes the Proxies configuring the GlooInstance.
	Proxies *GlooInstance_GlooInstanceSpec_Check_Summary `protobuf:"bytes,8,opt,name=proxies,proto3" json:"proxies,omitempty"`
	// RateLimitConfigs describes the RateLimitConfigs available to the GlooInstance.
	RateLimitConfigs *GlooInstance_GlooInstanceSpec_Check_Summary `protobuf:"bytes,9,opt,name=rate_limit_configs,json=rateLimitConfigs,proto3" json:"rate_limit_configs,omitempty"`
	// MatchableHttpGateways describes the MatchableHttpGateways available to the GlooInstance.
	MatchableHttpGateways *GlooInstance_GlooInstanceSpec_Check_Summary `protobuf:"bytes,10,opt,name=matchable_http_gateways,json=matchableHttpGateways,proto3" json:"matchable_http_gateways,omitempty"`
	// Deployments describes the Deployments in the GlooInstance's install namespace.
	Deployments *GlooInstance_GlooInstanceSpec_Check_Summary `protobuf:"bytes,20,opt,name=deployments,proto3" json:"deployments,omitempty"`
	// Pods describes the pods in the GlooInstance's install namespace.
	Pods *GlooInstance_GlooInstanceSpec_Check_Summary `protobuf:"bytes,22,opt,name=pods,proto3" json:"pods,omitempty"`
}

func (x *GlooInstance_GlooInstanceSpec_Check) Reset() {
	*x = GlooInstance_GlooInstanceSpec_Check{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlooInstance_GlooInstanceSpec_Check) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlooInstance_GlooInstanceSpec_Check) ProtoMessage() {}

func (x *GlooInstance_GlooInstanceSpec_Check) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlooInstance_GlooInstanceSpec_Check.ProtoReflect.Descriptor instead.
func (*GlooInstance_GlooInstanceSpec_Check) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_rawDescGZIP(), []int{0, 0, 2}
}

func (x *GlooInstance_GlooInstanceSpec_Check) GetGateways() *GlooInstance_GlooInstanceSpec_Check_Summary {
	if x != nil {
		return x.Gateways
	}
	return nil
}

func (x *GlooInstance_GlooInstanceSpec_Check) GetVirtualServices() *GlooInstance_GlooInstanceSpec_Check_Summary {
	if x != nil {
		return x.VirtualServices
	}
	return nil
}

func (x *GlooInstance_GlooInstanceSpec_Check) GetRouteTables() *GlooInstance_GlooInstanceSpec_Check_Summary {
	if x != nil {
		return x.RouteTables
	}
	return nil
}

func (x *GlooInstance_GlooInstanceSpec_Check) GetAuthConfigs() *GlooInstance_GlooInstanceSpec_Check_Summary {
	if x != nil {
		return x.AuthConfigs
	}
	return nil
}

func (x *GlooInstance_GlooInstanceSpec_Check) GetSettings() *GlooInstance_GlooInstanceSpec_Check_Summary {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *GlooInstance_GlooInstanceSpec_Check) GetUpstreams() *GlooInstance_GlooInstanceSpec_Check_Summary {
	if x != nil {
		return x.Upstreams
	}
	return nil
}

func (x *GlooInstance_GlooInstanceSpec_Check) GetUpstreamGroups() *GlooInstance_GlooInstanceSpec_Check_Summary {
	if x != nil {
		return x.UpstreamGroups
	}
	return nil
}

func (x *GlooInstance_GlooInstanceSpec_Check) GetProxies() *GlooInstance_GlooInstanceSpec_Check_Summary {
	if x != nil {
		return x.Proxies
	}
	return nil
}

func (x *GlooInstance_GlooInstanceSpec_Check) GetRateLimitConfigs() *GlooInstance_GlooInstanceSpec_Check_Summary {
	if x != nil {
		return x.RateLimitConfigs
	}
	return nil
}

func (x *GlooInstance_GlooInstanceSpec_Check) GetMatchableHttpGateways() *GlooInstance_GlooInstanceSpec_Check_Summary {
	if x != nil {
		return x.MatchableHttpGateways
	}
	return nil
}

func (x *GlooInstance_GlooInstanceSpec_Check) GetDeployments() *GlooInstance_GlooInstanceSpec_Check_Summary {
	if x != nil {
		return x.Deployments
	}
	return nil
}

func (x *GlooInstance_GlooInstanceSpec_Check) GetPods() *GlooInstance_GlooInstanceSpec_Check_Summary {
	if x != nil {
		return x.Pods
	}
	return nil
}

type GlooInstance_GlooInstanceSpec_Proxy_IngressEndpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string                                                      `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Ports   []*GlooInstance_GlooInstanceSpec_Proxy_IngressEndpoint_Port `protobuf:"bytes,2,rep,name=ports,proto3" json:"ports,omitempty"`
	// Kubernetes service name, will be populated only if applicable
	ServiceName string `protobuf:"bytes,3,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
}

func (x *GlooInstance_GlooInstanceSpec_Proxy_IngressEndpoint) Reset() {
	*x = GlooInstance_GlooInstanceSpec_Proxy_IngressEndpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlooInstance_GlooInstanceSpec_Proxy_IngressEndpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlooInstance_GlooInstanceSpec_Proxy_IngressEndpoint) ProtoMessage() {}

func (x *GlooInstance_GlooInstanceSpec_Proxy_IngressEndpoint) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlooInstance_GlooInstanceSpec_Proxy_IngressEndpoint.ProtoReflect.Descriptor instead.
func (*GlooInstance_GlooInstanceSpec_Proxy_IngressEndpoint) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_rawDescGZIP(), []int{0, 0, 1, 0}
}

func (x *GlooInstance_GlooInstanceSpec_Proxy_IngressEndpoint) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *GlooInstance_GlooInstanceSpec_Proxy_IngressEndpoint) GetPorts() []*GlooInstance_GlooInstanceSpec_Proxy_IngressEndpoint_Port {
	if x != nil {
		return x.Ports
	}
	return nil
}

func (x *GlooInstance_GlooInstanceSpec_Proxy_IngressEndpoint) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

type GlooInstance_GlooInstanceSpec_Proxy_IngressEndpoint_Port struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port uint32 `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GlooInstance_GlooInstanceSpec_Proxy_IngressEndpoint_Port) Reset() {
	*x = GlooInstance_GlooInstanceSpec_Proxy_IngressEndpoint_Port{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlooInstance_GlooInstanceSpec_Proxy_IngressEndpoint_Port) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlooInstance_GlooInstanceSpec_Proxy_IngressEndpoint_Port) ProtoMessage() {}

func (x *GlooInstance_GlooInstanceSpec_Proxy_IngressEndpoint_Port) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlooInstance_GlooInstanceSpec_Proxy_IngressEndpoint_Port.ProtoReflect.Descriptor instead.
func (*GlooInstance_GlooInstanceSpec_Proxy_IngressEndpoint_Port) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_rawDescGZIP(), []int{0, 0, 1, 0, 0}
}

func (x *GlooInstance_GlooInstanceSpec_Proxy_IngressEndpoint_Port) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *GlooInstance_GlooInstanceSpec_Proxy_IngressEndpoint_Port) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Summary provides aggregate information for a given resource type.
type GlooInstance_GlooInstanceSpec_Check_Summary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The total number of resources in any state.
	Total int32 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	// Errors is a list of resource refs and their associated error messages.
	Errors []*GlooInstance_GlooInstanceSpec_Check_Summary_ResourceReport `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty"`
	// Warnings is a list of resource refs and their associated warning messages.
	Warnings []*GlooInstance_GlooInstanceSpec_Check_Summary_ResourceReport `protobuf:"bytes,3,rep,name=warnings,proto3" json:"warnings,omitempty"`
}

func (x *GlooInstance_GlooInstanceSpec_Check_Summary) Reset() {
	*x = GlooInstance_GlooInstanceSpec_Check_Summary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlooInstance_GlooInstanceSpec_Check_Summary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlooInstance_GlooInstanceSpec_Check_Summary) ProtoMessage() {}

func (x *GlooInstance_GlooInstanceSpec_Check_Summary) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlooInstance_GlooInstanceSpec_Check_Summary.ProtoReflect.Descriptor instead.
func (*GlooInstance_GlooInstanceSpec_Check_Summary) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_rawDescGZIP(), []int{0, 0, 2, 0}
}

func (x *GlooInstance_GlooInstanceSpec_Check_Summary) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GlooInstance_GlooInstanceSpec_Check_Summary) GetErrors() []*GlooInstance_GlooInstanceSpec_Check_Summary_ResourceReport {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *GlooInstance_GlooInstanceSpec_Check_Summary) GetWarnings() []*GlooInstance_GlooInstanceSpec_Check_Summary_ResourceReport {
	if x != nil {
		return x.Warnings
	}
	return nil
}

// A ResourceReport references an object and provides a status message.
type GlooInstance_GlooInstanceSpec_Check_Summary_ResourceReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ref     *v1.ObjectRef `protobuf:"bytes,1,opt,name=ref,proto3" json:"ref,omitempty"`
	Message string        `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *GlooInstance_GlooInstanceSpec_Check_Summary_ResourceReport) Reset() {
	*x = GlooInstance_GlooInstanceSpec_Check_Summary_ResourceReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlooInstance_GlooInstanceSpec_Check_Summary_ResourceReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlooInstance_GlooInstanceSpec_Check_Summary_ResourceReport) ProtoMessage() {}

func (x *GlooInstance_GlooInstanceSpec_Check_Summary_ResourceReport) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlooInstance_GlooInstanceSpec_Check_Summary_ResourceReport.ProtoReflect.Descriptor instead.
func (*GlooInstance_GlooInstanceSpec_Check_Summary_ResourceReport) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_rawDescGZIP(), []int{0, 0, 2, 0, 0}
}

func (x *GlooInstance_GlooInstanceSpec_Check_Summary_ResourceReport) GetRef() *v1.ObjectRef {
	if x != nil {
		return x.Ref
	}
	return nil
}

func (x *GlooInstance_GlooInstanceSpec_Check_Summary_ResourceReport) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto protoreflect.FileDescriptor

var file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_rawDesc = []byte{
	0x0a, 0x5b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6c,
	0x6f, 0x2d, 0x69, 0x6f, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64,
	0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x6c, 0x6f, 0x6f, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x72,
	0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c,
	0x6f, 0x2e, 0x69, 0x6f, 0x1a, 0x12, 0x65, 0x78, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65,
	0x78, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x55, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x69, 0x6f, 0x2f, 0x73, 0x6f, 0x6c,
	0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2f,
	0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6c, 0x6f,
	0x2d, 0x69, 0x6f, 0x2f, 0x73, 0x6b, 0x76, 0x32, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xa2, 0x19, 0x0a, 0x0c, 0x47, 0x6c, 0x6f, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x3d, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c,
	0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x48, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f,
	0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x6c, 0x6f, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x2e, 0x47, 0x6c, 0x6f, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53,
	0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x4e, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x65, 0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69,
	0x6f, 0x2e, 0x47, 0x6c, 0x6f, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x47,
	0x6c, 0x6f, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0xa2, 0x17, 0x0a, 0x10, 0x47, 0x6c,
	0x6f, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0c, 0x69, 0x73, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x12, 0x66, 0x0a,
	0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e,
	0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x6c, 0x6f,
	0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x47, 0x6c, 0x6f, 0x6f, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x50, 0x6c, 0x61, 0x6e, 0x65, 0x12, 0x54, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x78, 0x69, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67,
	0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47,
	0x6c, 0x6f, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x47, 0x6c, 0x6f, 0x6f,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x50, 0x72, 0x6f,
	0x78, 0x79, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x78, 0x69, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x12, 0x50, 0x0a, 0x05, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c,
	0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x6c, 0x6f, 0x6f, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x47, 0x6c, 0x6f, 0x6f, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x05,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x1a, 0x75, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x50, 0x6c, 0x61, 0x6e, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x2d, 0x0a,
	0x12, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x77, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x1a, 0xf7, 0x06, 0x0a,
	0x05, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11,
	0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x73, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x61, 0x64, 0x79, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x72, 0x65, 0x61, 0x64, 0x79,
	0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x61, 0x73, 0x6d,
	0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x77, 0x61, 0x73, 0x6d, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x47, 0x0a, 0x20, 0x72,
	0x65, 0x61, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1d, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x87, 0x01, 0x0a, 0x18, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x4d, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x67,
	0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x6c, 0x6f, 0x6f,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x47, 0x6c, 0x6f, 0x6f, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e,
	0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x52, 0x16, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x7a, 0x6f,
	0x6e, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x7a, 0x6f, 0x6e, 0x65, 0x73,
	0x12, 0x77, 0x0a, 0x11, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x65, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f,
	0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x6c, 0x6f, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x2e, 0x47, 0x6c, 0x6f, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x70, 0x65,
	0x63, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x45,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x10, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x1a, 0xe5, 0x01, 0x0a, 0x0f, 0x49, 0x6e,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x65, 0x0a, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4f, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67,
	0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47,
	0x6c, 0x6f, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x47, 0x6c, 0x6f, 0x6f,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x50, 0x72, 0x6f,
	0x78, 0x79, 0x2e, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x21,
	0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x1a, 0x2e, 0x0a, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x43, 0x0a, 0x12, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x4e, 0x44, 0x45, 0x46,
	0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x45, 0x50, 0x4c, 0x4f, 0x59,
	0x4d, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x41, 0x45, 0x4d, 0x4f, 0x4e,
	0x5f, 0x53, 0x45, 0x54, 0x10, 0x02, 0x1a, 0xb5, 0x0c, 0x0a, 0x05, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x12, 0x5e, 0x0a, 0x08, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x42, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c,
	0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x6c, 0x6f, 0x6f, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x47, 0x6c, 0x6f, 0x6f, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x2e, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x08, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x73,
	0x12, 0x6d, 0x0a, 0x10, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e,
	0x69, 0x6f, 0x2e, 0x47, 0x6c, 0x6f, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e,
	0x47, 0x6c, 0x6f, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x70, 0x65, 0x63,
	0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x2e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x0f,
	0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12,
	0x65, 0x0a, 0x0c, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65,
	0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x6c,
	0x6f, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x47, 0x6c, 0x6f, 0x6f, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x2e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x0b, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x65, 0x0a, 0x0c, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c,
	0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x6c, 0x6f, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x2e, 0x47, 0x6c, 0x6f, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x70,
	0x65, 0x63, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x2e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x52, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x12, 0x5e, 0x0a,
	0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x42, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e,
	0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x6c, 0x6f, 0x6f, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x2e, 0x47, 0x6c, 0x6f, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x2e, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x60, 0x0a,
	0x09, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x42, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f,
	0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x6c, 0x6f, 0x6f, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x47, 0x6c, 0x6f, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x2e, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x52, 0x09, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x12,
	0x6b, 0x0a, 0x0f, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x65,
	0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f,
	0x2e, 0x47, 0x6c, 0x6f, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x47, 0x6c,
	0x6f, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x2e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x0e, 0x75, 0x70,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x5c, 0x0a, 0x07,
	0x70, 0x72, 0x6f, 0x78, 0x69, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f,
	0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x6c, 0x6f, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x2e, 0x47, 0x6c, 0x6f, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53,
	0x70, 0x65, 0x63, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x2e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x78, 0x69, 0x65, 0x73, 0x12, 0x70, 0x0a, 0x12, 0x72, 0x61,
	0x74, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67,
	0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47,
	0x6c, 0x6f, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x47, 0x6c, 0x6f, 0x6f,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x2e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x10, 0x72, 0x61, 0x74, 0x65,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x12, 0x7a, 0x0a, 0x17,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f,
	0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x6c, 0x6f, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x2e, 0x47, 0x6c, 0x6f, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53,
	0x70, 0x65, 0x63, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x2e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x52, 0x15, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x48, 0x74, 0x74, 0x70,
	0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x73, 0x12, 0x64, 0x0a, 0x0b, 0x64, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f,
	0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x6c, 0x6f, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x2e, 0x47, 0x6c, 0x6f, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53,
	0x70, 0x65, 0x63, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x2e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x52, 0x0b, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x56,
	0x0a, 0x04, 0x70, 0x6f, 0x64, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c,
	0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x6c, 0x6f, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x2e, 0x47, 0x6c, 0x6f, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x70,
	0x65, 0x63, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x2e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x52, 0x04, 0x70, 0x6f, 0x64, 0x73, 0x1a, 0xd5, 0x02, 0x0a, 0x07, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x69, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x51, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x65,
	0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f,
	0x2e, 0x47, 0x6c, 0x6f, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x47, 0x6c,
	0x6f, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x2e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x06, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x73, 0x12, 0x6d, 0x0a, 0x08, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x51, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65,
	0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x6c,
	0x6f, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x47, 0x6c, 0x6f, 0x6f, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x2e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x08, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x73, 0x1a, 0x5a, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x2e, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x73, 0x6b, 0x76, 0x32, 0x2e, 0x73, 0x6f,
	0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x66, 0x52,
	0x03, 0x72, 0x65, 0x66, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x14,
	0x0a, 0x12, 0x47, 0x6c, 0x6f, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x1a, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x6c, 0x6f, 0x6f,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x67, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x6c, 0x6f, 0x6f, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a,
	0x0e, 0x67, 0x6c, 0x6f, 0x6f, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65,
	0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x6c,
	0x6f, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x0d, 0x67, 0x6c, 0x6f, 0x6f,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x76, 0x0a, 0x0e, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x4a, 0x0a, 0x0e, 0x67, 0x6c, 0x6f, 0x6f, 0x5f, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f,
	0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x6c, 0x6f, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x0d, 0x67, 0x6c, 0x6f, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0x22, 0x1b, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x6c,
	0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x0f,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65,
	0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0e, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x48, 0x0a, 0x0a,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x75, 0x6d, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x72, 0x61, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x61, 0x77,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x61, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x44, 0x75, 0x6d, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x48, 0x0a, 0x11, 0x67, 0x6c, 0x6f, 0x6f, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x73, 0x6b, 0x76, 0x32, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x66, 0x52, 0x0f, 0x67, 0x6c, 0x6f, 0x6f, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x66, 0x22, 0x5e, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x75, 0x6d, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x64, 0x75,
	0x6d, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x65, 0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69,
	0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x75, 0x6d, 0x70, 0x52, 0x0b, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x44, 0x75, 0x6d, 0x70, 0x73, 0x22, 0x63, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x48, 0x0a, 0x11, 0x67, 0x6c, 0x6f, 0x6f, 0x5f, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x73, 0x6b, 0x76, 0x32, 0x2e, 0x73, 0x6f, 0x6c, 0x6f,
	0x2e, 0x69, 0x6f, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x66, 0x52, 0x0f, 0x67,
	0x6c, 0x6f, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x66, 0x22, 0xe8,
	0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x48, 0x6f,
	0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x69, 0x0a, 0x0e, 0x75,
	0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x67,
	0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x55,
	0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x48, 0x6f, 0x73,
	0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x1a, 0x61, 0x0a, 0x12, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x35,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f,
	0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3d, 0x0a, 0x08, 0x48, 0x6f, 0x73,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x05, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e,
	0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x48, 0x6f, 0x73,
	0x74, 0x52, 0x05, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x22, 0x87, 0x01, 0x0a, 0x04, 0x48, 0x6f, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x39, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x5f, 0x72, 0x65, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x73, 0x6b, 0x76, 0x32, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x66, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x52,
	0x65, 0x66, 0x32, 0xf0, 0x03, 0x0a, 0x0f, 0x47, 0x6c, 0x6f, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x41, 0x70, 0x69, 0x12, 0x78, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x6c,
	0x6f, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x2f, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f,
	0x2e, 0x69, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x6c, 0x6f, 0x6f, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c,
	0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x6c, 0x6f, 0x6f, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x7b, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x30, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67,
	0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x65,
	0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6f, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x75, 0x6d, 0x70, 0x73, 0x12,
	0x2c, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e,
	0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x44, 0x75, 0x6d, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f,
	0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44,
	0x75, 0x6d, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x75,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x48, 0x6f, 0x73,
	0x74, 0x73, 0x12, 0x2e, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c,
	0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x70,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c,
	0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x70,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x56, 0x5a, 0x4c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x69, 0x6f, 0x2f, 0x73, 0x6f, 0x6c, 0x6f,
	0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x6b, 0x67,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x67, 0x6c,
	0x6f, 0x6f, 0x2f, 0x76, 0x31, 0xc0, 0xf5, 0x04, 0x01, 0xb8, 0xf5, 0x04, 0x01, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_rawDescOnce sync.Once
	file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_rawDescData = file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_rawDesc
)

func file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_rawDescGZIP() []byte {
	file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_rawDescOnce.Do(func() {
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_rawDescData)
	})
	return file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_rawDescData
}

var file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_goTypes = []interface{}{
	(GlooInstance_GlooInstanceSpec_Proxy_WorkloadController)(0), // 0: rpc.edge.gloo.solo.io.GlooInstance.GlooInstanceSpec.Proxy.WorkloadController
	(*GlooInstance)(nil),                                               // 1: rpc.edge.gloo.solo.io.GlooInstance
	(*ListGlooInstancesRequest)(nil),                                   // 2: rpc.edge.gloo.solo.io.ListGlooInstancesRequest
	(*ListGlooInstancesResponse)(nil),                                  // 3: rpc.edge.gloo.solo.io.ListGlooInstancesResponse
	(*ClusterDetails)(nil),                                             // 4: rpc.edge.gloo.solo.io.ClusterDetails
	(*ListClusterDetailsRequest)(nil),                                  // 5: rpc.edge.gloo.solo.io.ListClusterDetailsRequest
	(*ListClusterDetailsResponse)(nil),                                 // 6: rpc.edge.gloo.solo.io.ListClusterDetailsResponse
	(*ConfigDump)(nil),                                                 // 7: rpc.edge.gloo.solo.io.ConfigDump
	(*GetConfigDumpsRequest)(nil),                                      // 8: rpc.edge.gloo.solo.io.GetConfigDumpsRequest
	(*GetConfigDumpsResponse)(nil),                                     // 9: rpc.edge.gloo.solo.io.GetConfigDumpsResponse
	(*GetUpstreamHostsRequest)(nil),                                    // 10: rpc.edge.gloo.solo.io.GetUpstreamHostsRequest
	(*GetUpstreamHostsResponse)(nil),                                   // 11: rpc.edge.gloo.solo.io.GetUpstreamHostsResponse
	(*HostList)(nil),                                                   // 12: rpc.edge.gloo.solo.io.HostList
	(*Host)(nil),                                                       // 13: rpc.edge.gloo.solo.io.Host
	(*GlooInstance_GlooInstanceSpec)(nil),                              // 14: rpc.edge.gloo.solo.io.GlooInstance.GlooInstanceSpec
	(*GlooInstance_GlooInstanceStatus)(nil),                            // 15: rpc.edge.gloo.solo.io.GlooInstance.GlooInstanceStatus
	(*GlooInstance_GlooInstanceSpec_ControlPlane)(nil),                 // 16: rpc.edge.gloo.solo.io.GlooInstance.GlooInstanceSpec.ControlPlane
	(*GlooInstance_GlooInstanceSpec_Proxy)(nil),                        // 17: rpc.edge.gloo.solo.io.GlooInstance.GlooInstanceSpec.Proxy
	(*GlooInstance_GlooInstanceSpec_Check)(nil),                        // 18: rpc.edge.gloo.solo.io.GlooInstance.GlooInstanceSpec.Check
	(*GlooInstance_GlooInstanceSpec_Proxy_IngressEndpoint)(nil),        // 19: rpc.edge.gloo.solo.io.GlooInstance.GlooInstanceSpec.Proxy.IngressEndpoint
	(*GlooInstance_GlooInstanceSpec_Proxy_IngressEndpoint_Port)(nil),   // 20: rpc.edge.gloo.solo.io.GlooInstance.GlooInstanceSpec.Proxy.IngressEndpoint.Port
	(*GlooInstance_GlooInstanceSpec_Check_Summary)(nil),                // 21: rpc.edge.gloo.solo.io.GlooInstance.GlooInstanceSpec.Check.Summary
	(*GlooInstance_GlooInstanceSpec_Check_Summary_ResourceReport)(nil), // 22: rpc.edge.gloo.solo.io.GlooInstance.GlooInstanceSpec.Check.Summary.ResourceReport
	nil,                  // 23: rpc.edge.gloo.solo.io.GetUpstreamHostsResponse.UpstreamHostsEntry
	(*ObjectMeta)(nil),   // 24: rpc.edge.gloo.solo.io.ObjectMeta
	(*v1.ObjectRef)(nil), // 25: core.skv2.solo.io.ObjectRef
}
var file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_depIdxs = []int32{
	24, // 0: rpc.edge.gloo.solo.io.GlooInstance.metadata:type_name -> rpc.edge.gloo.solo.io.ObjectMeta
	14, // 1: rpc.edge.gloo.solo.io.GlooInstance.spec:type_name -> rpc.edge.gloo.solo.io.GlooInstance.GlooInstanceSpec
	15, // 2: rpc.edge.gloo.solo.io.GlooInstance.status:type_name -> rpc.edge.gloo.solo.io.GlooInstance.GlooInstanceStatus
	1,  // 3: rpc.edge.gloo.solo.io.ListGlooInstancesResponse.gloo_instances:type_name -> rpc.edge.gloo.solo.io.GlooInstance
	1,  // 4: rpc.edge.gloo.solo.io.ClusterDetails.gloo_instances:type_name -> rpc.edge.gloo.solo.io.GlooInstance
	4,  // 5: rpc.edge.gloo.solo.io.ListClusterDetailsResponse.cluster_details:type_name -> rpc.edge.gloo.solo.io.ClusterDetails
	25, // 6: rpc.edge.gloo.solo.io.GetConfigDumpsRequest.gloo_instance_ref:type_name -> core.skv2.solo.io.ObjectRef
	7,  // 7: rpc.edge.gloo.solo.io.GetConfigDumpsResponse.config_dumps:type_name -> rpc.edge.gloo.solo.io.ConfigDump
	25, // 8: rpc.edge.gloo.solo.io.GetUpstreamHostsRequest.gloo_instance_ref:type_name -> core.skv2.solo.io.ObjectRef
	23, // 9: rpc.edge.gloo.solo.io.GetUpstreamHostsResponse.upstream_hosts:type_name -> rpc.edge.gloo.solo.io.GetUpstreamHostsResponse.UpstreamHostsEntry
	13, // 10: rpc.edge.gloo.solo.io.HostList.hosts:type_name -> rpc.edge.gloo.solo.io.Host
	25, // 11: rpc.edge.gloo.solo.io.Host.proxy_ref:type_name -> core.skv2.solo.io.ObjectRef
	16, // 12: rpc.edge.gloo.solo.io.GlooInstance.GlooInstanceSpec.control_plane:type_name -> rpc.edge.gloo.solo.io.GlooInstance.GlooInstanceSpec.ControlPlane
	17, // 13: rpc.edge.gloo.solo.io.GlooInstance.GlooInstanceSpec.proxies:type_name -> rpc.edge.gloo.solo.io.GlooInstance.GlooInstanceSpec.Proxy
	18, // 14: rpc.edge.gloo.solo.io.GlooInstance.GlooInstanceSpec.check:type_name -> rpc.edge.gloo.solo.io.GlooInstance.GlooInstanceSpec.Check
	0,  // 15: rpc.edge.gloo.solo.io.GlooInstance.GlooInstanceSpec.Proxy.workload_controller_type:type_name -> rpc.edge.gloo.solo.io.GlooInstance.GlooInstanceSpec.Proxy.WorkloadController
	19, // 16: rpc.edge.gloo.solo.io.GlooInstance.GlooInstanceSpec.Proxy.ingress_endpoints:type_name -> rpc.edge.gloo.solo.io.GlooInstance.GlooInstanceSpec.Proxy.IngressEndpoint
	21, // 17: rpc.edge.gloo.solo.io.GlooInstance.GlooInstanceSpec.Check.gateways:type_name -> rpc.edge.gloo.solo.io.GlooInstance.GlooInstanceSpec.Check.Summary
	21, // 18: rpc.edge.gloo.solo.io.GlooInstance.GlooInstanceSpec.Check.virtual_services:type_name -> rpc.edge.gloo.solo.io.GlooInstance.GlooInstanceSpec.Check.Summary
	21, // 19: rpc.edge.gloo.solo.io.GlooInstance.GlooInstanceSpec.Check.route_tables:type_name -> rpc.edge.gloo.solo.io.GlooInstance.GlooInstanceSpec.Check.Summary
	21, // 20: rpc.edge.gloo.solo.io.GlooInstance.GlooInstanceSpec.Check.auth_configs:type_name -> rpc.edge.gloo.solo.io.GlooInstance.GlooInstanceSpec.Check.Summary
	21, // 21: rpc.edge.gloo.solo.io.GlooInstance.GlooInstanceSpec.Check.settings:type_name -> rpc.edge.gloo.solo.io.GlooInstance.GlooInstanceSpec.Check.Summary
	21, // 22: rpc.edge.gloo.solo.io.GlooInstance.GlooInstanceSpec.Check.upstreams:type_name -> rpc.edge.gloo.solo.io.GlooInstance.GlooInstanceSpec.Check.Summary
	21, // 23: rpc.edge.gloo.solo.io.GlooInstance.GlooInstanceSpec.Check.upstream_groups:type_name -> rpc.edge.gloo.solo.io.GlooInstance.GlooInstanceSpec.Check.Summary
	21, // 24: rpc.edge.gloo.solo.io.GlooInstance.GlooInstanceSpec.Check.proxies:type_name -> rpc.edge.gloo.solo.io.GlooInstance.GlooInstanceSpec.Check.Summary
	21, // 25: rpc.edge.gloo.solo.io.GlooInstance.GlooInstanceSpec.Check.rate_limit_configs:type_name -> rpc.edge.gloo.solo.io.GlooInstance.GlooInstanceSpec.Check.Summary
	21, // 26: rpc.edge.gloo.solo.io.GlooInstance.GlooInstanceSpec.Check.matchable_http_gateways:type_name -> rpc.edge.gloo.solo.io.GlooInstance.GlooInstanceSpec.Check.Summary
	21, // 27: rpc.edge.gloo.solo.io.GlooInstance.GlooInstanceSpec.Check.deployments:type_name -> rpc.edge.gloo.solo.io.GlooInstance.GlooInstanceSpec.Check.Summary
	21, // 28: rpc.edge.gloo.solo.io.GlooInstance.GlooInstanceSpec.Check.pods:type_name -> rpc.edge.gloo.solo.io.GlooInstance.GlooInstanceSpec.Check.Summary
	20, // 29: rpc.edge.gloo.solo.io.GlooInstance.GlooInstanceSpec.Proxy.IngressEndpoint.ports:type_name -> rpc.edge.gloo.solo.io.GlooInstance.GlooInstanceSpec.Proxy.IngressEndpoint.Port
	22, // 30: rpc.edge.gloo.solo.io.GlooInstance.GlooInstanceSpec.Check.Summary.errors:type_name -> rpc.edge.gloo.solo.io.GlooInstance.GlooInstanceSpec.Check.Summary.ResourceReport
	22, // 31: rpc.edge.gloo.solo.io.GlooInstance.GlooInstanceSpec.Check.Summary.warnings:type_name -> rpc.edge.gloo.solo.io.GlooInstance.GlooInstanceSpec.Check.Summary.ResourceReport
	25, // 32: rpc.edge.gloo.solo.io.GlooInstance.GlooInstanceSpec.Check.Summary.ResourceReport.ref:type_name -> core.skv2.solo.io.ObjectRef
	12, // 33: rpc.edge.gloo.solo.io.GetUpstreamHostsResponse.UpstreamHostsEntry.value:type_name -> rpc.edge.gloo.solo.io.HostList
	2,  // 34: rpc.edge.gloo.solo.io.GlooInstanceApi.ListGlooInstances:input_type -> rpc.edge.gloo.solo.io.ListGlooInstancesRequest
	5,  // 35: rpc.edge.gloo.solo.io.GlooInstanceApi.ListClusterDetails:input_type -> rpc.edge.gloo.solo.io.ListClusterDetailsRequest
	8,  // 36: rpc.edge.gloo.solo.io.GlooInstanceApi.GetConfigDumps:input_type -> rpc.edge.gloo.solo.io.GetConfigDumpsRequest
	10, // 37: rpc.edge.gloo.solo.io.GlooInstanceApi.GetUpstreamHosts:input_type -> rpc.edge.gloo.solo.io.GetUpstreamHostsRequest
	3,  // 38: rpc.edge.gloo.solo.io.GlooInstanceApi.ListGlooInstances:output_type -> rpc.edge.gloo.solo.io.ListGlooInstancesResponse
	6,  // 39: rpc.edge.gloo.solo.io.GlooInstanceApi.ListClusterDetails:output_type -> rpc.edge.gloo.solo.io.ListClusterDetailsResponse
	9,  // 40: rpc.edge.gloo.solo.io.GlooInstanceApi.GetConfigDumps:output_type -> rpc.edge.gloo.solo.io.GetConfigDumpsResponse
	11, // 41: rpc.edge.gloo.solo.io.GlooInstanceApi.GetUpstreamHosts:output_type -> rpc.edge.gloo.solo.io.GetUpstreamHostsResponse
	38, // [38:42] is the sub-list for method output_type
	34, // [34:38] is the sub-list for method input_type
	34, // [34:34] is the sub-list for extension type_name
	34, // [34:34] is the sub-list for extension extendee
	0,  // [0:34] is the sub-list for field type_name
}

func init() {
	file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_init()
}
func file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_init() {
	if File_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto != nil {
		return
	}
	file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlooInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGlooInstancesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGlooInstancesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListClusterDetailsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListClusterDetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigDump); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfigDumpsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfigDumpsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUpstreamHostsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUpstreamHostsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Host); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlooInstance_GlooInstanceSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlooInstance_GlooInstanceStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlooInstance_GlooInstanceSpec_ControlPlane); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlooInstance_GlooInstanceSpec_Proxy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlooInstance_GlooInstanceSpec_Check); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlooInstance_GlooInstanceSpec_Proxy_IngressEndpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlooInstance_GlooInstanceSpec_Proxy_IngressEndpoint_Port); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlooInstance_GlooInstanceSpec_Check_Summary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlooInstance_GlooInstanceSpec_Check_Summary_ResourceReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_goTypes,
		DependencyIndexes: file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_depIdxs,
		EnumInfos:         file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_enumTypes,
		MessageInfos:      file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_msgTypes,
	}.Build()
	File_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto = out.File
	file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_rawDesc = nil
	file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_goTypes = nil
	file_github_com_solo_io_solo_projects_projects_apiserver_api_rpc_edge_gloo_v1_glooinstance_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GlooInstanceApiClient is the client API for GlooInstanceApi service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GlooInstanceApiClient interface {
	ListGlooInstances(ctx context.Context, in *ListGlooInstancesRequest, opts ...grpc.CallOption) (*ListGlooInstancesResponse, error)
	ListClusterDetails(ctx context.Context, in *ListClusterDetailsRequest, opts ...grpc.CallOption) (*ListClusterDetailsResponse, error)
	GetConfigDumps(ctx context.Context, in *GetConfigDumpsRequest, opts ...grpc.CallOption) (*GetConfigDumpsResponse, error)
	GetUpstreamHosts(ctx context.Context, in *GetUpstreamHostsRequest, opts ...grpc.CallOption) (*GetUpstreamHostsResponse, error)
}

type glooInstanceApiClient struct {
	cc grpc.ClientConnInterface
}

func NewGlooInstanceApiClient(cc grpc.ClientConnInterface) GlooInstanceApiClient {
	return &glooInstanceApiClient{cc}
}

func (c *glooInstanceApiClient) ListGlooInstances(ctx context.Context, in *ListGlooInstancesRequest, opts ...grpc.CallOption) (*ListGlooInstancesResponse, error) {
	out := new(ListGlooInstancesResponse)
	err := c.cc.Invoke(ctx, "/rpc.edge.gloo.solo.io.GlooInstanceApi/ListGlooInstances", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *glooInstanceApiClient) ListClusterDetails(ctx context.Context, in *ListClusterDetailsRequest, opts ...grpc.CallOption) (*ListClusterDetailsResponse, error) {
	out := new(ListClusterDetailsResponse)
	err := c.cc.Invoke(ctx, "/rpc.edge.gloo.solo.io.GlooInstanceApi/ListClusterDetails", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *glooInstanceApiClient) GetConfigDumps(ctx context.Context, in *GetConfigDumpsRequest, opts ...grpc.CallOption) (*GetConfigDumpsResponse, error) {
	out := new(GetConfigDumpsResponse)
	err := c.cc.Invoke(ctx, "/rpc.edge.gloo.solo.io.GlooInstanceApi/GetConfigDumps", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *glooInstanceApiClient) GetUpstreamHosts(ctx context.Context, in *GetUpstreamHostsRequest, opts ...grpc.CallOption) (*GetUpstreamHostsResponse, error) {
	out := new(GetUpstreamHostsResponse)
	err := c.cc.Invoke(ctx, "/rpc.edge.gloo.solo.io.GlooInstanceApi/GetUpstreamHosts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GlooInstanceApiServer is the server API for GlooInstanceApi service.
type GlooInstanceApiServer interface {
	ListGlooInstances(context.Context, *ListGlooInstancesRequest) (*ListGlooInstancesResponse, error)
	ListClusterDetails(context.Context, *ListClusterDetailsRequest) (*ListClusterDetailsResponse, error)
	GetConfigDumps(context.Context, *GetConfigDumpsRequest) (*GetConfigDumpsResponse, error)
	GetUpstreamHosts(context.Context, *GetUpstreamHostsRequest) (*GetUpstreamHostsResponse, error)
}

// UnimplementedGlooInstanceApiServer can be embedded to have forward compatible implementations.
type UnimplementedGlooInstanceApiServer struct {
}

func (*UnimplementedGlooInstanceApiServer) ListGlooInstances(context.Context, *ListGlooInstancesRequest) (*ListGlooInstancesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListGlooInstances not implemented")
}
func (*UnimplementedGlooInstanceApiServer) ListClusterDetails(context.Context, *ListClusterDetailsRequest) (*ListClusterDetailsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListClusterDetails not implemented")
}
func (*UnimplementedGlooInstanceApiServer) GetConfigDumps(context.Context, *GetConfigDumpsRequest) (*GetConfigDumpsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetConfigDumps not implemented")
}
func (*UnimplementedGlooInstanceApiServer) GetUpstreamHosts(context.Context, *GetUpstreamHostsRequest) (*GetUpstreamHostsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUpstreamHosts not implemented")
}

func RegisterGlooInstanceApiServer(s *grpc.Server, srv GlooInstanceApiServer) {
	s.RegisterService(&_GlooInstanceApi_serviceDesc, srv)
}

func _GlooInstanceApi_ListGlooInstances_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListGlooInstancesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlooInstanceApiServer).ListGlooInstances(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.edge.gloo.solo.io.GlooInstanceApi/ListGlooInstances",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlooInstanceApiServer).ListGlooInstances(ctx, req.(*ListGlooInstancesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlooInstanceApi_ListClusterDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListClusterDetailsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlooInstanceApiServer).ListClusterDetails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.edge.gloo.solo.io.GlooInstanceApi/ListClusterDetails",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlooInstanceApiServer).ListClusterDetails(ctx, req.(*ListClusterDetailsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlooInstanceApi_GetConfigDumps_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetConfigDumpsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlooInstanceApiServer).GetConfigDumps(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.edge.gloo.solo.io.GlooInstanceApi/GetConfigDumps",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlooInstanceApiServer).GetConfigDumps(ctx, req.(*GetConfigDumpsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlooInstanceApi_GetUpstreamHosts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUpstreamHostsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlooInstanceApiServer).GetUpstreamHosts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.edge.gloo.solo.io.GlooInstanceApi/GetUpstreamHosts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlooInstanceApiServer).GetUpstreamHosts(ctx, req.(*GetUpstreamHostsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GlooInstanceApi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.edge.gloo.solo.io.GlooInstanceApi",
	HandlerType: (*GlooInstanceApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListGlooInstances",
			Handler:    _GlooInstanceApi_ListGlooInstances_Handler,
		},
		{
			MethodName: "ListClusterDetails",
			Handler:    _GlooInstanceApi_ListClusterDetails_Handler,
		},
		{
			MethodName: "GetConfigDumps",
			Handler:    _GlooInstanceApi_GetConfigDumps_Handler,
		},
		{
			MethodName: "GetUpstreamHosts",
			Handler:    _GlooInstanceApi_GetUpstreamHosts_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/solo-io/solo-projects/projects/apiserver/api/rpc.edge.gloo/v1/glooinstance.proto",
}
