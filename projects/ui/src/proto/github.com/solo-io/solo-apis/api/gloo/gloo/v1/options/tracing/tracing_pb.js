/* eslint-disable */
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_trace_v3_zipkin_pb = require('../../../../../../../../../github.com/solo-io/solo-apis/api/gloo/gloo/external/envoy/config/trace/v3/zipkin_pb.js');
var github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_trace_v3_datadog_pb = require('../../../../../../../../../github.com/solo-io/solo-apis/api/gloo/gloo/external/envoy/config/trace/v3/datadog_pb.js');
var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
var extproto_ext_pb = require('../../../../../../../../../extproto/ext_pb.js');
var github_com_solo$io_solo$kit_api_v1_ref_pb = require('../../../../../../../../../github.com/solo-io/solo-kit/api/v1/ref_pb.js');
goog.exportSymbol('proto.tracing.options.gloo.solo.io.ListenerTracingSettings', null, global);
goog.exportSymbol('proto.tracing.options.gloo.solo.io.RouteTracingSettings', null, global);
goog.exportSymbol('proto.tracing.options.gloo.solo.io.TracePercentages', null, global);
goog.exportSymbol('proto.tracing.options.gloo.solo.io.TracingTagEnvironmentVariable', null, global);
goog.exportSymbol('proto.tracing.options.gloo.solo.io.TracingTagLiteral', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tracing.options.gloo.solo.io.ListenerTracingSettings = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tracing.options.gloo.solo.io.ListenerTracingSettings.repeatedFields_, proto.tracing.options.gloo.solo.io.ListenerTracingSettings.oneofGroups_);
};
goog.inherits(proto.tracing.options.gloo.solo.io.ListenerTracingSettings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tracing.options.gloo.solo.io.ListenerTracingSettings.displayName = 'proto.tracing.options.gloo.solo.io.ListenerTracingSettings';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tracing.options.gloo.solo.io.ListenerTracingSettings.repeatedFields_ = [1,6,7];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.tracing.options.gloo.solo.io.ListenerTracingSettings.oneofGroups_ = [[4,5]];

/**
 * @enum {number}
 */
proto.tracing.options.gloo.solo.io.ListenerTracingSettings.ProviderConfigCase = {
  PROVIDER_CONFIG_NOT_SET: 0,
  ZIPKIN_CONFIG: 4,
  DATADOG_CONFIG: 5
};

/**
 * @return {proto.tracing.options.gloo.solo.io.ListenerTracingSettings.ProviderConfigCase}
 */
proto.tracing.options.gloo.solo.io.ListenerTracingSettings.prototype.getProviderConfigCase = function() {
  return /** @type {proto.tracing.options.gloo.solo.io.ListenerTracingSettings.ProviderConfigCase} */(jspb.Message.computeOneofCase(this, proto.tracing.options.gloo.solo.io.ListenerTracingSettings.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tracing.options.gloo.solo.io.ListenerTracingSettings.prototype.toObject = function(opt_includeInstance) {
  return proto.tracing.options.gloo.solo.io.ListenerTracingSettings.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tracing.options.gloo.solo.io.ListenerTracingSettings} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tracing.options.gloo.solo.io.ListenerTracingSettings.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestHeadersForTagsList: jspb.Message.toObjectList(msg.getRequestHeadersForTagsList(),
    google_protobuf_wrappers_pb.StringValue.toObject, includeInstance),
    verbose: (f = msg.getVerbose()) && google_protobuf_wrappers_pb.BoolValue.toObject(includeInstance, f),
    tracePercentages: (f = msg.getTracePercentages()) && proto.tracing.options.gloo.solo.io.TracePercentages.toObject(includeInstance, f),
    zipkinConfig: (f = msg.getZipkinConfig()) && github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_trace_v3_zipkin_pb.ZipkinConfig.toObject(includeInstance, f),
    datadogConfig: (f = msg.getDatadogConfig()) && github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_trace_v3_datadog_pb.DatadogConfig.toObject(includeInstance, f),
    environmentVariablesForTagsList: jspb.Message.toObjectList(msg.getEnvironmentVariablesForTagsList(),
    proto.tracing.options.gloo.solo.io.TracingTagEnvironmentVariable.toObject, includeInstance),
    literalsForTagsList: jspb.Message.toObjectList(msg.getLiteralsForTagsList(),
    proto.tracing.options.gloo.solo.io.TracingTagLiteral.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tracing.options.gloo.solo.io.ListenerTracingSettings}
 */
proto.tracing.options.gloo.solo.io.ListenerTracingSettings.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tracing.options.gloo.solo.io.ListenerTracingSettings;
  return proto.tracing.options.gloo.solo.io.ListenerTracingSettings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tracing.options.gloo.solo.io.ListenerTracingSettings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tracing.options.gloo.solo.io.ListenerTracingSettings}
 */
proto.tracing.options.gloo.solo.io.ListenerTracingSettings.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.addRequestHeadersForTags(value);
      break;
    case 2:
      var value = new google_protobuf_wrappers_pb.BoolValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.BoolValue.deserializeBinaryFromReader);
      msg.setVerbose(value);
      break;
    case 3:
      var value = new proto.tracing.options.gloo.solo.io.TracePercentages;
      reader.readMessage(value,proto.tracing.options.gloo.solo.io.TracePercentages.deserializeBinaryFromReader);
      msg.setTracePercentages(value);
      break;
    case 4:
      var value = new github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_trace_v3_zipkin_pb.ZipkinConfig;
      reader.readMessage(value,github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_trace_v3_zipkin_pb.ZipkinConfig.deserializeBinaryFromReader);
      msg.setZipkinConfig(value);
      break;
    case 5:
      var value = new github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_trace_v3_datadog_pb.DatadogConfig;
      reader.readMessage(value,github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_trace_v3_datadog_pb.DatadogConfig.deserializeBinaryFromReader);
      msg.setDatadogConfig(value);
      break;
    case 6:
      var value = new proto.tracing.options.gloo.solo.io.TracingTagEnvironmentVariable;
      reader.readMessage(value,proto.tracing.options.gloo.solo.io.TracingTagEnvironmentVariable.deserializeBinaryFromReader);
      msg.addEnvironmentVariablesForTags(value);
      break;
    case 7:
      var value = new proto.tracing.options.gloo.solo.io.TracingTagLiteral;
      reader.readMessage(value,proto.tracing.options.gloo.solo.io.TracingTagLiteral.deserializeBinaryFromReader);
      msg.addLiteralsForTags(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tracing.options.gloo.solo.io.ListenerTracingSettings.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tracing.options.gloo.solo.io.ListenerTracingSettings.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tracing.options.gloo.solo.io.ListenerTracingSettings} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tracing.options.gloo.solo.io.ListenerTracingSettings.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestHeadersForTagsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getVerbose();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_wrappers_pb.BoolValue.serializeBinaryToWriter
    );
  }
  f = message.getTracePercentages();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.tracing.options.gloo.solo.io.TracePercentages.serializeBinaryToWriter
    );
  }
  f = message.getZipkinConfig();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_trace_v3_zipkin_pb.ZipkinConfig.serializeBinaryToWriter
    );
  }
  f = message.getDatadogConfig();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_trace_v3_datadog_pb.DatadogConfig.serializeBinaryToWriter
    );
  }
  f = message.getEnvironmentVariablesForTagsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.tracing.options.gloo.solo.io.TracingTagEnvironmentVariable.serializeBinaryToWriter
    );
  }
  f = message.getLiteralsForTagsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.tracing.options.gloo.solo.io.TracingTagLiteral.serializeBinaryToWriter
    );
  }
};


/**
 * repeated google.protobuf.StringValue request_headers_for_tags = 1;
 * @return {!Array<!proto.google.protobuf.StringValue>}
 */
proto.tracing.options.gloo.solo.io.ListenerTracingSettings.prototype.getRequestHeadersForTagsList = function() {
  return /** @type{!Array<!proto.google.protobuf.StringValue>} */ (
    jspb.Message.getRepeatedWrapperField(this, google_protobuf_wrappers_pb.StringValue, 1));
};


/** @param {!Array<!proto.google.protobuf.StringValue>} value */
proto.tracing.options.gloo.solo.io.ListenerTracingSettings.prototype.setRequestHeadersForTagsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.google.protobuf.StringValue=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.StringValue}
 */
proto.tracing.options.gloo.solo.io.ListenerTracingSettings.prototype.addRequestHeadersForTags = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.google.protobuf.StringValue, opt_index);
};


proto.tracing.options.gloo.solo.io.ListenerTracingSettings.prototype.clearRequestHeadersForTagsList = function() {
  this.setRequestHeadersForTagsList([]);
};


/**
 * optional google.protobuf.BoolValue verbose = 2;
 * @return {?proto.google.protobuf.BoolValue}
 */
proto.tracing.options.gloo.solo.io.ListenerTracingSettings.prototype.getVerbose = function() {
  return /** @type{?proto.google.protobuf.BoolValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.BoolValue, 2));
};


/** @param {?proto.google.protobuf.BoolValue|undefined} value */
proto.tracing.options.gloo.solo.io.ListenerTracingSettings.prototype.setVerbose = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.tracing.options.gloo.solo.io.ListenerTracingSettings.prototype.clearVerbose = function() {
  this.setVerbose(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tracing.options.gloo.solo.io.ListenerTracingSettings.prototype.hasVerbose = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional TracePercentages trace_percentages = 3;
 * @return {?proto.tracing.options.gloo.solo.io.TracePercentages}
 */
proto.tracing.options.gloo.solo.io.ListenerTracingSettings.prototype.getTracePercentages = function() {
  return /** @type{?proto.tracing.options.gloo.solo.io.TracePercentages} */ (
    jspb.Message.getWrapperField(this, proto.tracing.options.gloo.solo.io.TracePercentages, 3));
};


/** @param {?proto.tracing.options.gloo.solo.io.TracePercentages|undefined} value */
proto.tracing.options.gloo.solo.io.ListenerTracingSettings.prototype.setTracePercentages = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.tracing.options.gloo.solo.io.ListenerTracingSettings.prototype.clearTracePercentages = function() {
  this.setTracePercentages(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tracing.options.gloo.solo.io.ListenerTracingSettings.prototype.hasTracePercentages = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional solo.io.envoy.config.trace.v3.ZipkinConfig zipkin_config = 4;
 * @return {?proto.solo.io.envoy.config.trace.v3.ZipkinConfig}
 */
proto.tracing.options.gloo.solo.io.ListenerTracingSettings.prototype.getZipkinConfig = function() {
  return /** @type{?proto.solo.io.envoy.config.trace.v3.ZipkinConfig} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_trace_v3_zipkin_pb.ZipkinConfig, 4));
};


/** @param {?proto.solo.io.envoy.config.trace.v3.ZipkinConfig|undefined} value */
proto.tracing.options.gloo.solo.io.ListenerTracingSettings.prototype.setZipkinConfig = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.tracing.options.gloo.solo.io.ListenerTracingSettings.oneofGroups_[0], value);
};


proto.tracing.options.gloo.solo.io.ListenerTracingSettings.prototype.clearZipkinConfig = function() {
  this.setZipkinConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tracing.options.gloo.solo.io.ListenerTracingSettings.prototype.hasZipkinConfig = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional solo.io.envoy.config.trace.v3.DatadogConfig datadog_config = 5;
 * @return {?proto.solo.io.envoy.config.trace.v3.DatadogConfig}
 */
proto.tracing.options.gloo.solo.io.ListenerTracingSettings.prototype.getDatadogConfig = function() {
  return /** @type{?proto.solo.io.envoy.config.trace.v3.DatadogConfig} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_trace_v3_datadog_pb.DatadogConfig, 5));
};


/** @param {?proto.solo.io.envoy.config.trace.v3.DatadogConfig|undefined} value */
proto.tracing.options.gloo.solo.io.ListenerTracingSettings.prototype.setDatadogConfig = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.tracing.options.gloo.solo.io.ListenerTracingSettings.oneofGroups_[0], value);
};


proto.tracing.options.gloo.solo.io.ListenerTracingSettings.prototype.clearDatadogConfig = function() {
  this.setDatadogConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tracing.options.gloo.solo.io.ListenerTracingSettings.prototype.hasDatadogConfig = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated TracingTagEnvironmentVariable environment_variables_for_tags = 6;
 * @return {!Array<!proto.tracing.options.gloo.solo.io.TracingTagEnvironmentVariable>}
 */
proto.tracing.options.gloo.solo.io.ListenerTracingSettings.prototype.getEnvironmentVariablesForTagsList = function() {
  return /** @type{!Array<!proto.tracing.options.gloo.solo.io.TracingTagEnvironmentVariable>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tracing.options.gloo.solo.io.TracingTagEnvironmentVariable, 6));
};


/** @param {!Array<!proto.tracing.options.gloo.solo.io.TracingTagEnvironmentVariable>} value */
proto.tracing.options.gloo.solo.io.ListenerTracingSettings.prototype.setEnvironmentVariablesForTagsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.tracing.options.gloo.solo.io.TracingTagEnvironmentVariable=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tracing.options.gloo.solo.io.TracingTagEnvironmentVariable}
 */
proto.tracing.options.gloo.solo.io.ListenerTracingSettings.prototype.addEnvironmentVariablesForTags = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.tracing.options.gloo.solo.io.TracingTagEnvironmentVariable, opt_index);
};


proto.tracing.options.gloo.solo.io.ListenerTracingSettings.prototype.clearEnvironmentVariablesForTagsList = function() {
  this.setEnvironmentVariablesForTagsList([]);
};


/**
 * repeated TracingTagLiteral literals_for_tags = 7;
 * @return {!Array<!proto.tracing.options.gloo.solo.io.TracingTagLiteral>}
 */
proto.tracing.options.gloo.solo.io.ListenerTracingSettings.prototype.getLiteralsForTagsList = function() {
  return /** @type{!Array<!proto.tracing.options.gloo.solo.io.TracingTagLiteral>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tracing.options.gloo.solo.io.TracingTagLiteral, 7));
};


/** @param {!Array<!proto.tracing.options.gloo.solo.io.TracingTagLiteral>} value */
proto.tracing.options.gloo.solo.io.ListenerTracingSettings.prototype.setLiteralsForTagsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.tracing.options.gloo.solo.io.TracingTagLiteral=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tracing.options.gloo.solo.io.TracingTagLiteral}
 */
proto.tracing.options.gloo.solo.io.ListenerTracingSettings.prototype.addLiteralsForTags = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.tracing.options.gloo.solo.io.TracingTagLiteral, opt_index);
};


proto.tracing.options.gloo.solo.io.ListenerTracingSettings.prototype.clearLiteralsForTagsList = function() {
  this.setLiteralsForTagsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tracing.options.gloo.solo.io.RouteTracingSettings = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tracing.options.gloo.solo.io.RouteTracingSettings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tracing.options.gloo.solo.io.RouteTracingSettings.displayName = 'proto.tracing.options.gloo.solo.io.RouteTracingSettings';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tracing.options.gloo.solo.io.RouteTracingSettings.prototype.toObject = function(opt_includeInstance) {
  return proto.tracing.options.gloo.solo.io.RouteTracingSettings.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tracing.options.gloo.solo.io.RouteTracingSettings} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tracing.options.gloo.solo.io.RouteTracingSettings.toObject = function(includeInstance, msg) {
  var f, obj = {
    routeDescriptor: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tracePercentages: (f = msg.getTracePercentages()) && proto.tracing.options.gloo.solo.io.TracePercentages.toObject(includeInstance, f),
    propagate: (f = msg.getPropagate()) && google_protobuf_wrappers_pb.BoolValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tracing.options.gloo.solo.io.RouteTracingSettings}
 */
proto.tracing.options.gloo.solo.io.RouteTracingSettings.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tracing.options.gloo.solo.io.RouteTracingSettings;
  return proto.tracing.options.gloo.solo.io.RouteTracingSettings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tracing.options.gloo.solo.io.RouteTracingSettings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tracing.options.gloo.solo.io.RouteTracingSettings}
 */
proto.tracing.options.gloo.solo.io.RouteTracingSettings.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRouteDescriptor(value);
      break;
    case 2:
      var value = new proto.tracing.options.gloo.solo.io.TracePercentages;
      reader.readMessage(value,proto.tracing.options.gloo.solo.io.TracePercentages.deserializeBinaryFromReader);
      msg.setTracePercentages(value);
      break;
    case 3:
      var value = new google_protobuf_wrappers_pb.BoolValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.BoolValue.deserializeBinaryFromReader);
      msg.setPropagate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tracing.options.gloo.solo.io.RouteTracingSettings.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tracing.options.gloo.solo.io.RouteTracingSettings.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tracing.options.gloo.solo.io.RouteTracingSettings} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tracing.options.gloo.solo.io.RouteTracingSettings.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRouteDescriptor();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTracePercentages();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.tracing.options.gloo.solo.io.TracePercentages.serializeBinaryToWriter
    );
  }
  f = message.getPropagate();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_wrappers_pb.BoolValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional string route_descriptor = 1;
 * @return {string}
 */
proto.tracing.options.gloo.solo.io.RouteTracingSettings.prototype.getRouteDescriptor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.tracing.options.gloo.solo.io.RouteTracingSettings.prototype.setRouteDescriptor = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional TracePercentages trace_percentages = 2;
 * @return {?proto.tracing.options.gloo.solo.io.TracePercentages}
 */
proto.tracing.options.gloo.solo.io.RouteTracingSettings.prototype.getTracePercentages = function() {
  return /** @type{?proto.tracing.options.gloo.solo.io.TracePercentages} */ (
    jspb.Message.getWrapperField(this, proto.tracing.options.gloo.solo.io.TracePercentages, 2));
};


/** @param {?proto.tracing.options.gloo.solo.io.TracePercentages|undefined} value */
proto.tracing.options.gloo.solo.io.RouteTracingSettings.prototype.setTracePercentages = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.tracing.options.gloo.solo.io.RouteTracingSettings.prototype.clearTracePercentages = function() {
  this.setTracePercentages(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tracing.options.gloo.solo.io.RouteTracingSettings.prototype.hasTracePercentages = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.BoolValue propagate = 3;
 * @return {?proto.google.protobuf.BoolValue}
 */
proto.tracing.options.gloo.solo.io.RouteTracingSettings.prototype.getPropagate = function() {
  return /** @type{?proto.google.protobuf.BoolValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.BoolValue, 3));
};


/** @param {?proto.google.protobuf.BoolValue|undefined} value */
proto.tracing.options.gloo.solo.io.RouteTracingSettings.prototype.setPropagate = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.tracing.options.gloo.solo.io.RouteTracingSettings.prototype.clearPropagate = function() {
  this.setPropagate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tracing.options.gloo.solo.io.RouteTracingSettings.prototype.hasPropagate = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tracing.options.gloo.solo.io.TracePercentages = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tracing.options.gloo.solo.io.TracePercentages, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tracing.options.gloo.solo.io.TracePercentages.displayName = 'proto.tracing.options.gloo.solo.io.TracePercentages';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tracing.options.gloo.solo.io.TracePercentages.prototype.toObject = function(opt_includeInstance) {
  return proto.tracing.options.gloo.solo.io.TracePercentages.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tracing.options.gloo.solo.io.TracePercentages} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tracing.options.gloo.solo.io.TracePercentages.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientSamplePercentage: (f = msg.getClientSamplePercentage()) && google_protobuf_wrappers_pb.FloatValue.toObject(includeInstance, f),
    randomSamplePercentage: (f = msg.getRandomSamplePercentage()) && google_protobuf_wrappers_pb.FloatValue.toObject(includeInstance, f),
    overallSamplePercentage: (f = msg.getOverallSamplePercentage()) && google_protobuf_wrappers_pb.FloatValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tracing.options.gloo.solo.io.TracePercentages}
 */
proto.tracing.options.gloo.solo.io.TracePercentages.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tracing.options.gloo.solo.io.TracePercentages;
  return proto.tracing.options.gloo.solo.io.TracePercentages.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tracing.options.gloo.solo.io.TracePercentages} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tracing.options.gloo.solo.io.TracePercentages}
 */
proto.tracing.options.gloo.solo.io.TracePercentages.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_wrappers_pb.FloatValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.FloatValue.deserializeBinaryFromReader);
      msg.setClientSamplePercentage(value);
      break;
    case 2:
      var value = new google_protobuf_wrappers_pb.FloatValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.FloatValue.deserializeBinaryFromReader);
      msg.setRandomSamplePercentage(value);
      break;
    case 3:
      var value = new google_protobuf_wrappers_pb.FloatValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.FloatValue.deserializeBinaryFromReader);
      msg.setOverallSamplePercentage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tracing.options.gloo.solo.io.TracePercentages.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tracing.options.gloo.solo.io.TracePercentages.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tracing.options.gloo.solo.io.TracePercentages} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tracing.options.gloo.solo.io.TracePercentages.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientSamplePercentage();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_wrappers_pb.FloatValue.serializeBinaryToWriter
    );
  }
  f = message.getRandomSamplePercentage();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_wrappers_pb.FloatValue.serializeBinaryToWriter
    );
  }
  f = message.getOverallSamplePercentage();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_wrappers_pb.FloatValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.FloatValue client_sample_percentage = 1;
 * @return {?proto.google.protobuf.FloatValue}
 */
proto.tracing.options.gloo.solo.io.TracePercentages.prototype.getClientSamplePercentage = function() {
  return /** @type{?proto.google.protobuf.FloatValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.FloatValue, 1));
};


/** @param {?proto.google.protobuf.FloatValue|undefined} value */
proto.tracing.options.gloo.solo.io.TracePercentages.prototype.setClientSamplePercentage = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.tracing.options.gloo.solo.io.TracePercentages.prototype.clearClientSamplePercentage = function() {
  this.setClientSamplePercentage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tracing.options.gloo.solo.io.TracePercentages.prototype.hasClientSamplePercentage = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.FloatValue random_sample_percentage = 2;
 * @return {?proto.google.protobuf.FloatValue}
 */
proto.tracing.options.gloo.solo.io.TracePercentages.prototype.getRandomSamplePercentage = function() {
  return /** @type{?proto.google.protobuf.FloatValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.FloatValue, 2));
};


/** @param {?proto.google.protobuf.FloatValue|undefined} value */
proto.tracing.options.gloo.solo.io.TracePercentages.prototype.setRandomSamplePercentage = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.tracing.options.gloo.solo.io.TracePercentages.prototype.clearRandomSamplePercentage = function() {
  this.setRandomSamplePercentage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tracing.options.gloo.solo.io.TracePercentages.prototype.hasRandomSamplePercentage = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.FloatValue overall_sample_percentage = 3;
 * @return {?proto.google.protobuf.FloatValue}
 */
proto.tracing.options.gloo.solo.io.TracePercentages.prototype.getOverallSamplePercentage = function() {
  return /** @type{?proto.google.protobuf.FloatValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.FloatValue, 3));
};


/** @param {?proto.google.protobuf.FloatValue|undefined} value */
proto.tracing.options.gloo.solo.io.TracePercentages.prototype.setOverallSamplePercentage = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.tracing.options.gloo.solo.io.TracePercentages.prototype.clearOverallSamplePercentage = function() {
  this.setOverallSamplePercentage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tracing.options.gloo.solo.io.TracePercentages.prototype.hasOverallSamplePercentage = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tracing.options.gloo.solo.io.TracingTagEnvironmentVariable = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tracing.options.gloo.solo.io.TracingTagEnvironmentVariable, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tracing.options.gloo.solo.io.TracingTagEnvironmentVariable.displayName = 'proto.tracing.options.gloo.solo.io.TracingTagEnvironmentVariable';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tracing.options.gloo.solo.io.TracingTagEnvironmentVariable.prototype.toObject = function(opt_includeInstance) {
  return proto.tracing.options.gloo.solo.io.TracingTagEnvironmentVariable.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tracing.options.gloo.solo.io.TracingTagEnvironmentVariable} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tracing.options.gloo.solo.io.TracingTagEnvironmentVariable.toObject = function(includeInstance, msg) {
  var f, obj = {
    tag: (f = msg.getTag()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    name: (f = msg.getName()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    defaultValue: (f = msg.getDefaultValue()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tracing.options.gloo.solo.io.TracingTagEnvironmentVariable}
 */
proto.tracing.options.gloo.solo.io.TracingTagEnvironmentVariable.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tracing.options.gloo.solo.io.TracingTagEnvironmentVariable;
  return proto.tracing.options.gloo.solo.io.TracingTagEnvironmentVariable.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tracing.options.gloo.solo.io.TracingTagEnvironmentVariable} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tracing.options.gloo.solo.io.TracingTagEnvironmentVariable}
 */
proto.tracing.options.gloo.solo.io.TracingTagEnvironmentVariable.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setTag(value);
      break;
    case 2:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setName(value);
      break;
    case 3:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setDefaultValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tracing.options.gloo.solo.io.TracingTagEnvironmentVariable.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tracing.options.gloo.solo.io.TracingTagEnvironmentVariable.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tracing.options.gloo.solo.io.TracingTagEnvironmentVariable} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tracing.options.gloo.solo.io.TracingTagEnvironmentVariable.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTag();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getDefaultValue();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.StringValue tag = 1;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.tracing.options.gloo.solo.io.TracingTagEnvironmentVariable.prototype.getTag = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 1));
};


/** @param {?proto.google.protobuf.StringValue|undefined} value */
proto.tracing.options.gloo.solo.io.TracingTagEnvironmentVariable.prototype.setTag = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.tracing.options.gloo.solo.io.TracingTagEnvironmentVariable.prototype.clearTag = function() {
  this.setTag(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tracing.options.gloo.solo.io.TracingTagEnvironmentVariable.prototype.hasTag = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.StringValue name = 2;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.tracing.options.gloo.solo.io.TracingTagEnvironmentVariable.prototype.getName = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 2));
};


/** @param {?proto.google.protobuf.StringValue|undefined} value */
proto.tracing.options.gloo.solo.io.TracingTagEnvironmentVariable.prototype.setName = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.tracing.options.gloo.solo.io.TracingTagEnvironmentVariable.prototype.clearName = function() {
  this.setName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tracing.options.gloo.solo.io.TracingTagEnvironmentVariable.prototype.hasName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.StringValue default_value = 3;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.tracing.options.gloo.solo.io.TracingTagEnvironmentVariable.prototype.getDefaultValue = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 3));
};


/** @param {?proto.google.protobuf.StringValue|undefined} value */
proto.tracing.options.gloo.solo.io.TracingTagEnvironmentVariable.prototype.setDefaultValue = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.tracing.options.gloo.solo.io.TracingTagEnvironmentVariable.prototype.clearDefaultValue = function() {
  this.setDefaultValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tracing.options.gloo.solo.io.TracingTagEnvironmentVariable.prototype.hasDefaultValue = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tracing.options.gloo.solo.io.TracingTagLiteral = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tracing.options.gloo.solo.io.TracingTagLiteral, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tracing.options.gloo.solo.io.TracingTagLiteral.displayName = 'proto.tracing.options.gloo.solo.io.TracingTagLiteral';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tracing.options.gloo.solo.io.TracingTagLiteral.prototype.toObject = function(opt_includeInstance) {
  return proto.tracing.options.gloo.solo.io.TracingTagLiteral.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tracing.options.gloo.solo.io.TracingTagLiteral} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tracing.options.gloo.solo.io.TracingTagLiteral.toObject = function(includeInstance, msg) {
  var f, obj = {
    tag: (f = msg.getTag()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    value: (f = msg.getValue()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tracing.options.gloo.solo.io.TracingTagLiteral}
 */
proto.tracing.options.gloo.solo.io.TracingTagLiteral.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tracing.options.gloo.solo.io.TracingTagLiteral;
  return proto.tracing.options.gloo.solo.io.TracingTagLiteral.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tracing.options.gloo.solo.io.TracingTagLiteral} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tracing.options.gloo.solo.io.TracingTagLiteral}
 */
proto.tracing.options.gloo.solo.io.TracingTagLiteral.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setTag(value);
      break;
    case 2:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tracing.options.gloo.solo.io.TracingTagLiteral.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tracing.options.gloo.solo.io.TracingTagLiteral.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tracing.options.gloo.solo.io.TracingTagLiteral} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tracing.options.gloo.solo.io.TracingTagLiteral.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTag();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.StringValue tag = 1;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.tracing.options.gloo.solo.io.TracingTagLiteral.prototype.getTag = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 1));
};


/** @param {?proto.google.protobuf.StringValue|undefined} value */
proto.tracing.options.gloo.solo.io.TracingTagLiteral.prototype.setTag = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.tracing.options.gloo.solo.io.TracingTagLiteral.prototype.clearTag = function() {
  this.setTag(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tracing.options.gloo.solo.io.TracingTagLiteral.prototype.hasTag = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.StringValue value = 2;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.tracing.options.gloo.solo.io.TracingTagLiteral.prototype.getValue = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 2));
};


/** @param {?proto.google.protobuf.StringValue|undefined} value */
proto.tracing.options.gloo.solo.io.TracingTagLiteral.prototype.setValue = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.tracing.options.gloo.solo.io.TracingTagLiteral.prototype.clearValue = function() {
  this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tracing.options.gloo.solo.io.TracingTagLiteral.prototype.hasValue = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.tracing.options.gloo.solo.io);
