/* eslint-disable */
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
var extproto_ext_pb = require('../../../../../../../extproto/ext_pb.js');
var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
var github_com_solo$io_solo$kit_api_v1_ref_pb = require('../../../../../../../github.com/solo-io/solo-kit/api/v1/ref_pb.js');
var github_com_solo$io_solo$kit_api_v1_solo$kit_pb = require('../../../../../../../github.com/solo-io/solo-kit/api/v1/solo-kit_pb.js');
var github_com_solo$io_solo$apis_api_gloo_gateway_v1_http_gateway_pb = require('../../../../../../../github.com/solo-io/solo-apis/api/gloo/gateway/v1/http_gateway_pb.js');
var github_com_solo$io_solo$apis_api_gloo_gloo_v1_proxy_pb = require('../../../../../../../github.com/solo-io/solo-apis/api/gloo/gloo/v1/proxy_pb.js');
var github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb = require('../../../../../../../github.com/solo-io/solo-apis/api/gloo/gloo/v1/options_pb.js');
var github_com_solo$io_solo$apis_api_gloo_gloo_v1_ssl_pb = require('../../../../../../../github.com/solo-io/solo-apis/api/gloo/gloo/v1/ssl_pb.js');
var github_com_solo$io_solo$apis_api_gloo_gloo_v1_core_selectors_selectors_pb = require('../../../../../../../github.com/solo-io/solo-apis/api/gloo/gloo/v1/core/selectors/selectors_pb.js');
var github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_core_v3_address_pb = require('../../../../../../../github.com/solo-io/solo-apis/api/gloo/gloo/external/envoy/config/core/v3/address_pb.js');
goog.exportSymbol('proto.gateway.solo.io.DelegatedHttpGateway', null, global);
goog.exportSymbol('proto.gateway.solo.io.GatewayNamespacedStatuses', null, global);
goog.exportSymbol('proto.gateway.solo.io.GatewaySpec', null, global);
goog.exportSymbol('proto.gateway.solo.io.GatewayStatus', null, global);
goog.exportSymbol('proto.gateway.solo.io.GatewayStatus.State', null, global);
goog.exportSymbol('proto.gateway.solo.io.HybridGateway', null, global);
goog.exportSymbol('proto.gateway.solo.io.MatchedGateway', null, global);
goog.exportSymbol('proto.gateway.solo.io.Matcher', null, global);
goog.exportSymbol('proto.gateway.solo.io.TcpGateway', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gateway.solo.io.GatewaySpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gateway.solo.io.GatewaySpec.repeatedFields_, proto.gateway.solo.io.GatewaySpec.oneofGroups_);
};
goog.inherits(proto.gateway.solo.io.GatewaySpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gateway.solo.io.GatewaySpec.displayName = 'proto.gateway.solo.io.GatewaySpec';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gateway.solo.io.GatewaySpec.repeatedFields_ = [12];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.gateway.solo.io.GatewaySpec.oneofGroups_ = [[9,10,11]];

/**
 * @enum {number}
 */
proto.gateway.solo.io.GatewaySpec.GatewaytypeCase = {
  GATEWAYTYPE_NOT_SET: 0,
  HTTP_GATEWAY: 9,
  TCP_GATEWAY: 10,
  HYBRID_GATEWAY: 11
};

/**
 * @return {proto.gateway.solo.io.GatewaySpec.GatewaytypeCase}
 */
proto.gateway.solo.io.GatewaySpec.prototype.getGatewaytypeCase = function() {
  return /** @type {proto.gateway.solo.io.GatewaySpec.GatewaytypeCase} */(jspb.Message.computeOneofCase(this, proto.gateway.solo.io.GatewaySpec.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gateway.solo.io.GatewaySpec.prototype.toObject = function(opt_includeInstance) {
  return proto.gateway.solo.io.GatewaySpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gateway.solo.io.GatewaySpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gateway.solo.io.GatewaySpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    ssl: jspb.Message.getFieldWithDefault(msg, 1, false),
    bindAddress: jspb.Message.getFieldWithDefault(msg, 3, ""),
    bindPort: jspb.Message.getFieldWithDefault(msg, 4, 0),
    options: (f = msg.getOptions()) && github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.ListenerOptions.toObject(includeInstance, f),
    useProxyProto: (f = msg.getUseProxyProto()) && google_protobuf_wrappers_pb.BoolValue.toObject(includeInstance, f),
    httpGateway: (f = msg.getHttpGateway()) && github_com_solo$io_solo$apis_api_gloo_gateway_v1_http_gateway_pb.HttpGateway.toObject(includeInstance, f),
    tcpGateway: (f = msg.getTcpGateway()) && proto.gateway.solo.io.TcpGateway.toObject(includeInstance, f),
    hybridGateway: (f = msg.getHybridGateway()) && proto.gateway.solo.io.HybridGateway.toObject(includeInstance, f),
    proxyNamesList: jspb.Message.getRepeatedField(msg, 12),
    routeOptions: (f = msg.getRouteOptions()) && github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.RouteConfigurationOptions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gateway.solo.io.GatewaySpec}
 */
proto.gateway.solo.io.GatewaySpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gateway.solo.io.GatewaySpec;
  return proto.gateway.solo.io.GatewaySpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gateway.solo.io.GatewaySpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gateway.solo.io.GatewaySpec}
 */
proto.gateway.solo.io.GatewaySpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSsl(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBindAddress(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBindPort(value);
      break;
    case 5:
      var value = new github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.ListenerOptions;
      reader.readMessage(value,github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.ListenerOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    case 8:
      var value = new google_protobuf_wrappers_pb.BoolValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.BoolValue.deserializeBinaryFromReader);
      msg.setUseProxyProto(value);
      break;
    case 9:
      var value = new github_com_solo$io_solo$apis_api_gloo_gateway_v1_http_gateway_pb.HttpGateway;
      reader.readMessage(value,github_com_solo$io_solo$apis_api_gloo_gateway_v1_http_gateway_pb.HttpGateway.deserializeBinaryFromReader);
      msg.setHttpGateway(value);
      break;
    case 10:
      var value = new proto.gateway.solo.io.TcpGateway;
      reader.readMessage(value,proto.gateway.solo.io.TcpGateway.deserializeBinaryFromReader);
      msg.setTcpGateway(value);
      break;
    case 11:
      var value = new proto.gateway.solo.io.HybridGateway;
      reader.readMessage(value,proto.gateway.solo.io.HybridGateway.deserializeBinaryFromReader);
      msg.setHybridGateway(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.addProxyNames(value);
      break;
    case 13:
      var value = new github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.RouteConfigurationOptions;
      reader.readMessage(value,github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.RouteConfigurationOptions.deserializeBinaryFromReader);
      msg.setRouteOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gateway.solo.io.GatewaySpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gateway.solo.io.GatewaySpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gateway.solo.io.GatewaySpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gateway.solo.io.GatewaySpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSsl();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getBindAddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBindPort();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.ListenerOptions.serializeBinaryToWriter
    );
  }
  f = message.getUseProxyProto();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_wrappers_pb.BoolValue.serializeBinaryToWriter
    );
  }
  f = message.getHttpGateway();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      github_com_solo$io_solo$apis_api_gloo_gateway_v1_http_gateway_pb.HttpGateway.serializeBinaryToWriter
    );
  }
  f = message.getTcpGateway();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.gateway.solo.io.TcpGateway.serializeBinaryToWriter
    );
  }
  f = message.getHybridGateway();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.gateway.solo.io.HybridGateway.serializeBinaryToWriter
    );
  }
  f = message.getProxyNamesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      12,
      f
    );
  }
  f = message.getRouteOptions();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.RouteConfigurationOptions.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool ssl = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.gateway.solo.io.GatewaySpec.prototype.getSsl = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.gateway.solo.io.GatewaySpec.prototype.setSsl = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string bind_address = 3;
 * @return {string}
 */
proto.gateway.solo.io.GatewaySpec.prototype.getBindAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.gateway.solo.io.GatewaySpec.prototype.setBindAddress = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint32 bind_port = 4;
 * @return {number}
 */
proto.gateway.solo.io.GatewaySpec.prototype.getBindPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.gateway.solo.io.GatewaySpec.prototype.setBindPort = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional gloo.solo.io.ListenerOptions options = 5;
 * @return {?proto.gloo.solo.io.ListenerOptions}
 */
proto.gateway.solo.io.GatewaySpec.prototype.getOptions = function() {
  return /** @type{?proto.gloo.solo.io.ListenerOptions} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.ListenerOptions, 5));
};


/** @param {?proto.gloo.solo.io.ListenerOptions|undefined} value */
proto.gateway.solo.io.GatewaySpec.prototype.setOptions = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.gateway.solo.io.GatewaySpec.prototype.clearOptions = function() {
  this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gateway.solo.io.GatewaySpec.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.BoolValue use_proxy_proto = 8;
 * @return {?proto.google.protobuf.BoolValue}
 */
proto.gateway.solo.io.GatewaySpec.prototype.getUseProxyProto = function() {
  return /** @type{?proto.google.protobuf.BoolValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.BoolValue, 8));
};


/** @param {?proto.google.protobuf.BoolValue|undefined} value */
proto.gateway.solo.io.GatewaySpec.prototype.setUseProxyProto = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.gateway.solo.io.GatewaySpec.prototype.clearUseProxyProto = function() {
  this.setUseProxyProto(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gateway.solo.io.GatewaySpec.prototype.hasUseProxyProto = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional HttpGateway http_gateway = 9;
 * @return {?proto.gateway.solo.io.HttpGateway}
 */
proto.gateway.solo.io.GatewaySpec.prototype.getHttpGateway = function() {
  return /** @type{?proto.gateway.solo.io.HttpGateway} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$apis_api_gloo_gateway_v1_http_gateway_pb.HttpGateway, 9));
};


/** @param {?proto.gateway.solo.io.HttpGateway|undefined} value */
proto.gateway.solo.io.GatewaySpec.prototype.setHttpGateway = function(value) {
  jspb.Message.setOneofWrapperField(this, 9, proto.gateway.solo.io.GatewaySpec.oneofGroups_[0], value);
};


proto.gateway.solo.io.GatewaySpec.prototype.clearHttpGateway = function() {
  this.setHttpGateway(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gateway.solo.io.GatewaySpec.prototype.hasHttpGateway = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional TcpGateway tcp_gateway = 10;
 * @return {?proto.gateway.solo.io.TcpGateway}
 */
proto.gateway.solo.io.GatewaySpec.prototype.getTcpGateway = function() {
  return /** @type{?proto.gateway.solo.io.TcpGateway} */ (
    jspb.Message.getWrapperField(this, proto.gateway.solo.io.TcpGateway, 10));
};


/** @param {?proto.gateway.solo.io.TcpGateway|undefined} value */
proto.gateway.solo.io.GatewaySpec.prototype.setTcpGateway = function(value) {
  jspb.Message.setOneofWrapperField(this, 10, proto.gateway.solo.io.GatewaySpec.oneofGroups_[0], value);
};


proto.gateway.solo.io.GatewaySpec.prototype.clearTcpGateway = function() {
  this.setTcpGateway(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gateway.solo.io.GatewaySpec.prototype.hasTcpGateway = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional HybridGateway hybrid_gateway = 11;
 * @return {?proto.gateway.solo.io.HybridGateway}
 */
proto.gateway.solo.io.GatewaySpec.prototype.getHybridGateway = function() {
  return /** @type{?proto.gateway.solo.io.HybridGateway} */ (
    jspb.Message.getWrapperField(this, proto.gateway.solo.io.HybridGateway, 11));
};


/** @param {?proto.gateway.solo.io.HybridGateway|undefined} value */
proto.gateway.solo.io.GatewaySpec.prototype.setHybridGateway = function(value) {
  jspb.Message.setOneofWrapperField(this, 11, proto.gateway.solo.io.GatewaySpec.oneofGroups_[0], value);
};


proto.gateway.solo.io.GatewaySpec.prototype.clearHybridGateway = function() {
  this.setHybridGateway(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gateway.solo.io.GatewaySpec.prototype.hasHybridGateway = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * repeated string proxy_names = 12;
 * @return {!Array<string>}
 */
proto.gateway.solo.io.GatewaySpec.prototype.getProxyNamesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 12));
};


/** @param {!Array<string>} value */
proto.gateway.solo.io.GatewaySpec.prototype.setProxyNamesList = function(value) {
  jspb.Message.setField(this, 12, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.gateway.solo.io.GatewaySpec.prototype.addProxyNames = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 12, value, opt_index);
};


proto.gateway.solo.io.GatewaySpec.prototype.clearProxyNamesList = function() {
  this.setProxyNamesList([]);
};


/**
 * optional gloo.solo.io.RouteConfigurationOptions route_options = 13;
 * @return {?proto.gloo.solo.io.RouteConfigurationOptions}
 */
proto.gateway.solo.io.GatewaySpec.prototype.getRouteOptions = function() {
  return /** @type{?proto.gloo.solo.io.RouteConfigurationOptions} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.RouteConfigurationOptions, 13));
};


/** @param {?proto.gloo.solo.io.RouteConfigurationOptions|undefined} value */
proto.gateway.solo.io.GatewaySpec.prototype.setRouteOptions = function(value) {
  jspb.Message.setWrapperField(this, 13, value);
};


proto.gateway.solo.io.GatewaySpec.prototype.clearRouteOptions = function() {
  this.setRouteOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gateway.solo.io.GatewaySpec.prototype.hasRouteOptions = function() {
  return jspb.Message.getField(this, 13) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gateway.solo.io.TcpGateway = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gateway.solo.io.TcpGateway.repeatedFields_, null);
};
goog.inherits(proto.gateway.solo.io.TcpGateway, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gateway.solo.io.TcpGateway.displayName = 'proto.gateway.solo.io.TcpGateway';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gateway.solo.io.TcpGateway.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gateway.solo.io.TcpGateway.prototype.toObject = function(opt_includeInstance) {
  return proto.gateway.solo.io.TcpGateway.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gateway.solo.io.TcpGateway} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gateway.solo.io.TcpGateway.toObject = function(includeInstance, msg) {
  var f, obj = {
    tcpHostsList: jspb.Message.toObjectList(msg.getTcpHostsList(),
    github_com_solo$io_solo$apis_api_gloo_gloo_v1_proxy_pb.TcpHost.toObject, includeInstance),
    options: (f = msg.getOptions()) && github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.TcpListenerOptions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gateway.solo.io.TcpGateway}
 */
proto.gateway.solo.io.TcpGateway.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gateway.solo.io.TcpGateway;
  return proto.gateway.solo.io.TcpGateway.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gateway.solo.io.TcpGateway} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gateway.solo.io.TcpGateway}
 */
proto.gateway.solo.io.TcpGateway.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_solo$apis_api_gloo_gloo_v1_proxy_pb.TcpHost;
      reader.readMessage(value,github_com_solo$io_solo$apis_api_gloo_gloo_v1_proxy_pb.TcpHost.deserializeBinaryFromReader);
      msg.addTcpHosts(value);
      break;
    case 8:
      var value = new github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.TcpListenerOptions;
      reader.readMessage(value,github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.TcpListenerOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gateway.solo.io.TcpGateway.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gateway.solo.io.TcpGateway.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gateway.solo.io.TcpGateway} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gateway.solo.io.TcpGateway.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTcpHostsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      github_com_solo$io_solo$apis_api_gloo_gloo_v1_proxy_pb.TcpHost.serializeBinaryToWriter
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.TcpListenerOptions.serializeBinaryToWriter
    );
  }
};


/**
 * repeated gloo.solo.io.TcpHost tcp_hosts = 1;
 * @return {!Array<!proto.gloo.solo.io.TcpHost>}
 */
proto.gateway.solo.io.TcpGateway.prototype.getTcpHostsList = function() {
  return /** @type{!Array<!proto.gloo.solo.io.TcpHost>} */ (
    jspb.Message.getRepeatedWrapperField(this, github_com_solo$io_solo$apis_api_gloo_gloo_v1_proxy_pb.TcpHost, 1));
};


/** @param {!Array<!proto.gloo.solo.io.TcpHost>} value */
proto.gateway.solo.io.TcpGateway.prototype.setTcpHostsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.gloo.solo.io.TcpHost=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gloo.solo.io.TcpHost}
 */
proto.gateway.solo.io.TcpGateway.prototype.addTcpHosts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.gloo.solo.io.TcpHost, opt_index);
};


proto.gateway.solo.io.TcpGateway.prototype.clearTcpHostsList = function() {
  this.setTcpHostsList([]);
};


/**
 * optional gloo.solo.io.TcpListenerOptions options = 8;
 * @return {?proto.gloo.solo.io.TcpListenerOptions}
 */
proto.gateway.solo.io.TcpGateway.prototype.getOptions = function() {
  return /** @type{?proto.gloo.solo.io.TcpListenerOptions} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.TcpListenerOptions, 8));
};


/** @param {?proto.gloo.solo.io.TcpListenerOptions|undefined} value */
proto.gateway.solo.io.TcpGateway.prototype.setOptions = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.gateway.solo.io.TcpGateway.prototype.clearOptions = function() {
  this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gateway.solo.io.TcpGateway.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gateway.solo.io.HybridGateway = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gateway.solo.io.HybridGateway.repeatedFields_, null);
};
goog.inherits(proto.gateway.solo.io.HybridGateway, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gateway.solo.io.HybridGateway.displayName = 'proto.gateway.solo.io.HybridGateway';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gateway.solo.io.HybridGateway.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gateway.solo.io.HybridGateway.prototype.toObject = function(opt_includeInstance) {
  return proto.gateway.solo.io.HybridGateway.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gateway.solo.io.HybridGateway} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gateway.solo.io.HybridGateway.toObject = function(includeInstance, msg) {
  var f, obj = {
    matchedGatewaysList: jspb.Message.toObjectList(msg.getMatchedGatewaysList(),
    proto.gateway.solo.io.MatchedGateway.toObject, includeInstance),
    delegatedHttpGatewaysList: jspb.Message.toObjectList(msg.getDelegatedHttpGatewaysList(),
    proto.gateway.solo.io.DelegatedHttpGateway.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gateway.solo.io.HybridGateway}
 */
proto.gateway.solo.io.HybridGateway.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gateway.solo.io.HybridGateway;
  return proto.gateway.solo.io.HybridGateway.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gateway.solo.io.HybridGateway} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gateway.solo.io.HybridGateway}
 */
proto.gateway.solo.io.HybridGateway.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gateway.solo.io.MatchedGateway;
      reader.readMessage(value,proto.gateway.solo.io.MatchedGateway.deserializeBinaryFromReader);
      msg.addMatchedGateways(value);
      break;
    case 2:
      var value = new proto.gateway.solo.io.DelegatedHttpGateway;
      reader.readMessage(value,proto.gateway.solo.io.DelegatedHttpGateway.deserializeBinaryFromReader);
      msg.addDelegatedHttpGateways(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gateway.solo.io.HybridGateway.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gateway.solo.io.HybridGateway.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gateway.solo.io.HybridGateway} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gateway.solo.io.HybridGateway.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMatchedGatewaysList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.gateway.solo.io.MatchedGateway.serializeBinaryToWriter
    );
  }
  f = message.getDelegatedHttpGatewaysList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.gateway.solo.io.DelegatedHttpGateway.serializeBinaryToWriter
    );
  }
};


/**
 * repeated MatchedGateway matched_gateways = 1;
 * @return {!Array<!proto.gateway.solo.io.MatchedGateway>}
 */
proto.gateway.solo.io.HybridGateway.prototype.getMatchedGatewaysList = function() {
  return /** @type{!Array<!proto.gateway.solo.io.MatchedGateway>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gateway.solo.io.MatchedGateway, 1));
};


/** @param {!Array<!proto.gateway.solo.io.MatchedGateway>} value */
proto.gateway.solo.io.HybridGateway.prototype.setMatchedGatewaysList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.gateway.solo.io.MatchedGateway=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gateway.solo.io.MatchedGateway}
 */
proto.gateway.solo.io.HybridGateway.prototype.addMatchedGateways = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.gateway.solo.io.MatchedGateway, opt_index);
};


proto.gateway.solo.io.HybridGateway.prototype.clearMatchedGatewaysList = function() {
  this.setMatchedGatewaysList([]);
};


/**
 * repeated DelegatedHttpGateway delegated_http_gateways = 2;
 * @return {!Array<!proto.gateway.solo.io.DelegatedHttpGateway>}
 */
proto.gateway.solo.io.HybridGateway.prototype.getDelegatedHttpGatewaysList = function() {
  return /** @type{!Array<!proto.gateway.solo.io.DelegatedHttpGateway>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gateway.solo.io.DelegatedHttpGateway, 2));
};


/** @param {!Array<!proto.gateway.solo.io.DelegatedHttpGateway>} value */
proto.gateway.solo.io.HybridGateway.prototype.setDelegatedHttpGatewaysList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.gateway.solo.io.DelegatedHttpGateway=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gateway.solo.io.DelegatedHttpGateway}
 */
proto.gateway.solo.io.HybridGateway.prototype.addDelegatedHttpGateways = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.gateway.solo.io.DelegatedHttpGateway, opt_index);
};


proto.gateway.solo.io.HybridGateway.prototype.clearDelegatedHttpGatewaysList = function() {
  this.setDelegatedHttpGatewaysList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gateway.solo.io.DelegatedHttpGateway = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.gateway.solo.io.DelegatedHttpGateway.oneofGroups_);
};
goog.inherits(proto.gateway.solo.io.DelegatedHttpGateway, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gateway.solo.io.DelegatedHttpGateway.displayName = 'proto.gateway.solo.io.DelegatedHttpGateway';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.gateway.solo.io.DelegatedHttpGateway.oneofGroups_ = [[3,4]];

/**
 * @enum {number}
 */
proto.gateway.solo.io.DelegatedHttpGateway.SelectionTypeCase = {
  SELECTION_TYPE_NOT_SET: 0,
  REF: 3,
  SELECTOR: 4
};

/**
 * @return {proto.gateway.solo.io.DelegatedHttpGateway.SelectionTypeCase}
 */
proto.gateway.solo.io.DelegatedHttpGateway.prototype.getSelectionTypeCase = function() {
  return /** @type {proto.gateway.solo.io.DelegatedHttpGateway.SelectionTypeCase} */(jspb.Message.computeOneofCase(this, proto.gateway.solo.io.DelegatedHttpGateway.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gateway.solo.io.DelegatedHttpGateway.prototype.toObject = function(opt_includeInstance) {
  return proto.gateway.solo.io.DelegatedHttpGateway.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gateway.solo.io.DelegatedHttpGateway} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gateway.solo.io.DelegatedHttpGateway.toObject = function(includeInstance, msg) {
  var f, obj = {
    ref: (f = msg.getRef()) && github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.toObject(includeInstance, f),
    selector: (f = msg.getSelector()) && github_com_solo$io_solo$apis_api_gloo_gloo_v1_core_selectors_selectors_pb.Selector.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gateway.solo.io.DelegatedHttpGateway}
 */
proto.gateway.solo.io.DelegatedHttpGateway.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gateway.solo.io.DelegatedHttpGateway;
  return proto.gateway.solo.io.DelegatedHttpGateway.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gateway.solo.io.DelegatedHttpGateway} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gateway.solo.io.DelegatedHttpGateway}
 */
proto.gateway.solo.io.DelegatedHttpGateway.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = new github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef;
      reader.readMessage(value,github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.deserializeBinaryFromReader);
      msg.setRef(value);
      break;
    case 4:
      var value = new github_com_solo$io_solo$apis_api_gloo_gloo_v1_core_selectors_selectors_pb.Selector;
      reader.readMessage(value,github_com_solo$io_solo$apis_api_gloo_gloo_v1_core_selectors_selectors_pb.Selector.deserializeBinaryFromReader);
      msg.setSelector(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gateway.solo.io.DelegatedHttpGateway.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gateway.solo.io.DelegatedHttpGateway.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gateway.solo.io.DelegatedHttpGateway} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gateway.solo.io.DelegatedHttpGateway.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRef();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.serializeBinaryToWriter
    );
  }
  f = message.getSelector();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      github_com_solo$io_solo$apis_api_gloo_gloo_v1_core_selectors_selectors_pb.Selector.serializeBinaryToWriter
    );
  }
};


/**
 * optional core.solo.io.ResourceRef ref = 3;
 * @return {?proto.core.solo.io.ResourceRef}
 */
proto.gateway.solo.io.DelegatedHttpGateway.prototype.getRef = function() {
  return /** @type{?proto.core.solo.io.ResourceRef} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef, 3));
};


/** @param {?proto.core.solo.io.ResourceRef|undefined} value */
proto.gateway.solo.io.DelegatedHttpGateway.prototype.setRef = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.gateway.solo.io.DelegatedHttpGateway.oneofGroups_[0], value);
};


proto.gateway.solo.io.DelegatedHttpGateway.prototype.clearRef = function() {
  this.setRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gateway.solo.io.DelegatedHttpGateway.prototype.hasRef = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional selectors.core.gloo.solo.io.Selector selector = 4;
 * @return {?proto.selectors.core.gloo.solo.io.Selector}
 */
proto.gateway.solo.io.DelegatedHttpGateway.prototype.getSelector = function() {
  return /** @type{?proto.selectors.core.gloo.solo.io.Selector} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$apis_api_gloo_gloo_v1_core_selectors_selectors_pb.Selector, 4));
};


/** @param {?proto.selectors.core.gloo.solo.io.Selector|undefined} value */
proto.gateway.solo.io.DelegatedHttpGateway.prototype.setSelector = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.gateway.solo.io.DelegatedHttpGateway.oneofGroups_[0], value);
};


proto.gateway.solo.io.DelegatedHttpGateway.prototype.clearSelector = function() {
  this.setSelector(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gateway.solo.io.DelegatedHttpGateway.prototype.hasSelector = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gateway.solo.io.MatchedGateway = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.gateway.solo.io.MatchedGateway.oneofGroups_);
};
goog.inherits(proto.gateway.solo.io.MatchedGateway, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gateway.solo.io.MatchedGateway.displayName = 'proto.gateway.solo.io.MatchedGateway';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.gateway.solo.io.MatchedGateway.oneofGroups_ = [[2,3]];

/**
 * @enum {number}
 */
proto.gateway.solo.io.MatchedGateway.GatewaytypeCase = {
  GATEWAYTYPE_NOT_SET: 0,
  HTTP_GATEWAY: 2,
  TCP_GATEWAY: 3
};

/**
 * @return {proto.gateway.solo.io.MatchedGateway.GatewaytypeCase}
 */
proto.gateway.solo.io.MatchedGateway.prototype.getGatewaytypeCase = function() {
  return /** @type {proto.gateway.solo.io.MatchedGateway.GatewaytypeCase} */(jspb.Message.computeOneofCase(this, proto.gateway.solo.io.MatchedGateway.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gateway.solo.io.MatchedGateway.prototype.toObject = function(opt_includeInstance) {
  return proto.gateway.solo.io.MatchedGateway.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gateway.solo.io.MatchedGateway} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gateway.solo.io.MatchedGateway.toObject = function(includeInstance, msg) {
  var f, obj = {
    matcher: (f = msg.getMatcher()) && proto.gateway.solo.io.Matcher.toObject(includeInstance, f),
    httpGateway: (f = msg.getHttpGateway()) && github_com_solo$io_solo$apis_api_gloo_gateway_v1_http_gateway_pb.HttpGateway.toObject(includeInstance, f),
    tcpGateway: (f = msg.getTcpGateway()) && proto.gateway.solo.io.TcpGateway.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gateway.solo.io.MatchedGateway}
 */
proto.gateway.solo.io.MatchedGateway.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gateway.solo.io.MatchedGateway;
  return proto.gateway.solo.io.MatchedGateway.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gateway.solo.io.MatchedGateway} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gateway.solo.io.MatchedGateway}
 */
proto.gateway.solo.io.MatchedGateway.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gateway.solo.io.Matcher;
      reader.readMessage(value,proto.gateway.solo.io.Matcher.deserializeBinaryFromReader);
      msg.setMatcher(value);
      break;
    case 2:
      var value = new github_com_solo$io_solo$apis_api_gloo_gateway_v1_http_gateway_pb.HttpGateway;
      reader.readMessage(value,github_com_solo$io_solo$apis_api_gloo_gateway_v1_http_gateway_pb.HttpGateway.deserializeBinaryFromReader);
      msg.setHttpGateway(value);
      break;
    case 3:
      var value = new proto.gateway.solo.io.TcpGateway;
      reader.readMessage(value,proto.gateway.solo.io.TcpGateway.deserializeBinaryFromReader);
      msg.setTcpGateway(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gateway.solo.io.MatchedGateway.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gateway.solo.io.MatchedGateway.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gateway.solo.io.MatchedGateway} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gateway.solo.io.MatchedGateway.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMatcher();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.gateway.solo.io.Matcher.serializeBinaryToWriter
    );
  }
  f = message.getHttpGateway();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      github_com_solo$io_solo$apis_api_gloo_gateway_v1_http_gateway_pb.HttpGateway.serializeBinaryToWriter
    );
  }
  f = message.getTcpGateway();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.gateway.solo.io.TcpGateway.serializeBinaryToWriter
    );
  }
};


/**
 * optional Matcher matcher = 1;
 * @return {?proto.gateway.solo.io.Matcher}
 */
proto.gateway.solo.io.MatchedGateway.prototype.getMatcher = function() {
  return /** @type{?proto.gateway.solo.io.Matcher} */ (
    jspb.Message.getWrapperField(this, proto.gateway.solo.io.Matcher, 1));
};


/** @param {?proto.gateway.solo.io.Matcher|undefined} value */
proto.gateway.solo.io.MatchedGateway.prototype.setMatcher = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.gateway.solo.io.MatchedGateway.prototype.clearMatcher = function() {
  this.setMatcher(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gateway.solo.io.MatchedGateway.prototype.hasMatcher = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional HttpGateway http_gateway = 2;
 * @return {?proto.gateway.solo.io.HttpGateway}
 */
proto.gateway.solo.io.MatchedGateway.prototype.getHttpGateway = function() {
  return /** @type{?proto.gateway.solo.io.HttpGateway} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$apis_api_gloo_gateway_v1_http_gateway_pb.HttpGateway, 2));
};


/** @param {?proto.gateway.solo.io.HttpGateway|undefined} value */
proto.gateway.solo.io.MatchedGateway.prototype.setHttpGateway = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.gateway.solo.io.MatchedGateway.oneofGroups_[0], value);
};


proto.gateway.solo.io.MatchedGateway.prototype.clearHttpGateway = function() {
  this.setHttpGateway(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gateway.solo.io.MatchedGateway.prototype.hasHttpGateway = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional TcpGateway tcp_gateway = 3;
 * @return {?proto.gateway.solo.io.TcpGateway}
 */
proto.gateway.solo.io.MatchedGateway.prototype.getTcpGateway = function() {
  return /** @type{?proto.gateway.solo.io.TcpGateway} */ (
    jspb.Message.getWrapperField(this, proto.gateway.solo.io.TcpGateway, 3));
};


/** @param {?proto.gateway.solo.io.TcpGateway|undefined} value */
proto.gateway.solo.io.MatchedGateway.prototype.setTcpGateway = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.gateway.solo.io.MatchedGateway.oneofGroups_[0], value);
};


proto.gateway.solo.io.MatchedGateway.prototype.clearTcpGateway = function() {
  this.setTcpGateway(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gateway.solo.io.MatchedGateway.prototype.hasTcpGateway = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gateway.solo.io.Matcher = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gateway.solo.io.Matcher.repeatedFields_, null);
};
goog.inherits(proto.gateway.solo.io.Matcher, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gateway.solo.io.Matcher.displayName = 'proto.gateway.solo.io.Matcher';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gateway.solo.io.Matcher.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gateway.solo.io.Matcher.prototype.toObject = function(opt_includeInstance) {
  return proto.gateway.solo.io.Matcher.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gateway.solo.io.Matcher} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gateway.solo.io.Matcher.toObject = function(includeInstance, msg) {
  var f, obj = {
    sslConfig: (f = msg.getSslConfig()) && github_com_solo$io_solo$apis_api_gloo_gloo_v1_ssl_pb.SslConfig.toObject(includeInstance, f),
    sourcePrefixRangesList: jspb.Message.toObjectList(msg.getSourcePrefixRangesList(),
    github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_core_v3_address_pb.CidrRange.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gateway.solo.io.Matcher}
 */
proto.gateway.solo.io.Matcher.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gateway.solo.io.Matcher;
  return proto.gateway.solo.io.Matcher.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gateway.solo.io.Matcher} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gateway.solo.io.Matcher}
 */
proto.gateway.solo.io.Matcher.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_solo$apis_api_gloo_gloo_v1_ssl_pb.SslConfig;
      reader.readMessage(value,github_com_solo$io_solo$apis_api_gloo_gloo_v1_ssl_pb.SslConfig.deserializeBinaryFromReader);
      msg.setSslConfig(value);
      break;
    case 2:
      var value = new github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_core_v3_address_pb.CidrRange;
      reader.readMessage(value,github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_core_v3_address_pb.CidrRange.deserializeBinaryFromReader);
      msg.addSourcePrefixRanges(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gateway.solo.io.Matcher.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gateway.solo.io.Matcher.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gateway.solo.io.Matcher} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gateway.solo.io.Matcher.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSslConfig();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_solo$apis_api_gloo_gloo_v1_ssl_pb.SslConfig.serializeBinaryToWriter
    );
  }
  f = message.getSourcePrefixRangesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_core_v3_address_pb.CidrRange.serializeBinaryToWriter
    );
  }
};


/**
 * optional gloo.solo.io.SslConfig ssl_config = 1;
 * @return {?proto.gloo.solo.io.SslConfig}
 */
proto.gateway.solo.io.Matcher.prototype.getSslConfig = function() {
  return /** @type{?proto.gloo.solo.io.SslConfig} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$apis_api_gloo_gloo_v1_ssl_pb.SslConfig, 1));
};


/** @param {?proto.gloo.solo.io.SslConfig|undefined} value */
proto.gateway.solo.io.Matcher.prototype.setSslConfig = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.gateway.solo.io.Matcher.prototype.clearSslConfig = function() {
  this.setSslConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gateway.solo.io.Matcher.prototype.hasSslConfig = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated solo.io.envoy.config.core.v3.CidrRange source_prefix_ranges = 2;
 * @return {!Array<!proto.solo.io.envoy.config.core.v3.CidrRange>}
 */
proto.gateway.solo.io.Matcher.prototype.getSourcePrefixRangesList = function() {
  return /** @type{!Array<!proto.solo.io.envoy.config.core.v3.CidrRange>} */ (
    jspb.Message.getRepeatedWrapperField(this, github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_core_v3_address_pb.CidrRange, 2));
};


/** @param {!Array<!proto.solo.io.envoy.config.core.v3.CidrRange>} value */
proto.gateway.solo.io.Matcher.prototype.setSourcePrefixRangesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.solo.io.envoy.config.core.v3.CidrRange=} opt_value
 * @param {number=} opt_index
 * @return {!proto.solo.io.envoy.config.core.v3.CidrRange}
 */
proto.gateway.solo.io.Matcher.prototype.addSourcePrefixRanges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.solo.io.envoy.config.core.v3.CidrRange, opt_index);
};


proto.gateway.solo.io.Matcher.prototype.clearSourcePrefixRangesList = function() {
  this.setSourcePrefixRangesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gateway.solo.io.GatewayStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gateway.solo.io.GatewayStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gateway.solo.io.GatewayStatus.displayName = 'proto.gateway.solo.io.GatewayStatus';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gateway.solo.io.GatewayStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.gateway.solo.io.GatewayStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gateway.solo.io.GatewayStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gateway.solo.io.GatewayStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    state: jspb.Message.getFieldWithDefault(msg, 1, 0),
    reason: jspb.Message.getFieldWithDefault(msg, 2, ""),
    reportedBy: jspb.Message.getFieldWithDefault(msg, 3, ""),
    subresourceStatusesMap: (f = msg.getSubresourceStatusesMap()) ? f.toObject(includeInstance, proto.gateway.solo.io.GatewayStatus.toObject) : [],
    details: (f = msg.getDetails()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gateway.solo.io.GatewayStatus}
 */
proto.gateway.solo.io.GatewayStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gateway.solo.io.GatewayStatus;
  return proto.gateway.solo.io.GatewayStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gateway.solo.io.GatewayStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gateway.solo.io.GatewayStatus}
 */
proto.gateway.solo.io.GatewayStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.gateway.solo.io.GatewayStatus.State} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setReason(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setReportedBy(value);
      break;
    case 4:
      var value = msg.getSubresourceStatusesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.gateway.solo.io.GatewayStatus.deserializeBinaryFromReader, "");
         });
      break;
    case 5:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setDetails(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gateway.solo.io.GatewayStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gateway.solo.io.GatewayStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gateway.solo.io.GatewayStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gateway.solo.io.GatewayStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getReason();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getReportedBy();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSubresourceStatusesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.gateway.solo.io.GatewayStatus.serializeBinaryToWriter);
  }
  f = message.getDetails();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.gateway.solo.io.GatewayStatus.State = {
  PENDING: 0,
  ACCEPTED: 1,
  REJECTED: 2,
  WARNING: 3
};

/**
 * optional State state = 1;
 * @return {!proto.gateway.solo.io.GatewayStatus.State}
 */
proto.gateway.solo.io.GatewayStatus.prototype.getState = function() {
  return /** @type {!proto.gateway.solo.io.GatewayStatus.State} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.gateway.solo.io.GatewayStatus.State} value */
proto.gateway.solo.io.GatewayStatus.prototype.setState = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string reason = 2;
 * @return {string}
 */
proto.gateway.solo.io.GatewayStatus.prototype.getReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.gateway.solo.io.GatewayStatus.prototype.setReason = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string reported_by = 3;
 * @return {string}
 */
proto.gateway.solo.io.GatewayStatus.prototype.getReportedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.gateway.solo.io.GatewayStatus.prototype.setReportedBy = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * map<string, GatewayStatus> subresource_statuses = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.gateway.solo.io.GatewayStatus>}
 */
proto.gateway.solo.io.GatewayStatus.prototype.getSubresourceStatusesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.gateway.solo.io.GatewayStatus>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      proto.gateway.solo.io.GatewayStatus));
};


proto.gateway.solo.io.GatewayStatus.prototype.clearSubresourceStatusesMap = function() {
  this.getSubresourceStatusesMap().clear();
};


/**
 * optional google.protobuf.Struct details = 5;
 * @return {?proto.google.protobuf.Struct}
 */
proto.gateway.solo.io.GatewayStatus.prototype.getDetails = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 5));
};


/** @param {?proto.google.protobuf.Struct|undefined} value */
proto.gateway.solo.io.GatewayStatus.prototype.setDetails = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.gateway.solo.io.GatewayStatus.prototype.clearDetails = function() {
  this.setDetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gateway.solo.io.GatewayStatus.prototype.hasDetails = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gateway.solo.io.GatewayNamespacedStatuses = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gateway.solo.io.GatewayNamespacedStatuses, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gateway.solo.io.GatewayNamespacedStatuses.displayName = 'proto.gateway.solo.io.GatewayNamespacedStatuses';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gateway.solo.io.GatewayNamespacedStatuses.prototype.toObject = function(opt_includeInstance) {
  return proto.gateway.solo.io.GatewayNamespacedStatuses.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gateway.solo.io.GatewayNamespacedStatuses} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gateway.solo.io.GatewayNamespacedStatuses.toObject = function(includeInstance, msg) {
  var f, obj = {
    statusesMap: (f = msg.getStatusesMap()) ? f.toObject(includeInstance, proto.gateway.solo.io.GatewayStatus.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gateway.solo.io.GatewayNamespacedStatuses}
 */
proto.gateway.solo.io.GatewayNamespacedStatuses.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gateway.solo.io.GatewayNamespacedStatuses;
  return proto.gateway.solo.io.GatewayNamespacedStatuses.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gateway.solo.io.GatewayNamespacedStatuses} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gateway.solo.io.GatewayNamespacedStatuses}
 */
proto.gateway.solo.io.GatewayNamespacedStatuses.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getStatusesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.gateway.solo.io.GatewayStatus.deserializeBinaryFromReader, "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gateway.solo.io.GatewayNamespacedStatuses.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gateway.solo.io.GatewayNamespacedStatuses.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gateway.solo.io.GatewayNamespacedStatuses} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gateway.solo.io.GatewayNamespacedStatuses.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatusesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.gateway.solo.io.GatewayStatus.serializeBinaryToWriter);
  }
};


/**
 * map<string, GatewayStatus> statuses = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.gateway.solo.io.GatewayStatus>}
 */
proto.gateway.solo.io.GatewayNamespacedStatuses.prototype.getStatusesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.gateway.solo.io.GatewayStatus>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.gateway.solo.io.GatewayStatus));
};


proto.gateway.solo.io.GatewayNamespacedStatuses.prototype.clearStatusesMap = function() {
  this.getStatusesMap().clear();
};


goog.object.extend(exports, proto.gateway.solo.io);
