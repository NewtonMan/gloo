/* eslint-disable */
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
var extproto_ext_pb = require('../../../../../../../extproto/ext_pb.js');
goog.exportSymbol('proto.gloo.solo.io.ConnectionConfig', null, global);
goog.exportSymbol('proto.gloo.solo.io.ConnectionConfig.Http1ProtocolOptions', null, global);
goog.exportSymbol('proto.gloo.solo.io.ConnectionConfig.HttpProtocolOptions', null, global);
goog.exportSymbol('proto.gloo.solo.io.ConnectionConfig.HttpProtocolOptions.HeadersWithUnderscoresAction', null, global);
goog.exportSymbol('proto.gloo.solo.io.ConnectionConfig.TcpKeepAlive', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.ConnectionConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gloo.solo.io.ConnectionConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.ConnectionConfig.displayName = 'proto.gloo.solo.io.ConnectionConfig';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.ConnectionConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.ConnectionConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.ConnectionConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.ConnectionConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    maxRequestsPerConnection: jspb.Message.getFieldWithDefault(msg, 1, 0),
    connectTimeout: (f = msg.getConnectTimeout()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    tcpKeepalive: (f = msg.getTcpKeepalive()) && proto.gloo.solo.io.ConnectionConfig.TcpKeepAlive.toObject(includeInstance, f),
    perConnectionBufferLimitBytes: (f = msg.getPerConnectionBufferLimitBytes()) && google_protobuf_wrappers_pb.UInt32Value.toObject(includeInstance, f),
    commonHttpProtocolOptions: (f = msg.getCommonHttpProtocolOptions()) && proto.gloo.solo.io.ConnectionConfig.HttpProtocolOptions.toObject(includeInstance, f),
    http1ProtocolOptions: (f = msg.getHttp1ProtocolOptions()) && proto.gloo.solo.io.ConnectionConfig.Http1ProtocolOptions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.ConnectionConfig}
 */
proto.gloo.solo.io.ConnectionConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.ConnectionConfig;
  return proto.gloo.solo.io.ConnectionConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.ConnectionConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.ConnectionConfig}
 */
proto.gloo.solo.io.ConnectionConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxRequestsPerConnection(value);
      break;
    case 2:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setConnectTimeout(value);
      break;
    case 3:
      var value = new proto.gloo.solo.io.ConnectionConfig.TcpKeepAlive;
      reader.readMessage(value,proto.gloo.solo.io.ConnectionConfig.TcpKeepAlive.deserializeBinaryFromReader);
      msg.setTcpKeepalive(value);
      break;
    case 4:
      var value = new google_protobuf_wrappers_pb.UInt32Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.UInt32Value.deserializeBinaryFromReader);
      msg.setPerConnectionBufferLimitBytes(value);
      break;
    case 5:
      var value = new proto.gloo.solo.io.ConnectionConfig.HttpProtocolOptions;
      reader.readMessage(value,proto.gloo.solo.io.ConnectionConfig.HttpProtocolOptions.deserializeBinaryFromReader);
      msg.setCommonHttpProtocolOptions(value);
      break;
    case 6:
      var value = new proto.gloo.solo.io.ConnectionConfig.Http1ProtocolOptions;
      reader.readMessage(value,proto.gloo.solo.io.ConnectionConfig.Http1ProtocolOptions.deserializeBinaryFromReader);
      msg.setHttp1ProtocolOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.ConnectionConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.ConnectionConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.ConnectionConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.ConnectionConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMaxRequestsPerConnection();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getConnectTimeout();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getTcpKeepalive();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.gloo.solo.io.ConnectionConfig.TcpKeepAlive.serializeBinaryToWriter
    );
  }
  f = message.getPerConnectionBufferLimitBytes();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_wrappers_pb.UInt32Value.serializeBinaryToWriter
    );
  }
  f = message.getCommonHttpProtocolOptions();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.gloo.solo.io.ConnectionConfig.HttpProtocolOptions.serializeBinaryToWriter
    );
  }
  f = message.getHttp1ProtocolOptions();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.gloo.solo.io.ConnectionConfig.Http1ProtocolOptions.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.ConnectionConfig.TcpKeepAlive = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gloo.solo.io.ConnectionConfig.TcpKeepAlive, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.ConnectionConfig.TcpKeepAlive.displayName = 'proto.gloo.solo.io.ConnectionConfig.TcpKeepAlive';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.ConnectionConfig.TcpKeepAlive.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.ConnectionConfig.TcpKeepAlive.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.ConnectionConfig.TcpKeepAlive} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.ConnectionConfig.TcpKeepAlive.toObject = function(includeInstance, msg) {
  var f, obj = {
    keepaliveProbes: jspb.Message.getFieldWithDefault(msg, 1, 0),
    keepaliveTime: (f = msg.getKeepaliveTime()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    keepaliveInterval: (f = msg.getKeepaliveInterval()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.ConnectionConfig.TcpKeepAlive}
 */
proto.gloo.solo.io.ConnectionConfig.TcpKeepAlive.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.ConnectionConfig.TcpKeepAlive;
  return proto.gloo.solo.io.ConnectionConfig.TcpKeepAlive.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.ConnectionConfig.TcpKeepAlive} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.ConnectionConfig.TcpKeepAlive}
 */
proto.gloo.solo.io.ConnectionConfig.TcpKeepAlive.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setKeepaliveProbes(value);
      break;
    case 2:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setKeepaliveTime(value);
      break;
    case 3:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setKeepaliveInterval(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.ConnectionConfig.TcpKeepAlive.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.ConnectionConfig.TcpKeepAlive.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.ConnectionConfig.TcpKeepAlive} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.ConnectionConfig.TcpKeepAlive.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKeepaliveProbes();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getKeepaliveTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getKeepaliveInterval();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 keepalive_probes = 1;
 * @return {number}
 */
proto.gloo.solo.io.ConnectionConfig.TcpKeepAlive.prototype.getKeepaliveProbes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.gloo.solo.io.ConnectionConfig.TcpKeepAlive.prototype.setKeepaliveProbes = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional google.protobuf.Duration keepalive_time = 2;
 * @return {?proto.google.protobuf.Duration}
 */
proto.gloo.solo.io.ConnectionConfig.TcpKeepAlive.prototype.getKeepaliveTime = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 2));
};


/** @param {?proto.google.protobuf.Duration|undefined} value */
proto.gloo.solo.io.ConnectionConfig.TcpKeepAlive.prototype.setKeepaliveTime = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.gloo.solo.io.ConnectionConfig.TcpKeepAlive.prototype.clearKeepaliveTime = function() {
  this.setKeepaliveTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.ConnectionConfig.TcpKeepAlive.prototype.hasKeepaliveTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Duration keepalive_interval = 3;
 * @return {?proto.google.protobuf.Duration}
 */
proto.gloo.solo.io.ConnectionConfig.TcpKeepAlive.prototype.getKeepaliveInterval = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 3));
};


/** @param {?proto.google.protobuf.Duration|undefined} value */
proto.gloo.solo.io.ConnectionConfig.TcpKeepAlive.prototype.setKeepaliveInterval = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.gloo.solo.io.ConnectionConfig.TcpKeepAlive.prototype.clearKeepaliveInterval = function() {
  this.setKeepaliveInterval(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.ConnectionConfig.TcpKeepAlive.prototype.hasKeepaliveInterval = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.ConnectionConfig.HttpProtocolOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gloo.solo.io.ConnectionConfig.HttpProtocolOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.ConnectionConfig.HttpProtocolOptions.displayName = 'proto.gloo.solo.io.ConnectionConfig.HttpProtocolOptions';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.ConnectionConfig.HttpProtocolOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.ConnectionConfig.HttpProtocolOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.ConnectionConfig.HttpProtocolOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.ConnectionConfig.HttpProtocolOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    idleTimeout: (f = msg.getIdleTimeout()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    maxHeadersCount: jspb.Message.getFieldWithDefault(msg, 2, 0),
    maxStreamDuration: (f = msg.getMaxStreamDuration()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    headersWithUnderscoresAction: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.ConnectionConfig.HttpProtocolOptions}
 */
proto.gloo.solo.io.ConnectionConfig.HttpProtocolOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.ConnectionConfig.HttpProtocolOptions;
  return proto.gloo.solo.io.ConnectionConfig.HttpProtocolOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.ConnectionConfig.HttpProtocolOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.ConnectionConfig.HttpProtocolOptions}
 */
proto.gloo.solo.io.ConnectionConfig.HttpProtocolOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setIdleTimeout(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxHeadersCount(value);
      break;
    case 3:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setMaxStreamDuration(value);
      break;
    case 4:
      var value = /** @type {!proto.gloo.solo.io.ConnectionConfig.HttpProtocolOptions.HeadersWithUnderscoresAction} */ (reader.readEnum());
      msg.setHeadersWithUnderscoresAction(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.ConnectionConfig.HttpProtocolOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.ConnectionConfig.HttpProtocolOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.ConnectionConfig.HttpProtocolOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.ConnectionConfig.HttpProtocolOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdleTimeout();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getMaxHeadersCount();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getMaxStreamDuration();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getHeadersWithUnderscoresAction();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.gloo.solo.io.ConnectionConfig.HttpProtocolOptions.HeadersWithUnderscoresAction = {
  ALLOW: 0,
  REJECT_REQUEST: 1,
  DROP_HEADER: 2
};

/**
 * optional google.protobuf.Duration idle_timeout = 1;
 * @return {?proto.google.protobuf.Duration}
 */
proto.gloo.solo.io.ConnectionConfig.HttpProtocolOptions.prototype.getIdleTimeout = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 1));
};


/** @param {?proto.google.protobuf.Duration|undefined} value */
proto.gloo.solo.io.ConnectionConfig.HttpProtocolOptions.prototype.setIdleTimeout = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.gloo.solo.io.ConnectionConfig.HttpProtocolOptions.prototype.clearIdleTimeout = function() {
  this.setIdleTimeout(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.ConnectionConfig.HttpProtocolOptions.prototype.hasIdleTimeout = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 max_headers_count = 2;
 * @return {number}
 */
proto.gloo.solo.io.ConnectionConfig.HttpProtocolOptions.prototype.getMaxHeadersCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.gloo.solo.io.ConnectionConfig.HttpProtocolOptions.prototype.setMaxHeadersCount = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional google.protobuf.Duration max_stream_duration = 3;
 * @return {?proto.google.protobuf.Duration}
 */
proto.gloo.solo.io.ConnectionConfig.HttpProtocolOptions.prototype.getMaxStreamDuration = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 3));
};


/** @param {?proto.google.protobuf.Duration|undefined} value */
proto.gloo.solo.io.ConnectionConfig.HttpProtocolOptions.prototype.setMaxStreamDuration = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.gloo.solo.io.ConnectionConfig.HttpProtocolOptions.prototype.clearMaxStreamDuration = function() {
  this.setMaxStreamDuration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.ConnectionConfig.HttpProtocolOptions.prototype.hasMaxStreamDuration = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional HeadersWithUnderscoresAction headers_with_underscores_action = 4;
 * @return {!proto.gloo.solo.io.ConnectionConfig.HttpProtocolOptions.HeadersWithUnderscoresAction}
 */
proto.gloo.solo.io.ConnectionConfig.HttpProtocolOptions.prototype.getHeadersWithUnderscoresAction = function() {
  return /** @type {!proto.gloo.solo.io.ConnectionConfig.HttpProtocolOptions.HeadersWithUnderscoresAction} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {!proto.gloo.solo.io.ConnectionConfig.HttpProtocolOptions.HeadersWithUnderscoresAction} value */
proto.gloo.solo.io.ConnectionConfig.HttpProtocolOptions.prototype.setHeadersWithUnderscoresAction = function(value) {
  jspb.Message.setProto3EnumField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.ConnectionConfig.Http1ProtocolOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.gloo.solo.io.ConnectionConfig.Http1ProtocolOptions.oneofGroups_);
};
goog.inherits(proto.gloo.solo.io.ConnectionConfig.Http1ProtocolOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.ConnectionConfig.Http1ProtocolOptions.displayName = 'proto.gloo.solo.io.ConnectionConfig.Http1ProtocolOptions';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.gloo.solo.io.ConnectionConfig.Http1ProtocolOptions.oneofGroups_ = [[22,31]];

/**
 * @enum {number}
 */
proto.gloo.solo.io.ConnectionConfig.Http1ProtocolOptions.HeaderFormatCase = {
  HEADER_FORMAT_NOT_SET: 0,
  PROPER_CASE_HEADER_KEY_FORMAT: 22,
  PRESERVE_CASE_HEADER_KEY_FORMAT: 31
};

/**
 * @return {proto.gloo.solo.io.ConnectionConfig.Http1ProtocolOptions.HeaderFormatCase}
 */
proto.gloo.solo.io.ConnectionConfig.Http1ProtocolOptions.prototype.getHeaderFormatCase = function() {
  return /** @type {proto.gloo.solo.io.ConnectionConfig.Http1ProtocolOptions.HeaderFormatCase} */(jspb.Message.computeOneofCase(this, proto.gloo.solo.io.ConnectionConfig.Http1ProtocolOptions.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.ConnectionConfig.Http1ProtocolOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.ConnectionConfig.Http1ProtocolOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.ConnectionConfig.Http1ProtocolOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.ConnectionConfig.Http1ProtocolOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    enableTrailers: jspb.Message.getFieldWithDefault(msg, 1, false),
    properCaseHeaderKeyFormat: jspb.Message.getFieldWithDefault(msg, 22, false),
    preserveCaseHeaderKeyFormat: jspb.Message.getFieldWithDefault(msg, 31, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.ConnectionConfig.Http1ProtocolOptions}
 */
proto.gloo.solo.io.ConnectionConfig.Http1ProtocolOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.ConnectionConfig.Http1ProtocolOptions;
  return proto.gloo.solo.io.ConnectionConfig.Http1ProtocolOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.ConnectionConfig.Http1ProtocolOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.ConnectionConfig.Http1ProtocolOptions}
 */
proto.gloo.solo.io.ConnectionConfig.Http1ProtocolOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableTrailers(value);
      break;
    case 22:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setProperCaseHeaderKeyFormat(value);
      break;
    case 31:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPreserveCaseHeaderKeyFormat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.ConnectionConfig.Http1ProtocolOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.ConnectionConfig.Http1ProtocolOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.ConnectionConfig.Http1ProtocolOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.ConnectionConfig.Http1ProtocolOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnableTrailers();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeBool(
      22,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 31));
  if (f != null) {
    writer.writeBool(
      31,
      f
    );
  }
};


/**
 * optional bool enable_trailers = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.gloo.solo.io.ConnectionConfig.Http1ProtocolOptions.prototype.getEnableTrailers = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.gloo.solo.io.ConnectionConfig.Http1ProtocolOptions.prototype.setEnableTrailers = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool proper_case_header_key_format = 22;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.gloo.solo.io.ConnectionConfig.Http1ProtocolOptions.prototype.getProperCaseHeaderKeyFormat = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 22, false));
};


/** @param {boolean} value */
proto.gloo.solo.io.ConnectionConfig.Http1ProtocolOptions.prototype.setProperCaseHeaderKeyFormat = function(value) {
  jspb.Message.setOneofField(this, 22, proto.gloo.solo.io.ConnectionConfig.Http1ProtocolOptions.oneofGroups_[0], value);
};


proto.gloo.solo.io.ConnectionConfig.Http1ProtocolOptions.prototype.clearProperCaseHeaderKeyFormat = function() {
  jspb.Message.setOneofField(this, 22, proto.gloo.solo.io.ConnectionConfig.Http1ProtocolOptions.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.ConnectionConfig.Http1ProtocolOptions.prototype.hasProperCaseHeaderKeyFormat = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional bool preserve_case_header_key_format = 31;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.gloo.solo.io.ConnectionConfig.Http1ProtocolOptions.prototype.getPreserveCaseHeaderKeyFormat = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 31, false));
};


/** @param {boolean} value */
proto.gloo.solo.io.ConnectionConfig.Http1ProtocolOptions.prototype.setPreserveCaseHeaderKeyFormat = function(value) {
  jspb.Message.setOneofField(this, 31, proto.gloo.solo.io.ConnectionConfig.Http1ProtocolOptions.oneofGroups_[0], value);
};


proto.gloo.solo.io.ConnectionConfig.Http1ProtocolOptions.prototype.clearPreserveCaseHeaderKeyFormat = function() {
  jspb.Message.setOneofField(this, 31, proto.gloo.solo.io.ConnectionConfig.Http1ProtocolOptions.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.ConnectionConfig.Http1ProtocolOptions.prototype.hasPreserveCaseHeaderKeyFormat = function() {
  return jspb.Message.getField(this, 31) != null;
};


/**
 * optional uint32 max_requests_per_connection = 1;
 * @return {number}
 */
proto.gloo.solo.io.ConnectionConfig.prototype.getMaxRequestsPerConnection = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.gloo.solo.io.ConnectionConfig.prototype.setMaxRequestsPerConnection = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional google.protobuf.Duration connect_timeout = 2;
 * @return {?proto.google.protobuf.Duration}
 */
proto.gloo.solo.io.ConnectionConfig.prototype.getConnectTimeout = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 2));
};


/** @param {?proto.google.protobuf.Duration|undefined} value */
proto.gloo.solo.io.ConnectionConfig.prototype.setConnectTimeout = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.gloo.solo.io.ConnectionConfig.prototype.clearConnectTimeout = function() {
  this.setConnectTimeout(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.ConnectionConfig.prototype.hasConnectTimeout = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional TcpKeepAlive tcp_keepalive = 3;
 * @return {?proto.gloo.solo.io.ConnectionConfig.TcpKeepAlive}
 */
proto.gloo.solo.io.ConnectionConfig.prototype.getTcpKeepalive = function() {
  return /** @type{?proto.gloo.solo.io.ConnectionConfig.TcpKeepAlive} */ (
    jspb.Message.getWrapperField(this, proto.gloo.solo.io.ConnectionConfig.TcpKeepAlive, 3));
};


/** @param {?proto.gloo.solo.io.ConnectionConfig.TcpKeepAlive|undefined} value */
proto.gloo.solo.io.ConnectionConfig.prototype.setTcpKeepalive = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.gloo.solo.io.ConnectionConfig.prototype.clearTcpKeepalive = function() {
  this.setTcpKeepalive(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.ConnectionConfig.prototype.hasTcpKeepalive = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.UInt32Value per_connection_buffer_limit_bytes = 4;
 * @return {?proto.google.protobuf.UInt32Value}
 */
proto.gloo.solo.io.ConnectionConfig.prototype.getPerConnectionBufferLimitBytes = function() {
  return /** @type{?proto.google.protobuf.UInt32Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.UInt32Value, 4));
};


/** @param {?proto.google.protobuf.UInt32Value|undefined} value */
proto.gloo.solo.io.ConnectionConfig.prototype.setPerConnectionBufferLimitBytes = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.gloo.solo.io.ConnectionConfig.prototype.clearPerConnectionBufferLimitBytes = function() {
  this.setPerConnectionBufferLimitBytes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.ConnectionConfig.prototype.hasPerConnectionBufferLimitBytes = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional HttpProtocolOptions common_http_protocol_options = 5;
 * @return {?proto.gloo.solo.io.ConnectionConfig.HttpProtocolOptions}
 */
proto.gloo.solo.io.ConnectionConfig.prototype.getCommonHttpProtocolOptions = function() {
  return /** @type{?proto.gloo.solo.io.ConnectionConfig.HttpProtocolOptions} */ (
    jspb.Message.getWrapperField(this, proto.gloo.solo.io.ConnectionConfig.HttpProtocolOptions, 5));
};


/** @param {?proto.gloo.solo.io.ConnectionConfig.HttpProtocolOptions|undefined} value */
proto.gloo.solo.io.ConnectionConfig.prototype.setCommonHttpProtocolOptions = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.gloo.solo.io.ConnectionConfig.prototype.clearCommonHttpProtocolOptions = function() {
  this.setCommonHttpProtocolOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.ConnectionConfig.prototype.hasCommonHttpProtocolOptions = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Http1ProtocolOptions http1_protocol_options = 6;
 * @return {?proto.gloo.solo.io.ConnectionConfig.Http1ProtocolOptions}
 */
proto.gloo.solo.io.ConnectionConfig.prototype.getHttp1ProtocolOptions = function() {
  return /** @type{?proto.gloo.solo.io.ConnectionConfig.Http1ProtocolOptions} */ (
    jspb.Message.getWrapperField(this, proto.gloo.solo.io.ConnectionConfig.Http1ProtocolOptions, 6));
};


/** @param {?proto.gloo.solo.io.ConnectionConfig.Http1ProtocolOptions|undefined} value */
proto.gloo.solo.io.ConnectionConfig.prototype.setHttp1ProtocolOptions = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.gloo.solo.io.ConnectionConfig.prototype.clearHttp1ProtocolOptions = function() {
  this.setHttp1ProtocolOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.ConnectionConfig.prototype.hasHttp1ProtocolOptions = function() {
  return jspb.Message.getField(this, 6) != null;
};


goog.object.extend(exports, proto.gloo.solo.io);
