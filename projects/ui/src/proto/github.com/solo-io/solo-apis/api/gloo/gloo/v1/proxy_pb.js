/* eslint-disable */
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
var extproto_ext_pb = require('../../../../../../../extproto/ext_pb.js');
var github_com_solo$io_solo$kit_api_v1_ref_pb = require('../../../../../../../github.com/solo-io/solo-kit/api/v1/ref_pb.js');
var github_com_solo$io_solo$kit_api_v1_solo$kit_pb = require('../../../../../../../github.com/solo-io/solo-kit/api/v1/solo-kit_pb.js');
var github_com_solo$io_solo$apis_api_gloo_gloo_v1_ssl_ssl_pb = require('../../../../../../../github.com/solo-io/solo-apis/api/gloo/gloo/v1/ssl/ssl_pb.js');
var github_com_solo$io_solo$apis_api_gloo_gloo_v1_subset_pb = require('../../../../../../../github.com/solo-io/solo-apis/api/gloo/gloo/v1/subset_pb.js');
var github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb = require('../../../../../../../github.com/solo-io/solo-apis/api/gloo/gloo/v1/options_pb.js');
var github_com_solo$io_solo$apis_api_gloo_gloo_v1_core_matchers_matchers_pb = require('../../../../../../../github.com/solo-io/solo-apis/api/gloo/gloo/v1/core/matchers/matchers_pb.js');
var github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_core_v3_address_pb = require('../../../../../../../github.com/solo-io/solo-apis/api/gloo/gloo/external/envoy/config/core/v3/address_pb.js');
var github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_dynamic_forward_proxy_dynamic_forward_proxy_pb = require('../../../../../../../github.com/solo-io/solo-apis/api/gloo/gloo/v1/options/dynamic_forward_proxy/dynamic_forward_proxy_pb.js');
var github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_type_matcher_v3_regex_pb = require('../../../../../../../github.com/solo-io/solo-apis/api/gloo/gloo/external/envoy/type/matcher/v3/regex_pb.js');
goog.exportSymbol('proto.gloo.solo.io.AggregateListener', null, global);
goog.exportSymbol('proto.gloo.solo.io.AggregateListener.HttpFilterChain', null, global);
goog.exportSymbol('proto.gloo.solo.io.AggregateListener.HttpResources', null, global);
goog.exportSymbol('proto.gloo.solo.io.ConsulServiceDestination', null, global);
goog.exportSymbol('proto.gloo.solo.io.Destination', null, global);
goog.exportSymbol('proto.gloo.solo.io.DirectResponseAction', null, global);
goog.exportSymbol('proto.gloo.solo.io.HttpListener', null, global);
goog.exportSymbol('proto.gloo.solo.io.HybridListener', null, global);
goog.exportSymbol('proto.gloo.solo.io.KubernetesServiceDestination', null, global);
goog.exportSymbol('proto.gloo.solo.io.Listener', null, global);
goog.exportSymbol('proto.gloo.solo.io.MatchedListener', null, global);
goog.exportSymbol('proto.gloo.solo.io.Matcher', null, global);
goog.exportSymbol('proto.gloo.solo.io.MultiDestination', null, global);
goog.exportSymbol('proto.gloo.solo.io.ProxyNamespacedStatuses', null, global);
goog.exportSymbol('proto.gloo.solo.io.ProxySpec', null, global);
goog.exportSymbol('proto.gloo.solo.io.ProxyStatus', null, global);
goog.exportSymbol('proto.gloo.solo.io.ProxyStatus.State', null, global);
goog.exportSymbol('proto.gloo.solo.io.RedirectAction', null, global);
goog.exportSymbol('proto.gloo.solo.io.RedirectAction.RedirectResponseCode', null, global);
goog.exportSymbol('proto.gloo.solo.io.Route', null, global);
goog.exportSymbol('proto.gloo.solo.io.RouteAction', null, global);
goog.exportSymbol('proto.gloo.solo.io.SourceMetadata', null, global);
goog.exportSymbol('proto.gloo.solo.io.SourceMetadata.SourceRef', null, global);
goog.exportSymbol('proto.gloo.solo.io.TcpHost', null, global);
goog.exportSymbol('proto.gloo.solo.io.TcpHost.TcpAction', null, global);
goog.exportSymbol('proto.gloo.solo.io.TcpListener', null, global);
goog.exportSymbol('proto.gloo.solo.io.UpstreamGroupNamespacedStatuses', null, global);
goog.exportSymbol('proto.gloo.solo.io.UpstreamGroupSpec', null, global);
goog.exportSymbol('proto.gloo.solo.io.UpstreamGroupStatus', null, global);
goog.exportSymbol('proto.gloo.solo.io.UpstreamGroupStatus.State', null, global);
goog.exportSymbol('proto.gloo.solo.io.VirtualHost', null, global);
goog.exportSymbol('proto.gloo.solo.io.WeightedDestination', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.ProxySpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gloo.solo.io.ProxySpec.repeatedFields_, null);
};
goog.inherits(proto.gloo.solo.io.ProxySpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.ProxySpec.displayName = 'proto.gloo.solo.io.ProxySpec';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gloo.solo.io.ProxySpec.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.ProxySpec.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.ProxySpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.ProxySpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.ProxySpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    compressedspec: jspb.Message.getFieldWithDefault(msg, 3, ""),
    listenersList: jspb.Message.toObjectList(msg.getListenersList(),
    proto.gloo.solo.io.Listener.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.ProxySpec}
 */
proto.gloo.solo.io.ProxySpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.ProxySpec;
  return proto.gloo.solo.io.ProxySpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.ProxySpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.ProxySpec}
 */
proto.gloo.solo.io.ProxySpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompressedspec(value);
      break;
    case 2:
      var value = new proto.gloo.solo.io.Listener;
      reader.readMessage(value,proto.gloo.solo.io.Listener.deserializeBinaryFromReader);
      msg.addListeners(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.ProxySpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.ProxySpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.ProxySpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.ProxySpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCompressedspec();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getListenersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.gloo.solo.io.Listener.serializeBinaryToWriter
    );
  }
};


/**
 * optional string compressedSpec = 3;
 * @return {string}
 */
proto.gloo.solo.io.ProxySpec.prototype.getCompressedspec = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.gloo.solo.io.ProxySpec.prototype.setCompressedspec = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated Listener listeners = 2;
 * @return {!Array<!proto.gloo.solo.io.Listener>}
 */
proto.gloo.solo.io.ProxySpec.prototype.getListenersList = function() {
  return /** @type{!Array<!proto.gloo.solo.io.Listener>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gloo.solo.io.Listener, 2));
};


/** @param {!Array<!proto.gloo.solo.io.Listener>} value */
proto.gloo.solo.io.ProxySpec.prototype.setListenersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.gloo.solo.io.Listener=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gloo.solo.io.Listener}
 */
proto.gloo.solo.io.ProxySpec.prototype.addListeners = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.gloo.solo.io.Listener, opt_index);
};


proto.gloo.solo.io.ProxySpec.prototype.clearListenersList = function() {
  this.setListenersList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.Listener = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gloo.solo.io.Listener.repeatedFields_, proto.gloo.solo.io.Listener.oneofGroups_);
};
goog.inherits(proto.gloo.solo.io.Listener, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.Listener.displayName = 'proto.gloo.solo.io.Listener';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gloo.solo.io.Listener.repeatedFields_ = [6];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.gloo.solo.io.Listener.oneofGroups_ = [[4,5,11,13],[9,12]];

/**
 * @enum {number}
 */
proto.gloo.solo.io.Listener.ListenertypeCase = {
  LISTENERTYPE_NOT_SET: 0,
  HTTP_LISTENER: 4,
  TCP_LISTENER: 5,
  HYBRID_LISTENER: 11,
  AGGREGATE_LISTENER: 13
};

/**
 * @return {proto.gloo.solo.io.Listener.ListenertypeCase}
 */
proto.gloo.solo.io.Listener.prototype.getListenertypeCase = function() {
  return /** @type {proto.gloo.solo.io.Listener.ListenertypeCase} */(jspb.Message.computeOneofCase(this, proto.gloo.solo.io.Listener.oneofGroups_[0]));
};

/**
 * @enum {number}
 */
proto.gloo.solo.io.Listener.OpaqueMetadataCase = {
  OPAQUE_METADATA_NOT_SET: 0,
  METADATA: 9,
  METADATA_STATIC: 12
};

/**
 * @return {proto.gloo.solo.io.Listener.OpaqueMetadataCase}
 */
proto.gloo.solo.io.Listener.prototype.getOpaqueMetadataCase = function() {
  return /** @type {proto.gloo.solo.io.Listener.OpaqueMetadataCase} */(jspb.Message.computeOneofCase(this, proto.gloo.solo.io.Listener.oneofGroups_[1]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.Listener.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.Listener.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.Listener} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.Listener.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    bindAddress: jspb.Message.getFieldWithDefault(msg, 2, ""),
    bindPort: jspb.Message.getFieldWithDefault(msg, 3, 0),
    httpListener: (f = msg.getHttpListener()) && proto.gloo.solo.io.HttpListener.toObject(includeInstance, f),
    tcpListener: (f = msg.getTcpListener()) && proto.gloo.solo.io.TcpListener.toObject(includeInstance, f),
    hybridListener: (f = msg.getHybridListener()) && proto.gloo.solo.io.HybridListener.toObject(includeInstance, f),
    aggregateListener: (f = msg.getAggregateListener()) && proto.gloo.solo.io.AggregateListener.toObject(includeInstance, f),
    sslConfigurationsList: jspb.Message.toObjectList(msg.getSslConfigurationsList(),
    github_com_solo$io_solo$apis_api_gloo_gloo_v1_ssl_ssl_pb.SslConfig.toObject, includeInstance),
    useProxyProto: (f = msg.getUseProxyProto()) && google_protobuf_wrappers_pb.BoolValue.toObject(includeInstance, f),
    options: (f = msg.getOptions()) && github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.ListenerOptions.toObject(includeInstance, f),
    metadata: (f = msg.getMetadata()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
    metadataStatic: (f = msg.getMetadataStatic()) && proto.gloo.solo.io.SourceMetadata.toObject(includeInstance, f),
    routeOptions: (f = msg.getRouteOptions()) && github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.RouteConfigurationOptions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.Listener}
 */
proto.gloo.solo.io.Listener.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.Listener;
  return proto.gloo.solo.io.Listener.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.Listener} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.Listener}
 */
proto.gloo.solo.io.Listener.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBindAddress(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBindPort(value);
      break;
    case 4:
      var value = new proto.gloo.solo.io.HttpListener;
      reader.readMessage(value,proto.gloo.solo.io.HttpListener.deserializeBinaryFromReader);
      msg.setHttpListener(value);
      break;
    case 5:
      var value = new proto.gloo.solo.io.TcpListener;
      reader.readMessage(value,proto.gloo.solo.io.TcpListener.deserializeBinaryFromReader);
      msg.setTcpListener(value);
      break;
    case 11:
      var value = new proto.gloo.solo.io.HybridListener;
      reader.readMessage(value,proto.gloo.solo.io.HybridListener.deserializeBinaryFromReader);
      msg.setHybridListener(value);
      break;
    case 13:
      var value = new proto.gloo.solo.io.AggregateListener;
      reader.readMessage(value,proto.gloo.solo.io.AggregateListener.deserializeBinaryFromReader);
      msg.setAggregateListener(value);
      break;
    case 6:
      var value = new github_com_solo$io_solo$apis_api_gloo_gloo_v1_ssl_ssl_pb.SslConfig;
      reader.readMessage(value,github_com_solo$io_solo$apis_api_gloo_gloo_v1_ssl_ssl_pb.SslConfig.deserializeBinaryFromReader);
      msg.addSslConfigurations(value);
      break;
    case 7:
      var value = new google_protobuf_wrappers_pb.BoolValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.BoolValue.deserializeBinaryFromReader);
      msg.setUseProxyProto(value);
      break;
    case 8:
      var value = new github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.ListenerOptions;
      reader.readMessage(value,github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.ListenerOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    case 9:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 12:
      var value = new proto.gloo.solo.io.SourceMetadata;
      reader.readMessage(value,proto.gloo.solo.io.SourceMetadata.deserializeBinaryFromReader);
      msg.setMetadataStatic(value);
      break;
    case 10:
      var value = new github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.RouteConfigurationOptions;
      reader.readMessage(value,github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.RouteConfigurationOptions.deserializeBinaryFromReader);
      msg.setRouteOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.Listener.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.Listener.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.Listener} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.Listener.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBindAddress();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBindPort();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getHttpListener();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.gloo.solo.io.HttpListener.serializeBinaryToWriter
    );
  }
  f = message.getTcpListener();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.gloo.solo.io.TcpListener.serializeBinaryToWriter
    );
  }
  f = message.getHybridListener();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.gloo.solo.io.HybridListener.serializeBinaryToWriter
    );
  }
  f = message.getAggregateListener();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.gloo.solo.io.AggregateListener.serializeBinaryToWriter
    );
  }
  f = message.getSslConfigurationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      github_com_solo$io_solo$apis_api_gloo_gloo_v1_ssl_ssl_pb.SslConfig.serializeBinaryToWriter
    );
  }
  f = message.getUseProxyProto();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_wrappers_pb.BoolValue.serializeBinaryToWriter
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.ListenerOptions.serializeBinaryToWriter
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getMetadataStatic();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.gloo.solo.io.SourceMetadata.serializeBinaryToWriter
    );
  }
  f = message.getRouteOptions();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.RouteConfigurationOptions.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.gloo.solo.io.Listener.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.gloo.solo.io.Listener.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string bind_address = 2;
 * @return {string}
 */
proto.gloo.solo.io.Listener.prototype.getBindAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.gloo.solo.io.Listener.prototype.setBindAddress = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint32 bind_port = 3;
 * @return {number}
 */
proto.gloo.solo.io.Listener.prototype.getBindPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.gloo.solo.io.Listener.prototype.setBindPort = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional HttpListener http_listener = 4;
 * @return {?proto.gloo.solo.io.HttpListener}
 */
proto.gloo.solo.io.Listener.prototype.getHttpListener = function() {
  return /** @type{?proto.gloo.solo.io.HttpListener} */ (
    jspb.Message.getWrapperField(this, proto.gloo.solo.io.HttpListener, 4));
};


/** @param {?proto.gloo.solo.io.HttpListener|undefined} value */
proto.gloo.solo.io.Listener.prototype.setHttpListener = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.gloo.solo.io.Listener.oneofGroups_[0], value);
};


proto.gloo.solo.io.Listener.prototype.clearHttpListener = function() {
  this.setHttpListener(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.Listener.prototype.hasHttpListener = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional TcpListener tcp_listener = 5;
 * @return {?proto.gloo.solo.io.TcpListener}
 */
proto.gloo.solo.io.Listener.prototype.getTcpListener = function() {
  return /** @type{?proto.gloo.solo.io.TcpListener} */ (
    jspb.Message.getWrapperField(this, proto.gloo.solo.io.TcpListener, 5));
};


/** @param {?proto.gloo.solo.io.TcpListener|undefined} value */
proto.gloo.solo.io.Listener.prototype.setTcpListener = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.gloo.solo.io.Listener.oneofGroups_[0], value);
};


proto.gloo.solo.io.Listener.prototype.clearTcpListener = function() {
  this.setTcpListener(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.Listener.prototype.hasTcpListener = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional HybridListener hybrid_listener = 11;
 * @return {?proto.gloo.solo.io.HybridListener}
 */
proto.gloo.solo.io.Listener.prototype.getHybridListener = function() {
  return /** @type{?proto.gloo.solo.io.HybridListener} */ (
    jspb.Message.getWrapperField(this, proto.gloo.solo.io.HybridListener, 11));
};


/** @param {?proto.gloo.solo.io.HybridListener|undefined} value */
proto.gloo.solo.io.Listener.prototype.setHybridListener = function(value) {
  jspb.Message.setOneofWrapperField(this, 11, proto.gloo.solo.io.Listener.oneofGroups_[0], value);
};


proto.gloo.solo.io.Listener.prototype.clearHybridListener = function() {
  this.setHybridListener(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.Listener.prototype.hasHybridListener = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional AggregateListener aggregate_listener = 13;
 * @return {?proto.gloo.solo.io.AggregateListener}
 */
proto.gloo.solo.io.Listener.prototype.getAggregateListener = function() {
  return /** @type{?proto.gloo.solo.io.AggregateListener} */ (
    jspb.Message.getWrapperField(this, proto.gloo.solo.io.AggregateListener, 13));
};


/** @param {?proto.gloo.solo.io.AggregateListener|undefined} value */
proto.gloo.solo.io.Listener.prototype.setAggregateListener = function(value) {
  jspb.Message.setOneofWrapperField(this, 13, proto.gloo.solo.io.Listener.oneofGroups_[0], value);
};


proto.gloo.solo.io.Listener.prototype.clearAggregateListener = function() {
  this.setAggregateListener(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.Listener.prototype.hasAggregateListener = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * repeated SslConfig ssl_configurations = 6;
 * @return {!Array<!proto.gloo.solo.io.SslConfig>}
 */
proto.gloo.solo.io.Listener.prototype.getSslConfigurationsList = function() {
  return /** @type{!Array<!proto.gloo.solo.io.SslConfig>} */ (
    jspb.Message.getRepeatedWrapperField(this, github_com_solo$io_solo$apis_api_gloo_gloo_v1_ssl_ssl_pb.SslConfig, 6));
};


/** @param {!Array<!proto.gloo.solo.io.SslConfig>} value */
proto.gloo.solo.io.Listener.prototype.setSslConfigurationsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.gloo.solo.io.SslConfig=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gloo.solo.io.SslConfig}
 */
proto.gloo.solo.io.Listener.prototype.addSslConfigurations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.gloo.solo.io.SslConfig, opt_index);
};


proto.gloo.solo.io.Listener.prototype.clearSslConfigurationsList = function() {
  this.setSslConfigurationsList([]);
};


/**
 * optional google.protobuf.BoolValue use_proxy_proto = 7;
 * @return {?proto.google.protobuf.BoolValue}
 */
proto.gloo.solo.io.Listener.prototype.getUseProxyProto = function() {
  return /** @type{?proto.google.protobuf.BoolValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.BoolValue, 7));
};


/** @param {?proto.google.protobuf.BoolValue|undefined} value */
proto.gloo.solo.io.Listener.prototype.setUseProxyProto = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.gloo.solo.io.Listener.prototype.clearUseProxyProto = function() {
  this.setUseProxyProto(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.Listener.prototype.hasUseProxyProto = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional ListenerOptions options = 8;
 * @return {?proto.gloo.solo.io.ListenerOptions}
 */
proto.gloo.solo.io.Listener.prototype.getOptions = function() {
  return /** @type{?proto.gloo.solo.io.ListenerOptions} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.ListenerOptions, 8));
};


/** @param {?proto.gloo.solo.io.ListenerOptions|undefined} value */
proto.gloo.solo.io.Listener.prototype.setOptions = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.gloo.solo.io.Listener.prototype.clearOptions = function() {
  this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.Listener.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional google.protobuf.Struct metadata = 9;
 * @return {?proto.google.protobuf.Struct}
 */
proto.gloo.solo.io.Listener.prototype.getMetadata = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 9));
};


/** @param {?proto.google.protobuf.Struct|undefined} value */
proto.gloo.solo.io.Listener.prototype.setMetadata = function(value) {
  jspb.Message.setOneofWrapperField(this, 9, proto.gloo.solo.io.Listener.oneofGroups_[1], value);
};


proto.gloo.solo.io.Listener.prototype.clearMetadata = function() {
  this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.Listener.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional SourceMetadata metadata_static = 12;
 * @return {?proto.gloo.solo.io.SourceMetadata}
 */
proto.gloo.solo.io.Listener.prototype.getMetadataStatic = function() {
  return /** @type{?proto.gloo.solo.io.SourceMetadata} */ (
    jspb.Message.getWrapperField(this, proto.gloo.solo.io.SourceMetadata, 12));
};


/** @param {?proto.gloo.solo.io.SourceMetadata|undefined} value */
proto.gloo.solo.io.Listener.prototype.setMetadataStatic = function(value) {
  jspb.Message.setOneofWrapperField(this, 12, proto.gloo.solo.io.Listener.oneofGroups_[1], value);
};


proto.gloo.solo.io.Listener.prototype.clearMetadataStatic = function() {
  this.setMetadataStatic(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.Listener.prototype.hasMetadataStatic = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional RouteConfigurationOptions route_options = 10;
 * @return {?proto.gloo.solo.io.RouteConfigurationOptions}
 */
proto.gloo.solo.io.Listener.prototype.getRouteOptions = function() {
  return /** @type{?proto.gloo.solo.io.RouteConfigurationOptions} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.RouteConfigurationOptions, 10));
};


/** @param {?proto.gloo.solo.io.RouteConfigurationOptions|undefined} value */
proto.gloo.solo.io.Listener.prototype.setRouteOptions = function(value) {
  jspb.Message.setWrapperField(this, 10, value);
};


proto.gloo.solo.io.Listener.prototype.clearRouteOptions = function() {
  this.setRouteOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.Listener.prototype.hasRouteOptions = function() {
  return jspb.Message.getField(this, 10) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.TcpListener = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gloo.solo.io.TcpListener.repeatedFields_, null);
};
goog.inherits(proto.gloo.solo.io.TcpListener, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.TcpListener.displayName = 'proto.gloo.solo.io.TcpListener';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gloo.solo.io.TcpListener.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.TcpListener.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.TcpListener.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.TcpListener} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.TcpListener.toObject = function(includeInstance, msg) {
  var f, obj = {
    tcpHostsList: jspb.Message.toObjectList(msg.getTcpHostsList(),
    proto.gloo.solo.io.TcpHost.toObject, includeInstance),
    options: (f = msg.getOptions()) && github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.TcpListenerOptions.toObject(includeInstance, f),
    statPrefix: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.TcpListener}
 */
proto.gloo.solo.io.TcpListener.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.TcpListener;
  return proto.gloo.solo.io.TcpListener.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.TcpListener} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.TcpListener}
 */
proto.gloo.solo.io.TcpListener.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gloo.solo.io.TcpHost;
      reader.readMessage(value,proto.gloo.solo.io.TcpHost.deserializeBinaryFromReader);
      msg.addTcpHosts(value);
      break;
    case 8:
      var value = new github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.TcpListenerOptions;
      reader.readMessage(value,github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.TcpListenerOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatPrefix(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.TcpListener.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.TcpListener.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.TcpListener} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.TcpListener.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTcpHostsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.gloo.solo.io.TcpHost.serializeBinaryToWriter
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.TcpListenerOptions.serializeBinaryToWriter
    );
  }
  f = message.getStatPrefix();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * repeated TcpHost tcp_hosts = 1;
 * @return {!Array<!proto.gloo.solo.io.TcpHost>}
 */
proto.gloo.solo.io.TcpListener.prototype.getTcpHostsList = function() {
  return /** @type{!Array<!proto.gloo.solo.io.TcpHost>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gloo.solo.io.TcpHost, 1));
};


/** @param {!Array<!proto.gloo.solo.io.TcpHost>} value */
proto.gloo.solo.io.TcpListener.prototype.setTcpHostsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.gloo.solo.io.TcpHost=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gloo.solo.io.TcpHost}
 */
proto.gloo.solo.io.TcpListener.prototype.addTcpHosts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.gloo.solo.io.TcpHost, opt_index);
};


proto.gloo.solo.io.TcpListener.prototype.clearTcpHostsList = function() {
  this.setTcpHostsList([]);
};


/**
 * optional TcpListenerOptions options = 8;
 * @return {?proto.gloo.solo.io.TcpListenerOptions}
 */
proto.gloo.solo.io.TcpListener.prototype.getOptions = function() {
  return /** @type{?proto.gloo.solo.io.TcpListenerOptions} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.TcpListenerOptions, 8));
};


/** @param {?proto.gloo.solo.io.TcpListenerOptions|undefined} value */
proto.gloo.solo.io.TcpListener.prototype.setOptions = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.gloo.solo.io.TcpListener.prototype.clearOptions = function() {
  this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.TcpListener.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string stat_prefix = 3;
 * @return {string}
 */
proto.gloo.solo.io.TcpListener.prototype.getStatPrefix = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.gloo.solo.io.TcpListener.prototype.setStatPrefix = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.TcpHost = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gloo.solo.io.TcpHost, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.TcpHost.displayName = 'proto.gloo.solo.io.TcpHost';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.TcpHost.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.TcpHost.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.TcpHost} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.TcpHost.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sslConfig: (f = msg.getSslConfig()) && github_com_solo$io_solo$apis_api_gloo_gloo_v1_ssl_ssl_pb.SslConfig.toObject(includeInstance, f),
    destination: (f = msg.getDestination()) && proto.gloo.solo.io.TcpHost.TcpAction.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.TcpHost}
 */
proto.gloo.solo.io.TcpHost.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.TcpHost;
  return proto.gloo.solo.io.TcpHost.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.TcpHost} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.TcpHost}
 */
proto.gloo.solo.io.TcpHost.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = new github_com_solo$io_solo$apis_api_gloo_gloo_v1_ssl_ssl_pb.SslConfig;
      reader.readMessage(value,github_com_solo$io_solo$apis_api_gloo_gloo_v1_ssl_ssl_pb.SslConfig.deserializeBinaryFromReader);
      msg.setSslConfig(value);
      break;
    case 4:
      var value = new proto.gloo.solo.io.TcpHost.TcpAction;
      reader.readMessage(value,proto.gloo.solo.io.TcpHost.TcpAction.deserializeBinaryFromReader);
      msg.setDestination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.TcpHost.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.TcpHost.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.TcpHost} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.TcpHost.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSslConfig();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      github_com_solo$io_solo$apis_api_gloo_gloo_v1_ssl_ssl_pb.SslConfig.serializeBinaryToWriter
    );
  }
  f = message.getDestination();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.gloo.solo.io.TcpHost.TcpAction.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.TcpHost.TcpAction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.gloo.solo.io.TcpHost.TcpAction.oneofGroups_);
};
goog.inherits(proto.gloo.solo.io.TcpHost.TcpAction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.TcpHost.TcpAction.displayName = 'proto.gloo.solo.io.TcpHost.TcpAction';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.gloo.solo.io.TcpHost.TcpAction.oneofGroups_ = [[1,2,3,4]];

/**
 * @enum {number}
 */
proto.gloo.solo.io.TcpHost.TcpAction.DestinationCase = {
  DESTINATION_NOT_SET: 0,
  SINGLE: 1,
  MULTI: 2,
  UPSTREAM_GROUP: 3,
  FORWARD_SNI_CLUSTER_NAME: 4
};

/**
 * @return {proto.gloo.solo.io.TcpHost.TcpAction.DestinationCase}
 */
proto.gloo.solo.io.TcpHost.TcpAction.prototype.getDestinationCase = function() {
  return /** @type {proto.gloo.solo.io.TcpHost.TcpAction.DestinationCase} */(jspb.Message.computeOneofCase(this, proto.gloo.solo.io.TcpHost.TcpAction.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.TcpHost.TcpAction.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.TcpHost.TcpAction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.TcpHost.TcpAction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.TcpHost.TcpAction.toObject = function(includeInstance, msg) {
  var f, obj = {
    single: (f = msg.getSingle()) && proto.gloo.solo.io.Destination.toObject(includeInstance, f),
    multi: (f = msg.getMulti()) && proto.gloo.solo.io.MultiDestination.toObject(includeInstance, f),
    upstreamGroup: (f = msg.getUpstreamGroup()) && github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.toObject(includeInstance, f),
    forwardSniClusterName: (f = msg.getForwardSniClusterName()) && google_protobuf_empty_pb.Empty.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.TcpHost.TcpAction}
 */
proto.gloo.solo.io.TcpHost.TcpAction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.TcpHost.TcpAction;
  return proto.gloo.solo.io.TcpHost.TcpAction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.TcpHost.TcpAction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.TcpHost.TcpAction}
 */
proto.gloo.solo.io.TcpHost.TcpAction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gloo.solo.io.Destination;
      reader.readMessage(value,proto.gloo.solo.io.Destination.deserializeBinaryFromReader);
      msg.setSingle(value);
      break;
    case 2:
      var value = new proto.gloo.solo.io.MultiDestination;
      reader.readMessage(value,proto.gloo.solo.io.MultiDestination.deserializeBinaryFromReader);
      msg.setMulti(value);
      break;
    case 3:
      var value = new github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef;
      reader.readMessage(value,github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.deserializeBinaryFromReader);
      msg.setUpstreamGroup(value);
      break;
    case 4:
      var value = new google_protobuf_empty_pb.Empty;
      reader.readMessage(value,google_protobuf_empty_pb.Empty.deserializeBinaryFromReader);
      msg.setForwardSniClusterName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.TcpHost.TcpAction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.TcpHost.TcpAction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.TcpHost.TcpAction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.TcpHost.TcpAction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSingle();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.gloo.solo.io.Destination.serializeBinaryToWriter
    );
  }
  f = message.getMulti();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.gloo.solo.io.MultiDestination.serializeBinaryToWriter
    );
  }
  f = message.getUpstreamGroup();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.serializeBinaryToWriter
    );
  }
  f = message.getForwardSniClusterName();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_empty_pb.Empty.serializeBinaryToWriter
    );
  }
};


/**
 * optional Destination single = 1;
 * @return {?proto.gloo.solo.io.Destination}
 */
proto.gloo.solo.io.TcpHost.TcpAction.prototype.getSingle = function() {
  return /** @type{?proto.gloo.solo.io.Destination} */ (
    jspb.Message.getWrapperField(this, proto.gloo.solo.io.Destination, 1));
};


/** @param {?proto.gloo.solo.io.Destination|undefined} value */
proto.gloo.solo.io.TcpHost.TcpAction.prototype.setSingle = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.gloo.solo.io.TcpHost.TcpAction.oneofGroups_[0], value);
};


proto.gloo.solo.io.TcpHost.TcpAction.prototype.clearSingle = function() {
  this.setSingle(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.TcpHost.TcpAction.prototype.hasSingle = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional MultiDestination multi = 2;
 * @return {?proto.gloo.solo.io.MultiDestination}
 */
proto.gloo.solo.io.TcpHost.TcpAction.prototype.getMulti = function() {
  return /** @type{?proto.gloo.solo.io.MultiDestination} */ (
    jspb.Message.getWrapperField(this, proto.gloo.solo.io.MultiDestination, 2));
};


/** @param {?proto.gloo.solo.io.MultiDestination|undefined} value */
proto.gloo.solo.io.TcpHost.TcpAction.prototype.setMulti = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.gloo.solo.io.TcpHost.TcpAction.oneofGroups_[0], value);
};


proto.gloo.solo.io.TcpHost.TcpAction.prototype.clearMulti = function() {
  this.setMulti(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.TcpHost.TcpAction.prototype.hasMulti = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional core.solo.io.ResourceRef upstream_group = 3;
 * @return {?proto.core.solo.io.ResourceRef}
 */
proto.gloo.solo.io.TcpHost.TcpAction.prototype.getUpstreamGroup = function() {
  return /** @type{?proto.core.solo.io.ResourceRef} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef, 3));
};


/** @param {?proto.core.solo.io.ResourceRef|undefined} value */
proto.gloo.solo.io.TcpHost.TcpAction.prototype.setUpstreamGroup = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.gloo.solo.io.TcpHost.TcpAction.oneofGroups_[0], value);
};


proto.gloo.solo.io.TcpHost.TcpAction.prototype.clearUpstreamGroup = function() {
  this.setUpstreamGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.TcpHost.TcpAction.prototype.hasUpstreamGroup = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Empty forward_sni_cluster_name = 4;
 * @return {?proto.google.protobuf.Empty}
 */
proto.gloo.solo.io.TcpHost.TcpAction.prototype.getForwardSniClusterName = function() {
  return /** @type{?proto.google.protobuf.Empty} */ (
    jspb.Message.getWrapperField(this, google_protobuf_empty_pb.Empty, 4));
};


/** @param {?proto.google.protobuf.Empty|undefined} value */
proto.gloo.solo.io.TcpHost.TcpAction.prototype.setForwardSniClusterName = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.gloo.solo.io.TcpHost.TcpAction.oneofGroups_[0], value);
};


proto.gloo.solo.io.TcpHost.TcpAction.prototype.clearForwardSniClusterName = function() {
  this.setForwardSniClusterName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.TcpHost.TcpAction.prototype.hasForwardSniClusterName = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.gloo.solo.io.TcpHost.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.gloo.solo.io.TcpHost.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional SslConfig ssl_config = 3;
 * @return {?proto.gloo.solo.io.SslConfig}
 */
proto.gloo.solo.io.TcpHost.prototype.getSslConfig = function() {
  return /** @type{?proto.gloo.solo.io.SslConfig} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$apis_api_gloo_gloo_v1_ssl_ssl_pb.SslConfig, 3));
};


/** @param {?proto.gloo.solo.io.SslConfig|undefined} value */
proto.gloo.solo.io.TcpHost.prototype.setSslConfig = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.gloo.solo.io.TcpHost.prototype.clearSslConfig = function() {
  this.setSslConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.TcpHost.prototype.hasSslConfig = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional TcpAction destination = 4;
 * @return {?proto.gloo.solo.io.TcpHost.TcpAction}
 */
proto.gloo.solo.io.TcpHost.prototype.getDestination = function() {
  return /** @type{?proto.gloo.solo.io.TcpHost.TcpAction} */ (
    jspb.Message.getWrapperField(this, proto.gloo.solo.io.TcpHost.TcpAction, 4));
};


/** @param {?proto.gloo.solo.io.TcpHost.TcpAction|undefined} value */
proto.gloo.solo.io.TcpHost.prototype.setDestination = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.gloo.solo.io.TcpHost.prototype.clearDestination = function() {
  this.setDestination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.TcpHost.prototype.hasDestination = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.HttpListener = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gloo.solo.io.HttpListener.repeatedFields_, null);
};
goog.inherits(proto.gloo.solo.io.HttpListener, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.HttpListener.displayName = 'proto.gloo.solo.io.HttpListener';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gloo.solo.io.HttpListener.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.HttpListener.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.HttpListener.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.HttpListener} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.HttpListener.toObject = function(includeInstance, msg) {
  var f, obj = {
    virtualHostsList: jspb.Message.toObjectList(msg.getVirtualHostsList(),
    proto.gloo.solo.io.VirtualHost.toObject, includeInstance),
    options: (f = msg.getOptions()) && github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.HttpListenerOptions.toObject(includeInstance, f),
    statPrefix: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.HttpListener}
 */
proto.gloo.solo.io.HttpListener.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.HttpListener;
  return proto.gloo.solo.io.HttpListener.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.HttpListener} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.HttpListener}
 */
proto.gloo.solo.io.HttpListener.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gloo.solo.io.VirtualHost;
      reader.readMessage(value,proto.gloo.solo.io.VirtualHost.deserializeBinaryFromReader);
      msg.addVirtualHosts(value);
      break;
    case 2:
      var value = new github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.HttpListenerOptions;
      reader.readMessage(value,github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.HttpListenerOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatPrefix(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.HttpListener.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.HttpListener.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.HttpListener} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.HttpListener.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVirtualHostsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.gloo.solo.io.VirtualHost.serializeBinaryToWriter
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.HttpListenerOptions.serializeBinaryToWriter
    );
  }
  f = message.getStatPrefix();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * repeated VirtualHost virtual_hosts = 1;
 * @return {!Array<!proto.gloo.solo.io.VirtualHost>}
 */
proto.gloo.solo.io.HttpListener.prototype.getVirtualHostsList = function() {
  return /** @type{!Array<!proto.gloo.solo.io.VirtualHost>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gloo.solo.io.VirtualHost, 1));
};


/** @param {!Array<!proto.gloo.solo.io.VirtualHost>} value */
proto.gloo.solo.io.HttpListener.prototype.setVirtualHostsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.gloo.solo.io.VirtualHost=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gloo.solo.io.VirtualHost}
 */
proto.gloo.solo.io.HttpListener.prototype.addVirtualHosts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.gloo.solo.io.VirtualHost, opt_index);
};


proto.gloo.solo.io.HttpListener.prototype.clearVirtualHostsList = function() {
  this.setVirtualHostsList([]);
};


/**
 * optional HttpListenerOptions options = 2;
 * @return {?proto.gloo.solo.io.HttpListenerOptions}
 */
proto.gloo.solo.io.HttpListener.prototype.getOptions = function() {
  return /** @type{?proto.gloo.solo.io.HttpListenerOptions} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.HttpListenerOptions, 2));
};


/** @param {?proto.gloo.solo.io.HttpListenerOptions|undefined} value */
proto.gloo.solo.io.HttpListener.prototype.setOptions = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.gloo.solo.io.HttpListener.prototype.clearOptions = function() {
  this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.HttpListener.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string stat_prefix = 3;
 * @return {string}
 */
proto.gloo.solo.io.HttpListener.prototype.getStatPrefix = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.gloo.solo.io.HttpListener.prototype.setStatPrefix = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.HybridListener = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gloo.solo.io.HybridListener.repeatedFields_, null);
};
goog.inherits(proto.gloo.solo.io.HybridListener, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.HybridListener.displayName = 'proto.gloo.solo.io.HybridListener';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gloo.solo.io.HybridListener.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.HybridListener.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.HybridListener.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.HybridListener} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.HybridListener.toObject = function(includeInstance, msg) {
  var f, obj = {
    matchedListenersList: jspb.Message.toObjectList(msg.getMatchedListenersList(),
    proto.gloo.solo.io.MatchedListener.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.HybridListener}
 */
proto.gloo.solo.io.HybridListener.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.HybridListener;
  return proto.gloo.solo.io.HybridListener.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.HybridListener} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.HybridListener}
 */
proto.gloo.solo.io.HybridListener.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gloo.solo.io.MatchedListener;
      reader.readMessage(value,proto.gloo.solo.io.MatchedListener.deserializeBinaryFromReader);
      msg.addMatchedListeners(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.HybridListener.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.HybridListener.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.HybridListener} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.HybridListener.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMatchedListenersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.gloo.solo.io.MatchedListener.serializeBinaryToWriter
    );
  }
};


/**
 * repeated MatchedListener matched_listeners = 1;
 * @return {!Array<!proto.gloo.solo.io.MatchedListener>}
 */
proto.gloo.solo.io.HybridListener.prototype.getMatchedListenersList = function() {
  return /** @type{!Array<!proto.gloo.solo.io.MatchedListener>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gloo.solo.io.MatchedListener, 1));
};


/** @param {!Array<!proto.gloo.solo.io.MatchedListener>} value */
proto.gloo.solo.io.HybridListener.prototype.setMatchedListenersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.gloo.solo.io.MatchedListener=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gloo.solo.io.MatchedListener}
 */
proto.gloo.solo.io.HybridListener.prototype.addMatchedListeners = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.gloo.solo.io.MatchedListener, opt_index);
};


proto.gloo.solo.io.HybridListener.prototype.clearMatchedListenersList = function() {
  this.setMatchedListenersList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.MatchedListener = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gloo.solo.io.MatchedListener.repeatedFields_, proto.gloo.solo.io.MatchedListener.oneofGroups_);
};
goog.inherits(proto.gloo.solo.io.MatchedListener, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.MatchedListener.displayName = 'proto.gloo.solo.io.MatchedListener';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gloo.solo.io.MatchedListener.repeatedFields_ = [4];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.gloo.solo.io.MatchedListener.oneofGroups_ = [[2,3]];

/**
 * @enum {number}
 */
proto.gloo.solo.io.MatchedListener.ListenertypeCase = {
  LISTENERTYPE_NOT_SET: 0,
  HTTP_LISTENER: 2,
  TCP_LISTENER: 3
};

/**
 * @return {proto.gloo.solo.io.MatchedListener.ListenertypeCase}
 */
proto.gloo.solo.io.MatchedListener.prototype.getListenertypeCase = function() {
  return /** @type {proto.gloo.solo.io.MatchedListener.ListenertypeCase} */(jspb.Message.computeOneofCase(this, proto.gloo.solo.io.MatchedListener.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.MatchedListener.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.MatchedListener.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.MatchedListener} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.MatchedListener.toObject = function(includeInstance, msg) {
  var f, obj = {
    matcher: (f = msg.getMatcher()) && proto.gloo.solo.io.Matcher.toObject(includeInstance, f),
    httpListener: (f = msg.getHttpListener()) && proto.gloo.solo.io.HttpListener.toObject(includeInstance, f),
    tcpListener: (f = msg.getTcpListener()) && proto.gloo.solo.io.TcpListener.toObject(includeInstance, f),
    sslConfigurationsList: jspb.Message.toObjectList(msg.getSslConfigurationsList(),
    github_com_solo$io_solo$apis_api_gloo_gloo_v1_ssl_ssl_pb.SslConfig.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.MatchedListener}
 */
proto.gloo.solo.io.MatchedListener.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.MatchedListener;
  return proto.gloo.solo.io.MatchedListener.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.MatchedListener} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.MatchedListener}
 */
proto.gloo.solo.io.MatchedListener.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gloo.solo.io.Matcher;
      reader.readMessage(value,proto.gloo.solo.io.Matcher.deserializeBinaryFromReader);
      msg.setMatcher(value);
      break;
    case 2:
      var value = new proto.gloo.solo.io.HttpListener;
      reader.readMessage(value,proto.gloo.solo.io.HttpListener.deserializeBinaryFromReader);
      msg.setHttpListener(value);
      break;
    case 3:
      var value = new proto.gloo.solo.io.TcpListener;
      reader.readMessage(value,proto.gloo.solo.io.TcpListener.deserializeBinaryFromReader);
      msg.setTcpListener(value);
      break;
    case 4:
      var value = new github_com_solo$io_solo$apis_api_gloo_gloo_v1_ssl_ssl_pb.SslConfig;
      reader.readMessage(value,github_com_solo$io_solo$apis_api_gloo_gloo_v1_ssl_ssl_pb.SslConfig.deserializeBinaryFromReader);
      msg.addSslConfigurations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.MatchedListener.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.MatchedListener.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.MatchedListener} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.MatchedListener.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMatcher();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.gloo.solo.io.Matcher.serializeBinaryToWriter
    );
  }
  f = message.getHttpListener();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.gloo.solo.io.HttpListener.serializeBinaryToWriter
    );
  }
  f = message.getTcpListener();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.gloo.solo.io.TcpListener.serializeBinaryToWriter
    );
  }
  f = message.getSslConfigurationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      github_com_solo$io_solo$apis_api_gloo_gloo_v1_ssl_ssl_pb.SslConfig.serializeBinaryToWriter
    );
  }
};


/**
 * optional Matcher matcher = 1;
 * @return {?proto.gloo.solo.io.Matcher}
 */
proto.gloo.solo.io.MatchedListener.prototype.getMatcher = function() {
  return /** @type{?proto.gloo.solo.io.Matcher} */ (
    jspb.Message.getWrapperField(this, proto.gloo.solo.io.Matcher, 1));
};


/** @param {?proto.gloo.solo.io.Matcher|undefined} value */
proto.gloo.solo.io.MatchedListener.prototype.setMatcher = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.gloo.solo.io.MatchedListener.prototype.clearMatcher = function() {
  this.setMatcher(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.MatchedListener.prototype.hasMatcher = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional HttpListener http_listener = 2;
 * @return {?proto.gloo.solo.io.HttpListener}
 */
proto.gloo.solo.io.MatchedListener.prototype.getHttpListener = function() {
  return /** @type{?proto.gloo.solo.io.HttpListener} */ (
    jspb.Message.getWrapperField(this, proto.gloo.solo.io.HttpListener, 2));
};


/** @param {?proto.gloo.solo.io.HttpListener|undefined} value */
proto.gloo.solo.io.MatchedListener.prototype.setHttpListener = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.gloo.solo.io.MatchedListener.oneofGroups_[0], value);
};


proto.gloo.solo.io.MatchedListener.prototype.clearHttpListener = function() {
  this.setHttpListener(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.MatchedListener.prototype.hasHttpListener = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional TcpListener tcp_listener = 3;
 * @return {?proto.gloo.solo.io.TcpListener}
 */
proto.gloo.solo.io.MatchedListener.prototype.getTcpListener = function() {
  return /** @type{?proto.gloo.solo.io.TcpListener} */ (
    jspb.Message.getWrapperField(this, proto.gloo.solo.io.TcpListener, 3));
};


/** @param {?proto.gloo.solo.io.TcpListener|undefined} value */
proto.gloo.solo.io.MatchedListener.prototype.setTcpListener = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.gloo.solo.io.MatchedListener.oneofGroups_[0], value);
};


proto.gloo.solo.io.MatchedListener.prototype.clearTcpListener = function() {
  this.setTcpListener(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.MatchedListener.prototype.hasTcpListener = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated SslConfig ssl_configurations = 4;
 * @return {!Array<!proto.gloo.solo.io.SslConfig>}
 */
proto.gloo.solo.io.MatchedListener.prototype.getSslConfigurationsList = function() {
  return /** @type{!Array<!proto.gloo.solo.io.SslConfig>} */ (
    jspb.Message.getRepeatedWrapperField(this, github_com_solo$io_solo$apis_api_gloo_gloo_v1_ssl_ssl_pb.SslConfig, 4));
};


/** @param {!Array<!proto.gloo.solo.io.SslConfig>} value */
proto.gloo.solo.io.MatchedListener.prototype.setSslConfigurationsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.gloo.solo.io.SslConfig=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gloo.solo.io.SslConfig}
 */
proto.gloo.solo.io.MatchedListener.prototype.addSslConfigurations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.gloo.solo.io.SslConfig, opt_index);
};


proto.gloo.solo.io.MatchedListener.prototype.clearSslConfigurationsList = function() {
  this.setSslConfigurationsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.Matcher = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gloo.solo.io.Matcher.repeatedFields_, null);
};
goog.inherits(proto.gloo.solo.io.Matcher, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.Matcher.displayName = 'proto.gloo.solo.io.Matcher';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gloo.solo.io.Matcher.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.Matcher.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.Matcher.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.Matcher} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.Matcher.toObject = function(includeInstance, msg) {
  var f, obj = {
    sslConfig: (f = msg.getSslConfig()) && github_com_solo$io_solo$apis_api_gloo_gloo_v1_ssl_ssl_pb.SslConfig.toObject(includeInstance, f),
    sourcePrefixRangesList: jspb.Message.toObjectList(msg.getSourcePrefixRangesList(),
    github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_core_v3_address_pb.CidrRange.toObject, includeInstance),
    passthroughCipherSuitesList: jspb.Message.getRepeatedField(msg, 3)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.Matcher}
 */
proto.gloo.solo.io.Matcher.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.Matcher;
  return proto.gloo.solo.io.Matcher.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.Matcher} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.Matcher}
 */
proto.gloo.solo.io.Matcher.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_solo$apis_api_gloo_gloo_v1_ssl_ssl_pb.SslConfig;
      reader.readMessage(value,github_com_solo$io_solo$apis_api_gloo_gloo_v1_ssl_ssl_pb.SslConfig.deserializeBinaryFromReader);
      msg.setSslConfig(value);
      break;
    case 2:
      var value = new github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_core_v3_address_pb.CidrRange;
      reader.readMessage(value,github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_core_v3_address_pb.CidrRange.deserializeBinaryFromReader);
      msg.addSourcePrefixRanges(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addPassthroughCipherSuites(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.Matcher.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.Matcher.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.Matcher} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.Matcher.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSslConfig();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_solo$apis_api_gloo_gloo_v1_ssl_ssl_pb.SslConfig.serializeBinaryToWriter
    );
  }
  f = message.getSourcePrefixRangesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_core_v3_address_pb.CidrRange.serializeBinaryToWriter
    );
  }
  f = message.getPassthroughCipherSuitesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional SslConfig ssl_config = 1;
 * @return {?proto.gloo.solo.io.SslConfig}
 */
proto.gloo.solo.io.Matcher.prototype.getSslConfig = function() {
  return /** @type{?proto.gloo.solo.io.SslConfig} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$apis_api_gloo_gloo_v1_ssl_ssl_pb.SslConfig, 1));
};


/** @param {?proto.gloo.solo.io.SslConfig|undefined} value */
proto.gloo.solo.io.Matcher.prototype.setSslConfig = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.gloo.solo.io.Matcher.prototype.clearSslConfig = function() {
  this.setSslConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.Matcher.prototype.hasSslConfig = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated solo.io.envoy.config.core.v3.CidrRange source_prefix_ranges = 2;
 * @return {!Array<!proto.solo.io.envoy.config.core.v3.CidrRange>}
 */
proto.gloo.solo.io.Matcher.prototype.getSourcePrefixRangesList = function() {
  return /** @type{!Array<!proto.solo.io.envoy.config.core.v3.CidrRange>} */ (
    jspb.Message.getRepeatedWrapperField(this, github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_core_v3_address_pb.CidrRange, 2));
};


/** @param {!Array<!proto.solo.io.envoy.config.core.v3.CidrRange>} value */
proto.gloo.solo.io.Matcher.prototype.setSourcePrefixRangesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.solo.io.envoy.config.core.v3.CidrRange=} opt_value
 * @param {number=} opt_index
 * @return {!proto.solo.io.envoy.config.core.v3.CidrRange}
 */
proto.gloo.solo.io.Matcher.prototype.addSourcePrefixRanges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.solo.io.envoy.config.core.v3.CidrRange, opt_index);
};


proto.gloo.solo.io.Matcher.prototype.clearSourcePrefixRangesList = function() {
  this.setSourcePrefixRangesList([]);
};


/**
 * repeated string passthrough_cipher_suites = 3;
 * @return {!Array<string>}
 */
proto.gloo.solo.io.Matcher.prototype.getPassthroughCipherSuitesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array<string>} value */
proto.gloo.solo.io.Matcher.prototype.setPassthroughCipherSuitesList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.gloo.solo.io.Matcher.prototype.addPassthroughCipherSuites = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.gloo.solo.io.Matcher.prototype.clearPassthroughCipherSuitesList = function() {
  this.setPassthroughCipherSuitesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.AggregateListener = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gloo.solo.io.AggregateListener.repeatedFields_, null);
};
goog.inherits(proto.gloo.solo.io.AggregateListener, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.AggregateListener.displayName = 'proto.gloo.solo.io.AggregateListener';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gloo.solo.io.AggregateListener.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.AggregateListener.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.AggregateListener.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.AggregateListener} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.AggregateListener.toObject = function(includeInstance, msg) {
  var f, obj = {
    httpResources: (f = msg.getHttpResources()) && proto.gloo.solo.io.AggregateListener.HttpResources.toObject(includeInstance, f),
    httpFilterChainsList: jspb.Message.toObjectList(msg.getHttpFilterChainsList(),
    proto.gloo.solo.io.AggregateListener.HttpFilterChain.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.AggregateListener}
 */
proto.gloo.solo.io.AggregateListener.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.AggregateListener;
  return proto.gloo.solo.io.AggregateListener.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.AggregateListener} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.AggregateListener}
 */
proto.gloo.solo.io.AggregateListener.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gloo.solo.io.AggregateListener.HttpResources;
      reader.readMessage(value,proto.gloo.solo.io.AggregateListener.HttpResources.deserializeBinaryFromReader);
      msg.setHttpResources(value);
      break;
    case 2:
      var value = new proto.gloo.solo.io.AggregateListener.HttpFilterChain;
      reader.readMessage(value,proto.gloo.solo.io.AggregateListener.HttpFilterChain.deserializeBinaryFromReader);
      msg.addHttpFilterChains(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.AggregateListener.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.AggregateListener.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.AggregateListener} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.AggregateListener.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHttpResources();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.gloo.solo.io.AggregateListener.HttpResources.serializeBinaryToWriter
    );
  }
  f = message.getHttpFilterChainsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.gloo.solo.io.AggregateListener.HttpFilterChain.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.AggregateListener.HttpResources = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gloo.solo.io.AggregateListener.HttpResources, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.AggregateListener.HttpResources.displayName = 'proto.gloo.solo.io.AggregateListener.HttpResources';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.AggregateListener.HttpResources.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.AggregateListener.HttpResources.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.AggregateListener.HttpResources} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.AggregateListener.HttpResources.toObject = function(includeInstance, msg) {
  var f, obj = {
    virtualHostsMap: (f = msg.getVirtualHostsMap()) ? f.toObject(includeInstance, proto.gloo.solo.io.VirtualHost.toObject) : [],
    httpOptionsMap: (f = msg.getHttpOptionsMap()) ? f.toObject(includeInstance, proto.gloo.solo.io.HttpListenerOptions.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.AggregateListener.HttpResources}
 */
proto.gloo.solo.io.AggregateListener.HttpResources.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.AggregateListener.HttpResources;
  return proto.gloo.solo.io.AggregateListener.HttpResources.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.AggregateListener.HttpResources} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.AggregateListener.HttpResources}
 */
proto.gloo.solo.io.AggregateListener.HttpResources.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getVirtualHostsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.gloo.solo.io.VirtualHost.deserializeBinaryFromReader, "");
         });
      break;
    case 2:
      var value = msg.getHttpOptionsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.gloo.solo.io.HttpListenerOptions.deserializeBinaryFromReader, "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.AggregateListener.HttpResources.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.AggregateListener.HttpResources.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.AggregateListener.HttpResources} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.AggregateListener.HttpResources.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVirtualHostsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.gloo.solo.io.VirtualHost.serializeBinaryToWriter);
  }
  f = message.getHttpOptionsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.gloo.solo.io.HttpListenerOptions.serializeBinaryToWriter);
  }
};


/**
 * map<string, VirtualHost> virtual_hosts = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.gloo.solo.io.VirtualHost>}
 */
proto.gloo.solo.io.AggregateListener.HttpResources.prototype.getVirtualHostsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.gloo.solo.io.VirtualHost>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.gloo.solo.io.VirtualHost));
};


proto.gloo.solo.io.AggregateListener.HttpResources.prototype.clearVirtualHostsMap = function() {
  this.getVirtualHostsMap().clear();
};


/**
 * map<string, HttpListenerOptions> http_options = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.gloo.solo.io.HttpListenerOptions>}
 */
proto.gloo.solo.io.AggregateListener.HttpResources.prototype.getHttpOptionsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.gloo.solo.io.HttpListenerOptions>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.gloo.solo.io.HttpListenerOptions));
};


proto.gloo.solo.io.AggregateListener.HttpResources.prototype.clearHttpOptionsMap = function() {
  this.getHttpOptionsMap().clear();
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.AggregateListener.HttpFilterChain = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gloo.solo.io.AggregateListener.HttpFilterChain.repeatedFields_, null);
};
goog.inherits(proto.gloo.solo.io.AggregateListener.HttpFilterChain, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.AggregateListener.HttpFilterChain.displayName = 'proto.gloo.solo.io.AggregateListener.HttpFilterChain';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gloo.solo.io.AggregateListener.HttpFilterChain.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.AggregateListener.HttpFilterChain.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.AggregateListener.HttpFilterChain.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.AggregateListener.HttpFilterChain} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.AggregateListener.HttpFilterChain.toObject = function(includeInstance, msg) {
  var f, obj = {
    matcher: (f = msg.getMatcher()) && proto.gloo.solo.io.Matcher.toObject(includeInstance, f),
    httpOptionsRef: jspb.Message.getFieldWithDefault(msg, 2, ""),
    virtualHostRefsList: jspb.Message.getRepeatedField(msg, 3)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.AggregateListener.HttpFilterChain}
 */
proto.gloo.solo.io.AggregateListener.HttpFilterChain.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.AggregateListener.HttpFilterChain;
  return proto.gloo.solo.io.AggregateListener.HttpFilterChain.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.AggregateListener.HttpFilterChain} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.AggregateListener.HttpFilterChain}
 */
proto.gloo.solo.io.AggregateListener.HttpFilterChain.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gloo.solo.io.Matcher;
      reader.readMessage(value,proto.gloo.solo.io.Matcher.deserializeBinaryFromReader);
      msg.setMatcher(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHttpOptionsRef(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addVirtualHostRefs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.AggregateListener.HttpFilterChain.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.AggregateListener.HttpFilterChain.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.AggregateListener.HttpFilterChain} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.AggregateListener.HttpFilterChain.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMatcher();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.gloo.solo.io.Matcher.serializeBinaryToWriter
    );
  }
  f = message.getHttpOptionsRef();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getVirtualHostRefsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional Matcher matcher = 1;
 * @return {?proto.gloo.solo.io.Matcher}
 */
proto.gloo.solo.io.AggregateListener.HttpFilterChain.prototype.getMatcher = function() {
  return /** @type{?proto.gloo.solo.io.Matcher} */ (
    jspb.Message.getWrapperField(this, proto.gloo.solo.io.Matcher, 1));
};


/** @param {?proto.gloo.solo.io.Matcher|undefined} value */
proto.gloo.solo.io.AggregateListener.HttpFilterChain.prototype.setMatcher = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.gloo.solo.io.AggregateListener.HttpFilterChain.prototype.clearMatcher = function() {
  this.setMatcher(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.AggregateListener.HttpFilterChain.prototype.hasMatcher = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string http_options_ref = 2;
 * @return {string}
 */
proto.gloo.solo.io.AggregateListener.HttpFilterChain.prototype.getHttpOptionsRef = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.gloo.solo.io.AggregateListener.HttpFilterChain.prototype.setHttpOptionsRef = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string virtual_host_refs = 3;
 * @return {!Array<string>}
 */
proto.gloo.solo.io.AggregateListener.HttpFilterChain.prototype.getVirtualHostRefsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array<string>} value */
proto.gloo.solo.io.AggregateListener.HttpFilterChain.prototype.setVirtualHostRefsList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.gloo.solo.io.AggregateListener.HttpFilterChain.prototype.addVirtualHostRefs = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.gloo.solo.io.AggregateListener.HttpFilterChain.prototype.clearVirtualHostRefsList = function() {
  this.setVirtualHostRefsList([]);
};


/**
 * optional HttpResources http_resources = 1;
 * @return {?proto.gloo.solo.io.AggregateListener.HttpResources}
 */
proto.gloo.solo.io.AggregateListener.prototype.getHttpResources = function() {
  return /** @type{?proto.gloo.solo.io.AggregateListener.HttpResources} */ (
    jspb.Message.getWrapperField(this, proto.gloo.solo.io.AggregateListener.HttpResources, 1));
};


/** @param {?proto.gloo.solo.io.AggregateListener.HttpResources|undefined} value */
proto.gloo.solo.io.AggregateListener.prototype.setHttpResources = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.gloo.solo.io.AggregateListener.prototype.clearHttpResources = function() {
  this.setHttpResources(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.AggregateListener.prototype.hasHttpResources = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated HttpFilterChain http_filter_chains = 2;
 * @return {!Array<!proto.gloo.solo.io.AggregateListener.HttpFilterChain>}
 */
proto.gloo.solo.io.AggregateListener.prototype.getHttpFilterChainsList = function() {
  return /** @type{!Array<!proto.gloo.solo.io.AggregateListener.HttpFilterChain>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gloo.solo.io.AggregateListener.HttpFilterChain, 2));
};


/** @param {!Array<!proto.gloo.solo.io.AggregateListener.HttpFilterChain>} value */
proto.gloo.solo.io.AggregateListener.prototype.setHttpFilterChainsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.gloo.solo.io.AggregateListener.HttpFilterChain=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gloo.solo.io.AggregateListener.HttpFilterChain}
 */
proto.gloo.solo.io.AggregateListener.prototype.addHttpFilterChains = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.gloo.solo.io.AggregateListener.HttpFilterChain, opt_index);
};


proto.gloo.solo.io.AggregateListener.prototype.clearHttpFilterChainsList = function() {
  this.setHttpFilterChainsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.VirtualHost = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gloo.solo.io.VirtualHost.repeatedFields_, proto.gloo.solo.io.VirtualHost.oneofGroups_);
};
goog.inherits(proto.gloo.solo.io.VirtualHost, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.VirtualHost.displayName = 'proto.gloo.solo.io.VirtualHost';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gloo.solo.io.VirtualHost.repeatedFields_ = [2,3];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.gloo.solo.io.VirtualHost.oneofGroups_ = [[6,7]];

/**
 * @enum {number}
 */
proto.gloo.solo.io.VirtualHost.OpaqueMetadataCase = {
  OPAQUE_METADATA_NOT_SET: 0,
  METADATA: 6,
  METADATA_STATIC: 7
};

/**
 * @return {proto.gloo.solo.io.VirtualHost.OpaqueMetadataCase}
 */
proto.gloo.solo.io.VirtualHost.prototype.getOpaqueMetadataCase = function() {
  return /** @type {proto.gloo.solo.io.VirtualHost.OpaqueMetadataCase} */(jspb.Message.computeOneofCase(this, proto.gloo.solo.io.VirtualHost.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.VirtualHost.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.VirtualHost.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.VirtualHost} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.VirtualHost.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    domainsList: jspb.Message.getRepeatedField(msg, 2),
    routesList: jspb.Message.toObjectList(msg.getRoutesList(),
    proto.gloo.solo.io.Route.toObject, includeInstance),
    options: (f = msg.getOptions()) && github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.VirtualHostOptions.toObject(includeInstance, f),
    metadata: (f = msg.getMetadata()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
    metadataStatic: (f = msg.getMetadataStatic()) && proto.gloo.solo.io.SourceMetadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.VirtualHost}
 */
proto.gloo.solo.io.VirtualHost.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.VirtualHost;
  return proto.gloo.solo.io.VirtualHost.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.VirtualHost} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.VirtualHost}
 */
proto.gloo.solo.io.VirtualHost.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addDomains(value);
      break;
    case 3:
      var value = new proto.gloo.solo.io.Route;
      reader.readMessage(value,proto.gloo.solo.io.Route.deserializeBinaryFromReader);
      msg.addRoutes(value);
      break;
    case 4:
      var value = new github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.VirtualHostOptions;
      reader.readMessage(value,github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.VirtualHostOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    case 6:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 7:
      var value = new proto.gloo.solo.io.SourceMetadata;
      reader.readMessage(value,proto.gloo.solo.io.SourceMetadata.deserializeBinaryFromReader);
      msg.setMetadataStatic(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.VirtualHost.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.VirtualHost.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.VirtualHost} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.VirtualHost.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDomainsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getRoutesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.gloo.solo.io.Route.serializeBinaryToWriter
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.VirtualHostOptions.serializeBinaryToWriter
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getMetadataStatic();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.gloo.solo.io.SourceMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.gloo.solo.io.VirtualHost.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.gloo.solo.io.VirtualHost.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string domains = 2;
 * @return {!Array<string>}
 */
proto.gloo.solo.io.VirtualHost.prototype.getDomainsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array<string>} value */
proto.gloo.solo.io.VirtualHost.prototype.setDomainsList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.gloo.solo.io.VirtualHost.prototype.addDomains = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.gloo.solo.io.VirtualHost.prototype.clearDomainsList = function() {
  this.setDomainsList([]);
};


/**
 * repeated Route routes = 3;
 * @return {!Array<!proto.gloo.solo.io.Route>}
 */
proto.gloo.solo.io.VirtualHost.prototype.getRoutesList = function() {
  return /** @type{!Array<!proto.gloo.solo.io.Route>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gloo.solo.io.Route, 3));
};


/** @param {!Array<!proto.gloo.solo.io.Route>} value */
proto.gloo.solo.io.VirtualHost.prototype.setRoutesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.gloo.solo.io.Route=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gloo.solo.io.Route}
 */
proto.gloo.solo.io.VirtualHost.prototype.addRoutes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.gloo.solo.io.Route, opt_index);
};


proto.gloo.solo.io.VirtualHost.prototype.clearRoutesList = function() {
  this.setRoutesList([]);
};


/**
 * optional VirtualHostOptions options = 4;
 * @return {?proto.gloo.solo.io.VirtualHostOptions}
 */
proto.gloo.solo.io.VirtualHost.prototype.getOptions = function() {
  return /** @type{?proto.gloo.solo.io.VirtualHostOptions} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.VirtualHostOptions, 4));
};


/** @param {?proto.gloo.solo.io.VirtualHostOptions|undefined} value */
proto.gloo.solo.io.VirtualHost.prototype.setOptions = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.gloo.solo.io.VirtualHost.prototype.clearOptions = function() {
  this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.VirtualHost.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.Struct metadata = 6;
 * @return {?proto.google.protobuf.Struct}
 */
proto.gloo.solo.io.VirtualHost.prototype.getMetadata = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 6));
};


/** @param {?proto.google.protobuf.Struct|undefined} value */
proto.gloo.solo.io.VirtualHost.prototype.setMetadata = function(value) {
  jspb.Message.setOneofWrapperField(this, 6, proto.gloo.solo.io.VirtualHost.oneofGroups_[0], value);
};


proto.gloo.solo.io.VirtualHost.prototype.clearMetadata = function() {
  this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.VirtualHost.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional SourceMetadata metadata_static = 7;
 * @return {?proto.gloo.solo.io.SourceMetadata}
 */
proto.gloo.solo.io.VirtualHost.prototype.getMetadataStatic = function() {
  return /** @type{?proto.gloo.solo.io.SourceMetadata} */ (
    jspb.Message.getWrapperField(this, proto.gloo.solo.io.SourceMetadata, 7));
};


/** @param {?proto.gloo.solo.io.SourceMetadata|undefined} value */
proto.gloo.solo.io.VirtualHost.prototype.setMetadataStatic = function(value) {
  jspb.Message.setOneofWrapperField(this, 7, proto.gloo.solo.io.VirtualHost.oneofGroups_[0], value);
};


proto.gloo.solo.io.VirtualHost.prototype.clearMetadataStatic = function() {
  this.setMetadataStatic(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.VirtualHost.prototype.hasMetadataStatic = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.Route = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gloo.solo.io.Route.repeatedFields_, proto.gloo.solo.io.Route.oneofGroups_);
};
goog.inherits(proto.gloo.solo.io.Route, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.Route.displayName = 'proto.gloo.solo.io.Route';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gloo.solo.io.Route.repeatedFields_ = [1];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.gloo.solo.io.Route.oneofGroups_ = [[2,3,4,8],[6,9]];

/**
 * @enum {number}
 */
proto.gloo.solo.io.Route.ActionCase = {
  ACTION_NOT_SET: 0,
  ROUTE_ACTION: 2,
  REDIRECT_ACTION: 3,
  DIRECT_RESPONSE_ACTION: 4,
  GRAPHQL_API_REF: 8
};

/**
 * @return {proto.gloo.solo.io.Route.ActionCase}
 */
proto.gloo.solo.io.Route.prototype.getActionCase = function() {
  return /** @type {proto.gloo.solo.io.Route.ActionCase} */(jspb.Message.computeOneofCase(this, proto.gloo.solo.io.Route.oneofGroups_[0]));
};

/**
 * @enum {number}
 */
proto.gloo.solo.io.Route.OpaqueMetadataCase = {
  OPAQUE_METADATA_NOT_SET: 0,
  METADATA: 6,
  METADATA_STATIC: 9
};

/**
 * @return {proto.gloo.solo.io.Route.OpaqueMetadataCase}
 */
proto.gloo.solo.io.Route.prototype.getOpaqueMetadataCase = function() {
  return /** @type {proto.gloo.solo.io.Route.OpaqueMetadataCase} */(jspb.Message.computeOneofCase(this, proto.gloo.solo.io.Route.oneofGroups_[1]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.Route.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.Route.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.Route} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.Route.toObject = function(includeInstance, msg) {
  var f, obj = {
    matchersList: jspb.Message.toObjectList(msg.getMatchersList(),
    github_com_solo$io_solo$apis_api_gloo_gloo_v1_core_matchers_matchers_pb.Matcher.toObject, includeInstance),
    routeAction: (f = msg.getRouteAction()) && proto.gloo.solo.io.RouteAction.toObject(includeInstance, f),
    redirectAction: (f = msg.getRedirectAction()) && proto.gloo.solo.io.RedirectAction.toObject(includeInstance, f),
    directResponseAction: (f = msg.getDirectResponseAction()) && proto.gloo.solo.io.DirectResponseAction.toObject(includeInstance, f),
    graphqlApiRef: (f = msg.getGraphqlApiRef()) && github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.toObject(includeInstance, f),
    options: (f = msg.getOptions()) && github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.RouteOptions.toObject(includeInstance, f),
    metadata: (f = msg.getMetadata()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
    metadataStatic: (f = msg.getMetadataStatic()) && proto.gloo.solo.io.SourceMetadata.toObject(includeInstance, f),
    name: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.Route}
 */
proto.gloo.solo.io.Route.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.Route;
  return proto.gloo.solo.io.Route.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.Route} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.Route}
 */
proto.gloo.solo.io.Route.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_solo$apis_api_gloo_gloo_v1_core_matchers_matchers_pb.Matcher;
      reader.readMessage(value,github_com_solo$io_solo$apis_api_gloo_gloo_v1_core_matchers_matchers_pb.Matcher.deserializeBinaryFromReader);
      msg.addMatchers(value);
      break;
    case 2:
      var value = new proto.gloo.solo.io.RouteAction;
      reader.readMessage(value,proto.gloo.solo.io.RouteAction.deserializeBinaryFromReader);
      msg.setRouteAction(value);
      break;
    case 3:
      var value = new proto.gloo.solo.io.RedirectAction;
      reader.readMessage(value,proto.gloo.solo.io.RedirectAction.deserializeBinaryFromReader);
      msg.setRedirectAction(value);
      break;
    case 4:
      var value = new proto.gloo.solo.io.DirectResponseAction;
      reader.readMessage(value,proto.gloo.solo.io.DirectResponseAction.deserializeBinaryFromReader);
      msg.setDirectResponseAction(value);
      break;
    case 8:
      var value = new github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef;
      reader.readMessage(value,github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.deserializeBinaryFromReader);
      msg.setGraphqlApiRef(value);
      break;
    case 5:
      var value = new github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.RouteOptions;
      reader.readMessage(value,github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.RouteOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    case 6:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 9:
      var value = new proto.gloo.solo.io.SourceMetadata;
      reader.readMessage(value,proto.gloo.solo.io.SourceMetadata.deserializeBinaryFromReader);
      msg.setMetadataStatic(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.Route.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.Route.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.Route} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.Route.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMatchersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      github_com_solo$io_solo$apis_api_gloo_gloo_v1_core_matchers_matchers_pb.Matcher.serializeBinaryToWriter
    );
  }
  f = message.getRouteAction();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.gloo.solo.io.RouteAction.serializeBinaryToWriter
    );
  }
  f = message.getRedirectAction();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.gloo.solo.io.RedirectAction.serializeBinaryToWriter
    );
  }
  f = message.getDirectResponseAction();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.gloo.solo.io.DirectResponseAction.serializeBinaryToWriter
    );
  }
  f = message.getGraphqlApiRef();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.serializeBinaryToWriter
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.RouteOptions.serializeBinaryToWriter
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getMetadataStatic();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.gloo.solo.io.SourceMetadata.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * repeated matchers.core.gloo.solo.io.Matcher matchers = 1;
 * @return {!Array<!proto.matchers.core.gloo.solo.io.Matcher>}
 */
proto.gloo.solo.io.Route.prototype.getMatchersList = function() {
  return /** @type{!Array<!proto.matchers.core.gloo.solo.io.Matcher>} */ (
    jspb.Message.getRepeatedWrapperField(this, github_com_solo$io_solo$apis_api_gloo_gloo_v1_core_matchers_matchers_pb.Matcher, 1));
};


/** @param {!Array<!proto.matchers.core.gloo.solo.io.Matcher>} value */
proto.gloo.solo.io.Route.prototype.setMatchersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.matchers.core.gloo.solo.io.Matcher=} opt_value
 * @param {number=} opt_index
 * @return {!proto.matchers.core.gloo.solo.io.Matcher}
 */
proto.gloo.solo.io.Route.prototype.addMatchers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.matchers.core.gloo.solo.io.Matcher, opt_index);
};


proto.gloo.solo.io.Route.prototype.clearMatchersList = function() {
  this.setMatchersList([]);
};


/**
 * optional RouteAction route_action = 2;
 * @return {?proto.gloo.solo.io.RouteAction}
 */
proto.gloo.solo.io.Route.prototype.getRouteAction = function() {
  return /** @type{?proto.gloo.solo.io.RouteAction} */ (
    jspb.Message.getWrapperField(this, proto.gloo.solo.io.RouteAction, 2));
};


/** @param {?proto.gloo.solo.io.RouteAction|undefined} value */
proto.gloo.solo.io.Route.prototype.setRouteAction = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.gloo.solo.io.Route.oneofGroups_[0], value);
};


proto.gloo.solo.io.Route.prototype.clearRouteAction = function() {
  this.setRouteAction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.Route.prototype.hasRouteAction = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional RedirectAction redirect_action = 3;
 * @return {?proto.gloo.solo.io.RedirectAction}
 */
proto.gloo.solo.io.Route.prototype.getRedirectAction = function() {
  return /** @type{?proto.gloo.solo.io.RedirectAction} */ (
    jspb.Message.getWrapperField(this, proto.gloo.solo.io.RedirectAction, 3));
};


/** @param {?proto.gloo.solo.io.RedirectAction|undefined} value */
proto.gloo.solo.io.Route.prototype.setRedirectAction = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.gloo.solo.io.Route.oneofGroups_[0], value);
};


proto.gloo.solo.io.Route.prototype.clearRedirectAction = function() {
  this.setRedirectAction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.Route.prototype.hasRedirectAction = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional DirectResponseAction direct_response_action = 4;
 * @return {?proto.gloo.solo.io.DirectResponseAction}
 */
proto.gloo.solo.io.Route.prototype.getDirectResponseAction = function() {
  return /** @type{?proto.gloo.solo.io.DirectResponseAction} */ (
    jspb.Message.getWrapperField(this, proto.gloo.solo.io.DirectResponseAction, 4));
};


/** @param {?proto.gloo.solo.io.DirectResponseAction|undefined} value */
proto.gloo.solo.io.Route.prototype.setDirectResponseAction = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.gloo.solo.io.Route.oneofGroups_[0], value);
};


proto.gloo.solo.io.Route.prototype.clearDirectResponseAction = function() {
  this.setDirectResponseAction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.Route.prototype.hasDirectResponseAction = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional core.solo.io.ResourceRef graphql_api_ref = 8;
 * @return {?proto.core.solo.io.ResourceRef}
 */
proto.gloo.solo.io.Route.prototype.getGraphqlApiRef = function() {
  return /** @type{?proto.core.solo.io.ResourceRef} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef, 8));
};


/** @param {?proto.core.solo.io.ResourceRef|undefined} value */
proto.gloo.solo.io.Route.prototype.setGraphqlApiRef = function(value) {
  jspb.Message.setOneofWrapperField(this, 8, proto.gloo.solo.io.Route.oneofGroups_[0], value);
};


proto.gloo.solo.io.Route.prototype.clearGraphqlApiRef = function() {
  this.setGraphqlApiRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.Route.prototype.hasGraphqlApiRef = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional RouteOptions options = 5;
 * @return {?proto.gloo.solo.io.RouteOptions}
 */
proto.gloo.solo.io.Route.prototype.getOptions = function() {
  return /** @type{?proto.gloo.solo.io.RouteOptions} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.RouteOptions, 5));
};


/** @param {?proto.gloo.solo.io.RouteOptions|undefined} value */
proto.gloo.solo.io.Route.prototype.setOptions = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.gloo.solo.io.Route.prototype.clearOptions = function() {
  this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.Route.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.Struct metadata = 6;
 * @return {?proto.google.protobuf.Struct}
 */
proto.gloo.solo.io.Route.prototype.getMetadata = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 6));
};


/** @param {?proto.google.protobuf.Struct|undefined} value */
proto.gloo.solo.io.Route.prototype.setMetadata = function(value) {
  jspb.Message.setOneofWrapperField(this, 6, proto.gloo.solo.io.Route.oneofGroups_[1], value);
};


proto.gloo.solo.io.Route.prototype.clearMetadata = function() {
  this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.Route.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional SourceMetadata metadata_static = 9;
 * @return {?proto.gloo.solo.io.SourceMetadata}
 */
proto.gloo.solo.io.Route.prototype.getMetadataStatic = function() {
  return /** @type{?proto.gloo.solo.io.SourceMetadata} */ (
    jspb.Message.getWrapperField(this, proto.gloo.solo.io.SourceMetadata, 9));
};


/** @param {?proto.gloo.solo.io.SourceMetadata|undefined} value */
proto.gloo.solo.io.Route.prototype.setMetadataStatic = function(value) {
  jspb.Message.setOneofWrapperField(this, 9, proto.gloo.solo.io.Route.oneofGroups_[1], value);
};


proto.gloo.solo.io.Route.prototype.clearMetadataStatic = function() {
  this.setMetadataStatic(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.Route.prototype.hasMetadataStatic = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string name = 7;
 * @return {string}
 */
proto.gloo.solo.io.Route.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.gloo.solo.io.Route.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.RouteAction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.gloo.solo.io.RouteAction.oneofGroups_);
};
goog.inherits(proto.gloo.solo.io.RouteAction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.RouteAction.displayName = 'proto.gloo.solo.io.RouteAction';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.gloo.solo.io.RouteAction.oneofGroups_ = [[1,2,3,4,5]];

/**
 * @enum {number}
 */
proto.gloo.solo.io.RouteAction.DestinationCase = {
  DESTINATION_NOT_SET: 0,
  SINGLE: 1,
  MULTI: 2,
  UPSTREAM_GROUP: 3,
  CLUSTER_HEADER: 4,
  DYNAMIC_FORWARD_PROXY: 5
};

/**
 * @return {proto.gloo.solo.io.RouteAction.DestinationCase}
 */
proto.gloo.solo.io.RouteAction.prototype.getDestinationCase = function() {
  return /** @type {proto.gloo.solo.io.RouteAction.DestinationCase} */(jspb.Message.computeOneofCase(this, proto.gloo.solo.io.RouteAction.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.RouteAction.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.RouteAction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.RouteAction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.RouteAction.toObject = function(includeInstance, msg) {
  var f, obj = {
    single: (f = msg.getSingle()) && proto.gloo.solo.io.Destination.toObject(includeInstance, f),
    multi: (f = msg.getMulti()) && proto.gloo.solo.io.MultiDestination.toObject(includeInstance, f),
    upstreamGroup: (f = msg.getUpstreamGroup()) && github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.toObject(includeInstance, f),
    clusterHeader: jspb.Message.getFieldWithDefault(msg, 4, ""),
    dynamicForwardProxy: (f = msg.getDynamicForwardProxy()) && github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_dynamic_forward_proxy_dynamic_forward_proxy_pb.PerRouteConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.RouteAction}
 */
proto.gloo.solo.io.RouteAction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.RouteAction;
  return proto.gloo.solo.io.RouteAction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.RouteAction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.RouteAction}
 */
proto.gloo.solo.io.RouteAction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gloo.solo.io.Destination;
      reader.readMessage(value,proto.gloo.solo.io.Destination.deserializeBinaryFromReader);
      msg.setSingle(value);
      break;
    case 2:
      var value = new proto.gloo.solo.io.MultiDestination;
      reader.readMessage(value,proto.gloo.solo.io.MultiDestination.deserializeBinaryFromReader);
      msg.setMulti(value);
      break;
    case 3:
      var value = new github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef;
      reader.readMessage(value,github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.deserializeBinaryFromReader);
      msg.setUpstreamGroup(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClusterHeader(value);
      break;
    case 5:
      var value = new github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_dynamic_forward_proxy_dynamic_forward_proxy_pb.PerRouteConfig;
      reader.readMessage(value,github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_dynamic_forward_proxy_dynamic_forward_proxy_pb.PerRouteConfig.deserializeBinaryFromReader);
      msg.setDynamicForwardProxy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.RouteAction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.RouteAction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.RouteAction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.RouteAction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSingle();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.gloo.solo.io.Destination.serializeBinaryToWriter
    );
  }
  f = message.getMulti();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.gloo.solo.io.MultiDestination.serializeBinaryToWriter
    );
  }
  f = message.getUpstreamGroup();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDynamicForwardProxy();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_dynamic_forward_proxy_dynamic_forward_proxy_pb.PerRouteConfig.serializeBinaryToWriter
    );
  }
};


/**
 * optional Destination single = 1;
 * @return {?proto.gloo.solo.io.Destination}
 */
proto.gloo.solo.io.RouteAction.prototype.getSingle = function() {
  return /** @type{?proto.gloo.solo.io.Destination} */ (
    jspb.Message.getWrapperField(this, proto.gloo.solo.io.Destination, 1));
};


/** @param {?proto.gloo.solo.io.Destination|undefined} value */
proto.gloo.solo.io.RouteAction.prototype.setSingle = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.gloo.solo.io.RouteAction.oneofGroups_[0], value);
};


proto.gloo.solo.io.RouteAction.prototype.clearSingle = function() {
  this.setSingle(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.RouteAction.prototype.hasSingle = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional MultiDestination multi = 2;
 * @return {?proto.gloo.solo.io.MultiDestination}
 */
proto.gloo.solo.io.RouteAction.prototype.getMulti = function() {
  return /** @type{?proto.gloo.solo.io.MultiDestination} */ (
    jspb.Message.getWrapperField(this, proto.gloo.solo.io.MultiDestination, 2));
};


/** @param {?proto.gloo.solo.io.MultiDestination|undefined} value */
proto.gloo.solo.io.RouteAction.prototype.setMulti = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.gloo.solo.io.RouteAction.oneofGroups_[0], value);
};


proto.gloo.solo.io.RouteAction.prototype.clearMulti = function() {
  this.setMulti(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.RouteAction.prototype.hasMulti = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional core.solo.io.ResourceRef upstream_group = 3;
 * @return {?proto.core.solo.io.ResourceRef}
 */
proto.gloo.solo.io.RouteAction.prototype.getUpstreamGroup = function() {
  return /** @type{?proto.core.solo.io.ResourceRef} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef, 3));
};


/** @param {?proto.core.solo.io.ResourceRef|undefined} value */
proto.gloo.solo.io.RouteAction.prototype.setUpstreamGroup = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.gloo.solo.io.RouteAction.oneofGroups_[0], value);
};


proto.gloo.solo.io.RouteAction.prototype.clearUpstreamGroup = function() {
  this.setUpstreamGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.RouteAction.prototype.hasUpstreamGroup = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string cluster_header = 4;
 * @return {string}
 */
proto.gloo.solo.io.RouteAction.prototype.getClusterHeader = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.gloo.solo.io.RouteAction.prototype.setClusterHeader = function(value) {
  jspb.Message.setOneofField(this, 4, proto.gloo.solo.io.RouteAction.oneofGroups_[0], value);
};


proto.gloo.solo.io.RouteAction.prototype.clearClusterHeader = function() {
  jspb.Message.setOneofField(this, 4, proto.gloo.solo.io.RouteAction.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.RouteAction.prototype.hasClusterHeader = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional dfp.options.gloo.solo.io.PerRouteConfig dynamic_forward_proxy = 5;
 * @return {?proto.dfp.options.gloo.solo.io.PerRouteConfig}
 */
proto.gloo.solo.io.RouteAction.prototype.getDynamicForwardProxy = function() {
  return /** @type{?proto.dfp.options.gloo.solo.io.PerRouteConfig} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_dynamic_forward_proxy_dynamic_forward_proxy_pb.PerRouteConfig, 5));
};


/** @param {?proto.dfp.options.gloo.solo.io.PerRouteConfig|undefined} value */
proto.gloo.solo.io.RouteAction.prototype.setDynamicForwardProxy = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.gloo.solo.io.RouteAction.oneofGroups_[0], value);
};


proto.gloo.solo.io.RouteAction.prototype.clearDynamicForwardProxy = function() {
  this.setDynamicForwardProxy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.RouteAction.prototype.hasDynamicForwardProxy = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.Destination = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.gloo.solo.io.Destination.oneofGroups_);
};
goog.inherits(proto.gloo.solo.io.Destination, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.Destination.displayName = 'proto.gloo.solo.io.Destination';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.gloo.solo.io.Destination.oneofGroups_ = [[10,11,12]];

/**
 * @enum {number}
 */
proto.gloo.solo.io.Destination.DestinationTypeCase = {
  DESTINATION_TYPE_NOT_SET: 0,
  UPSTREAM: 10,
  KUBE: 11,
  CONSUL: 12
};

/**
 * @return {proto.gloo.solo.io.Destination.DestinationTypeCase}
 */
proto.gloo.solo.io.Destination.prototype.getDestinationTypeCase = function() {
  return /** @type {proto.gloo.solo.io.Destination.DestinationTypeCase} */(jspb.Message.computeOneofCase(this, proto.gloo.solo.io.Destination.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.Destination.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.Destination.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.Destination} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.Destination.toObject = function(includeInstance, msg) {
  var f, obj = {
    upstream: (f = msg.getUpstream()) && github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.toObject(includeInstance, f),
    kube: (f = msg.getKube()) && proto.gloo.solo.io.KubernetesServiceDestination.toObject(includeInstance, f),
    consul: (f = msg.getConsul()) && proto.gloo.solo.io.ConsulServiceDestination.toObject(includeInstance, f),
    destinationSpec: (f = msg.getDestinationSpec()) && github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.DestinationSpec.toObject(includeInstance, f),
    subset: (f = msg.getSubset()) && github_com_solo$io_solo$apis_api_gloo_gloo_v1_subset_pb.Subset.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.Destination}
 */
proto.gloo.solo.io.Destination.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.Destination;
  return proto.gloo.solo.io.Destination.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.Destination} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.Destination}
 */
proto.gloo.solo.io.Destination.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = new github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef;
      reader.readMessage(value,github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.deserializeBinaryFromReader);
      msg.setUpstream(value);
      break;
    case 11:
      var value = new proto.gloo.solo.io.KubernetesServiceDestination;
      reader.readMessage(value,proto.gloo.solo.io.KubernetesServiceDestination.deserializeBinaryFromReader);
      msg.setKube(value);
      break;
    case 12:
      var value = new proto.gloo.solo.io.ConsulServiceDestination;
      reader.readMessage(value,proto.gloo.solo.io.ConsulServiceDestination.deserializeBinaryFromReader);
      msg.setConsul(value);
      break;
    case 2:
      var value = new github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.DestinationSpec;
      reader.readMessage(value,github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.DestinationSpec.deserializeBinaryFromReader);
      msg.setDestinationSpec(value);
      break;
    case 3:
      var value = new github_com_solo$io_solo$apis_api_gloo_gloo_v1_subset_pb.Subset;
      reader.readMessage(value,github_com_solo$io_solo$apis_api_gloo_gloo_v1_subset_pb.Subset.deserializeBinaryFromReader);
      msg.setSubset(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.Destination.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.Destination.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.Destination} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.Destination.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpstream();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.serializeBinaryToWriter
    );
  }
  f = message.getKube();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.gloo.solo.io.KubernetesServiceDestination.serializeBinaryToWriter
    );
  }
  f = message.getConsul();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.gloo.solo.io.ConsulServiceDestination.serializeBinaryToWriter
    );
  }
  f = message.getDestinationSpec();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.DestinationSpec.serializeBinaryToWriter
    );
  }
  f = message.getSubset();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      github_com_solo$io_solo$apis_api_gloo_gloo_v1_subset_pb.Subset.serializeBinaryToWriter
    );
  }
};


/**
 * optional core.solo.io.ResourceRef upstream = 10;
 * @return {?proto.core.solo.io.ResourceRef}
 */
proto.gloo.solo.io.Destination.prototype.getUpstream = function() {
  return /** @type{?proto.core.solo.io.ResourceRef} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef, 10));
};


/** @param {?proto.core.solo.io.ResourceRef|undefined} value */
proto.gloo.solo.io.Destination.prototype.setUpstream = function(value) {
  jspb.Message.setOneofWrapperField(this, 10, proto.gloo.solo.io.Destination.oneofGroups_[0], value);
};


proto.gloo.solo.io.Destination.prototype.clearUpstream = function() {
  this.setUpstream(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.Destination.prototype.hasUpstream = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional KubernetesServiceDestination kube = 11;
 * @return {?proto.gloo.solo.io.KubernetesServiceDestination}
 */
proto.gloo.solo.io.Destination.prototype.getKube = function() {
  return /** @type{?proto.gloo.solo.io.KubernetesServiceDestination} */ (
    jspb.Message.getWrapperField(this, proto.gloo.solo.io.KubernetesServiceDestination, 11));
};


/** @param {?proto.gloo.solo.io.KubernetesServiceDestination|undefined} value */
proto.gloo.solo.io.Destination.prototype.setKube = function(value) {
  jspb.Message.setOneofWrapperField(this, 11, proto.gloo.solo.io.Destination.oneofGroups_[0], value);
};


proto.gloo.solo.io.Destination.prototype.clearKube = function() {
  this.setKube(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.Destination.prototype.hasKube = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional ConsulServiceDestination consul = 12;
 * @return {?proto.gloo.solo.io.ConsulServiceDestination}
 */
proto.gloo.solo.io.Destination.prototype.getConsul = function() {
  return /** @type{?proto.gloo.solo.io.ConsulServiceDestination} */ (
    jspb.Message.getWrapperField(this, proto.gloo.solo.io.ConsulServiceDestination, 12));
};


/** @param {?proto.gloo.solo.io.ConsulServiceDestination|undefined} value */
proto.gloo.solo.io.Destination.prototype.setConsul = function(value) {
  jspb.Message.setOneofWrapperField(this, 12, proto.gloo.solo.io.Destination.oneofGroups_[0], value);
};


proto.gloo.solo.io.Destination.prototype.clearConsul = function() {
  this.setConsul(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.Destination.prototype.hasConsul = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional DestinationSpec destination_spec = 2;
 * @return {?proto.gloo.solo.io.DestinationSpec}
 */
proto.gloo.solo.io.Destination.prototype.getDestinationSpec = function() {
  return /** @type{?proto.gloo.solo.io.DestinationSpec} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.DestinationSpec, 2));
};


/** @param {?proto.gloo.solo.io.DestinationSpec|undefined} value */
proto.gloo.solo.io.Destination.prototype.setDestinationSpec = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.gloo.solo.io.Destination.prototype.clearDestinationSpec = function() {
  this.setDestinationSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.Destination.prototype.hasDestinationSpec = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Subset subset = 3;
 * @return {?proto.gloo.solo.io.Subset}
 */
proto.gloo.solo.io.Destination.prototype.getSubset = function() {
  return /** @type{?proto.gloo.solo.io.Subset} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$apis_api_gloo_gloo_v1_subset_pb.Subset, 3));
};


/** @param {?proto.gloo.solo.io.Subset|undefined} value */
proto.gloo.solo.io.Destination.prototype.setSubset = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.gloo.solo.io.Destination.prototype.clearSubset = function() {
  this.setSubset(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.Destination.prototype.hasSubset = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.KubernetesServiceDestination = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gloo.solo.io.KubernetesServiceDestination, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.KubernetesServiceDestination.displayName = 'proto.gloo.solo.io.KubernetesServiceDestination';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.KubernetesServiceDestination.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.KubernetesServiceDestination.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.KubernetesServiceDestination} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.KubernetesServiceDestination.toObject = function(includeInstance, msg) {
  var f, obj = {
    ref: (f = msg.getRef()) && github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.toObject(includeInstance, f),
    port: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.KubernetesServiceDestination}
 */
proto.gloo.solo.io.KubernetesServiceDestination.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.KubernetesServiceDestination;
  return proto.gloo.solo.io.KubernetesServiceDestination.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.KubernetesServiceDestination} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.KubernetesServiceDestination}
 */
proto.gloo.solo.io.KubernetesServiceDestination.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef;
      reader.readMessage(value,github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.deserializeBinaryFromReader);
      msg.setRef(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPort(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.KubernetesServiceDestination.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.KubernetesServiceDestination.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.KubernetesServiceDestination} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.KubernetesServiceDestination.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRef();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.serializeBinaryToWriter
    );
  }
  f = message.getPort();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional core.solo.io.ResourceRef ref = 1;
 * @return {?proto.core.solo.io.ResourceRef}
 */
proto.gloo.solo.io.KubernetesServiceDestination.prototype.getRef = function() {
  return /** @type{?proto.core.solo.io.ResourceRef} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef, 1));
};


/** @param {?proto.core.solo.io.ResourceRef|undefined} value */
proto.gloo.solo.io.KubernetesServiceDestination.prototype.setRef = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.gloo.solo.io.KubernetesServiceDestination.prototype.clearRef = function() {
  this.setRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.KubernetesServiceDestination.prototype.hasRef = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 port = 2;
 * @return {number}
 */
proto.gloo.solo.io.KubernetesServiceDestination.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.gloo.solo.io.KubernetesServiceDestination.prototype.setPort = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.ConsulServiceDestination = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gloo.solo.io.ConsulServiceDestination.repeatedFields_, null);
};
goog.inherits(proto.gloo.solo.io.ConsulServiceDestination, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.ConsulServiceDestination.displayName = 'proto.gloo.solo.io.ConsulServiceDestination';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gloo.solo.io.ConsulServiceDestination.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.ConsulServiceDestination.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.ConsulServiceDestination.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.ConsulServiceDestination} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.ConsulServiceDestination.toObject = function(includeInstance, msg) {
  var f, obj = {
    serviceName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tagsList: jspb.Message.getRepeatedField(msg, 2),
    dataCentersList: jspb.Message.getRepeatedField(msg, 3)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.ConsulServiceDestination}
 */
proto.gloo.solo.io.ConsulServiceDestination.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.ConsulServiceDestination;
  return proto.gloo.solo.io.ConsulServiceDestination.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.ConsulServiceDestination} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.ConsulServiceDestination}
 */
proto.gloo.solo.io.ConsulServiceDestination.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setServiceName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addDataCenters(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.ConsulServiceDestination.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.ConsulServiceDestination.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.ConsulServiceDestination} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.ConsulServiceDestination.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServiceName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getDataCentersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional string service_name = 1;
 * @return {string}
 */
proto.gloo.solo.io.ConsulServiceDestination.prototype.getServiceName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.gloo.solo.io.ConsulServiceDestination.prototype.setServiceName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string tags = 2;
 * @return {!Array<string>}
 */
proto.gloo.solo.io.ConsulServiceDestination.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array<string>} value */
proto.gloo.solo.io.ConsulServiceDestination.prototype.setTagsList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.gloo.solo.io.ConsulServiceDestination.prototype.addTags = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.gloo.solo.io.ConsulServiceDestination.prototype.clearTagsList = function() {
  this.setTagsList([]);
};


/**
 * repeated string data_centers = 3;
 * @return {!Array<string>}
 */
proto.gloo.solo.io.ConsulServiceDestination.prototype.getDataCentersList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array<string>} value */
proto.gloo.solo.io.ConsulServiceDestination.prototype.setDataCentersList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.gloo.solo.io.ConsulServiceDestination.prototype.addDataCenters = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.gloo.solo.io.ConsulServiceDestination.prototype.clearDataCentersList = function() {
  this.setDataCentersList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.UpstreamGroupSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gloo.solo.io.UpstreamGroupSpec.repeatedFields_, null);
};
goog.inherits(proto.gloo.solo.io.UpstreamGroupSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.UpstreamGroupSpec.displayName = 'proto.gloo.solo.io.UpstreamGroupSpec';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gloo.solo.io.UpstreamGroupSpec.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.UpstreamGroupSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.UpstreamGroupSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.UpstreamGroupSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.UpstreamGroupSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    destinationsList: jspb.Message.toObjectList(msg.getDestinationsList(),
    proto.gloo.solo.io.WeightedDestination.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.UpstreamGroupSpec}
 */
proto.gloo.solo.io.UpstreamGroupSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.UpstreamGroupSpec;
  return proto.gloo.solo.io.UpstreamGroupSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.UpstreamGroupSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.UpstreamGroupSpec}
 */
proto.gloo.solo.io.UpstreamGroupSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gloo.solo.io.WeightedDestination;
      reader.readMessage(value,proto.gloo.solo.io.WeightedDestination.deserializeBinaryFromReader);
      msg.addDestinations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.UpstreamGroupSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.UpstreamGroupSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.UpstreamGroupSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.UpstreamGroupSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDestinationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.gloo.solo.io.WeightedDestination.serializeBinaryToWriter
    );
  }
};


/**
 * repeated WeightedDestination destinations = 1;
 * @return {!Array<!proto.gloo.solo.io.WeightedDestination>}
 */
proto.gloo.solo.io.UpstreamGroupSpec.prototype.getDestinationsList = function() {
  return /** @type{!Array<!proto.gloo.solo.io.WeightedDestination>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gloo.solo.io.WeightedDestination, 1));
};


/** @param {!Array<!proto.gloo.solo.io.WeightedDestination>} value */
proto.gloo.solo.io.UpstreamGroupSpec.prototype.setDestinationsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.gloo.solo.io.WeightedDestination=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gloo.solo.io.WeightedDestination}
 */
proto.gloo.solo.io.UpstreamGroupSpec.prototype.addDestinations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.gloo.solo.io.WeightedDestination, opt_index);
};


proto.gloo.solo.io.UpstreamGroupSpec.prototype.clearDestinationsList = function() {
  this.setDestinationsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.MultiDestination = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gloo.solo.io.MultiDestination.repeatedFields_, null);
};
goog.inherits(proto.gloo.solo.io.MultiDestination, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.MultiDestination.displayName = 'proto.gloo.solo.io.MultiDestination';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gloo.solo.io.MultiDestination.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.MultiDestination.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.MultiDestination.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.MultiDestination} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.MultiDestination.toObject = function(includeInstance, msg) {
  var f, obj = {
    destinationsList: jspb.Message.toObjectList(msg.getDestinationsList(),
    proto.gloo.solo.io.WeightedDestination.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.MultiDestination}
 */
proto.gloo.solo.io.MultiDestination.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.MultiDestination;
  return proto.gloo.solo.io.MultiDestination.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.MultiDestination} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.MultiDestination}
 */
proto.gloo.solo.io.MultiDestination.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gloo.solo.io.WeightedDestination;
      reader.readMessage(value,proto.gloo.solo.io.WeightedDestination.deserializeBinaryFromReader);
      msg.addDestinations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.MultiDestination.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.MultiDestination.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.MultiDestination} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.MultiDestination.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDestinationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.gloo.solo.io.WeightedDestination.serializeBinaryToWriter
    );
  }
};


/**
 * repeated WeightedDestination destinations = 1;
 * @return {!Array<!proto.gloo.solo.io.WeightedDestination>}
 */
proto.gloo.solo.io.MultiDestination.prototype.getDestinationsList = function() {
  return /** @type{!Array<!proto.gloo.solo.io.WeightedDestination>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gloo.solo.io.WeightedDestination, 1));
};


/** @param {!Array<!proto.gloo.solo.io.WeightedDestination>} value */
proto.gloo.solo.io.MultiDestination.prototype.setDestinationsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.gloo.solo.io.WeightedDestination=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gloo.solo.io.WeightedDestination}
 */
proto.gloo.solo.io.MultiDestination.prototype.addDestinations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.gloo.solo.io.WeightedDestination, opt_index);
};


proto.gloo.solo.io.MultiDestination.prototype.clearDestinationsList = function() {
  this.setDestinationsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.WeightedDestination = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gloo.solo.io.WeightedDestination, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.WeightedDestination.displayName = 'proto.gloo.solo.io.WeightedDestination';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.WeightedDestination.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.WeightedDestination.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.WeightedDestination} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.WeightedDestination.toObject = function(includeInstance, msg) {
  var f, obj = {
    destination: (f = msg.getDestination()) && proto.gloo.solo.io.Destination.toObject(includeInstance, f),
    weight: (f = msg.getWeight()) && google_protobuf_wrappers_pb.UInt32Value.toObject(includeInstance, f),
    options: (f = msg.getOptions()) && github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.WeightedDestinationOptions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.WeightedDestination}
 */
proto.gloo.solo.io.WeightedDestination.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.WeightedDestination;
  return proto.gloo.solo.io.WeightedDestination.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.WeightedDestination} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.WeightedDestination}
 */
proto.gloo.solo.io.WeightedDestination.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gloo.solo.io.Destination;
      reader.readMessage(value,proto.gloo.solo.io.Destination.deserializeBinaryFromReader);
      msg.setDestination(value);
      break;
    case 2:
      var value = new google_protobuf_wrappers_pb.UInt32Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.UInt32Value.deserializeBinaryFromReader);
      msg.setWeight(value);
      break;
    case 3:
      var value = new github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.WeightedDestinationOptions;
      reader.readMessage(value,github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.WeightedDestinationOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.WeightedDestination.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.WeightedDestination.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.WeightedDestination} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.WeightedDestination.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDestination();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.gloo.solo.io.Destination.serializeBinaryToWriter
    );
  }
  f = message.getWeight();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_wrappers_pb.UInt32Value.serializeBinaryToWriter
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.WeightedDestinationOptions.serializeBinaryToWriter
    );
  }
};


/**
 * optional Destination destination = 1;
 * @return {?proto.gloo.solo.io.Destination}
 */
proto.gloo.solo.io.WeightedDestination.prototype.getDestination = function() {
  return /** @type{?proto.gloo.solo.io.Destination} */ (
    jspb.Message.getWrapperField(this, proto.gloo.solo.io.Destination, 1));
};


/** @param {?proto.gloo.solo.io.Destination|undefined} value */
proto.gloo.solo.io.WeightedDestination.prototype.setDestination = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.gloo.solo.io.WeightedDestination.prototype.clearDestination = function() {
  this.setDestination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.WeightedDestination.prototype.hasDestination = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.UInt32Value weight = 2;
 * @return {?proto.google.protobuf.UInt32Value}
 */
proto.gloo.solo.io.WeightedDestination.prototype.getWeight = function() {
  return /** @type{?proto.google.protobuf.UInt32Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.UInt32Value, 2));
};


/** @param {?proto.google.protobuf.UInt32Value|undefined} value */
proto.gloo.solo.io.WeightedDestination.prototype.setWeight = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.gloo.solo.io.WeightedDestination.prototype.clearWeight = function() {
  this.setWeight(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.WeightedDestination.prototype.hasWeight = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional WeightedDestinationOptions options = 3;
 * @return {?proto.gloo.solo.io.WeightedDestinationOptions}
 */
proto.gloo.solo.io.WeightedDestination.prototype.getOptions = function() {
  return /** @type{?proto.gloo.solo.io.WeightedDestinationOptions} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.WeightedDestinationOptions, 3));
};


/** @param {?proto.gloo.solo.io.WeightedDestinationOptions|undefined} value */
proto.gloo.solo.io.WeightedDestination.prototype.setOptions = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.gloo.solo.io.WeightedDestination.prototype.clearOptions = function() {
  this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.WeightedDestination.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.RedirectAction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.gloo.solo.io.RedirectAction.oneofGroups_);
};
goog.inherits(proto.gloo.solo.io.RedirectAction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.RedirectAction.displayName = 'proto.gloo.solo.io.RedirectAction';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.gloo.solo.io.RedirectAction.oneofGroups_ = [[2,5,32]];

/**
 * @enum {number}
 */
proto.gloo.solo.io.RedirectAction.PathRewriteSpecifierCase = {
  PATH_REWRITE_SPECIFIER_NOT_SET: 0,
  PATH_REDIRECT: 2,
  PREFIX_REWRITE: 5,
  REGEX_REWRITE: 32
};

/**
 * @return {proto.gloo.solo.io.RedirectAction.PathRewriteSpecifierCase}
 */
proto.gloo.solo.io.RedirectAction.prototype.getPathRewriteSpecifierCase = function() {
  return /** @type {proto.gloo.solo.io.RedirectAction.PathRewriteSpecifierCase} */(jspb.Message.computeOneofCase(this, proto.gloo.solo.io.RedirectAction.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.RedirectAction.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.RedirectAction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.RedirectAction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.RedirectAction.toObject = function(includeInstance, msg) {
  var f, obj = {
    hostRedirect: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pathRedirect: jspb.Message.getFieldWithDefault(msg, 2, ""),
    prefixRewrite: jspb.Message.getFieldWithDefault(msg, 5, ""),
    regexRewrite: (f = msg.getRegexRewrite()) && github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_type_matcher_v3_regex_pb.RegexMatchAndSubstitute.toObject(includeInstance, f),
    responseCode: jspb.Message.getFieldWithDefault(msg, 3, 0),
    httpsRedirect: jspb.Message.getFieldWithDefault(msg, 4, false),
    stripQuery: jspb.Message.getFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.RedirectAction}
 */
proto.gloo.solo.io.RedirectAction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.RedirectAction;
  return proto.gloo.solo.io.RedirectAction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.RedirectAction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.RedirectAction}
 */
proto.gloo.solo.io.RedirectAction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHostRedirect(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPathRedirect(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrefixRewrite(value);
      break;
    case 32:
      var value = new github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_type_matcher_v3_regex_pb.RegexMatchAndSubstitute;
      reader.readMessage(value,github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_type_matcher_v3_regex_pb.RegexMatchAndSubstitute.deserializeBinaryFromReader);
      msg.setRegexRewrite(value);
      break;
    case 3:
      var value = /** @type {!proto.gloo.solo.io.RedirectAction.RedirectResponseCode} */ (reader.readEnum());
      msg.setResponseCode(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHttpsRedirect(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStripQuery(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.RedirectAction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.RedirectAction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.RedirectAction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.RedirectAction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHostRedirect();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getRegexRewrite();
  if (f != null) {
    writer.writeMessage(
      32,
      f,
      github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_type_matcher_v3_regex_pb.RegexMatchAndSubstitute.serializeBinaryToWriter
    );
  }
  f = message.getResponseCode();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getHttpsRedirect();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getStripQuery();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.gloo.solo.io.RedirectAction.RedirectResponseCode = {
  MOVED_PERMANENTLY: 0,
  FOUND: 1,
  SEE_OTHER: 2,
  TEMPORARY_REDIRECT: 3,
  PERMANENT_REDIRECT: 4
};

/**
 * optional string host_redirect = 1;
 * @return {string}
 */
proto.gloo.solo.io.RedirectAction.prototype.getHostRedirect = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.gloo.solo.io.RedirectAction.prototype.setHostRedirect = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string path_redirect = 2;
 * @return {string}
 */
proto.gloo.solo.io.RedirectAction.prototype.getPathRedirect = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.gloo.solo.io.RedirectAction.prototype.setPathRedirect = function(value) {
  jspb.Message.setOneofField(this, 2, proto.gloo.solo.io.RedirectAction.oneofGroups_[0], value);
};


proto.gloo.solo.io.RedirectAction.prototype.clearPathRedirect = function() {
  jspb.Message.setOneofField(this, 2, proto.gloo.solo.io.RedirectAction.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.RedirectAction.prototype.hasPathRedirect = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string prefix_rewrite = 5;
 * @return {string}
 */
proto.gloo.solo.io.RedirectAction.prototype.getPrefixRewrite = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.gloo.solo.io.RedirectAction.prototype.setPrefixRewrite = function(value) {
  jspb.Message.setOneofField(this, 5, proto.gloo.solo.io.RedirectAction.oneofGroups_[0], value);
};


proto.gloo.solo.io.RedirectAction.prototype.clearPrefixRewrite = function() {
  jspb.Message.setOneofField(this, 5, proto.gloo.solo.io.RedirectAction.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.RedirectAction.prototype.hasPrefixRewrite = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional solo.io.envoy.type.matcher.v3.RegexMatchAndSubstitute regex_rewrite = 32;
 * @return {?proto.solo.io.envoy.type.matcher.v3.RegexMatchAndSubstitute}
 */
proto.gloo.solo.io.RedirectAction.prototype.getRegexRewrite = function() {
  return /** @type{?proto.solo.io.envoy.type.matcher.v3.RegexMatchAndSubstitute} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_type_matcher_v3_regex_pb.RegexMatchAndSubstitute, 32));
};


/** @param {?proto.solo.io.envoy.type.matcher.v3.RegexMatchAndSubstitute|undefined} value */
proto.gloo.solo.io.RedirectAction.prototype.setRegexRewrite = function(value) {
  jspb.Message.setOneofWrapperField(this, 32, proto.gloo.solo.io.RedirectAction.oneofGroups_[0], value);
};


proto.gloo.solo.io.RedirectAction.prototype.clearRegexRewrite = function() {
  this.setRegexRewrite(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.RedirectAction.prototype.hasRegexRewrite = function() {
  return jspb.Message.getField(this, 32) != null;
};


/**
 * optional RedirectResponseCode response_code = 3;
 * @return {!proto.gloo.solo.io.RedirectAction.RedirectResponseCode}
 */
proto.gloo.solo.io.RedirectAction.prototype.getResponseCode = function() {
  return /** @type {!proto.gloo.solo.io.RedirectAction.RedirectResponseCode} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.gloo.solo.io.RedirectAction.RedirectResponseCode} value */
proto.gloo.solo.io.RedirectAction.prototype.setResponseCode = function(value) {
  jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional bool https_redirect = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.gloo.solo.io.RedirectAction.prototype.getHttpsRedirect = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.gloo.solo.io.RedirectAction.prototype.setHttpsRedirect = function(value) {
  jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool strip_query = 6;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.gloo.solo.io.RedirectAction.prototype.getStripQuery = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));
};


/** @param {boolean} value */
proto.gloo.solo.io.RedirectAction.prototype.setStripQuery = function(value) {
  jspb.Message.setProto3BooleanField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.DirectResponseAction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gloo.solo.io.DirectResponseAction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.DirectResponseAction.displayName = 'proto.gloo.solo.io.DirectResponseAction';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.DirectResponseAction.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.DirectResponseAction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.DirectResponseAction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.DirectResponseAction.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    body: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.DirectResponseAction}
 */
proto.gloo.solo.io.DirectResponseAction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.DirectResponseAction;
  return proto.gloo.solo.io.DirectResponseAction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.DirectResponseAction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.DirectResponseAction}
 */
proto.gloo.solo.io.DirectResponseAction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBody(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.DirectResponseAction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.DirectResponseAction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.DirectResponseAction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.DirectResponseAction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getBody();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint32 status = 1;
 * @return {number}
 */
proto.gloo.solo.io.DirectResponseAction.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.gloo.solo.io.DirectResponseAction.prototype.setStatus = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string body = 2;
 * @return {string}
 */
proto.gloo.solo.io.DirectResponseAction.prototype.getBody = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.gloo.solo.io.DirectResponseAction.prototype.setBody = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.SourceMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gloo.solo.io.SourceMetadata.repeatedFields_, null);
};
goog.inherits(proto.gloo.solo.io.SourceMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.SourceMetadata.displayName = 'proto.gloo.solo.io.SourceMetadata';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gloo.solo.io.SourceMetadata.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.SourceMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.SourceMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.SourceMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.SourceMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    sourcesList: jspb.Message.toObjectList(msg.getSourcesList(),
    proto.gloo.solo.io.SourceMetadata.SourceRef.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.SourceMetadata}
 */
proto.gloo.solo.io.SourceMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.SourceMetadata;
  return proto.gloo.solo.io.SourceMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.SourceMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.SourceMetadata}
 */
proto.gloo.solo.io.SourceMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gloo.solo.io.SourceMetadata.SourceRef;
      reader.readMessage(value,proto.gloo.solo.io.SourceMetadata.SourceRef.deserializeBinaryFromReader);
      msg.addSources(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.SourceMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.SourceMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.SourceMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.SourceMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSourcesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.gloo.solo.io.SourceMetadata.SourceRef.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.SourceMetadata.SourceRef = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gloo.solo.io.SourceMetadata.SourceRef, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.SourceMetadata.SourceRef.displayName = 'proto.gloo.solo.io.SourceMetadata.SourceRef';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.SourceMetadata.SourceRef.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.SourceMetadata.SourceRef.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.SourceMetadata.SourceRef} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.SourceMetadata.SourceRef.toObject = function(includeInstance, msg) {
  var f, obj = {
    resourceRef: (f = msg.getResourceRef()) && github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.toObject(includeInstance, f),
    resourceKind: jspb.Message.getFieldWithDefault(msg, 2, ""),
    observedGeneration: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.SourceMetadata.SourceRef}
 */
proto.gloo.solo.io.SourceMetadata.SourceRef.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.SourceMetadata.SourceRef;
  return proto.gloo.solo.io.SourceMetadata.SourceRef.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.SourceMetadata.SourceRef} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.SourceMetadata.SourceRef}
 */
proto.gloo.solo.io.SourceMetadata.SourceRef.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef;
      reader.readMessage(value,github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.deserializeBinaryFromReader);
      msg.setResourceRef(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setResourceKind(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setObservedGeneration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.SourceMetadata.SourceRef.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.SourceMetadata.SourceRef.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.SourceMetadata.SourceRef} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.SourceMetadata.SourceRef.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResourceRef();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.serializeBinaryToWriter
    );
  }
  f = message.getResourceKind();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getObservedGeneration();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional core.solo.io.ResourceRef resource_ref = 1;
 * @return {?proto.core.solo.io.ResourceRef}
 */
proto.gloo.solo.io.SourceMetadata.SourceRef.prototype.getResourceRef = function() {
  return /** @type{?proto.core.solo.io.ResourceRef} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef, 1));
};


/** @param {?proto.core.solo.io.ResourceRef|undefined} value */
proto.gloo.solo.io.SourceMetadata.SourceRef.prototype.setResourceRef = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.gloo.solo.io.SourceMetadata.SourceRef.prototype.clearResourceRef = function() {
  this.setResourceRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.SourceMetadata.SourceRef.prototype.hasResourceRef = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string resource_kind = 2;
 * @return {string}
 */
proto.gloo.solo.io.SourceMetadata.SourceRef.prototype.getResourceKind = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.gloo.solo.io.SourceMetadata.SourceRef.prototype.setResourceKind = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 observed_generation = 3;
 * @return {number}
 */
proto.gloo.solo.io.SourceMetadata.SourceRef.prototype.getObservedGeneration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.gloo.solo.io.SourceMetadata.SourceRef.prototype.setObservedGeneration = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated SourceRef sources = 1;
 * @return {!Array<!proto.gloo.solo.io.SourceMetadata.SourceRef>}
 */
proto.gloo.solo.io.SourceMetadata.prototype.getSourcesList = function() {
  return /** @type{!Array<!proto.gloo.solo.io.SourceMetadata.SourceRef>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gloo.solo.io.SourceMetadata.SourceRef, 1));
};


/** @param {!Array<!proto.gloo.solo.io.SourceMetadata.SourceRef>} value */
proto.gloo.solo.io.SourceMetadata.prototype.setSourcesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.gloo.solo.io.SourceMetadata.SourceRef=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gloo.solo.io.SourceMetadata.SourceRef}
 */
proto.gloo.solo.io.SourceMetadata.prototype.addSources = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.gloo.solo.io.SourceMetadata.SourceRef, opt_index);
};


proto.gloo.solo.io.SourceMetadata.prototype.clearSourcesList = function() {
  this.setSourcesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.UpstreamGroupStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gloo.solo.io.UpstreamGroupStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.UpstreamGroupStatus.displayName = 'proto.gloo.solo.io.UpstreamGroupStatus';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.UpstreamGroupStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.UpstreamGroupStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.UpstreamGroupStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.UpstreamGroupStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    state: jspb.Message.getFieldWithDefault(msg, 1, 0),
    reason: jspb.Message.getFieldWithDefault(msg, 2, ""),
    reportedBy: jspb.Message.getFieldWithDefault(msg, 3, ""),
    subresourceStatusesMap: (f = msg.getSubresourceStatusesMap()) ? f.toObject(includeInstance, proto.gloo.solo.io.UpstreamGroupStatus.toObject) : [],
    details: (f = msg.getDetails()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.UpstreamGroupStatus}
 */
proto.gloo.solo.io.UpstreamGroupStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.UpstreamGroupStatus;
  return proto.gloo.solo.io.UpstreamGroupStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.UpstreamGroupStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.UpstreamGroupStatus}
 */
proto.gloo.solo.io.UpstreamGroupStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.gloo.solo.io.UpstreamGroupStatus.State} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setReason(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setReportedBy(value);
      break;
    case 4:
      var value = msg.getSubresourceStatusesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.gloo.solo.io.UpstreamGroupStatus.deserializeBinaryFromReader, "");
         });
      break;
    case 5:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setDetails(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.UpstreamGroupStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.UpstreamGroupStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.UpstreamGroupStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.UpstreamGroupStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getReason();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getReportedBy();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSubresourceStatusesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.gloo.solo.io.UpstreamGroupStatus.serializeBinaryToWriter);
  }
  f = message.getDetails();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.gloo.solo.io.UpstreamGroupStatus.State = {
  PENDING: 0,
  ACCEPTED: 1,
  REJECTED: 2,
  WARNING: 3
};

/**
 * optional State state = 1;
 * @return {!proto.gloo.solo.io.UpstreamGroupStatus.State}
 */
proto.gloo.solo.io.UpstreamGroupStatus.prototype.getState = function() {
  return /** @type {!proto.gloo.solo.io.UpstreamGroupStatus.State} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.gloo.solo.io.UpstreamGroupStatus.State} value */
proto.gloo.solo.io.UpstreamGroupStatus.prototype.setState = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string reason = 2;
 * @return {string}
 */
proto.gloo.solo.io.UpstreamGroupStatus.prototype.getReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.gloo.solo.io.UpstreamGroupStatus.prototype.setReason = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string reported_by = 3;
 * @return {string}
 */
proto.gloo.solo.io.UpstreamGroupStatus.prototype.getReportedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.gloo.solo.io.UpstreamGroupStatus.prototype.setReportedBy = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * map<string, UpstreamGroupStatus> subresource_statuses = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.gloo.solo.io.UpstreamGroupStatus>}
 */
proto.gloo.solo.io.UpstreamGroupStatus.prototype.getSubresourceStatusesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.gloo.solo.io.UpstreamGroupStatus>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      proto.gloo.solo.io.UpstreamGroupStatus));
};


proto.gloo.solo.io.UpstreamGroupStatus.prototype.clearSubresourceStatusesMap = function() {
  this.getSubresourceStatusesMap().clear();
};


/**
 * optional google.protobuf.Struct details = 5;
 * @return {?proto.google.protobuf.Struct}
 */
proto.gloo.solo.io.UpstreamGroupStatus.prototype.getDetails = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 5));
};


/** @param {?proto.google.protobuf.Struct|undefined} value */
proto.gloo.solo.io.UpstreamGroupStatus.prototype.setDetails = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.gloo.solo.io.UpstreamGroupStatus.prototype.clearDetails = function() {
  this.setDetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.UpstreamGroupStatus.prototype.hasDetails = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.UpstreamGroupNamespacedStatuses = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gloo.solo.io.UpstreamGroupNamespacedStatuses, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.UpstreamGroupNamespacedStatuses.displayName = 'proto.gloo.solo.io.UpstreamGroupNamespacedStatuses';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.UpstreamGroupNamespacedStatuses.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.UpstreamGroupNamespacedStatuses.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.UpstreamGroupNamespacedStatuses} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.UpstreamGroupNamespacedStatuses.toObject = function(includeInstance, msg) {
  var f, obj = {
    statusesMap: (f = msg.getStatusesMap()) ? f.toObject(includeInstance, proto.gloo.solo.io.UpstreamGroupStatus.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.UpstreamGroupNamespacedStatuses}
 */
proto.gloo.solo.io.UpstreamGroupNamespacedStatuses.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.UpstreamGroupNamespacedStatuses;
  return proto.gloo.solo.io.UpstreamGroupNamespacedStatuses.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.UpstreamGroupNamespacedStatuses} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.UpstreamGroupNamespacedStatuses}
 */
proto.gloo.solo.io.UpstreamGroupNamespacedStatuses.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getStatusesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.gloo.solo.io.UpstreamGroupStatus.deserializeBinaryFromReader, "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.UpstreamGroupNamespacedStatuses.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.UpstreamGroupNamespacedStatuses.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.UpstreamGroupNamespacedStatuses} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.UpstreamGroupNamespacedStatuses.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatusesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.gloo.solo.io.UpstreamGroupStatus.serializeBinaryToWriter);
  }
};


/**
 * map<string, UpstreamGroupStatus> statuses = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.gloo.solo.io.UpstreamGroupStatus>}
 */
proto.gloo.solo.io.UpstreamGroupNamespacedStatuses.prototype.getStatusesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.gloo.solo.io.UpstreamGroupStatus>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.gloo.solo.io.UpstreamGroupStatus));
};


proto.gloo.solo.io.UpstreamGroupNamespacedStatuses.prototype.clearStatusesMap = function() {
  this.getStatusesMap().clear();
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.ProxyStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gloo.solo.io.ProxyStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.ProxyStatus.displayName = 'proto.gloo.solo.io.ProxyStatus';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.ProxyStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.ProxyStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.ProxyStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.ProxyStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    state: jspb.Message.getFieldWithDefault(msg, 1, 0),
    reason: jspb.Message.getFieldWithDefault(msg, 2, ""),
    reportedBy: jspb.Message.getFieldWithDefault(msg, 3, ""),
    subresourceStatusesMap: (f = msg.getSubresourceStatusesMap()) ? f.toObject(includeInstance, proto.gloo.solo.io.ProxyStatus.toObject) : [],
    details: (f = msg.getDetails()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.ProxyStatus}
 */
proto.gloo.solo.io.ProxyStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.ProxyStatus;
  return proto.gloo.solo.io.ProxyStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.ProxyStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.ProxyStatus}
 */
proto.gloo.solo.io.ProxyStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.gloo.solo.io.ProxyStatus.State} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setReason(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setReportedBy(value);
      break;
    case 4:
      var value = msg.getSubresourceStatusesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.gloo.solo.io.ProxyStatus.deserializeBinaryFromReader, "");
         });
      break;
    case 5:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setDetails(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.ProxyStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.ProxyStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.ProxyStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.ProxyStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getReason();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getReportedBy();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSubresourceStatusesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.gloo.solo.io.ProxyStatus.serializeBinaryToWriter);
  }
  f = message.getDetails();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.gloo.solo.io.ProxyStatus.State = {
  PENDING: 0,
  ACCEPTED: 1,
  REJECTED: 2,
  WARNING: 3
};

/**
 * optional State state = 1;
 * @return {!proto.gloo.solo.io.ProxyStatus.State}
 */
proto.gloo.solo.io.ProxyStatus.prototype.getState = function() {
  return /** @type {!proto.gloo.solo.io.ProxyStatus.State} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.gloo.solo.io.ProxyStatus.State} value */
proto.gloo.solo.io.ProxyStatus.prototype.setState = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string reason = 2;
 * @return {string}
 */
proto.gloo.solo.io.ProxyStatus.prototype.getReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.gloo.solo.io.ProxyStatus.prototype.setReason = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string reported_by = 3;
 * @return {string}
 */
proto.gloo.solo.io.ProxyStatus.prototype.getReportedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.gloo.solo.io.ProxyStatus.prototype.setReportedBy = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * map<string, ProxyStatus> subresource_statuses = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.gloo.solo.io.ProxyStatus>}
 */
proto.gloo.solo.io.ProxyStatus.prototype.getSubresourceStatusesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.gloo.solo.io.ProxyStatus>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      proto.gloo.solo.io.ProxyStatus));
};


proto.gloo.solo.io.ProxyStatus.prototype.clearSubresourceStatusesMap = function() {
  this.getSubresourceStatusesMap().clear();
};


/**
 * optional google.protobuf.Struct details = 5;
 * @return {?proto.google.protobuf.Struct}
 */
proto.gloo.solo.io.ProxyStatus.prototype.getDetails = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 5));
};


/** @param {?proto.google.protobuf.Struct|undefined} value */
proto.gloo.solo.io.ProxyStatus.prototype.setDetails = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.gloo.solo.io.ProxyStatus.prototype.clearDetails = function() {
  this.setDetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.ProxyStatus.prototype.hasDetails = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.ProxyNamespacedStatuses = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gloo.solo.io.ProxyNamespacedStatuses, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.ProxyNamespacedStatuses.displayName = 'proto.gloo.solo.io.ProxyNamespacedStatuses';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.ProxyNamespacedStatuses.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.ProxyNamespacedStatuses.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.ProxyNamespacedStatuses} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.ProxyNamespacedStatuses.toObject = function(includeInstance, msg) {
  var f, obj = {
    statusesMap: (f = msg.getStatusesMap()) ? f.toObject(includeInstance, proto.gloo.solo.io.ProxyStatus.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.ProxyNamespacedStatuses}
 */
proto.gloo.solo.io.ProxyNamespacedStatuses.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.ProxyNamespacedStatuses;
  return proto.gloo.solo.io.ProxyNamespacedStatuses.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.ProxyNamespacedStatuses} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.ProxyNamespacedStatuses}
 */
proto.gloo.solo.io.ProxyNamespacedStatuses.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getStatusesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.gloo.solo.io.ProxyStatus.deserializeBinaryFromReader, "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.ProxyNamespacedStatuses.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.ProxyNamespacedStatuses.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.ProxyNamespacedStatuses} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.ProxyNamespacedStatuses.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatusesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.gloo.solo.io.ProxyStatus.serializeBinaryToWriter);
  }
};


/**
 * map<string, ProxyStatus> statuses = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.gloo.solo.io.ProxyStatus>}
 */
proto.gloo.solo.io.ProxyNamespacedStatuses.prototype.getStatusesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.gloo.solo.io.ProxyStatus>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.gloo.solo.io.ProxyStatus));
};


proto.gloo.solo.io.ProxyNamespacedStatuses.prototype.clearStatusesMap = function() {
  this.getStatusesMap().clear();
};


goog.object.extend(exports, proto.gloo.solo.io);
