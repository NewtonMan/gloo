/* eslint-disable */
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var extproto_ext_pb = require('../../../../../../../extproto/ext_pb.js');
var github_com_solo$io_solo$kit_api_v1_solo$kit_pb = require('../../../../../../../github.com/solo-io/solo-kit/api/v1/solo-kit_pb.js');
var github_com_solo$io_solo$kit_api_v1_ref_pb = require('../../../../../../../github.com/solo-io/solo-kit/api/v1/ref_pb.js');
var validate_validate_pb = require('../../../../../../../validate/validate_pb.js');
var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.exportSymbol('proto.graphql.gloo.solo.io.ExecutableSchema', null, global);
goog.exportSymbol('proto.graphql.gloo.solo.io.Executor', null, global);
goog.exportSymbol('proto.graphql.gloo.solo.io.Executor.Local', null, global);
goog.exportSymbol('proto.graphql.gloo.solo.io.GraphQLApiNamespacedStatuses', null, global);
goog.exportSymbol('proto.graphql.gloo.solo.io.GraphQLApiSpec', null, global);
goog.exportSymbol('proto.graphql.gloo.solo.io.GraphQLApiStatus', null, global);
goog.exportSymbol('proto.graphql.gloo.solo.io.GraphQLApiStatus.State', null, global);
goog.exportSymbol('proto.graphql.gloo.solo.io.GrpcDescriptorRegistry', null, global);
goog.exportSymbol('proto.graphql.gloo.solo.io.GrpcRequestTemplate', null, global);
goog.exportSymbol('proto.graphql.gloo.solo.io.GrpcResolver', null, global);
goog.exportSymbol('proto.graphql.gloo.solo.io.MockResolver', null, global);
goog.exportSymbol('proto.graphql.gloo.solo.io.MockResolver.AsyncResponse', null, global);
goog.exportSymbol('proto.graphql.gloo.solo.io.PersistedQueryCacheConfig', null, global);
goog.exportSymbol('proto.graphql.gloo.solo.io.RESTResolver', null, global);
goog.exportSymbol('proto.graphql.gloo.solo.io.RequestTemplate', null, global);
goog.exportSymbol('proto.graphql.gloo.solo.io.Resolution', null, global);
goog.exportSymbol('proto.graphql.gloo.solo.io.ResponseTemplate', null, global);
goog.exportSymbol('proto.graphql.gloo.solo.io.StitchedSchema', null, global);
goog.exportSymbol('proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig', null, global);
goog.exportSymbol('proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig.TypeMergeConfig', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.graphql.gloo.solo.io.RequestTemplate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.graphql.gloo.solo.io.RequestTemplate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.graphql.gloo.solo.io.RequestTemplate.displayName = 'proto.graphql.gloo.solo.io.RequestTemplate';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.graphql.gloo.solo.io.RequestTemplate.prototype.toObject = function(opt_includeInstance) {
  return proto.graphql.gloo.solo.io.RequestTemplate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.graphql.gloo.solo.io.RequestTemplate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.graphql.gloo.solo.io.RequestTemplate.toObject = function(includeInstance, msg) {
  var f, obj = {
    headersMap: (f = msg.getHeadersMap()) ? f.toObject(includeInstance, undefined) : [],
    queryParamsMap: (f = msg.getQueryParamsMap()) ? f.toObject(includeInstance, undefined) : [],
    body: (f = msg.getBody()) && google_protobuf_struct_pb.Value.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.graphql.gloo.solo.io.RequestTemplate}
 */
proto.graphql.gloo.solo.io.RequestTemplate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.graphql.gloo.solo.io.RequestTemplate;
  return proto.graphql.gloo.solo.io.RequestTemplate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.graphql.gloo.solo.io.RequestTemplate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.graphql.gloo.solo.io.RequestTemplate}
 */
proto.graphql.gloo.solo.io.RequestTemplate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getHeadersMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    case 2:
      var value = msg.getQueryParamsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    case 3:
      var value = new google_protobuf_struct_pb.Value;
      reader.readMessage(value,google_protobuf_struct_pb.Value.deserializeBinaryFromReader);
      msg.setBody(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.graphql.gloo.solo.io.RequestTemplate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.graphql.gloo.solo.io.RequestTemplate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.graphql.gloo.solo.io.RequestTemplate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.graphql.gloo.solo.io.RequestTemplate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeadersMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getQueryParamsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getBody();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_struct_pb.Value.serializeBinaryToWriter
    );
  }
};


/**
 * map<string, string> headers = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.graphql.gloo.solo.io.RequestTemplate.prototype.getHeadersMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


proto.graphql.gloo.solo.io.RequestTemplate.prototype.clearHeadersMap = function() {
  this.getHeadersMap().clear();
};


/**
 * map<string, string> query_params = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.graphql.gloo.solo.io.RequestTemplate.prototype.getQueryParamsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


proto.graphql.gloo.solo.io.RequestTemplate.prototype.clearQueryParamsMap = function() {
  this.getQueryParamsMap().clear();
};


/**
 * optional google.protobuf.Value body = 3;
 * @return {?proto.google.protobuf.Value}
 */
proto.graphql.gloo.solo.io.RequestTemplate.prototype.getBody = function() {
  return /** @type{?proto.google.protobuf.Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Value, 3));
};


/** @param {?proto.google.protobuf.Value|undefined} value */
proto.graphql.gloo.solo.io.RequestTemplate.prototype.setBody = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.graphql.gloo.solo.io.RequestTemplate.prototype.clearBody = function() {
  this.setBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.graphql.gloo.solo.io.RequestTemplate.prototype.hasBody = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.graphql.gloo.solo.io.ResponseTemplate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.graphql.gloo.solo.io.ResponseTemplate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.graphql.gloo.solo.io.ResponseTemplate.displayName = 'proto.graphql.gloo.solo.io.ResponseTemplate';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.graphql.gloo.solo.io.ResponseTemplate.prototype.toObject = function(opt_includeInstance) {
  return proto.graphql.gloo.solo.io.ResponseTemplate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.graphql.gloo.solo.io.ResponseTemplate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.graphql.gloo.solo.io.ResponseTemplate.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultRoot: jspb.Message.getFieldWithDefault(msg, 1, ""),
    settersMap: (f = msg.getSettersMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.graphql.gloo.solo.io.ResponseTemplate}
 */
proto.graphql.gloo.solo.io.ResponseTemplate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.graphql.gloo.solo.io.ResponseTemplate;
  return proto.graphql.gloo.solo.io.ResponseTemplate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.graphql.gloo.solo.io.ResponseTemplate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.graphql.gloo.solo.io.ResponseTemplate}
 */
proto.graphql.gloo.solo.io.ResponseTemplate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResultRoot(value);
      break;
    case 2:
      var value = msg.getSettersMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.graphql.gloo.solo.io.ResponseTemplate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.graphql.gloo.solo.io.ResponseTemplate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.graphql.gloo.solo.io.ResponseTemplate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.graphql.gloo.solo.io.ResponseTemplate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultRoot();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSettersMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string result_root = 1;
 * @return {string}
 */
proto.graphql.gloo.solo.io.ResponseTemplate.prototype.getResultRoot = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.graphql.gloo.solo.io.ResponseTemplate.prototype.setResultRoot = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * map<string, string> setters = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.graphql.gloo.solo.io.ResponseTemplate.prototype.getSettersMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


proto.graphql.gloo.solo.io.ResponseTemplate.prototype.clearSettersMap = function() {
  this.getSettersMap().clear();
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.graphql.gloo.solo.io.GrpcRequestTemplate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.graphql.gloo.solo.io.GrpcRequestTemplate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.graphql.gloo.solo.io.GrpcRequestTemplate.displayName = 'proto.graphql.gloo.solo.io.GrpcRequestTemplate';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.graphql.gloo.solo.io.GrpcRequestTemplate.prototype.toObject = function(opt_includeInstance) {
  return proto.graphql.gloo.solo.io.GrpcRequestTemplate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.graphql.gloo.solo.io.GrpcRequestTemplate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.graphql.gloo.solo.io.GrpcRequestTemplate.toObject = function(includeInstance, msg) {
  var f, obj = {
    outgoingMessageJson: (f = msg.getOutgoingMessageJson()) && google_protobuf_struct_pb.Value.toObject(includeInstance, f),
    serviceName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    methodName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    requestMetadataMap: (f = msg.getRequestMetadataMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.graphql.gloo.solo.io.GrpcRequestTemplate}
 */
proto.graphql.gloo.solo.io.GrpcRequestTemplate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.graphql.gloo.solo.io.GrpcRequestTemplate;
  return proto.graphql.gloo.solo.io.GrpcRequestTemplate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.graphql.gloo.solo.io.GrpcRequestTemplate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.graphql.gloo.solo.io.GrpcRequestTemplate}
 */
proto.graphql.gloo.solo.io.GrpcRequestTemplate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_struct_pb.Value;
      reader.readMessage(value,google_protobuf_struct_pb.Value.deserializeBinaryFromReader);
      msg.setOutgoingMessageJson(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setServiceName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMethodName(value);
      break;
    case 4:
      var value = msg.getRequestMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.graphql.gloo.solo.io.GrpcRequestTemplate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.graphql.gloo.solo.io.GrpcRequestTemplate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.graphql.gloo.solo.io.GrpcRequestTemplate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.graphql.gloo.solo.io.GrpcRequestTemplate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOutgoingMessageJson();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_struct_pb.Value.serializeBinaryToWriter
    );
  }
  f = message.getServiceName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMethodName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRequestMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional google.protobuf.Value outgoing_message_json = 1;
 * @return {?proto.google.protobuf.Value}
 */
proto.graphql.gloo.solo.io.GrpcRequestTemplate.prototype.getOutgoingMessageJson = function() {
  return /** @type{?proto.google.protobuf.Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Value, 1));
};


/** @param {?proto.google.protobuf.Value|undefined} value */
proto.graphql.gloo.solo.io.GrpcRequestTemplate.prototype.setOutgoingMessageJson = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.graphql.gloo.solo.io.GrpcRequestTemplate.prototype.clearOutgoingMessageJson = function() {
  this.setOutgoingMessageJson(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.graphql.gloo.solo.io.GrpcRequestTemplate.prototype.hasOutgoingMessageJson = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string service_name = 2;
 * @return {string}
 */
proto.graphql.gloo.solo.io.GrpcRequestTemplate.prototype.getServiceName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.graphql.gloo.solo.io.GrpcRequestTemplate.prototype.setServiceName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string method_name = 3;
 * @return {string}
 */
proto.graphql.gloo.solo.io.GrpcRequestTemplate.prototype.getMethodName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.graphql.gloo.solo.io.GrpcRequestTemplate.prototype.setMethodName = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * map<string, string> request_metadata = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.graphql.gloo.solo.io.GrpcRequestTemplate.prototype.getRequestMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      null));
};


proto.graphql.gloo.solo.io.GrpcRequestTemplate.prototype.clearRequestMetadataMap = function() {
  this.getRequestMetadataMap().clear();
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.graphql.gloo.solo.io.RESTResolver = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.graphql.gloo.solo.io.RESTResolver, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.graphql.gloo.solo.io.RESTResolver.displayName = 'proto.graphql.gloo.solo.io.RESTResolver';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.graphql.gloo.solo.io.RESTResolver.prototype.toObject = function(opt_includeInstance) {
  return proto.graphql.gloo.solo.io.RESTResolver.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.graphql.gloo.solo.io.RESTResolver} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.graphql.gloo.solo.io.RESTResolver.toObject = function(includeInstance, msg) {
  var f, obj = {
    upstreamRef: (f = msg.getUpstreamRef()) && github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.toObject(includeInstance, f),
    request: (f = msg.getRequest()) && proto.graphql.gloo.solo.io.RequestTemplate.toObject(includeInstance, f),
    response: (f = msg.getResponse()) && proto.graphql.gloo.solo.io.ResponseTemplate.toObject(includeInstance, f),
    spanName: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.graphql.gloo.solo.io.RESTResolver}
 */
proto.graphql.gloo.solo.io.RESTResolver.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.graphql.gloo.solo.io.RESTResolver;
  return proto.graphql.gloo.solo.io.RESTResolver.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.graphql.gloo.solo.io.RESTResolver} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.graphql.gloo.solo.io.RESTResolver}
 */
proto.graphql.gloo.solo.io.RESTResolver.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef;
      reader.readMessage(value,github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.deserializeBinaryFromReader);
      msg.setUpstreamRef(value);
      break;
    case 2:
      var value = new proto.graphql.gloo.solo.io.RequestTemplate;
      reader.readMessage(value,proto.graphql.gloo.solo.io.RequestTemplate.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    case 3:
      var value = new proto.graphql.gloo.solo.io.ResponseTemplate;
      reader.readMessage(value,proto.graphql.gloo.solo.io.ResponseTemplate.deserializeBinaryFromReader);
      msg.setResponse(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSpanName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.graphql.gloo.solo.io.RESTResolver.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.graphql.gloo.solo.io.RESTResolver.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.graphql.gloo.solo.io.RESTResolver} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.graphql.gloo.solo.io.RESTResolver.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpstreamRef();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.serializeBinaryToWriter
    );
  }
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.graphql.gloo.solo.io.RequestTemplate.serializeBinaryToWriter
    );
  }
  f = message.getResponse();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.graphql.gloo.solo.io.ResponseTemplate.serializeBinaryToWriter
    );
  }
  f = message.getSpanName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional core.solo.io.ResourceRef upstream_ref = 1;
 * @return {?proto.core.solo.io.ResourceRef}
 */
proto.graphql.gloo.solo.io.RESTResolver.prototype.getUpstreamRef = function() {
  return /** @type{?proto.core.solo.io.ResourceRef} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef, 1));
};


/** @param {?proto.core.solo.io.ResourceRef|undefined} value */
proto.graphql.gloo.solo.io.RESTResolver.prototype.setUpstreamRef = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.graphql.gloo.solo.io.RESTResolver.prototype.clearUpstreamRef = function() {
  this.setUpstreamRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.graphql.gloo.solo.io.RESTResolver.prototype.hasUpstreamRef = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RequestTemplate request = 2;
 * @return {?proto.graphql.gloo.solo.io.RequestTemplate}
 */
proto.graphql.gloo.solo.io.RESTResolver.prototype.getRequest = function() {
  return /** @type{?proto.graphql.gloo.solo.io.RequestTemplate} */ (
    jspb.Message.getWrapperField(this, proto.graphql.gloo.solo.io.RequestTemplate, 2));
};


/** @param {?proto.graphql.gloo.solo.io.RequestTemplate|undefined} value */
proto.graphql.gloo.solo.io.RESTResolver.prototype.setRequest = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.graphql.gloo.solo.io.RESTResolver.prototype.clearRequest = function() {
  this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.graphql.gloo.solo.io.RESTResolver.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ResponseTemplate response = 3;
 * @return {?proto.graphql.gloo.solo.io.ResponseTemplate}
 */
proto.graphql.gloo.solo.io.RESTResolver.prototype.getResponse = function() {
  return /** @type{?proto.graphql.gloo.solo.io.ResponseTemplate} */ (
    jspb.Message.getWrapperField(this, proto.graphql.gloo.solo.io.ResponseTemplate, 3));
};


/** @param {?proto.graphql.gloo.solo.io.ResponseTemplate|undefined} value */
proto.graphql.gloo.solo.io.RESTResolver.prototype.setResponse = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.graphql.gloo.solo.io.RESTResolver.prototype.clearResponse = function() {
  this.setResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.graphql.gloo.solo.io.RESTResolver.prototype.hasResponse = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string span_name = 4;
 * @return {string}
 */
proto.graphql.gloo.solo.io.RESTResolver.prototype.getSpanName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.graphql.gloo.solo.io.RESTResolver.prototype.setSpanName = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.graphql.gloo.solo.io.GrpcDescriptorRegistry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.graphql.gloo.solo.io.GrpcDescriptorRegistry.oneofGroups_);
};
goog.inherits(proto.graphql.gloo.solo.io.GrpcDescriptorRegistry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.graphql.gloo.solo.io.GrpcDescriptorRegistry.displayName = 'proto.graphql.gloo.solo.io.GrpcDescriptorRegistry';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.graphql.gloo.solo.io.GrpcDescriptorRegistry.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.graphql.gloo.solo.io.GrpcDescriptorRegistry.DescriptorSetCase = {
  DESCRIPTOR_SET_NOT_SET: 0,
  PROTO_DESCRIPTOR: 1,
  PROTO_DESCRIPTOR_BIN: 2
};

/**
 * @return {proto.graphql.gloo.solo.io.GrpcDescriptorRegistry.DescriptorSetCase}
 */
proto.graphql.gloo.solo.io.GrpcDescriptorRegistry.prototype.getDescriptorSetCase = function() {
  return /** @type {proto.graphql.gloo.solo.io.GrpcDescriptorRegistry.DescriptorSetCase} */(jspb.Message.computeOneofCase(this, proto.graphql.gloo.solo.io.GrpcDescriptorRegistry.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.graphql.gloo.solo.io.GrpcDescriptorRegistry.prototype.toObject = function(opt_includeInstance) {
  return proto.graphql.gloo.solo.io.GrpcDescriptorRegistry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.graphql.gloo.solo.io.GrpcDescriptorRegistry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.graphql.gloo.solo.io.GrpcDescriptorRegistry.toObject = function(includeInstance, msg) {
  var f, obj = {
    protoDescriptor: jspb.Message.getFieldWithDefault(msg, 1, ""),
    protoDescriptorBin: msg.getProtoDescriptorBin_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.graphql.gloo.solo.io.GrpcDescriptorRegistry}
 */
proto.graphql.gloo.solo.io.GrpcDescriptorRegistry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.graphql.gloo.solo.io.GrpcDescriptorRegistry;
  return proto.graphql.gloo.solo.io.GrpcDescriptorRegistry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.graphql.gloo.solo.io.GrpcDescriptorRegistry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.graphql.gloo.solo.io.GrpcDescriptorRegistry}
 */
proto.graphql.gloo.solo.io.GrpcDescriptorRegistry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProtoDescriptor(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setProtoDescriptorBin(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.graphql.gloo.solo.io.GrpcDescriptorRegistry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.graphql.gloo.solo.io.GrpcDescriptorRegistry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.graphql.gloo.solo.io.GrpcDescriptorRegistry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.graphql.gloo.solo.io.GrpcDescriptorRegistry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional string proto_descriptor = 1;
 * @return {string}
 */
proto.graphql.gloo.solo.io.GrpcDescriptorRegistry.prototype.getProtoDescriptor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.graphql.gloo.solo.io.GrpcDescriptorRegistry.prototype.setProtoDescriptor = function(value) {
  jspb.Message.setOneofField(this, 1, proto.graphql.gloo.solo.io.GrpcDescriptorRegistry.oneofGroups_[0], value);
};


proto.graphql.gloo.solo.io.GrpcDescriptorRegistry.prototype.clearProtoDescriptor = function() {
  jspb.Message.setOneofField(this, 1, proto.graphql.gloo.solo.io.GrpcDescriptorRegistry.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.graphql.gloo.solo.io.GrpcDescriptorRegistry.prototype.hasProtoDescriptor = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes proto_descriptor_bin = 2;
 * @return {!(string|Uint8Array)}
 */
proto.graphql.gloo.solo.io.GrpcDescriptorRegistry.prototype.getProtoDescriptorBin = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes proto_descriptor_bin = 2;
 * This is a type-conversion wrapper around `getProtoDescriptorBin()`
 * @return {string}
 */
proto.graphql.gloo.solo.io.GrpcDescriptorRegistry.prototype.getProtoDescriptorBin_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getProtoDescriptorBin()));
};


/**
 * optional bytes proto_descriptor_bin = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getProtoDescriptorBin()`
 * @return {!Uint8Array}
 */
proto.graphql.gloo.solo.io.GrpcDescriptorRegistry.prototype.getProtoDescriptorBin_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getProtoDescriptorBin()));
};


/** @param {!(string|Uint8Array)} value */
proto.graphql.gloo.solo.io.GrpcDescriptorRegistry.prototype.setProtoDescriptorBin = function(value) {
  jspb.Message.setOneofField(this, 2, proto.graphql.gloo.solo.io.GrpcDescriptorRegistry.oneofGroups_[0], value);
};


proto.graphql.gloo.solo.io.GrpcDescriptorRegistry.prototype.clearProtoDescriptorBin = function() {
  jspb.Message.setOneofField(this, 2, proto.graphql.gloo.solo.io.GrpcDescriptorRegistry.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.graphql.gloo.solo.io.GrpcDescriptorRegistry.prototype.hasProtoDescriptorBin = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.graphql.gloo.solo.io.GrpcResolver = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.graphql.gloo.solo.io.GrpcResolver, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.graphql.gloo.solo.io.GrpcResolver.displayName = 'proto.graphql.gloo.solo.io.GrpcResolver';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.graphql.gloo.solo.io.GrpcResolver.prototype.toObject = function(opt_includeInstance) {
  return proto.graphql.gloo.solo.io.GrpcResolver.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.graphql.gloo.solo.io.GrpcResolver} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.graphql.gloo.solo.io.GrpcResolver.toObject = function(includeInstance, msg) {
  var f, obj = {
    upstreamRef: (f = msg.getUpstreamRef()) && github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.toObject(includeInstance, f),
    requestTransform: (f = msg.getRequestTransform()) && proto.graphql.gloo.solo.io.GrpcRequestTemplate.toObject(includeInstance, f),
    spanName: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.graphql.gloo.solo.io.GrpcResolver}
 */
proto.graphql.gloo.solo.io.GrpcResolver.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.graphql.gloo.solo.io.GrpcResolver;
  return proto.graphql.gloo.solo.io.GrpcResolver.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.graphql.gloo.solo.io.GrpcResolver} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.graphql.gloo.solo.io.GrpcResolver}
 */
proto.graphql.gloo.solo.io.GrpcResolver.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef;
      reader.readMessage(value,github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.deserializeBinaryFromReader);
      msg.setUpstreamRef(value);
      break;
    case 2:
      var value = new proto.graphql.gloo.solo.io.GrpcRequestTemplate;
      reader.readMessage(value,proto.graphql.gloo.solo.io.GrpcRequestTemplate.deserializeBinaryFromReader);
      msg.setRequestTransform(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSpanName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.graphql.gloo.solo.io.GrpcResolver.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.graphql.gloo.solo.io.GrpcResolver.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.graphql.gloo.solo.io.GrpcResolver} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.graphql.gloo.solo.io.GrpcResolver.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpstreamRef();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.serializeBinaryToWriter
    );
  }
  f = message.getRequestTransform();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.graphql.gloo.solo.io.GrpcRequestTemplate.serializeBinaryToWriter
    );
  }
  f = message.getSpanName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional core.solo.io.ResourceRef upstream_ref = 1;
 * @return {?proto.core.solo.io.ResourceRef}
 */
proto.graphql.gloo.solo.io.GrpcResolver.prototype.getUpstreamRef = function() {
  return /** @type{?proto.core.solo.io.ResourceRef} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef, 1));
};


/** @param {?proto.core.solo.io.ResourceRef|undefined} value */
proto.graphql.gloo.solo.io.GrpcResolver.prototype.setUpstreamRef = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.graphql.gloo.solo.io.GrpcResolver.prototype.clearUpstreamRef = function() {
  this.setUpstreamRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.graphql.gloo.solo.io.GrpcResolver.prototype.hasUpstreamRef = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional GrpcRequestTemplate request_transform = 2;
 * @return {?proto.graphql.gloo.solo.io.GrpcRequestTemplate}
 */
proto.graphql.gloo.solo.io.GrpcResolver.prototype.getRequestTransform = function() {
  return /** @type{?proto.graphql.gloo.solo.io.GrpcRequestTemplate} */ (
    jspb.Message.getWrapperField(this, proto.graphql.gloo.solo.io.GrpcRequestTemplate, 2));
};


/** @param {?proto.graphql.gloo.solo.io.GrpcRequestTemplate|undefined} value */
proto.graphql.gloo.solo.io.GrpcResolver.prototype.setRequestTransform = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.graphql.gloo.solo.io.GrpcResolver.prototype.clearRequestTransform = function() {
  this.setRequestTransform(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.graphql.gloo.solo.io.GrpcResolver.prototype.hasRequestTransform = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string span_name = 4;
 * @return {string}
 */
proto.graphql.gloo.solo.io.GrpcResolver.prototype.getSpanName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.graphql.gloo.solo.io.GrpcResolver.prototype.setSpanName = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.graphql.gloo.solo.io.StitchedSchema = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.graphql.gloo.solo.io.StitchedSchema.repeatedFields_, null);
};
goog.inherits(proto.graphql.gloo.solo.io.StitchedSchema, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.graphql.gloo.solo.io.StitchedSchema.displayName = 'proto.graphql.gloo.solo.io.StitchedSchema';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.graphql.gloo.solo.io.StitchedSchema.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.graphql.gloo.solo.io.StitchedSchema.prototype.toObject = function(opt_includeInstance) {
  return proto.graphql.gloo.solo.io.StitchedSchema.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.graphql.gloo.solo.io.StitchedSchema} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.graphql.gloo.solo.io.StitchedSchema.toObject = function(includeInstance, msg) {
  var f, obj = {
    subschemasList: jspb.Message.toObjectList(msg.getSubschemasList(),
    proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.graphql.gloo.solo.io.StitchedSchema}
 */
proto.graphql.gloo.solo.io.StitchedSchema.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.graphql.gloo.solo.io.StitchedSchema;
  return proto.graphql.gloo.solo.io.StitchedSchema.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.graphql.gloo.solo.io.StitchedSchema} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.graphql.gloo.solo.io.StitchedSchema}
 */
proto.graphql.gloo.solo.io.StitchedSchema.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig;
      reader.readMessage(value,proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig.deserializeBinaryFromReader);
      msg.addSubschemas(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.graphql.gloo.solo.io.StitchedSchema.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.graphql.gloo.solo.io.StitchedSchema.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.graphql.gloo.solo.io.StitchedSchema} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.graphql.gloo.solo.io.StitchedSchema.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubschemasList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig.displayName = 'proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    namespace: jspb.Message.getFieldWithDefault(msg, 2, ""),
    typeMergeMap: (f = msg.getTypeMergeMap()) ? f.toObject(includeInstance, proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig.TypeMergeConfig.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig}
 */
proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig;
  return proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig}
 */
proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    case 3:
      var value = msg.getTypeMergeMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig.TypeMergeConfig.deserializeBinaryFromReader, "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTypeMergeMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig.TypeMergeConfig.serializeBinaryToWriter);
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig.TypeMergeConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig.TypeMergeConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig.TypeMergeConfig.displayName = 'proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig.TypeMergeConfig';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig.TypeMergeConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig.TypeMergeConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig.TypeMergeConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig.TypeMergeConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    selectionSet: jspb.Message.getFieldWithDefault(msg, 1, ""),
    queryName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    argsMap: (f = msg.getArgsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig.TypeMergeConfig}
 */
proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig.TypeMergeConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig.TypeMergeConfig;
  return proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig.TypeMergeConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig.TypeMergeConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig.TypeMergeConfig}
 */
proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig.TypeMergeConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSelectionSet(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setQueryName(value);
      break;
    case 3:
      var value = msg.getArgsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig.TypeMergeConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig.TypeMergeConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig.TypeMergeConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig.TypeMergeConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSelectionSet();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getQueryName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getArgsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string selection_set = 1;
 * @return {string}
 */
proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig.TypeMergeConfig.prototype.getSelectionSet = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig.TypeMergeConfig.prototype.setSelectionSet = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string query_name = 2;
 * @return {string}
 */
proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig.TypeMergeConfig.prototype.getQueryName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig.TypeMergeConfig.prototype.setQueryName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * map<string, string> args = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig.TypeMergeConfig.prototype.getArgsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig.TypeMergeConfig.prototype.clearArgsMap = function() {
  this.getArgsMap().clear();
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string namespace = 2;
 * @return {string}
 */
proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig.prototype.setNamespace = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * map<string, TypeMergeConfig> type_merge = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig.TypeMergeConfig>}
 */
proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig.prototype.getTypeMergeMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig.TypeMergeConfig>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig.TypeMergeConfig));
};


proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig.prototype.clearTypeMergeMap = function() {
  this.getTypeMergeMap().clear();
};


/**
 * repeated SubschemaConfig subschemas = 1;
 * @return {!Array<!proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig>}
 */
proto.graphql.gloo.solo.io.StitchedSchema.prototype.getSubschemasList = function() {
  return /** @type{!Array<!proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig, 1));
};


/** @param {!Array<!proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig>} value */
proto.graphql.gloo.solo.io.StitchedSchema.prototype.setSubschemasList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig=} opt_value
 * @param {number=} opt_index
 * @return {!proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig}
 */
proto.graphql.gloo.solo.io.StitchedSchema.prototype.addSubschemas = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.graphql.gloo.solo.io.StitchedSchema.SubschemaConfig, opt_index);
};


proto.graphql.gloo.solo.io.StitchedSchema.prototype.clearSubschemasList = function() {
  this.setSubschemasList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.graphql.gloo.solo.io.MockResolver = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.graphql.gloo.solo.io.MockResolver.oneofGroups_);
};
goog.inherits(proto.graphql.gloo.solo.io.MockResolver, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.graphql.gloo.solo.io.MockResolver.displayName = 'proto.graphql.gloo.solo.io.MockResolver';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.graphql.gloo.solo.io.MockResolver.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.graphql.gloo.solo.io.MockResolver.ResponseCase = {
  RESPONSE_NOT_SET: 0,
  SYNC_RESPONSE: 1,
  ASYNC_RESPONSE: 2,
  ERROR_RESPONSE: 3
};

/**
 * @return {proto.graphql.gloo.solo.io.MockResolver.ResponseCase}
 */
proto.graphql.gloo.solo.io.MockResolver.prototype.getResponseCase = function() {
  return /** @type {proto.graphql.gloo.solo.io.MockResolver.ResponseCase} */(jspb.Message.computeOneofCase(this, proto.graphql.gloo.solo.io.MockResolver.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.graphql.gloo.solo.io.MockResolver.prototype.toObject = function(opt_includeInstance) {
  return proto.graphql.gloo.solo.io.MockResolver.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.graphql.gloo.solo.io.MockResolver} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.graphql.gloo.solo.io.MockResolver.toObject = function(includeInstance, msg) {
  var f, obj = {
    syncResponse: (f = msg.getSyncResponse()) && google_protobuf_struct_pb.Value.toObject(includeInstance, f),
    asyncResponse: (f = msg.getAsyncResponse()) && proto.graphql.gloo.solo.io.MockResolver.AsyncResponse.toObject(includeInstance, f),
    errorResponse: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.graphql.gloo.solo.io.MockResolver}
 */
proto.graphql.gloo.solo.io.MockResolver.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.graphql.gloo.solo.io.MockResolver;
  return proto.graphql.gloo.solo.io.MockResolver.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.graphql.gloo.solo.io.MockResolver} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.graphql.gloo.solo.io.MockResolver}
 */
proto.graphql.gloo.solo.io.MockResolver.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_struct_pb.Value;
      reader.readMessage(value,google_protobuf_struct_pb.Value.deserializeBinaryFromReader);
      msg.setSyncResponse(value);
      break;
    case 2:
      var value = new proto.graphql.gloo.solo.io.MockResolver.AsyncResponse;
      reader.readMessage(value,proto.graphql.gloo.solo.io.MockResolver.AsyncResponse.deserializeBinaryFromReader);
      msg.setAsyncResponse(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.graphql.gloo.solo.io.MockResolver.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.graphql.gloo.solo.io.MockResolver.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.graphql.gloo.solo.io.MockResolver} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.graphql.gloo.solo.io.MockResolver.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSyncResponse();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_struct_pb.Value.serializeBinaryToWriter
    );
  }
  f = message.getAsyncResponse();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.graphql.gloo.solo.io.MockResolver.AsyncResponse.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.graphql.gloo.solo.io.MockResolver.AsyncResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.graphql.gloo.solo.io.MockResolver.AsyncResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.graphql.gloo.solo.io.MockResolver.AsyncResponse.displayName = 'proto.graphql.gloo.solo.io.MockResolver.AsyncResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.graphql.gloo.solo.io.MockResolver.AsyncResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.graphql.gloo.solo.io.MockResolver.AsyncResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.graphql.gloo.solo.io.MockResolver.AsyncResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.graphql.gloo.solo.io.MockResolver.AsyncResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    response: (f = msg.getResponse()) && google_protobuf_struct_pb.Value.toObject(includeInstance, f),
    delay: (f = msg.getDelay()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.graphql.gloo.solo.io.MockResolver.AsyncResponse}
 */
proto.graphql.gloo.solo.io.MockResolver.AsyncResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.graphql.gloo.solo.io.MockResolver.AsyncResponse;
  return proto.graphql.gloo.solo.io.MockResolver.AsyncResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.graphql.gloo.solo.io.MockResolver.AsyncResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.graphql.gloo.solo.io.MockResolver.AsyncResponse}
 */
proto.graphql.gloo.solo.io.MockResolver.AsyncResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_struct_pb.Value;
      reader.readMessage(value,google_protobuf_struct_pb.Value.deserializeBinaryFromReader);
      msg.setResponse(value);
      break;
    case 2:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setDelay(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.graphql.gloo.solo.io.MockResolver.AsyncResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.graphql.gloo.solo.io.MockResolver.AsyncResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.graphql.gloo.solo.io.MockResolver.AsyncResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.graphql.gloo.solo.io.MockResolver.AsyncResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResponse();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_struct_pb.Value.serializeBinaryToWriter
    );
  }
  f = message.getDelay();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Value response = 1;
 * @return {?proto.google.protobuf.Value}
 */
proto.graphql.gloo.solo.io.MockResolver.AsyncResponse.prototype.getResponse = function() {
  return /** @type{?proto.google.protobuf.Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Value, 1));
};


/** @param {?proto.google.protobuf.Value|undefined} value */
proto.graphql.gloo.solo.io.MockResolver.AsyncResponse.prototype.setResponse = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.graphql.gloo.solo.io.MockResolver.AsyncResponse.prototype.clearResponse = function() {
  this.setResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.graphql.gloo.solo.io.MockResolver.AsyncResponse.prototype.hasResponse = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Duration delay = 2;
 * @return {?proto.google.protobuf.Duration}
 */
proto.graphql.gloo.solo.io.MockResolver.AsyncResponse.prototype.getDelay = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 2));
};


/** @param {?proto.google.protobuf.Duration|undefined} value */
proto.graphql.gloo.solo.io.MockResolver.AsyncResponse.prototype.setDelay = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.graphql.gloo.solo.io.MockResolver.AsyncResponse.prototype.clearDelay = function() {
  this.setDelay(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.graphql.gloo.solo.io.MockResolver.AsyncResponse.prototype.hasDelay = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Value sync_response = 1;
 * @return {?proto.google.protobuf.Value}
 */
proto.graphql.gloo.solo.io.MockResolver.prototype.getSyncResponse = function() {
  return /** @type{?proto.google.protobuf.Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Value, 1));
};


/** @param {?proto.google.protobuf.Value|undefined} value */
proto.graphql.gloo.solo.io.MockResolver.prototype.setSyncResponse = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.graphql.gloo.solo.io.MockResolver.oneofGroups_[0], value);
};


proto.graphql.gloo.solo.io.MockResolver.prototype.clearSyncResponse = function() {
  this.setSyncResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.graphql.gloo.solo.io.MockResolver.prototype.hasSyncResponse = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional AsyncResponse async_response = 2;
 * @return {?proto.graphql.gloo.solo.io.MockResolver.AsyncResponse}
 */
proto.graphql.gloo.solo.io.MockResolver.prototype.getAsyncResponse = function() {
  return /** @type{?proto.graphql.gloo.solo.io.MockResolver.AsyncResponse} */ (
    jspb.Message.getWrapperField(this, proto.graphql.gloo.solo.io.MockResolver.AsyncResponse, 2));
};


/** @param {?proto.graphql.gloo.solo.io.MockResolver.AsyncResponse|undefined} value */
proto.graphql.gloo.solo.io.MockResolver.prototype.setAsyncResponse = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.graphql.gloo.solo.io.MockResolver.oneofGroups_[0], value);
};


proto.graphql.gloo.solo.io.MockResolver.prototype.clearAsyncResponse = function() {
  this.setAsyncResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.graphql.gloo.solo.io.MockResolver.prototype.hasAsyncResponse = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string error_response = 3;
 * @return {string}
 */
proto.graphql.gloo.solo.io.MockResolver.prototype.getErrorResponse = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.graphql.gloo.solo.io.MockResolver.prototype.setErrorResponse = function(value) {
  jspb.Message.setOneofField(this, 3, proto.graphql.gloo.solo.io.MockResolver.oneofGroups_[0], value);
};


proto.graphql.gloo.solo.io.MockResolver.prototype.clearErrorResponse = function() {
  jspb.Message.setOneofField(this, 3, proto.graphql.gloo.solo.io.MockResolver.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.graphql.gloo.solo.io.MockResolver.prototype.hasErrorResponse = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.graphql.gloo.solo.io.Resolution = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.graphql.gloo.solo.io.Resolution.oneofGroups_);
};
goog.inherits(proto.graphql.gloo.solo.io.Resolution, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.graphql.gloo.solo.io.Resolution.displayName = 'proto.graphql.gloo.solo.io.Resolution';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.graphql.gloo.solo.io.Resolution.oneofGroups_ = [[1,2,4]];

/**
 * @enum {number}
 */
proto.graphql.gloo.solo.io.Resolution.ResolverCase = {
  RESOLVER_NOT_SET: 0,
  REST_RESOLVER: 1,
  GRPC_RESOLVER: 2,
  MOCK_RESOLVER: 4
};

/**
 * @return {proto.graphql.gloo.solo.io.Resolution.ResolverCase}
 */
proto.graphql.gloo.solo.io.Resolution.prototype.getResolverCase = function() {
  return /** @type {proto.graphql.gloo.solo.io.Resolution.ResolverCase} */(jspb.Message.computeOneofCase(this, proto.graphql.gloo.solo.io.Resolution.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.graphql.gloo.solo.io.Resolution.prototype.toObject = function(opt_includeInstance) {
  return proto.graphql.gloo.solo.io.Resolution.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.graphql.gloo.solo.io.Resolution} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.graphql.gloo.solo.io.Resolution.toObject = function(includeInstance, msg) {
  var f, obj = {
    restResolver: (f = msg.getRestResolver()) && proto.graphql.gloo.solo.io.RESTResolver.toObject(includeInstance, f),
    grpcResolver: (f = msg.getGrpcResolver()) && proto.graphql.gloo.solo.io.GrpcResolver.toObject(includeInstance, f),
    mockResolver: (f = msg.getMockResolver()) && proto.graphql.gloo.solo.io.MockResolver.toObject(includeInstance, f),
    statPrefix: (f = msg.getStatPrefix()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.graphql.gloo.solo.io.Resolution}
 */
proto.graphql.gloo.solo.io.Resolution.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.graphql.gloo.solo.io.Resolution;
  return proto.graphql.gloo.solo.io.Resolution.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.graphql.gloo.solo.io.Resolution} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.graphql.gloo.solo.io.Resolution}
 */
proto.graphql.gloo.solo.io.Resolution.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.graphql.gloo.solo.io.RESTResolver;
      reader.readMessage(value,proto.graphql.gloo.solo.io.RESTResolver.deserializeBinaryFromReader);
      msg.setRestResolver(value);
      break;
    case 2:
      var value = new proto.graphql.gloo.solo.io.GrpcResolver;
      reader.readMessage(value,proto.graphql.gloo.solo.io.GrpcResolver.deserializeBinaryFromReader);
      msg.setGrpcResolver(value);
      break;
    case 4:
      var value = new proto.graphql.gloo.solo.io.MockResolver;
      reader.readMessage(value,proto.graphql.gloo.solo.io.MockResolver.deserializeBinaryFromReader);
      msg.setMockResolver(value);
      break;
    case 3:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setStatPrefix(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.graphql.gloo.solo.io.Resolution.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.graphql.gloo.solo.io.Resolution.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.graphql.gloo.solo.io.Resolution} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.graphql.gloo.solo.io.Resolution.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRestResolver();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.graphql.gloo.solo.io.RESTResolver.serializeBinaryToWriter
    );
  }
  f = message.getGrpcResolver();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.graphql.gloo.solo.io.GrpcResolver.serializeBinaryToWriter
    );
  }
  f = message.getMockResolver();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.graphql.gloo.solo.io.MockResolver.serializeBinaryToWriter
    );
  }
  f = message.getStatPrefix();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional RESTResolver rest_resolver = 1;
 * @return {?proto.graphql.gloo.solo.io.RESTResolver}
 */
proto.graphql.gloo.solo.io.Resolution.prototype.getRestResolver = function() {
  return /** @type{?proto.graphql.gloo.solo.io.RESTResolver} */ (
    jspb.Message.getWrapperField(this, proto.graphql.gloo.solo.io.RESTResolver, 1));
};


/** @param {?proto.graphql.gloo.solo.io.RESTResolver|undefined} value */
proto.graphql.gloo.solo.io.Resolution.prototype.setRestResolver = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.graphql.gloo.solo.io.Resolution.oneofGroups_[0], value);
};


proto.graphql.gloo.solo.io.Resolution.prototype.clearRestResolver = function() {
  this.setRestResolver(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.graphql.gloo.solo.io.Resolution.prototype.hasRestResolver = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional GrpcResolver grpc_resolver = 2;
 * @return {?proto.graphql.gloo.solo.io.GrpcResolver}
 */
proto.graphql.gloo.solo.io.Resolution.prototype.getGrpcResolver = function() {
  return /** @type{?proto.graphql.gloo.solo.io.GrpcResolver} */ (
    jspb.Message.getWrapperField(this, proto.graphql.gloo.solo.io.GrpcResolver, 2));
};


/** @param {?proto.graphql.gloo.solo.io.GrpcResolver|undefined} value */
proto.graphql.gloo.solo.io.Resolution.prototype.setGrpcResolver = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.graphql.gloo.solo.io.Resolution.oneofGroups_[0], value);
};


proto.graphql.gloo.solo.io.Resolution.prototype.clearGrpcResolver = function() {
  this.setGrpcResolver(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.graphql.gloo.solo.io.Resolution.prototype.hasGrpcResolver = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional MockResolver mock_resolver = 4;
 * @return {?proto.graphql.gloo.solo.io.MockResolver}
 */
proto.graphql.gloo.solo.io.Resolution.prototype.getMockResolver = function() {
  return /** @type{?proto.graphql.gloo.solo.io.MockResolver} */ (
    jspb.Message.getWrapperField(this, proto.graphql.gloo.solo.io.MockResolver, 4));
};


/** @param {?proto.graphql.gloo.solo.io.MockResolver|undefined} value */
proto.graphql.gloo.solo.io.Resolution.prototype.setMockResolver = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.graphql.gloo.solo.io.Resolution.oneofGroups_[0], value);
};


proto.graphql.gloo.solo.io.Resolution.prototype.clearMockResolver = function() {
  this.setMockResolver(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.graphql.gloo.solo.io.Resolution.prototype.hasMockResolver = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.StringValue stat_prefix = 3;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.graphql.gloo.solo.io.Resolution.prototype.getStatPrefix = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 3));
};


/** @param {?proto.google.protobuf.StringValue|undefined} value */
proto.graphql.gloo.solo.io.Resolution.prototype.setStatPrefix = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.graphql.gloo.solo.io.Resolution.prototype.clearStatPrefix = function() {
  this.setStatPrefix(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.graphql.gloo.solo.io.Resolution.prototype.hasStatPrefix = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.graphql.gloo.solo.io.GraphQLApiSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.graphql.gloo.solo.io.GraphQLApiSpec.repeatedFields_, proto.graphql.gloo.solo.io.GraphQLApiSpec.oneofGroups_);
};
goog.inherits(proto.graphql.gloo.solo.io.GraphQLApiSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.graphql.gloo.solo.io.GraphQLApiSpec.displayName = 'proto.graphql.gloo.solo.io.GraphQLApiSpec';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.graphql.gloo.solo.io.GraphQLApiSpec.repeatedFields_ = [5];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.graphql.gloo.solo.io.GraphQLApiSpec.oneofGroups_ = [[6,7]];

/**
 * @enum {number}
 */
proto.graphql.gloo.solo.io.GraphQLApiSpec.SchemaCase = {
  SCHEMA_NOT_SET: 0,
  EXECUTABLE_SCHEMA: 6,
  STITCHED_SCHEMA: 7
};

/**
 * @return {proto.graphql.gloo.solo.io.GraphQLApiSpec.SchemaCase}
 */
proto.graphql.gloo.solo.io.GraphQLApiSpec.prototype.getSchemaCase = function() {
  return /** @type {proto.graphql.gloo.solo.io.GraphQLApiSpec.SchemaCase} */(jspb.Message.computeOneofCase(this, proto.graphql.gloo.solo.io.GraphQLApiSpec.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.graphql.gloo.solo.io.GraphQLApiSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.graphql.gloo.solo.io.GraphQLApiSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.graphql.gloo.solo.io.GraphQLApiSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.graphql.gloo.solo.io.GraphQLApiSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    executableSchema: (f = msg.getExecutableSchema()) && proto.graphql.gloo.solo.io.ExecutableSchema.toObject(includeInstance, f),
    stitchedSchema: (f = msg.getStitchedSchema()) && proto.graphql.gloo.solo.io.StitchedSchema.toObject(includeInstance, f),
    statPrefix: (f = msg.getStatPrefix()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    persistedQueryCacheConfig: (f = msg.getPersistedQueryCacheConfig()) && proto.graphql.gloo.solo.io.PersistedQueryCacheConfig.toObject(includeInstance, f),
    allowedQueryHashesList: jspb.Message.getRepeatedField(msg, 5)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.graphql.gloo.solo.io.GraphQLApiSpec}
 */
proto.graphql.gloo.solo.io.GraphQLApiSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.graphql.gloo.solo.io.GraphQLApiSpec;
  return proto.graphql.gloo.solo.io.GraphQLApiSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.graphql.gloo.solo.io.GraphQLApiSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.graphql.gloo.solo.io.GraphQLApiSpec}
 */
proto.graphql.gloo.solo.io.GraphQLApiSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 6:
      var value = new proto.graphql.gloo.solo.io.ExecutableSchema;
      reader.readMessage(value,proto.graphql.gloo.solo.io.ExecutableSchema.deserializeBinaryFromReader);
      msg.setExecutableSchema(value);
      break;
    case 7:
      var value = new proto.graphql.gloo.solo.io.StitchedSchema;
      reader.readMessage(value,proto.graphql.gloo.solo.io.StitchedSchema.deserializeBinaryFromReader);
      msg.setStitchedSchema(value);
      break;
    case 3:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setStatPrefix(value);
      break;
    case 4:
      var value = new proto.graphql.gloo.solo.io.PersistedQueryCacheConfig;
      reader.readMessage(value,proto.graphql.gloo.solo.io.PersistedQueryCacheConfig.deserializeBinaryFromReader);
      msg.setPersistedQueryCacheConfig(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addAllowedQueryHashes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.graphql.gloo.solo.io.GraphQLApiSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.graphql.gloo.solo.io.GraphQLApiSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.graphql.gloo.solo.io.GraphQLApiSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.graphql.gloo.solo.io.GraphQLApiSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExecutableSchema();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.graphql.gloo.solo.io.ExecutableSchema.serializeBinaryToWriter
    );
  }
  f = message.getStitchedSchema();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.graphql.gloo.solo.io.StitchedSchema.serializeBinaryToWriter
    );
  }
  f = message.getStatPrefix();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getPersistedQueryCacheConfig();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.graphql.gloo.solo.io.PersistedQueryCacheConfig.serializeBinaryToWriter
    );
  }
  f = message.getAllowedQueryHashesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
};


/**
 * optional ExecutableSchema executable_schema = 6;
 * @return {?proto.graphql.gloo.solo.io.ExecutableSchema}
 */
proto.graphql.gloo.solo.io.GraphQLApiSpec.prototype.getExecutableSchema = function() {
  return /** @type{?proto.graphql.gloo.solo.io.ExecutableSchema} */ (
    jspb.Message.getWrapperField(this, proto.graphql.gloo.solo.io.ExecutableSchema, 6));
};


/** @param {?proto.graphql.gloo.solo.io.ExecutableSchema|undefined} value */
proto.graphql.gloo.solo.io.GraphQLApiSpec.prototype.setExecutableSchema = function(value) {
  jspb.Message.setOneofWrapperField(this, 6, proto.graphql.gloo.solo.io.GraphQLApiSpec.oneofGroups_[0], value);
};


proto.graphql.gloo.solo.io.GraphQLApiSpec.prototype.clearExecutableSchema = function() {
  this.setExecutableSchema(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.graphql.gloo.solo.io.GraphQLApiSpec.prototype.hasExecutableSchema = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional StitchedSchema stitched_schema = 7;
 * @return {?proto.graphql.gloo.solo.io.StitchedSchema}
 */
proto.graphql.gloo.solo.io.GraphQLApiSpec.prototype.getStitchedSchema = function() {
  return /** @type{?proto.graphql.gloo.solo.io.StitchedSchema} */ (
    jspb.Message.getWrapperField(this, proto.graphql.gloo.solo.io.StitchedSchema, 7));
};


/** @param {?proto.graphql.gloo.solo.io.StitchedSchema|undefined} value */
proto.graphql.gloo.solo.io.GraphQLApiSpec.prototype.setStitchedSchema = function(value) {
  jspb.Message.setOneofWrapperField(this, 7, proto.graphql.gloo.solo.io.GraphQLApiSpec.oneofGroups_[0], value);
};


proto.graphql.gloo.solo.io.GraphQLApiSpec.prototype.clearStitchedSchema = function() {
  this.setStitchedSchema(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.graphql.gloo.solo.io.GraphQLApiSpec.prototype.hasStitchedSchema = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional google.protobuf.StringValue stat_prefix = 3;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.graphql.gloo.solo.io.GraphQLApiSpec.prototype.getStatPrefix = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 3));
};


/** @param {?proto.google.protobuf.StringValue|undefined} value */
proto.graphql.gloo.solo.io.GraphQLApiSpec.prototype.setStatPrefix = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.graphql.gloo.solo.io.GraphQLApiSpec.prototype.clearStatPrefix = function() {
  this.setStatPrefix(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.graphql.gloo.solo.io.GraphQLApiSpec.prototype.hasStatPrefix = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional PersistedQueryCacheConfig persisted_query_cache_config = 4;
 * @return {?proto.graphql.gloo.solo.io.PersistedQueryCacheConfig}
 */
proto.graphql.gloo.solo.io.GraphQLApiSpec.prototype.getPersistedQueryCacheConfig = function() {
  return /** @type{?proto.graphql.gloo.solo.io.PersistedQueryCacheConfig} */ (
    jspb.Message.getWrapperField(this, proto.graphql.gloo.solo.io.PersistedQueryCacheConfig, 4));
};


/** @param {?proto.graphql.gloo.solo.io.PersistedQueryCacheConfig|undefined} value */
proto.graphql.gloo.solo.io.GraphQLApiSpec.prototype.setPersistedQueryCacheConfig = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.graphql.gloo.solo.io.GraphQLApiSpec.prototype.clearPersistedQueryCacheConfig = function() {
  this.setPersistedQueryCacheConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.graphql.gloo.solo.io.GraphQLApiSpec.prototype.hasPersistedQueryCacheConfig = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated string allowed_query_hashes = 5;
 * @return {!Array<string>}
 */
proto.graphql.gloo.solo.io.GraphQLApiSpec.prototype.getAllowedQueryHashesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/** @param {!Array<string>} value */
proto.graphql.gloo.solo.io.GraphQLApiSpec.prototype.setAllowedQueryHashesList = function(value) {
  jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.graphql.gloo.solo.io.GraphQLApiSpec.prototype.addAllowedQueryHashes = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


proto.graphql.gloo.solo.io.GraphQLApiSpec.prototype.clearAllowedQueryHashesList = function() {
  this.setAllowedQueryHashesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.graphql.gloo.solo.io.PersistedQueryCacheConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.graphql.gloo.solo.io.PersistedQueryCacheConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.graphql.gloo.solo.io.PersistedQueryCacheConfig.displayName = 'proto.graphql.gloo.solo.io.PersistedQueryCacheConfig';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.graphql.gloo.solo.io.PersistedQueryCacheConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.graphql.gloo.solo.io.PersistedQueryCacheConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.graphql.gloo.solo.io.PersistedQueryCacheConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.graphql.gloo.solo.io.PersistedQueryCacheConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    cacheSize: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.graphql.gloo.solo.io.PersistedQueryCacheConfig}
 */
proto.graphql.gloo.solo.io.PersistedQueryCacheConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.graphql.gloo.solo.io.PersistedQueryCacheConfig;
  return proto.graphql.gloo.solo.io.PersistedQueryCacheConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.graphql.gloo.solo.io.PersistedQueryCacheConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.graphql.gloo.solo.io.PersistedQueryCacheConfig}
 */
proto.graphql.gloo.solo.io.PersistedQueryCacheConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCacheSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.graphql.gloo.solo.io.PersistedQueryCacheConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.graphql.gloo.solo.io.PersistedQueryCacheConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.graphql.gloo.solo.io.PersistedQueryCacheConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.graphql.gloo.solo.io.PersistedQueryCacheConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCacheSize();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 cache_size = 1;
 * @return {number}
 */
proto.graphql.gloo.solo.io.PersistedQueryCacheConfig.prototype.getCacheSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.graphql.gloo.solo.io.PersistedQueryCacheConfig.prototype.setCacheSize = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.graphql.gloo.solo.io.ExecutableSchema = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.graphql.gloo.solo.io.ExecutableSchema, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.graphql.gloo.solo.io.ExecutableSchema.displayName = 'proto.graphql.gloo.solo.io.ExecutableSchema';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.graphql.gloo.solo.io.ExecutableSchema.prototype.toObject = function(opt_includeInstance) {
  return proto.graphql.gloo.solo.io.ExecutableSchema.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.graphql.gloo.solo.io.ExecutableSchema} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.graphql.gloo.solo.io.ExecutableSchema.toObject = function(includeInstance, msg) {
  var f, obj = {
    schemaDefinition: jspb.Message.getFieldWithDefault(msg, 1, ""),
    executor: (f = msg.getExecutor()) && proto.graphql.gloo.solo.io.Executor.toObject(includeInstance, f),
    grpcDescriptorRegistry: (f = msg.getGrpcDescriptorRegistry()) && proto.graphql.gloo.solo.io.GrpcDescriptorRegistry.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.graphql.gloo.solo.io.ExecutableSchema}
 */
proto.graphql.gloo.solo.io.ExecutableSchema.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.graphql.gloo.solo.io.ExecutableSchema;
  return proto.graphql.gloo.solo.io.ExecutableSchema.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.graphql.gloo.solo.io.ExecutableSchema} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.graphql.gloo.solo.io.ExecutableSchema}
 */
proto.graphql.gloo.solo.io.ExecutableSchema.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchemaDefinition(value);
      break;
    case 2:
      var value = new proto.graphql.gloo.solo.io.Executor;
      reader.readMessage(value,proto.graphql.gloo.solo.io.Executor.deserializeBinaryFromReader);
      msg.setExecutor(value);
      break;
    case 3:
      var value = new proto.graphql.gloo.solo.io.GrpcDescriptorRegistry;
      reader.readMessage(value,proto.graphql.gloo.solo.io.GrpcDescriptorRegistry.deserializeBinaryFromReader);
      msg.setGrpcDescriptorRegistry(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.graphql.gloo.solo.io.ExecutableSchema.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.graphql.gloo.solo.io.ExecutableSchema.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.graphql.gloo.solo.io.ExecutableSchema} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.graphql.gloo.solo.io.ExecutableSchema.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchemaDefinition();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getExecutor();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.graphql.gloo.solo.io.Executor.serializeBinaryToWriter
    );
  }
  f = message.getGrpcDescriptorRegistry();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.graphql.gloo.solo.io.GrpcDescriptorRegistry.serializeBinaryToWriter
    );
  }
};


/**
 * optional string schema_definition = 1;
 * @return {string}
 */
proto.graphql.gloo.solo.io.ExecutableSchema.prototype.getSchemaDefinition = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.graphql.gloo.solo.io.ExecutableSchema.prototype.setSchemaDefinition = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Executor executor = 2;
 * @return {?proto.graphql.gloo.solo.io.Executor}
 */
proto.graphql.gloo.solo.io.ExecutableSchema.prototype.getExecutor = function() {
  return /** @type{?proto.graphql.gloo.solo.io.Executor} */ (
    jspb.Message.getWrapperField(this, proto.graphql.gloo.solo.io.Executor, 2));
};


/** @param {?proto.graphql.gloo.solo.io.Executor|undefined} value */
proto.graphql.gloo.solo.io.ExecutableSchema.prototype.setExecutor = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.graphql.gloo.solo.io.ExecutableSchema.prototype.clearExecutor = function() {
  this.setExecutor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.graphql.gloo.solo.io.ExecutableSchema.prototype.hasExecutor = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional GrpcDescriptorRegistry grpc_descriptor_registry = 3;
 * @return {?proto.graphql.gloo.solo.io.GrpcDescriptorRegistry}
 */
proto.graphql.gloo.solo.io.ExecutableSchema.prototype.getGrpcDescriptorRegistry = function() {
  return /** @type{?proto.graphql.gloo.solo.io.GrpcDescriptorRegistry} */ (
    jspb.Message.getWrapperField(this, proto.graphql.gloo.solo.io.GrpcDescriptorRegistry, 3));
};


/** @param {?proto.graphql.gloo.solo.io.GrpcDescriptorRegistry|undefined} value */
proto.graphql.gloo.solo.io.ExecutableSchema.prototype.setGrpcDescriptorRegistry = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.graphql.gloo.solo.io.ExecutableSchema.prototype.clearGrpcDescriptorRegistry = function() {
  this.setGrpcDescriptorRegistry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.graphql.gloo.solo.io.ExecutableSchema.prototype.hasGrpcDescriptorRegistry = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.graphql.gloo.solo.io.Executor = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.graphql.gloo.solo.io.Executor.oneofGroups_);
};
goog.inherits(proto.graphql.gloo.solo.io.Executor, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.graphql.gloo.solo.io.Executor.displayName = 'proto.graphql.gloo.solo.io.Executor';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.graphql.gloo.solo.io.Executor.oneofGroups_ = [[1]];

/**
 * @enum {number}
 */
proto.graphql.gloo.solo.io.Executor.ExecutorCase = {
  EXECUTOR_NOT_SET: 0,
  LOCAL: 1
};

/**
 * @return {proto.graphql.gloo.solo.io.Executor.ExecutorCase}
 */
proto.graphql.gloo.solo.io.Executor.prototype.getExecutorCase = function() {
  return /** @type {proto.graphql.gloo.solo.io.Executor.ExecutorCase} */(jspb.Message.computeOneofCase(this, proto.graphql.gloo.solo.io.Executor.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.graphql.gloo.solo.io.Executor.prototype.toObject = function(opt_includeInstance) {
  return proto.graphql.gloo.solo.io.Executor.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.graphql.gloo.solo.io.Executor} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.graphql.gloo.solo.io.Executor.toObject = function(includeInstance, msg) {
  var f, obj = {
    local: (f = msg.getLocal()) && proto.graphql.gloo.solo.io.Executor.Local.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.graphql.gloo.solo.io.Executor}
 */
proto.graphql.gloo.solo.io.Executor.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.graphql.gloo.solo.io.Executor;
  return proto.graphql.gloo.solo.io.Executor.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.graphql.gloo.solo.io.Executor} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.graphql.gloo.solo.io.Executor}
 */
proto.graphql.gloo.solo.io.Executor.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.graphql.gloo.solo.io.Executor.Local;
      reader.readMessage(value,proto.graphql.gloo.solo.io.Executor.Local.deserializeBinaryFromReader);
      msg.setLocal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.graphql.gloo.solo.io.Executor.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.graphql.gloo.solo.io.Executor.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.graphql.gloo.solo.io.Executor} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.graphql.gloo.solo.io.Executor.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLocal();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.graphql.gloo.solo.io.Executor.Local.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.graphql.gloo.solo.io.Executor.Local = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.graphql.gloo.solo.io.Executor.Local, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.graphql.gloo.solo.io.Executor.Local.displayName = 'proto.graphql.gloo.solo.io.Executor.Local';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.graphql.gloo.solo.io.Executor.Local.prototype.toObject = function(opt_includeInstance) {
  return proto.graphql.gloo.solo.io.Executor.Local.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.graphql.gloo.solo.io.Executor.Local} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.graphql.gloo.solo.io.Executor.Local.toObject = function(includeInstance, msg) {
  var f, obj = {
    resolutionsMap: (f = msg.getResolutionsMap()) ? f.toObject(includeInstance, proto.graphql.gloo.solo.io.Resolution.toObject) : [],
    enableIntrospection: jspb.Message.getFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.graphql.gloo.solo.io.Executor.Local}
 */
proto.graphql.gloo.solo.io.Executor.Local.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.graphql.gloo.solo.io.Executor.Local;
  return proto.graphql.gloo.solo.io.Executor.Local.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.graphql.gloo.solo.io.Executor.Local} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.graphql.gloo.solo.io.Executor.Local}
 */
proto.graphql.gloo.solo.io.Executor.Local.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getResolutionsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.graphql.gloo.solo.io.Resolution.deserializeBinaryFromReader, "");
         });
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableIntrospection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.graphql.gloo.solo.io.Executor.Local.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.graphql.gloo.solo.io.Executor.Local.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.graphql.gloo.solo.io.Executor.Local} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.graphql.gloo.solo.io.Executor.Local.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResolutionsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.graphql.gloo.solo.io.Resolution.serializeBinaryToWriter);
  }
  f = message.getEnableIntrospection();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * map<string, Resolution> resolutions = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.graphql.gloo.solo.io.Resolution>}
 */
proto.graphql.gloo.solo.io.Executor.Local.prototype.getResolutionsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.graphql.gloo.solo.io.Resolution>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.graphql.gloo.solo.io.Resolution));
};


proto.graphql.gloo.solo.io.Executor.Local.prototype.clearResolutionsMap = function() {
  this.getResolutionsMap().clear();
};


/**
 * optional bool enable_introspection = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.graphql.gloo.solo.io.Executor.Local.prototype.getEnableIntrospection = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.graphql.gloo.solo.io.Executor.Local.prototype.setEnableIntrospection = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional Local local = 1;
 * @return {?proto.graphql.gloo.solo.io.Executor.Local}
 */
proto.graphql.gloo.solo.io.Executor.prototype.getLocal = function() {
  return /** @type{?proto.graphql.gloo.solo.io.Executor.Local} */ (
    jspb.Message.getWrapperField(this, proto.graphql.gloo.solo.io.Executor.Local, 1));
};


/** @param {?proto.graphql.gloo.solo.io.Executor.Local|undefined} value */
proto.graphql.gloo.solo.io.Executor.prototype.setLocal = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.graphql.gloo.solo.io.Executor.oneofGroups_[0], value);
};


proto.graphql.gloo.solo.io.Executor.prototype.clearLocal = function() {
  this.setLocal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.graphql.gloo.solo.io.Executor.prototype.hasLocal = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.graphql.gloo.solo.io.GraphQLApiStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.graphql.gloo.solo.io.GraphQLApiStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.graphql.gloo.solo.io.GraphQLApiStatus.displayName = 'proto.graphql.gloo.solo.io.GraphQLApiStatus';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.graphql.gloo.solo.io.GraphQLApiStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.graphql.gloo.solo.io.GraphQLApiStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.graphql.gloo.solo.io.GraphQLApiStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.graphql.gloo.solo.io.GraphQLApiStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    state: jspb.Message.getFieldWithDefault(msg, 1, 0),
    reason: jspb.Message.getFieldWithDefault(msg, 2, ""),
    reportedBy: jspb.Message.getFieldWithDefault(msg, 3, ""),
    subresourceStatusesMap: (f = msg.getSubresourceStatusesMap()) ? f.toObject(includeInstance, proto.graphql.gloo.solo.io.GraphQLApiStatus.toObject) : [],
    details: (f = msg.getDetails()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.graphql.gloo.solo.io.GraphQLApiStatus}
 */
proto.graphql.gloo.solo.io.GraphQLApiStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.graphql.gloo.solo.io.GraphQLApiStatus;
  return proto.graphql.gloo.solo.io.GraphQLApiStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.graphql.gloo.solo.io.GraphQLApiStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.graphql.gloo.solo.io.GraphQLApiStatus}
 */
proto.graphql.gloo.solo.io.GraphQLApiStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.graphql.gloo.solo.io.GraphQLApiStatus.State} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setReason(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setReportedBy(value);
      break;
    case 4:
      var value = msg.getSubresourceStatusesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.graphql.gloo.solo.io.GraphQLApiStatus.deserializeBinaryFromReader, "");
         });
      break;
    case 5:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setDetails(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.graphql.gloo.solo.io.GraphQLApiStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.graphql.gloo.solo.io.GraphQLApiStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.graphql.gloo.solo.io.GraphQLApiStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.graphql.gloo.solo.io.GraphQLApiStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getReason();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getReportedBy();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSubresourceStatusesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.graphql.gloo.solo.io.GraphQLApiStatus.serializeBinaryToWriter);
  }
  f = message.getDetails();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.graphql.gloo.solo.io.GraphQLApiStatus.State = {
  PENDING: 0,
  ACCEPTED: 1,
  REJECTED: 2,
  WARNING: 3
};

/**
 * optional State state = 1;
 * @return {!proto.graphql.gloo.solo.io.GraphQLApiStatus.State}
 */
proto.graphql.gloo.solo.io.GraphQLApiStatus.prototype.getState = function() {
  return /** @type {!proto.graphql.gloo.solo.io.GraphQLApiStatus.State} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.graphql.gloo.solo.io.GraphQLApiStatus.State} value */
proto.graphql.gloo.solo.io.GraphQLApiStatus.prototype.setState = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string reason = 2;
 * @return {string}
 */
proto.graphql.gloo.solo.io.GraphQLApiStatus.prototype.getReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.graphql.gloo.solo.io.GraphQLApiStatus.prototype.setReason = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string reported_by = 3;
 * @return {string}
 */
proto.graphql.gloo.solo.io.GraphQLApiStatus.prototype.getReportedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.graphql.gloo.solo.io.GraphQLApiStatus.prototype.setReportedBy = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * map<string, GraphQLApiStatus> subresource_statuses = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.graphql.gloo.solo.io.GraphQLApiStatus>}
 */
proto.graphql.gloo.solo.io.GraphQLApiStatus.prototype.getSubresourceStatusesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.graphql.gloo.solo.io.GraphQLApiStatus>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      proto.graphql.gloo.solo.io.GraphQLApiStatus));
};


proto.graphql.gloo.solo.io.GraphQLApiStatus.prototype.clearSubresourceStatusesMap = function() {
  this.getSubresourceStatusesMap().clear();
};


/**
 * optional google.protobuf.Struct details = 5;
 * @return {?proto.google.protobuf.Struct}
 */
proto.graphql.gloo.solo.io.GraphQLApiStatus.prototype.getDetails = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 5));
};


/** @param {?proto.google.protobuf.Struct|undefined} value */
proto.graphql.gloo.solo.io.GraphQLApiStatus.prototype.setDetails = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.graphql.gloo.solo.io.GraphQLApiStatus.prototype.clearDetails = function() {
  this.setDetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.graphql.gloo.solo.io.GraphQLApiStatus.prototype.hasDetails = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.graphql.gloo.solo.io.GraphQLApiNamespacedStatuses = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.graphql.gloo.solo.io.GraphQLApiNamespacedStatuses, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.graphql.gloo.solo.io.GraphQLApiNamespacedStatuses.displayName = 'proto.graphql.gloo.solo.io.GraphQLApiNamespacedStatuses';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.graphql.gloo.solo.io.GraphQLApiNamespacedStatuses.prototype.toObject = function(opt_includeInstance) {
  return proto.graphql.gloo.solo.io.GraphQLApiNamespacedStatuses.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.graphql.gloo.solo.io.GraphQLApiNamespacedStatuses} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.graphql.gloo.solo.io.GraphQLApiNamespacedStatuses.toObject = function(includeInstance, msg) {
  var f, obj = {
    statusesMap: (f = msg.getStatusesMap()) ? f.toObject(includeInstance, proto.graphql.gloo.solo.io.GraphQLApiStatus.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.graphql.gloo.solo.io.GraphQLApiNamespacedStatuses}
 */
proto.graphql.gloo.solo.io.GraphQLApiNamespacedStatuses.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.graphql.gloo.solo.io.GraphQLApiNamespacedStatuses;
  return proto.graphql.gloo.solo.io.GraphQLApiNamespacedStatuses.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.graphql.gloo.solo.io.GraphQLApiNamespacedStatuses} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.graphql.gloo.solo.io.GraphQLApiNamespacedStatuses}
 */
proto.graphql.gloo.solo.io.GraphQLApiNamespacedStatuses.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getStatusesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.graphql.gloo.solo.io.GraphQLApiStatus.deserializeBinaryFromReader, "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.graphql.gloo.solo.io.GraphQLApiNamespacedStatuses.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.graphql.gloo.solo.io.GraphQLApiNamespacedStatuses.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.graphql.gloo.solo.io.GraphQLApiNamespacedStatuses} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.graphql.gloo.solo.io.GraphQLApiNamespacedStatuses.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatusesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.graphql.gloo.solo.io.GraphQLApiStatus.serializeBinaryToWriter);
  }
};


/**
 * map<string, GraphQLApiStatus> statuses = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.graphql.gloo.solo.io.GraphQLApiStatus>}
 */
proto.graphql.gloo.solo.io.GraphQLApiNamespacedStatuses.prototype.getStatusesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.graphql.gloo.solo.io.GraphQLApiStatus>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.graphql.gloo.solo.io.GraphQLApiStatus));
};


proto.graphql.gloo.solo.io.GraphQLApiNamespacedStatuses.prototype.clearStatusesMap = function() {
  this.getStatusesMap().clear();
};


goog.object.extend(exports, proto.graphql.gloo.solo.io);
