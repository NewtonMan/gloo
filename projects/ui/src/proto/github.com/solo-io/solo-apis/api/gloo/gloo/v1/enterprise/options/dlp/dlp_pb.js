/* eslint-disable */
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var github_com_solo$io_solo$apis_api_gloo_gloo_v1_core_matchers_matchers_pb = require('../../../../../../../../../../github.com/solo-io/solo-apis/api/gloo/gloo/v1/core/matchers/matchers_pb.js');
var github_com_solo$io_solo$kit_api_external_envoy_type_percent_pb = require('../../../../../../../../../../github.com/solo-io/solo-kit/api/external/envoy/type/percent_pb.js');
var extproto_ext_pb = require('../../../../../../../../../../extproto/ext_pb.js');
goog.exportSymbol('proto.dlp.options.gloo.solo.io.Action', null, global);
goog.exportSymbol('proto.dlp.options.gloo.solo.io.Action.ActionType', null, global);
goog.exportSymbol('proto.dlp.options.gloo.solo.io.Config', null, global);
goog.exportSymbol('proto.dlp.options.gloo.solo.io.Config.EnableFor', null, global);
goog.exportSymbol('proto.dlp.options.gloo.solo.io.CustomAction', null, global);
goog.exportSymbol('proto.dlp.options.gloo.solo.io.DlpRule', null, global);
goog.exportSymbol('proto.dlp.options.gloo.solo.io.FilterConfig', null, global);
goog.exportSymbol('proto.dlp.options.gloo.solo.io.FilterConfig.EnableFor', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dlp.options.gloo.solo.io.FilterConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.dlp.options.gloo.solo.io.FilterConfig.repeatedFields_, null);
};
goog.inherits(proto.dlp.options.gloo.solo.io.FilterConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dlp.options.gloo.solo.io.FilterConfig.displayName = 'proto.dlp.options.gloo.solo.io.FilterConfig';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dlp.options.gloo.solo.io.FilterConfig.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dlp.options.gloo.solo.io.FilterConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.dlp.options.gloo.solo.io.FilterConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dlp.options.gloo.solo.io.FilterConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dlp.options.gloo.solo.io.FilterConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    dlpRulesList: jspb.Message.toObjectList(msg.getDlpRulesList(),
    proto.dlp.options.gloo.solo.io.DlpRule.toObject, includeInstance),
    enabledFor: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dlp.options.gloo.solo.io.FilterConfig}
 */
proto.dlp.options.gloo.solo.io.FilterConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dlp.options.gloo.solo.io.FilterConfig;
  return proto.dlp.options.gloo.solo.io.FilterConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dlp.options.gloo.solo.io.FilterConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dlp.options.gloo.solo.io.FilterConfig}
 */
proto.dlp.options.gloo.solo.io.FilterConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.dlp.options.gloo.solo.io.DlpRule;
      reader.readMessage(value,proto.dlp.options.gloo.solo.io.DlpRule.deserializeBinaryFromReader);
      msg.addDlpRules(value);
      break;
    case 2:
      var value = /** @type {!proto.dlp.options.gloo.solo.io.FilterConfig.EnableFor} */ (reader.readEnum());
      msg.setEnabledFor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dlp.options.gloo.solo.io.FilterConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dlp.options.gloo.solo.io.FilterConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dlp.options.gloo.solo.io.FilterConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dlp.options.gloo.solo.io.FilterConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDlpRulesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.dlp.options.gloo.solo.io.DlpRule.serializeBinaryToWriter
    );
  }
  f = message.getEnabledFor();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.dlp.options.gloo.solo.io.FilterConfig.EnableFor = {
  RESPONSE_BODY: 0,
  ACCESS_LOGS: 1,
  ALL: 2
};

/**
 * repeated DlpRule dlp_rules = 1;
 * @return {!Array<!proto.dlp.options.gloo.solo.io.DlpRule>}
 */
proto.dlp.options.gloo.solo.io.FilterConfig.prototype.getDlpRulesList = function() {
  return /** @type{!Array<!proto.dlp.options.gloo.solo.io.DlpRule>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.dlp.options.gloo.solo.io.DlpRule, 1));
};


/** @param {!Array<!proto.dlp.options.gloo.solo.io.DlpRule>} value */
proto.dlp.options.gloo.solo.io.FilterConfig.prototype.setDlpRulesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.dlp.options.gloo.solo.io.DlpRule=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dlp.options.gloo.solo.io.DlpRule}
 */
proto.dlp.options.gloo.solo.io.FilterConfig.prototype.addDlpRules = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.dlp.options.gloo.solo.io.DlpRule, opt_index);
};


proto.dlp.options.gloo.solo.io.FilterConfig.prototype.clearDlpRulesList = function() {
  this.setDlpRulesList([]);
};


/**
 * optional EnableFor enabled_for = 2;
 * @return {!proto.dlp.options.gloo.solo.io.FilterConfig.EnableFor}
 */
proto.dlp.options.gloo.solo.io.FilterConfig.prototype.getEnabledFor = function() {
  return /** @type {!proto.dlp.options.gloo.solo.io.FilterConfig.EnableFor} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.dlp.options.gloo.solo.io.FilterConfig.EnableFor} value */
proto.dlp.options.gloo.solo.io.FilterConfig.prototype.setEnabledFor = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dlp.options.gloo.solo.io.DlpRule = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.dlp.options.gloo.solo.io.DlpRule.repeatedFields_, null);
};
goog.inherits(proto.dlp.options.gloo.solo.io.DlpRule, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dlp.options.gloo.solo.io.DlpRule.displayName = 'proto.dlp.options.gloo.solo.io.DlpRule';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dlp.options.gloo.solo.io.DlpRule.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dlp.options.gloo.solo.io.DlpRule.prototype.toObject = function(opt_includeInstance) {
  return proto.dlp.options.gloo.solo.io.DlpRule.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dlp.options.gloo.solo.io.DlpRule} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dlp.options.gloo.solo.io.DlpRule.toObject = function(includeInstance, msg) {
  var f, obj = {
    matcher: (f = msg.getMatcher()) && github_com_solo$io_solo$apis_api_gloo_gloo_v1_core_matchers_matchers_pb.Matcher.toObject(includeInstance, f),
    actionsList: jspb.Message.toObjectList(msg.getActionsList(),
    proto.dlp.options.gloo.solo.io.Action.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dlp.options.gloo.solo.io.DlpRule}
 */
proto.dlp.options.gloo.solo.io.DlpRule.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dlp.options.gloo.solo.io.DlpRule;
  return proto.dlp.options.gloo.solo.io.DlpRule.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dlp.options.gloo.solo.io.DlpRule} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dlp.options.gloo.solo.io.DlpRule}
 */
proto.dlp.options.gloo.solo.io.DlpRule.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_solo$apis_api_gloo_gloo_v1_core_matchers_matchers_pb.Matcher;
      reader.readMessage(value,github_com_solo$io_solo$apis_api_gloo_gloo_v1_core_matchers_matchers_pb.Matcher.deserializeBinaryFromReader);
      msg.setMatcher(value);
      break;
    case 2:
      var value = new proto.dlp.options.gloo.solo.io.Action;
      reader.readMessage(value,proto.dlp.options.gloo.solo.io.Action.deserializeBinaryFromReader);
      msg.addActions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dlp.options.gloo.solo.io.DlpRule.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dlp.options.gloo.solo.io.DlpRule.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dlp.options.gloo.solo.io.DlpRule} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dlp.options.gloo.solo.io.DlpRule.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMatcher();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_solo$apis_api_gloo_gloo_v1_core_matchers_matchers_pb.Matcher.serializeBinaryToWriter
    );
  }
  f = message.getActionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.dlp.options.gloo.solo.io.Action.serializeBinaryToWriter
    );
  }
};


/**
 * optional matchers.core.gloo.solo.io.Matcher matcher = 1;
 * @return {?proto.matchers.core.gloo.solo.io.Matcher}
 */
proto.dlp.options.gloo.solo.io.DlpRule.prototype.getMatcher = function() {
  return /** @type{?proto.matchers.core.gloo.solo.io.Matcher} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$apis_api_gloo_gloo_v1_core_matchers_matchers_pb.Matcher, 1));
};


/** @param {?proto.matchers.core.gloo.solo.io.Matcher|undefined} value */
proto.dlp.options.gloo.solo.io.DlpRule.prototype.setMatcher = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.dlp.options.gloo.solo.io.DlpRule.prototype.clearMatcher = function() {
  this.setMatcher(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.dlp.options.gloo.solo.io.DlpRule.prototype.hasMatcher = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Action actions = 2;
 * @return {!Array<!proto.dlp.options.gloo.solo.io.Action>}
 */
proto.dlp.options.gloo.solo.io.DlpRule.prototype.getActionsList = function() {
  return /** @type{!Array<!proto.dlp.options.gloo.solo.io.Action>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.dlp.options.gloo.solo.io.Action, 2));
};


/** @param {!Array<!proto.dlp.options.gloo.solo.io.Action>} value */
proto.dlp.options.gloo.solo.io.DlpRule.prototype.setActionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.dlp.options.gloo.solo.io.Action=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dlp.options.gloo.solo.io.Action}
 */
proto.dlp.options.gloo.solo.io.DlpRule.prototype.addActions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.dlp.options.gloo.solo.io.Action, opt_index);
};


proto.dlp.options.gloo.solo.io.DlpRule.prototype.clearActionsList = function() {
  this.setActionsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dlp.options.gloo.solo.io.Config = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.dlp.options.gloo.solo.io.Config.repeatedFields_, null);
};
goog.inherits(proto.dlp.options.gloo.solo.io.Config, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dlp.options.gloo.solo.io.Config.displayName = 'proto.dlp.options.gloo.solo.io.Config';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dlp.options.gloo.solo.io.Config.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dlp.options.gloo.solo.io.Config.prototype.toObject = function(opt_includeInstance) {
  return proto.dlp.options.gloo.solo.io.Config.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dlp.options.gloo.solo.io.Config} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dlp.options.gloo.solo.io.Config.toObject = function(includeInstance, msg) {
  var f, obj = {
    actionsList: jspb.Message.toObjectList(msg.getActionsList(),
    proto.dlp.options.gloo.solo.io.Action.toObject, includeInstance),
    enabledFor: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dlp.options.gloo.solo.io.Config}
 */
proto.dlp.options.gloo.solo.io.Config.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dlp.options.gloo.solo.io.Config;
  return proto.dlp.options.gloo.solo.io.Config.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dlp.options.gloo.solo.io.Config} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dlp.options.gloo.solo.io.Config}
 */
proto.dlp.options.gloo.solo.io.Config.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.dlp.options.gloo.solo.io.Action;
      reader.readMessage(value,proto.dlp.options.gloo.solo.io.Action.deserializeBinaryFromReader);
      msg.addActions(value);
      break;
    case 2:
      var value = /** @type {!proto.dlp.options.gloo.solo.io.Config.EnableFor} */ (reader.readEnum());
      msg.setEnabledFor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dlp.options.gloo.solo.io.Config.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dlp.options.gloo.solo.io.Config.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dlp.options.gloo.solo.io.Config} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dlp.options.gloo.solo.io.Config.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.dlp.options.gloo.solo.io.Action.serializeBinaryToWriter
    );
  }
  f = message.getEnabledFor();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.dlp.options.gloo.solo.io.Config.EnableFor = {
  RESPONSE_BODY: 0,
  ACCESS_LOGS: 1,
  ALL: 2
};

/**
 * repeated Action actions = 1;
 * @return {!Array<!proto.dlp.options.gloo.solo.io.Action>}
 */
proto.dlp.options.gloo.solo.io.Config.prototype.getActionsList = function() {
  return /** @type{!Array<!proto.dlp.options.gloo.solo.io.Action>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.dlp.options.gloo.solo.io.Action, 1));
};


/** @param {!Array<!proto.dlp.options.gloo.solo.io.Action>} value */
proto.dlp.options.gloo.solo.io.Config.prototype.setActionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.dlp.options.gloo.solo.io.Action=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dlp.options.gloo.solo.io.Action}
 */
proto.dlp.options.gloo.solo.io.Config.prototype.addActions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.dlp.options.gloo.solo.io.Action, opt_index);
};


proto.dlp.options.gloo.solo.io.Config.prototype.clearActionsList = function() {
  this.setActionsList([]);
};


/**
 * optional EnableFor enabled_for = 2;
 * @return {!proto.dlp.options.gloo.solo.io.Config.EnableFor}
 */
proto.dlp.options.gloo.solo.io.Config.prototype.getEnabledFor = function() {
  return /** @type {!proto.dlp.options.gloo.solo.io.Config.EnableFor} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.dlp.options.gloo.solo.io.Config.EnableFor} value */
proto.dlp.options.gloo.solo.io.Config.prototype.setEnabledFor = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dlp.options.gloo.solo.io.Action = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dlp.options.gloo.solo.io.Action, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dlp.options.gloo.solo.io.Action.displayName = 'proto.dlp.options.gloo.solo.io.Action';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dlp.options.gloo.solo.io.Action.prototype.toObject = function(opt_includeInstance) {
  return proto.dlp.options.gloo.solo.io.Action.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dlp.options.gloo.solo.io.Action} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dlp.options.gloo.solo.io.Action.toObject = function(includeInstance, msg) {
  var f, obj = {
    actionType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    customAction: (f = msg.getCustomAction()) && proto.dlp.options.gloo.solo.io.CustomAction.toObject(includeInstance, f),
    shadow: jspb.Message.getFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dlp.options.gloo.solo.io.Action}
 */
proto.dlp.options.gloo.solo.io.Action.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dlp.options.gloo.solo.io.Action;
  return proto.dlp.options.gloo.solo.io.Action.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dlp.options.gloo.solo.io.Action} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dlp.options.gloo.solo.io.Action}
 */
proto.dlp.options.gloo.solo.io.Action.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.dlp.options.gloo.solo.io.Action.ActionType} */ (reader.readEnum());
      msg.setActionType(value);
      break;
    case 2:
      var value = new proto.dlp.options.gloo.solo.io.CustomAction;
      reader.readMessage(value,proto.dlp.options.gloo.solo.io.CustomAction.deserializeBinaryFromReader);
      msg.setCustomAction(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setShadow(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dlp.options.gloo.solo.io.Action.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dlp.options.gloo.solo.io.Action.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dlp.options.gloo.solo.io.Action} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dlp.options.gloo.solo.io.Action.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActionType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getCustomAction();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.dlp.options.gloo.solo.io.CustomAction.serializeBinaryToWriter
    );
  }
  f = message.getShadow();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.dlp.options.gloo.solo.io.Action.ActionType = {
  CUSTOM: 0,
  SSN: 1,
  MASTERCARD: 2,
  VISA: 3,
  AMEX: 4,
  DISCOVER: 5,
  JCB: 6,
  DINERS_CLUB: 7,
  CREDIT_CARD_TRACKERS: 8,
  ALL_CREDIT_CARDS: 9
};

/**
 * optional ActionType action_type = 1;
 * @return {!proto.dlp.options.gloo.solo.io.Action.ActionType}
 */
proto.dlp.options.gloo.solo.io.Action.prototype.getActionType = function() {
  return /** @type {!proto.dlp.options.gloo.solo.io.Action.ActionType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.dlp.options.gloo.solo.io.Action.ActionType} value */
proto.dlp.options.gloo.solo.io.Action.prototype.setActionType = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional CustomAction custom_action = 2;
 * @return {?proto.dlp.options.gloo.solo.io.CustomAction}
 */
proto.dlp.options.gloo.solo.io.Action.prototype.getCustomAction = function() {
  return /** @type{?proto.dlp.options.gloo.solo.io.CustomAction} */ (
    jspb.Message.getWrapperField(this, proto.dlp.options.gloo.solo.io.CustomAction, 2));
};


/** @param {?proto.dlp.options.gloo.solo.io.CustomAction|undefined} value */
proto.dlp.options.gloo.solo.io.Action.prototype.setCustomAction = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.dlp.options.gloo.solo.io.Action.prototype.clearCustomAction = function() {
  this.setCustomAction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.dlp.options.gloo.solo.io.Action.prototype.hasCustomAction = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool shadow = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dlp.options.gloo.solo.io.Action.prototype.getShadow = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.dlp.options.gloo.solo.io.Action.prototype.setShadow = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dlp.options.gloo.solo.io.CustomAction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.dlp.options.gloo.solo.io.CustomAction.repeatedFields_, null);
};
goog.inherits(proto.dlp.options.gloo.solo.io.CustomAction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dlp.options.gloo.solo.io.CustomAction.displayName = 'proto.dlp.options.gloo.solo.io.CustomAction';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dlp.options.gloo.solo.io.CustomAction.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dlp.options.gloo.solo.io.CustomAction.prototype.toObject = function(opt_includeInstance) {
  return proto.dlp.options.gloo.solo.io.CustomAction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dlp.options.gloo.solo.io.CustomAction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dlp.options.gloo.solo.io.CustomAction.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    regexList: jspb.Message.getRepeatedField(msg, 2),
    maskChar: jspb.Message.getFieldWithDefault(msg, 3, ""),
    percent: (f = msg.getPercent()) && github_com_solo$io_solo$kit_api_external_envoy_type_percent_pb.Percent.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dlp.options.gloo.solo.io.CustomAction}
 */
proto.dlp.options.gloo.solo.io.CustomAction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dlp.options.gloo.solo.io.CustomAction;
  return proto.dlp.options.gloo.solo.io.CustomAction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dlp.options.gloo.solo.io.CustomAction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dlp.options.gloo.solo.io.CustomAction}
 */
proto.dlp.options.gloo.solo.io.CustomAction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addRegex(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMaskChar(value);
      break;
    case 4:
      var value = new github_com_solo$io_solo$kit_api_external_envoy_type_percent_pb.Percent;
      reader.readMessage(value,github_com_solo$io_solo$kit_api_external_envoy_type_percent_pb.Percent.deserializeBinaryFromReader);
      msg.setPercent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dlp.options.gloo.solo.io.CustomAction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dlp.options.gloo.solo.io.CustomAction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dlp.options.gloo.solo.io.CustomAction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dlp.options.gloo.solo.io.CustomAction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRegexList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getMaskChar();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPercent();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      github_com_solo$io_solo$kit_api_external_envoy_type_percent_pb.Percent.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.dlp.options.gloo.solo.io.CustomAction.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.dlp.options.gloo.solo.io.CustomAction.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string regex = 2;
 * @return {!Array<string>}
 */
proto.dlp.options.gloo.solo.io.CustomAction.prototype.getRegexList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array<string>} value */
proto.dlp.options.gloo.solo.io.CustomAction.prototype.setRegexList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.dlp.options.gloo.solo.io.CustomAction.prototype.addRegex = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.dlp.options.gloo.solo.io.CustomAction.prototype.clearRegexList = function() {
  this.setRegexList([]);
};


/**
 * optional string mask_char = 3;
 * @return {string}
 */
proto.dlp.options.gloo.solo.io.CustomAction.prototype.getMaskChar = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.dlp.options.gloo.solo.io.CustomAction.prototype.setMaskChar = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional solo.io.envoy.type.Percent percent = 4;
 * @return {?proto.solo.io.envoy.type.Percent}
 */
proto.dlp.options.gloo.solo.io.CustomAction.prototype.getPercent = function() {
  return /** @type{?proto.solo.io.envoy.type.Percent} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$kit_api_external_envoy_type_percent_pb.Percent, 4));
};


/** @param {?proto.solo.io.envoy.type.Percent|undefined} value */
proto.dlp.options.gloo.solo.io.CustomAction.prototype.setPercent = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.dlp.options.gloo.solo.io.CustomAction.prototype.clearPercent = function() {
  this.setPercent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.dlp.options.gloo.solo.io.CustomAction.prototype.hasPercent = function() {
  return jspb.Message.getField(this, 4) != null;
};


goog.object.extend(exports, proto.dlp.options.gloo.solo.io);
