/* eslint-disable */
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var udpa_annotations_status_pb = require('../../../../../../../../../../../../../github.com/solo-io/solo-apis/api/gloo/gloo/external/udpa/annotations/status_pb.js');
var validate_validate_pb = require('../../../../../../../../../../../../../validate/validate_pb.js');
var extproto_ext_pb = require('../../../../../../../../../../../../../extproto/ext_pb.js');
goog.exportSymbol('proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode', null, global);
goog.exportSymbol('proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.BodySendMode', null, global);
goog.exportSymbol('proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.HeaderSendMode', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.displayName = 'proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.prototype.toObject = function(opt_includeInstance) {
  return proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestHeaderMode: jspb.Message.getFieldWithDefault(msg, 1, 0),
    responseHeaderMode: jspb.Message.getFieldWithDefault(msg, 2, 0),
    requestBodyMode: jspb.Message.getFieldWithDefault(msg, 3, 0),
    responseBodyMode: jspb.Message.getFieldWithDefault(msg, 4, 0),
    requestTrailerMode: jspb.Message.getFieldWithDefault(msg, 5, 0),
    responseTrailerMode: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode}
 */
proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode;
  return proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode}
 */
proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.HeaderSendMode} */ (reader.readEnum());
      msg.setRequestHeaderMode(value);
      break;
    case 2:
      var value = /** @type {!proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.HeaderSendMode} */ (reader.readEnum());
      msg.setResponseHeaderMode(value);
      break;
    case 3:
      var value = /** @type {!proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.BodySendMode} */ (reader.readEnum());
      msg.setRequestBodyMode(value);
      break;
    case 4:
      var value = /** @type {!proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.BodySendMode} */ (reader.readEnum());
      msg.setResponseBodyMode(value);
      break;
    case 5:
      var value = /** @type {!proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.HeaderSendMode} */ (reader.readEnum());
      msg.setRequestTrailerMode(value);
      break;
    case 6:
      var value = /** @type {!proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.HeaderSendMode} */ (reader.readEnum());
      msg.setResponseTrailerMode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestHeaderMode();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getResponseHeaderMode();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getRequestBodyMode();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getResponseBodyMode();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getRequestTrailerMode();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getResponseTrailerMode();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.HeaderSendMode = {
  DEFAULT: 0,
  SEND: 1,
  SKIP: 2
};

/**
 * @enum {number}
 */
proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.BodySendMode = {
  NONE: 0,
  STREAMED: 1,
  BUFFERED: 2,
  BUFFERED_PARTIAL: 3
};

/**
 * optional HeaderSendMode request_header_mode = 1;
 * @return {!proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.HeaderSendMode}
 */
proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.prototype.getRequestHeaderMode = function() {
  return /** @type {!proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.HeaderSendMode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.HeaderSendMode} value */
proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.prototype.setRequestHeaderMode = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional HeaderSendMode response_header_mode = 2;
 * @return {!proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.HeaderSendMode}
 */
proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.prototype.getResponseHeaderMode = function() {
  return /** @type {!proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.HeaderSendMode} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.HeaderSendMode} value */
proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.prototype.setResponseHeaderMode = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional BodySendMode request_body_mode = 3;
 * @return {!proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.BodySendMode}
 */
proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.prototype.getRequestBodyMode = function() {
  return /** @type {!proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.BodySendMode} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.BodySendMode} value */
proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.prototype.setRequestBodyMode = function(value) {
  jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional BodySendMode response_body_mode = 4;
 * @return {!proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.BodySendMode}
 */
proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.prototype.getResponseBodyMode = function() {
  return /** @type {!proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.BodySendMode} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {!proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.BodySendMode} value */
proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.prototype.setResponseBodyMode = function(value) {
  jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional HeaderSendMode request_trailer_mode = 5;
 * @return {!proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.HeaderSendMode}
 */
proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.prototype.getRequestTrailerMode = function() {
  return /** @type {!proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.HeaderSendMode} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {!proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.HeaderSendMode} value */
proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.prototype.setRequestTrailerMode = function(value) {
  jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional HeaderSendMode response_trailer_mode = 6;
 * @return {!proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.HeaderSendMode}
 */
proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.prototype.getResponseTrailerMode = function() {
  return /** @type {!proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.HeaderSendMode} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {!proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.HeaderSendMode} value */
proto.solo.io.envoy.extensions.filters.http.ext_proc.v3.ProcessingMode.prototype.setResponseTrailerMode = function(value) {
  jspb.Message.setProto3EnumField(this, 6, value);
};


goog.object.extend(exports, proto.solo.io.envoy.extensions.filters.http.ext_proc.v3);
