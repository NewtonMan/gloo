/* eslint-disable */
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
var validate_validate_pb = require('../../../../../../../../../validate/validate_pb.js');
var extproto_ext_pb = require('../../../../../../../../../extproto/ext_pb.js');
goog.exportSymbol('proto.retries.options.gloo.solo.io.RetryBackOff', null, global);
goog.exportSymbol('proto.retries.options.gloo.solo.io.RetryPolicy', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.retries.options.gloo.solo.io.RetryBackOff = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.retries.options.gloo.solo.io.RetryBackOff, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.retries.options.gloo.solo.io.RetryBackOff.displayName = 'proto.retries.options.gloo.solo.io.RetryBackOff';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.retries.options.gloo.solo.io.RetryBackOff.prototype.toObject = function(opt_includeInstance) {
  return proto.retries.options.gloo.solo.io.RetryBackOff.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.retries.options.gloo.solo.io.RetryBackOff} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.retries.options.gloo.solo.io.RetryBackOff.toObject = function(includeInstance, msg) {
  var f, obj = {
    baseInterval: (f = msg.getBaseInterval()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    maxInterval: (f = msg.getMaxInterval()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.retries.options.gloo.solo.io.RetryBackOff}
 */
proto.retries.options.gloo.solo.io.RetryBackOff.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.retries.options.gloo.solo.io.RetryBackOff;
  return proto.retries.options.gloo.solo.io.RetryBackOff.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.retries.options.gloo.solo.io.RetryBackOff} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.retries.options.gloo.solo.io.RetryBackOff}
 */
proto.retries.options.gloo.solo.io.RetryBackOff.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setBaseInterval(value);
      break;
    case 2:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setMaxInterval(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.retries.options.gloo.solo.io.RetryBackOff.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.retries.options.gloo.solo.io.RetryBackOff.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.retries.options.gloo.solo.io.RetryBackOff} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.retries.options.gloo.solo.io.RetryBackOff.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBaseInterval();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getMaxInterval();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Duration base_interval = 1;
 * @return {?proto.google.protobuf.Duration}
 */
proto.retries.options.gloo.solo.io.RetryBackOff.prototype.getBaseInterval = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 1));
};


/** @param {?proto.google.protobuf.Duration|undefined} value */
proto.retries.options.gloo.solo.io.RetryBackOff.prototype.setBaseInterval = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.retries.options.gloo.solo.io.RetryBackOff.prototype.clearBaseInterval = function() {
  this.setBaseInterval(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.retries.options.gloo.solo.io.RetryBackOff.prototype.hasBaseInterval = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Duration max_interval = 2;
 * @return {?proto.google.protobuf.Duration}
 */
proto.retries.options.gloo.solo.io.RetryBackOff.prototype.getMaxInterval = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 2));
};


/** @param {?proto.google.protobuf.Duration|undefined} value */
proto.retries.options.gloo.solo.io.RetryBackOff.prototype.setMaxInterval = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.retries.options.gloo.solo.io.RetryBackOff.prototype.clearMaxInterval = function() {
  this.setMaxInterval(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.retries.options.gloo.solo.io.RetryBackOff.prototype.hasMaxInterval = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.retries.options.gloo.solo.io.RetryPolicy = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.retries.options.gloo.solo.io.RetryPolicy, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.retries.options.gloo.solo.io.RetryPolicy.displayName = 'proto.retries.options.gloo.solo.io.RetryPolicy';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.retries.options.gloo.solo.io.RetryPolicy.prototype.toObject = function(opt_includeInstance) {
  return proto.retries.options.gloo.solo.io.RetryPolicy.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.retries.options.gloo.solo.io.RetryPolicy} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.retries.options.gloo.solo.io.RetryPolicy.toObject = function(includeInstance, msg) {
  var f, obj = {
    retryOn: jspb.Message.getFieldWithDefault(msg, 1, ""),
    numRetries: jspb.Message.getFieldWithDefault(msg, 2, 0),
    perTryTimeout: (f = msg.getPerTryTimeout()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    retryBackOff: (f = msg.getRetryBackOff()) && proto.retries.options.gloo.solo.io.RetryBackOff.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.retries.options.gloo.solo.io.RetryPolicy}
 */
proto.retries.options.gloo.solo.io.RetryPolicy.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.retries.options.gloo.solo.io.RetryPolicy;
  return proto.retries.options.gloo.solo.io.RetryPolicy.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.retries.options.gloo.solo.io.RetryPolicy} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.retries.options.gloo.solo.io.RetryPolicy}
 */
proto.retries.options.gloo.solo.io.RetryPolicy.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRetryOn(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNumRetries(value);
      break;
    case 3:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setPerTryTimeout(value);
      break;
    case 4:
      var value = new proto.retries.options.gloo.solo.io.RetryBackOff;
      reader.readMessage(value,proto.retries.options.gloo.solo.io.RetryBackOff.deserializeBinaryFromReader);
      msg.setRetryBackOff(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.retries.options.gloo.solo.io.RetryPolicy.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.retries.options.gloo.solo.io.RetryPolicy.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.retries.options.gloo.solo.io.RetryPolicy} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.retries.options.gloo.solo.io.RetryPolicy.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRetryOn();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNumRetries();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getPerTryTimeout();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getRetryBackOff();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.retries.options.gloo.solo.io.RetryBackOff.serializeBinaryToWriter
    );
  }
};


/**
 * optional string retry_on = 1;
 * @return {string}
 */
proto.retries.options.gloo.solo.io.RetryPolicy.prototype.getRetryOn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.retries.options.gloo.solo.io.RetryPolicy.prototype.setRetryOn = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 num_retries = 2;
 * @return {number}
 */
proto.retries.options.gloo.solo.io.RetryPolicy.prototype.getNumRetries = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.retries.options.gloo.solo.io.RetryPolicy.prototype.setNumRetries = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional google.protobuf.Duration per_try_timeout = 3;
 * @return {?proto.google.protobuf.Duration}
 */
proto.retries.options.gloo.solo.io.RetryPolicy.prototype.getPerTryTimeout = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 3));
};


/** @param {?proto.google.protobuf.Duration|undefined} value */
proto.retries.options.gloo.solo.io.RetryPolicy.prototype.setPerTryTimeout = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.retries.options.gloo.solo.io.RetryPolicy.prototype.clearPerTryTimeout = function() {
  this.setPerTryTimeout(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.retries.options.gloo.solo.io.RetryPolicy.prototype.hasPerTryTimeout = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional RetryBackOff retry_back_off = 4;
 * @return {?proto.retries.options.gloo.solo.io.RetryBackOff}
 */
proto.retries.options.gloo.solo.io.RetryPolicy.prototype.getRetryBackOff = function() {
  return /** @type{?proto.retries.options.gloo.solo.io.RetryBackOff} */ (
    jspb.Message.getWrapperField(this, proto.retries.options.gloo.solo.io.RetryBackOff, 4));
};


/** @param {?proto.retries.options.gloo.solo.io.RetryBackOff|undefined} value */
proto.retries.options.gloo.solo.io.RetryPolicy.prototype.setRetryBackOff = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.retries.options.gloo.solo.io.RetryPolicy.prototype.clearRetryBackOff = function() {
  this.setRetryBackOff(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.retries.options.gloo.solo.io.RetryPolicy.prototype.hasRetryBackOff = function() {
  return jspb.Message.getField(this, 4) != null;
};


goog.object.extend(exports, proto.retries.options.gloo.solo.io);
