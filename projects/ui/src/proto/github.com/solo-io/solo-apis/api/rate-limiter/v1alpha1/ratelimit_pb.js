/* eslint-disable */
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
var extproto_ext_pb = require('../../../../../../extproto/ext_pb.js');
goog.exportSymbol('proto.ratelimit.api.solo.io.Action', null, global);
goog.exportSymbol('proto.ratelimit.api.solo.io.Action.DestinationCluster', null, global);
goog.exportSymbol('proto.ratelimit.api.solo.io.Action.GenericKey', null, global);
goog.exportSymbol('proto.ratelimit.api.solo.io.Action.HeaderValueMatch', null, global);
goog.exportSymbol('proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher', null, global);
goog.exportSymbol('proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.Int64Range', null, global);
goog.exportSymbol('proto.ratelimit.api.solo.io.Action.RemoteAddress', null, global);
goog.exportSymbol('proto.ratelimit.api.solo.io.Action.RequestHeaders', null, global);
goog.exportSymbol('proto.ratelimit.api.solo.io.Action.SourceCluster', null, global);
goog.exportSymbol('proto.ratelimit.api.solo.io.Descriptor', null, global);
goog.exportSymbol('proto.ratelimit.api.solo.io.MetaData', null, global);
goog.exportSymbol('proto.ratelimit.api.solo.io.MetaData.MetadataKey', null, global);
goog.exportSymbol('proto.ratelimit.api.solo.io.MetaData.MetadataKey.PathSegment', null, global);
goog.exportSymbol('proto.ratelimit.api.solo.io.MetaData.Source', null, global);
goog.exportSymbol('proto.ratelimit.api.solo.io.Override', null, global);
goog.exportSymbol('proto.ratelimit.api.solo.io.Override.DynamicMetadata', null, global);
goog.exportSymbol('proto.ratelimit.api.solo.io.RateLimit', null, global);
goog.exportSymbol('proto.ratelimit.api.solo.io.RateLimit.Unit', null, global);
goog.exportSymbol('proto.ratelimit.api.solo.io.RateLimitActions', null, global);
goog.exportSymbol('proto.ratelimit.api.solo.io.RateLimitConfigNamespacedStatuses', null, global);
goog.exportSymbol('proto.ratelimit.api.solo.io.RateLimitConfigSpec', null, global);
goog.exportSymbol('proto.ratelimit.api.solo.io.RateLimitConfigSpec.Raw', null, global);
goog.exportSymbol('proto.ratelimit.api.solo.io.RateLimitConfigStatus', null, global);
goog.exportSymbol('proto.ratelimit.api.solo.io.RateLimitConfigStatus.State', null, global);
goog.exportSymbol('proto.ratelimit.api.solo.io.SetDescriptor', null, global);
goog.exportSymbol('proto.ratelimit.api.solo.io.SimpleDescriptor', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ratelimit.api.solo.io.RateLimitConfigSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.ratelimit.api.solo.io.RateLimitConfigSpec.oneofGroups_);
};
goog.inherits(proto.ratelimit.api.solo.io.RateLimitConfigSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ratelimit.api.solo.io.RateLimitConfigSpec.displayName = 'proto.ratelimit.api.solo.io.RateLimitConfigSpec';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.ratelimit.api.solo.io.RateLimitConfigSpec.oneofGroups_ = [[1]];

/**
 * @enum {number}
 */
proto.ratelimit.api.solo.io.RateLimitConfigSpec.ConfigTypeCase = {
  CONFIG_TYPE_NOT_SET: 0,
  RAW: 1
};

/**
 * @return {proto.ratelimit.api.solo.io.RateLimitConfigSpec.ConfigTypeCase}
 */
proto.ratelimit.api.solo.io.RateLimitConfigSpec.prototype.getConfigTypeCase = function() {
  return /** @type {proto.ratelimit.api.solo.io.RateLimitConfigSpec.ConfigTypeCase} */(jspb.Message.computeOneofCase(this, proto.ratelimit.api.solo.io.RateLimitConfigSpec.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ratelimit.api.solo.io.RateLimitConfigSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.ratelimit.api.solo.io.RateLimitConfigSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ratelimit.api.solo.io.RateLimitConfigSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.api.solo.io.RateLimitConfigSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    raw: (f = msg.getRaw()) && proto.ratelimit.api.solo.io.RateLimitConfigSpec.Raw.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ratelimit.api.solo.io.RateLimitConfigSpec}
 */
proto.ratelimit.api.solo.io.RateLimitConfigSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ratelimit.api.solo.io.RateLimitConfigSpec;
  return proto.ratelimit.api.solo.io.RateLimitConfigSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ratelimit.api.solo.io.RateLimitConfigSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ratelimit.api.solo.io.RateLimitConfigSpec}
 */
proto.ratelimit.api.solo.io.RateLimitConfigSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ratelimit.api.solo.io.RateLimitConfigSpec.Raw;
      reader.readMessage(value,proto.ratelimit.api.solo.io.RateLimitConfigSpec.Raw.deserializeBinaryFromReader);
      msg.setRaw(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ratelimit.api.solo.io.RateLimitConfigSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ratelimit.api.solo.io.RateLimitConfigSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ratelimit.api.solo.io.RateLimitConfigSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.api.solo.io.RateLimitConfigSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRaw();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ratelimit.api.solo.io.RateLimitConfigSpec.Raw.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ratelimit.api.solo.io.RateLimitConfigSpec.Raw = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ratelimit.api.solo.io.RateLimitConfigSpec.Raw.repeatedFields_, null);
};
goog.inherits(proto.ratelimit.api.solo.io.RateLimitConfigSpec.Raw, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ratelimit.api.solo.io.RateLimitConfigSpec.Raw.displayName = 'proto.ratelimit.api.solo.io.RateLimitConfigSpec.Raw';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ratelimit.api.solo.io.RateLimitConfigSpec.Raw.repeatedFields_ = [1,2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ratelimit.api.solo.io.RateLimitConfigSpec.Raw.prototype.toObject = function(opt_includeInstance) {
  return proto.ratelimit.api.solo.io.RateLimitConfigSpec.Raw.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ratelimit.api.solo.io.RateLimitConfigSpec.Raw} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.api.solo.io.RateLimitConfigSpec.Raw.toObject = function(includeInstance, msg) {
  var f, obj = {
    descriptorsList: jspb.Message.toObjectList(msg.getDescriptorsList(),
    proto.ratelimit.api.solo.io.Descriptor.toObject, includeInstance),
    rateLimitsList: jspb.Message.toObjectList(msg.getRateLimitsList(),
    proto.ratelimit.api.solo.io.RateLimitActions.toObject, includeInstance),
    setDescriptorsList: jspb.Message.toObjectList(msg.getSetDescriptorsList(),
    proto.ratelimit.api.solo.io.SetDescriptor.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ratelimit.api.solo.io.RateLimitConfigSpec.Raw}
 */
proto.ratelimit.api.solo.io.RateLimitConfigSpec.Raw.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ratelimit.api.solo.io.RateLimitConfigSpec.Raw;
  return proto.ratelimit.api.solo.io.RateLimitConfigSpec.Raw.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ratelimit.api.solo.io.RateLimitConfigSpec.Raw} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ratelimit.api.solo.io.RateLimitConfigSpec.Raw}
 */
proto.ratelimit.api.solo.io.RateLimitConfigSpec.Raw.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ratelimit.api.solo.io.Descriptor;
      reader.readMessage(value,proto.ratelimit.api.solo.io.Descriptor.deserializeBinaryFromReader);
      msg.addDescriptors(value);
      break;
    case 2:
      var value = new proto.ratelimit.api.solo.io.RateLimitActions;
      reader.readMessage(value,proto.ratelimit.api.solo.io.RateLimitActions.deserializeBinaryFromReader);
      msg.addRateLimits(value);
      break;
    case 3:
      var value = new proto.ratelimit.api.solo.io.SetDescriptor;
      reader.readMessage(value,proto.ratelimit.api.solo.io.SetDescriptor.deserializeBinaryFromReader);
      msg.addSetDescriptors(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ratelimit.api.solo.io.RateLimitConfigSpec.Raw.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ratelimit.api.solo.io.RateLimitConfigSpec.Raw.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ratelimit.api.solo.io.RateLimitConfigSpec.Raw} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.api.solo.io.RateLimitConfigSpec.Raw.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDescriptorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ratelimit.api.solo.io.Descriptor.serializeBinaryToWriter
    );
  }
  f = message.getRateLimitsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.ratelimit.api.solo.io.RateLimitActions.serializeBinaryToWriter
    );
  }
  f = message.getSetDescriptorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.ratelimit.api.solo.io.SetDescriptor.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Descriptor descriptors = 1;
 * @return {!Array<!proto.ratelimit.api.solo.io.Descriptor>}
 */
proto.ratelimit.api.solo.io.RateLimitConfigSpec.Raw.prototype.getDescriptorsList = function() {
  return /** @type{!Array<!proto.ratelimit.api.solo.io.Descriptor>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ratelimit.api.solo.io.Descriptor, 1));
};


/** @param {!Array<!proto.ratelimit.api.solo.io.Descriptor>} value */
proto.ratelimit.api.solo.io.RateLimitConfigSpec.Raw.prototype.setDescriptorsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ratelimit.api.solo.io.Descriptor=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ratelimit.api.solo.io.Descriptor}
 */
proto.ratelimit.api.solo.io.RateLimitConfigSpec.Raw.prototype.addDescriptors = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ratelimit.api.solo.io.Descriptor, opt_index);
};


proto.ratelimit.api.solo.io.RateLimitConfigSpec.Raw.prototype.clearDescriptorsList = function() {
  this.setDescriptorsList([]);
};


/**
 * repeated RateLimitActions rate_limits = 2;
 * @return {!Array<!proto.ratelimit.api.solo.io.RateLimitActions>}
 */
proto.ratelimit.api.solo.io.RateLimitConfigSpec.Raw.prototype.getRateLimitsList = function() {
  return /** @type{!Array<!proto.ratelimit.api.solo.io.RateLimitActions>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ratelimit.api.solo.io.RateLimitActions, 2));
};


/** @param {!Array<!proto.ratelimit.api.solo.io.RateLimitActions>} value */
proto.ratelimit.api.solo.io.RateLimitConfigSpec.Raw.prototype.setRateLimitsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.ratelimit.api.solo.io.RateLimitActions=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ratelimit.api.solo.io.RateLimitActions}
 */
proto.ratelimit.api.solo.io.RateLimitConfigSpec.Raw.prototype.addRateLimits = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.ratelimit.api.solo.io.RateLimitActions, opt_index);
};


proto.ratelimit.api.solo.io.RateLimitConfigSpec.Raw.prototype.clearRateLimitsList = function() {
  this.setRateLimitsList([]);
};


/**
 * repeated SetDescriptor set_descriptors = 3;
 * @return {!Array<!proto.ratelimit.api.solo.io.SetDescriptor>}
 */
proto.ratelimit.api.solo.io.RateLimitConfigSpec.Raw.prototype.getSetDescriptorsList = function() {
  return /** @type{!Array<!proto.ratelimit.api.solo.io.SetDescriptor>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ratelimit.api.solo.io.SetDescriptor, 3));
};


/** @param {!Array<!proto.ratelimit.api.solo.io.SetDescriptor>} value */
proto.ratelimit.api.solo.io.RateLimitConfigSpec.Raw.prototype.setSetDescriptorsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.ratelimit.api.solo.io.SetDescriptor=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ratelimit.api.solo.io.SetDescriptor}
 */
proto.ratelimit.api.solo.io.RateLimitConfigSpec.Raw.prototype.addSetDescriptors = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.ratelimit.api.solo.io.SetDescriptor, opt_index);
};


proto.ratelimit.api.solo.io.RateLimitConfigSpec.Raw.prototype.clearSetDescriptorsList = function() {
  this.setSetDescriptorsList([]);
};


/**
 * optional Raw raw = 1;
 * @return {?proto.ratelimit.api.solo.io.RateLimitConfigSpec.Raw}
 */
proto.ratelimit.api.solo.io.RateLimitConfigSpec.prototype.getRaw = function() {
  return /** @type{?proto.ratelimit.api.solo.io.RateLimitConfigSpec.Raw} */ (
    jspb.Message.getWrapperField(this, proto.ratelimit.api.solo.io.RateLimitConfigSpec.Raw, 1));
};


/** @param {?proto.ratelimit.api.solo.io.RateLimitConfigSpec.Raw|undefined} value */
proto.ratelimit.api.solo.io.RateLimitConfigSpec.prototype.setRaw = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.ratelimit.api.solo.io.RateLimitConfigSpec.oneofGroups_[0], value);
};


proto.ratelimit.api.solo.io.RateLimitConfigSpec.prototype.clearRaw = function() {
  this.setRaw(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ratelimit.api.solo.io.RateLimitConfigSpec.prototype.hasRaw = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ratelimit.api.solo.io.RateLimitConfigStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ratelimit.api.solo.io.RateLimitConfigStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ratelimit.api.solo.io.RateLimitConfigStatus.displayName = 'proto.ratelimit.api.solo.io.RateLimitConfigStatus';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ratelimit.api.solo.io.RateLimitConfigStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.ratelimit.api.solo.io.RateLimitConfigStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ratelimit.api.solo.io.RateLimitConfigStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.api.solo.io.RateLimitConfigStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    state: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    observedGeneration: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ratelimit.api.solo.io.RateLimitConfigStatus}
 */
proto.ratelimit.api.solo.io.RateLimitConfigStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ratelimit.api.solo.io.RateLimitConfigStatus;
  return proto.ratelimit.api.solo.io.RateLimitConfigStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ratelimit.api.solo.io.RateLimitConfigStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ratelimit.api.solo.io.RateLimitConfigStatus}
 */
proto.ratelimit.api.solo.io.RateLimitConfigStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ratelimit.api.solo.io.RateLimitConfigStatus.State} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setObservedGeneration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ratelimit.api.solo.io.RateLimitConfigStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ratelimit.api.solo.io.RateLimitConfigStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ratelimit.api.solo.io.RateLimitConfigStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.api.solo.io.RateLimitConfigStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getObservedGeneration();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.ratelimit.api.solo.io.RateLimitConfigStatus.State = {
  PENDING: 0,
  ACCEPTED: 1,
  REJECTED: 2
};

/**
 * optional State state = 1;
 * @return {!proto.ratelimit.api.solo.io.RateLimitConfigStatus.State}
 */
proto.ratelimit.api.solo.io.RateLimitConfigStatus.prototype.getState = function() {
  return /** @type {!proto.ratelimit.api.solo.io.RateLimitConfigStatus.State} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.ratelimit.api.solo.io.RateLimitConfigStatus.State} value */
proto.ratelimit.api.solo.io.RateLimitConfigStatus.prototype.setState = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.ratelimit.api.solo.io.RateLimitConfigStatus.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ratelimit.api.solo.io.RateLimitConfigStatus.prototype.setMessage = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 observed_generation = 3;
 * @return {number}
 */
proto.ratelimit.api.solo.io.RateLimitConfigStatus.prototype.getObservedGeneration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.ratelimit.api.solo.io.RateLimitConfigStatus.prototype.setObservedGeneration = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ratelimit.api.solo.io.RateLimitConfigNamespacedStatuses = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ratelimit.api.solo.io.RateLimitConfigNamespacedStatuses, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ratelimit.api.solo.io.RateLimitConfigNamespacedStatuses.displayName = 'proto.ratelimit.api.solo.io.RateLimitConfigNamespacedStatuses';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ratelimit.api.solo.io.RateLimitConfigNamespacedStatuses.prototype.toObject = function(opt_includeInstance) {
  return proto.ratelimit.api.solo.io.RateLimitConfigNamespacedStatuses.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ratelimit.api.solo.io.RateLimitConfigNamespacedStatuses} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.api.solo.io.RateLimitConfigNamespacedStatuses.toObject = function(includeInstance, msg) {
  var f, obj = {
    statusesMap: (f = msg.getStatusesMap()) ? f.toObject(includeInstance, proto.ratelimit.api.solo.io.RateLimitConfigStatus.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ratelimit.api.solo.io.RateLimitConfigNamespacedStatuses}
 */
proto.ratelimit.api.solo.io.RateLimitConfigNamespacedStatuses.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ratelimit.api.solo.io.RateLimitConfigNamespacedStatuses;
  return proto.ratelimit.api.solo.io.RateLimitConfigNamespacedStatuses.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ratelimit.api.solo.io.RateLimitConfigNamespacedStatuses} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ratelimit.api.solo.io.RateLimitConfigNamespacedStatuses}
 */
proto.ratelimit.api.solo.io.RateLimitConfigNamespacedStatuses.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getStatusesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.ratelimit.api.solo.io.RateLimitConfigStatus.deserializeBinaryFromReader, "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ratelimit.api.solo.io.RateLimitConfigNamespacedStatuses.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ratelimit.api.solo.io.RateLimitConfigNamespacedStatuses.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ratelimit.api.solo.io.RateLimitConfigNamespacedStatuses} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.api.solo.io.RateLimitConfigNamespacedStatuses.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatusesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.ratelimit.api.solo.io.RateLimitConfigStatus.serializeBinaryToWriter);
  }
};


/**
 * map<string, RateLimitConfigStatus> statuses = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.ratelimit.api.solo.io.RateLimitConfigStatus>}
 */
proto.ratelimit.api.solo.io.RateLimitConfigNamespacedStatuses.prototype.getStatusesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.ratelimit.api.solo.io.RateLimitConfigStatus>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.ratelimit.api.solo.io.RateLimitConfigStatus));
};


proto.ratelimit.api.solo.io.RateLimitConfigNamespacedStatuses.prototype.clearStatusesMap = function() {
  this.getStatusesMap().clear();
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ratelimit.api.solo.io.Descriptor = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ratelimit.api.solo.io.Descriptor.repeatedFields_, null);
};
goog.inherits(proto.ratelimit.api.solo.io.Descriptor, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ratelimit.api.solo.io.Descriptor.displayName = 'proto.ratelimit.api.solo.io.Descriptor';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ratelimit.api.solo.io.Descriptor.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ratelimit.api.solo.io.Descriptor.prototype.toObject = function(opt_includeInstance) {
  return proto.ratelimit.api.solo.io.Descriptor.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ratelimit.api.solo.io.Descriptor} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.api.solo.io.Descriptor.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: jspb.Message.getFieldWithDefault(msg, 2, ""),
    rateLimit: (f = msg.getRateLimit()) && proto.ratelimit.api.solo.io.RateLimit.toObject(includeInstance, f),
    descriptorsList: jspb.Message.toObjectList(msg.getDescriptorsList(),
    proto.ratelimit.api.solo.io.Descriptor.toObject, includeInstance),
    weight: jspb.Message.getFieldWithDefault(msg, 5, 0),
    alwaysApply: jspb.Message.getFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ratelimit.api.solo.io.Descriptor}
 */
proto.ratelimit.api.solo.io.Descriptor.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ratelimit.api.solo.io.Descriptor;
  return proto.ratelimit.api.solo.io.Descriptor.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ratelimit.api.solo.io.Descriptor} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ratelimit.api.solo.io.Descriptor}
 */
proto.ratelimit.api.solo.io.Descriptor.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 3:
      var value = new proto.ratelimit.api.solo.io.RateLimit;
      reader.readMessage(value,proto.ratelimit.api.solo.io.RateLimit.deserializeBinaryFromReader);
      msg.setRateLimit(value);
      break;
    case 4:
      var value = new proto.ratelimit.api.solo.io.Descriptor;
      reader.readMessage(value,proto.ratelimit.api.solo.io.Descriptor.deserializeBinaryFromReader);
      msg.addDescriptors(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setWeight(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAlwaysApply(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ratelimit.api.solo.io.Descriptor.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ratelimit.api.solo.io.Descriptor.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ratelimit.api.solo.io.Descriptor} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.api.solo.io.Descriptor.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRateLimit();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.ratelimit.api.solo.io.RateLimit.serializeBinaryToWriter
    );
  }
  f = message.getDescriptorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.ratelimit.api.solo.io.Descriptor.serializeBinaryToWriter
    );
  }
  f = message.getWeight();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getAlwaysApply();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.ratelimit.api.solo.io.Descriptor.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ratelimit.api.solo.io.Descriptor.prototype.setKey = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.ratelimit.api.solo.io.Descriptor.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ratelimit.api.solo.io.Descriptor.prototype.setValue = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional RateLimit rate_limit = 3;
 * @return {?proto.ratelimit.api.solo.io.RateLimit}
 */
proto.ratelimit.api.solo.io.Descriptor.prototype.getRateLimit = function() {
  return /** @type{?proto.ratelimit.api.solo.io.RateLimit} */ (
    jspb.Message.getWrapperField(this, proto.ratelimit.api.solo.io.RateLimit, 3));
};


/** @param {?proto.ratelimit.api.solo.io.RateLimit|undefined} value */
proto.ratelimit.api.solo.io.Descriptor.prototype.setRateLimit = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.ratelimit.api.solo.io.Descriptor.prototype.clearRateLimit = function() {
  this.setRateLimit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ratelimit.api.solo.io.Descriptor.prototype.hasRateLimit = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated Descriptor descriptors = 4;
 * @return {!Array<!proto.ratelimit.api.solo.io.Descriptor>}
 */
proto.ratelimit.api.solo.io.Descriptor.prototype.getDescriptorsList = function() {
  return /** @type{!Array<!proto.ratelimit.api.solo.io.Descriptor>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ratelimit.api.solo.io.Descriptor, 4));
};


/** @param {!Array<!proto.ratelimit.api.solo.io.Descriptor>} value */
proto.ratelimit.api.solo.io.Descriptor.prototype.setDescriptorsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.ratelimit.api.solo.io.Descriptor=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ratelimit.api.solo.io.Descriptor}
 */
proto.ratelimit.api.solo.io.Descriptor.prototype.addDescriptors = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.ratelimit.api.solo.io.Descriptor, opt_index);
};


proto.ratelimit.api.solo.io.Descriptor.prototype.clearDescriptorsList = function() {
  this.setDescriptorsList([]);
};


/**
 * optional uint32 weight = 5;
 * @return {number}
 */
proto.ratelimit.api.solo.io.Descriptor.prototype.getWeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.ratelimit.api.solo.io.Descriptor.prototype.setWeight = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional bool always_apply = 6;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.ratelimit.api.solo.io.Descriptor.prototype.getAlwaysApply = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));
};


/** @param {boolean} value */
proto.ratelimit.api.solo.io.Descriptor.prototype.setAlwaysApply = function(value) {
  jspb.Message.setProto3BooleanField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ratelimit.api.solo.io.SetDescriptor = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ratelimit.api.solo.io.SetDescriptor.repeatedFields_, null);
};
goog.inherits(proto.ratelimit.api.solo.io.SetDescriptor, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ratelimit.api.solo.io.SetDescriptor.displayName = 'proto.ratelimit.api.solo.io.SetDescriptor';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ratelimit.api.solo.io.SetDescriptor.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ratelimit.api.solo.io.SetDescriptor.prototype.toObject = function(opt_includeInstance) {
  return proto.ratelimit.api.solo.io.SetDescriptor.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ratelimit.api.solo.io.SetDescriptor} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.api.solo.io.SetDescriptor.toObject = function(includeInstance, msg) {
  var f, obj = {
    simpleDescriptorsList: jspb.Message.toObjectList(msg.getSimpleDescriptorsList(),
    proto.ratelimit.api.solo.io.SimpleDescriptor.toObject, includeInstance),
    rateLimit: (f = msg.getRateLimit()) && proto.ratelimit.api.solo.io.RateLimit.toObject(includeInstance, f),
    alwaysApply: jspb.Message.getFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ratelimit.api.solo.io.SetDescriptor}
 */
proto.ratelimit.api.solo.io.SetDescriptor.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ratelimit.api.solo.io.SetDescriptor;
  return proto.ratelimit.api.solo.io.SetDescriptor.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ratelimit.api.solo.io.SetDescriptor} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ratelimit.api.solo.io.SetDescriptor}
 */
proto.ratelimit.api.solo.io.SetDescriptor.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ratelimit.api.solo.io.SimpleDescriptor;
      reader.readMessage(value,proto.ratelimit.api.solo.io.SimpleDescriptor.deserializeBinaryFromReader);
      msg.addSimpleDescriptors(value);
      break;
    case 2:
      var value = new proto.ratelimit.api.solo.io.RateLimit;
      reader.readMessage(value,proto.ratelimit.api.solo.io.RateLimit.deserializeBinaryFromReader);
      msg.setRateLimit(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAlwaysApply(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ratelimit.api.solo.io.SetDescriptor.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ratelimit.api.solo.io.SetDescriptor.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ratelimit.api.solo.io.SetDescriptor} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.api.solo.io.SetDescriptor.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSimpleDescriptorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ratelimit.api.solo.io.SimpleDescriptor.serializeBinaryToWriter
    );
  }
  f = message.getRateLimit();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ratelimit.api.solo.io.RateLimit.serializeBinaryToWriter
    );
  }
  f = message.getAlwaysApply();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * repeated SimpleDescriptor simple_descriptors = 1;
 * @return {!Array<!proto.ratelimit.api.solo.io.SimpleDescriptor>}
 */
proto.ratelimit.api.solo.io.SetDescriptor.prototype.getSimpleDescriptorsList = function() {
  return /** @type{!Array<!proto.ratelimit.api.solo.io.SimpleDescriptor>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ratelimit.api.solo.io.SimpleDescriptor, 1));
};


/** @param {!Array<!proto.ratelimit.api.solo.io.SimpleDescriptor>} value */
proto.ratelimit.api.solo.io.SetDescriptor.prototype.setSimpleDescriptorsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ratelimit.api.solo.io.SimpleDescriptor=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ratelimit.api.solo.io.SimpleDescriptor}
 */
proto.ratelimit.api.solo.io.SetDescriptor.prototype.addSimpleDescriptors = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ratelimit.api.solo.io.SimpleDescriptor, opt_index);
};


proto.ratelimit.api.solo.io.SetDescriptor.prototype.clearSimpleDescriptorsList = function() {
  this.setSimpleDescriptorsList([]);
};


/**
 * optional RateLimit rate_limit = 2;
 * @return {?proto.ratelimit.api.solo.io.RateLimit}
 */
proto.ratelimit.api.solo.io.SetDescriptor.prototype.getRateLimit = function() {
  return /** @type{?proto.ratelimit.api.solo.io.RateLimit} */ (
    jspb.Message.getWrapperField(this, proto.ratelimit.api.solo.io.RateLimit, 2));
};


/** @param {?proto.ratelimit.api.solo.io.RateLimit|undefined} value */
proto.ratelimit.api.solo.io.SetDescriptor.prototype.setRateLimit = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.ratelimit.api.solo.io.SetDescriptor.prototype.clearRateLimit = function() {
  this.setRateLimit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ratelimit.api.solo.io.SetDescriptor.prototype.hasRateLimit = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool always_apply = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.ratelimit.api.solo.io.SetDescriptor.prototype.getAlwaysApply = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.ratelimit.api.solo.io.SetDescriptor.prototype.setAlwaysApply = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ratelimit.api.solo.io.SimpleDescriptor = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ratelimit.api.solo.io.SimpleDescriptor, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ratelimit.api.solo.io.SimpleDescriptor.displayName = 'proto.ratelimit.api.solo.io.SimpleDescriptor';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ratelimit.api.solo.io.SimpleDescriptor.prototype.toObject = function(opt_includeInstance) {
  return proto.ratelimit.api.solo.io.SimpleDescriptor.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ratelimit.api.solo.io.SimpleDescriptor} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.api.solo.io.SimpleDescriptor.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ratelimit.api.solo.io.SimpleDescriptor}
 */
proto.ratelimit.api.solo.io.SimpleDescriptor.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ratelimit.api.solo.io.SimpleDescriptor;
  return proto.ratelimit.api.solo.io.SimpleDescriptor.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ratelimit.api.solo.io.SimpleDescriptor} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ratelimit.api.solo.io.SimpleDescriptor}
 */
proto.ratelimit.api.solo.io.SimpleDescriptor.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ratelimit.api.solo.io.SimpleDescriptor.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ratelimit.api.solo.io.SimpleDescriptor.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ratelimit.api.solo.io.SimpleDescriptor} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.api.solo.io.SimpleDescriptor.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.ratelimit.api.solo.io.SimpleDescriptor.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ratelimit.api.solo.io.SimpleDescriptor.prototype.setKey = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.ratelimit.api.solo.io.SimpleDescriptor.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ratelimit.api.solo.io.SimpleDescriptor.prototype.setValue = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ratelimit.api.solo.io.RateLimitActions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ratelimit.api.solo.io.RateLimitActions.repeatedFields_, null);
};
goog.inherits(proto.ratelimit.api.solo.io.RateLimitActions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ratelimit.api.solo.io.RateLimitActions.displayName = 'proto.ratelimit.api.solo.io.RateLimitActions';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ratelimit.api.solo.io.RateLimitActions.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ratelimit.api.solo.io.RateLimitActions.prototype.toObject = function(opt_includeInstance) {
  return proto.ratelimit.api.solo.io.RateLimitActions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ratelimit.api.solo.io.RateLimitActions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.api.solo.io.RateLimitActions.toObject = function(includeInstance, msg) {
  var f, obj = {
    actionsList: jspb.Message.toObjectList(msg.getActionsList(),
    proto.ratelimit.api.solo.io.Action.toObject, includeInstance),
    setActionsList: jspb.Message.toObjectList(msg.getSetActionsList(),
    proto.ratelimit.api.solo.io.Action.toObject, includeInstance),
    limit: (f = msg.getLimit()) && proto.ratelimit.api.solo.io.Override.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ratelimit.api.solo.io.RateLimitActions}
 */
proto.ratelimit.api.solo.io.RateLimitActions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ratelimit.api.solo.io.RateLimitActions;
  return proto.ratelimit.api.solo.io.RateLimitActions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ratelimit.api.solo.io.RateLimitActions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ratelimit.api.solo.io.RateLimitActions}
 */
proto.ratelimit.api.solo.io.RateLimitActions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ratelimit.api.solo.io.Action;
      reader.readMessage(value,proto.ratelimit.api.solo.io.Action.deserializeBinaryFromReader);
      msg.addActions(value);
      break;
    case 2:
      var value = new proto.ratelimit.api.solo.io.Action;
      reader.readMessage(value,proto.ratelimit.api.solo.io.Action.deserializeBinaryFromReader);
      msg.addSetActions(value);
      break;
    case 3:
      var value = new proto.ratelimit.api.solo.io.Override;
      reader.readMessage(value,proto.ratelimit.api.solo.io.Override.deserializeBinaryFromReader);
      msg.setLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ratelimit.api.solo.io.RateLimitActions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ratelimit.api.solo.io.RateLimitActions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ratelimit.api.solo.io.RateLimitActions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.api.solo.io.RateLimitActions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ratelimit.api.solo.io.Action.serializeBinaryToWriter
    );
  }
  f = message.getSetActionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.ratelimit.api.solo.io.Action.serializeBinaryToWriter
    );
  }
  f = message.getLimit();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.ratelimit.api.solo.io.Override.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Action actions = 1;
 * @return {!Array<!proto.ratelimit.api.solo.io.Action>}
 */
proto.ratelimit.api.solo.io.RateLimitActions.prototype.getActionsList = function() {
  return /** @type{!Array<!proto.ratelimit.api.solo.io.Action>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ratelimit.api.solo.io.Action, 1));
};


/** @param {!Array<!proto.ratelimit.api.solo.io.Action>} value */
proto.ratelimit.api.solo.io.RateLimitActions.prototype.setActionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ratelimit.api.solo.io.Action=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ratelimit.api.solo.io.Action}
 */
proto.ratelimit.api.solo.io.RateLimitActions.prototype.addActions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ratelimit.api.solo.io.Action, opt_index);
};


proto.ratelimit.api.solo.io.RateLimitActions.prototype.clearActionsList = function() {
  this.setActionsList([]);
};


/**
 * repeated Action set_actions = 2;
 * @return {!Array<!proto.ratelimit.api.solo.io.Action>}
 */
proto.ratelimit.api.solo.io.RateLimitActions.prototype.getSetActionsList = function() {
  return /** @type{!Array<!proto.ratelimit.api.solo.io.Action>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ratelimit.api.solo.io.Action, 2));
};


/** @param {!Array<!proto.ratelimit.api.solo.io.Action>} value */
proto.ratelimit.api.solo.io.RateLimitActions.prototype.setSetActionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.ratelimit.api.solo.io.Action=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ratelimit.api.solo.io.Action}
 */
proto.ratelimit.api.solo.io.RateLimitActions.prototype.addSetActions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.ratelimit.api.solo.io.Action, opt_index);
};


proto.ratelimit.api.solo.io.RateLimitActions.prototype.clearSetActionsList = function() {
  this.setSetActionsList([]);
};


/**
 * optional Override limit = 3;
 * @return {?proto.ratelimit.api.solo.io.Override}
 */
proto.ratelimit.api.solo.io.RateLimitActions.prototype.getLimit = function() {
  return /** @type{?proto.ratelimit.api.solo.io.Override} */ (
    jspb.Message.getWrapperField(this, proto.ratelimit.api.solo.io.Override, 3));
};


/** @param {?proto.ratelimit.api.solo.io.Override|undefined} value */
proto.ratelimit.api.solo.io.RateLimitActions.prototype.setLimit = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.ratelimit.api.solo.io.RateLimitActions.prototype.clearLimit = function() {
  this.setLimit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ratelimit.api.solo.io.RateLimitActions.prototype.hasLimit = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ratelimit.api.solo.io.RateLimit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ratelimit.api.solo.io.RateLimit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ratelimit.api.solo.io.RateLimit.displayName = 'proto.ratelimit.api.solo.io.RateLimit';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ratelimit.api.solo.io.RateLimit.prototype.toObject = function(opt_includeInstance) {
  return proto.ratelimit.api.solo.io.RateLimit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ratelimit.api.solo.io.RateLimit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.api.solo.io.RateLimit.toObject = function(includeInstance, msg) {
  var f, obj = {
    unit: jspb.Message.getFieldWithDefault(msg, 1, 0),
    requestsPerUnit: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ratelimit.api.solo.io.RateLimit}
 */
proto.ratelimit.api.solo.io.RateLimit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ratelimit.api.solo.io.RateLimit;
  return proto.ratelimit.api.solo.io.RateLimit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ratelimit.api.solo.io.RateLimit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ratelimit.api.solo.io.RateLimit}
 */
proto.ratelimit.api.solo.io.RateLimit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ratelimit.api.solo.io.RateLimit.Unit} */ (reader.readEnum());
      msg.setUnit(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRequestsPerUnit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ratelimit.api.solo.io.RateLimit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ratelimit.api.solo.io.RateLimit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ratelimit.api.solo.io.RateLimit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.api.solo.io.RateLimit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUnit();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getRequestsPerUnit();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.ratelimit.api.solo.io.RateLimit.Unit = {
  UNKNOWN: 0,
  SECOND: 1,
  MINUTE: 2,
  HOUR: 3,
  DAY: 4
};

/**
 * optional Unit unit = 1;
 * @return {!proto.ratelimit.api.solo.io.RateLimit.Unit}
 */
proto.ratelimit.api.solo.io.RateLimit.prototype.getUnit = function() {
  return /** @type {!proto.ratelimit.api.solo.io.RateLimit.Unit} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.ratelimit.api.solo.io.RateLimit.Unit} value */
proto.ratelimit.api.solo.io.RateLimit.prototype.setUnit = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional uint32 requests_per_unit = 2;
 * @return {number}
 */
proto.ratelimit.api.solo.io.RateLimit.prototype.getRequestsPerUnit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.ratelimit.api.solo.io.RateLimit.prototype.setRequestsPerUnit = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ratelimit.api.solo.io.Action = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.ratelimit.api.solo.io.Action.oneofGroups_);
};
goog.inherits(proto.ratelimit.api.solo.io.Action, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ratelimit.api.solo.io.Action.displayName = 'proto.ratelimit.api.solo.io.Action';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.ratelimit.api.solo.io.Action.oneofGroups_ = [[1,2,3,4,5,6,8]];

/**
 * @enum {number}
 */
proto.ratelimit.api.solo.io.Action.ActionSpecifierCase = {
  ACTION_SPECIFIER_NOT_SET: 0,
  SOURCE_CLUSTER: 1,
  DESTINATION_CLUSTER: 2,
  REQUEST_HEADERS: 3,
  REMOTE_ADDRESS: 4,
  GENERIC_KEY: 5,
  HEADER_VALUE_MATCH: 6,
  METADATA: 8
};

/**
 * @return {proto.ratelimit.api.solo.io.Action.ActionSpecifierCase}
 */
proto.ratelimit.api.solo.io.Action.prototype.getActionSpecifierCase = function() {
  return /** @type {proto.ratelimit.api.solo.io.Action.ActionSpecifierCase} */(jspb.Message.computeOneofCase(this, proto.ratelimit.api.solo.io.Action.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ratelimit.api.solo.io.Action.prototype.toObject = function(opt_includeInstance) {
  return proto.ratelimit.api.solo.io.Action.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ratelimit.api.solo.io.Action} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.api.solo.io.Action.toObject = function(includeInstance, msg) {
  var f, obj = {
    sourceCluster: (f = msg.getSourceCluster()) && proto.ratelimit.api.solo.io.Action.SourceCluster.toObject(includeInstance, f),
    destinationCluster: (f = msg.getDestinationCluster()) && proto.ratelimit.api.solo.io.Action.DestinationCluster.toObject(includeInstance, f),
    requestHeaders: (f = msg.getRequestHeaders()) && proto.ratelimit.api.solo.io.Action.RequestHeaders.toObject(includeInstance, f),
    remoteAddress: (f = msg.getRemoteAddress()) && proto.ratelimit.api.solo.io.Action.RemoteAddress.toObject(includeInstance, f),
    genericKey: (f = msg.getGenericKey()) && proto.ratelimit.api.solo.io.Action.GenericKey.toObject(includeInstance, f),
    headerValueMatch: (f = msg.getHeaderValueMatch()) && proto.ratelimit.api.solo.io.Action.HeaderValueMatch.toObject(includeInstance, f),
    metadata: (f = msg.getMetadata()) && proto.ratelimit.api.solo.io.MetaData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ratelimit.api.solo.io.Action}
 */
proto.ratelimit.api.solo.io.Action.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ratelimit.api.solo.io.Action;
  return proto.ratelimit.api.solo.io.Action.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ratelimit.api.solo.io.Action} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ratelimit.api.solo.io.Action}
 */
proto.ratelimit.api.solo.io.Action.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ratelimit.api.solo.io.Action.SourceCluster;
      reader.readMessage(value,proto.ratelimit.api.solo.io.Action.SourceCluster.deserializeBinaryFromReader);
      msg.setSourceCluster(value);
      break;
    case 2:
      var value = new proto.ratelimit.api.solo.io.Action.DestinationCluster;
      reader.readMessage(value,proto.ratelimit.api.solo.io.Action.DestinationCluster.deserializeBinaryFromReader);
      msg.setDestinationCluster(value);
      break;
    case 3:
      var value = new proto.ratelimit.api.solo.io.Action.RequestHeaders;
      reader.readMessage(value,proto.ratelimit.api.solo.io.Action.RequestHeaders.deserializeBinaryFromReader);
      msg.setRequestHeaders(value);
      break;
    case 4:
      var value = new proto.ratelimit.api.solo.io.Action.RemoteAddress;
      reader.readMessage(value,proto.ratelimit.api.solo.io.Action.RemoteAddress.deserializeBinaryFromReader);
      msg.setRemoteAddress(value);
      break;
    case 5:
      var value = new proto.ratelimit.api.solo.io.Action.GenericKey;
      reader.readMessage(value,proto.ratelimit.api.solo.io.Action.GenericKey.deserializeBinaryFromReader);
      msg.setGenericKey(value);
      break;
    case 6:
      var value = new proto.ratelimit.api.solo.io.Action.HeaderValueMatch;
      reader.readMessage(value,proto.ratelimit.api.solo.io.Action.HeaderValueMatch.deserializeBinaryFromReader);
      msg.setHeaderValueMatch(value);
      break;
    case 8:
      var value = new proto.ratelimit.api.solo.io.MetaData;
      reader.readMessage(value,proto.ratelimit.api.solo.io.MetaData.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ratelimit.api.solo.io.Action.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ratelimit.api.solo.io.Action.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ratelimit.api.solo.io.Action} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.api.solo.io.Action.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSourceCluster();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ratelimit.api.solo.io.Action.SourceCluster.serializeBinaryToWriter
    );
  }
  f = message.getDestinationCluster();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ratelimit.api.solo.io.Action.DestinationCluster.serializeBinaryToWriter
    );
  }
  f = message.getRequestHeaders();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.ratelimit.api.solo.io.Action.RequestHeaders.serializeBinaryToWriter
    );
  }
  f = message.getRemoteAddress();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.ratelimit.api.solo.io.Action.RemoteAddress.serializeBinaryToWriter
    );
  }
  f = message.getGenericKey();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.ratelimit.api.solo.io.Action.GenericKey.serializeBinaryToWriter
    );
  }
  f = message.getHeaderValueMatch();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.ratelimit.api.solo.io.Action.HeaderValueMatch.serializeBinaryToWriter
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.ratelimit.api.solo.io.MetaData.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ratelimit.api.solo.io.Action.SourceCluster = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ratelimit.api.solo.io.Action.SourceCluster, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ratelimit.api.solo.io.Action.SourceCluster.displayName = 'proto.ratelimit.api.solo.io.Action.SourceCluster';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ratelimit.api.solo.io.Action.SourceCluster.prototype.toObject = function(opt_includeInstance) {
  return proto.ratelimit.api.solo.io.Action.SourceCluster.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ratelimit.api.solo.io.Action.SourceCluster} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.api.solo.io.Action.SourceCluster.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ratelimit.api.solo.io.Action.SourceCluster}
 */
proto.ratelimit.api.solo.io.Action.SourceCluster.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ratelimit.api.solo.io.Action.SourceCluster;
  return proto.ratelimit.api.solo.io.Action.SourceCluster.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ratelimit.api.solo.io.Action.SourceCluster} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ratelimit.api.solo.io.Action.SourceCluster}
 */
proto.ratelimit.api.solo.io.Action.SourceCluster.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ratelimit.api.solo.io.Action.SourceCluster.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ratelimit.api.solo.io.Action.SourceCluster.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ratelimit.api.solo.io.Action.SourceCluster} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.api.solo.io.Action.SourceCluster.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ratelimit.api.solo.io.Action.DestinationCluster = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ratelimit.api.solo.io.Action.DestinationCluster, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ratelimit.api.solo.io.Action.DestinationCluster.displayName = 'proto.ratelimit.api.solo.io.Action.DestinationCluster';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ratelimit.api.solo.io.Action.DestinationCluster.prototype.toObject = function(opt_includeInstance) {
  return proto.ratelimit.api.solo.io.Action.DestinationCluster.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ratelimit.api.solo.io.Action.DestinationCluster} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.api.solo.io.Action.DestinationCluster.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ratelimit.api.solo.io.Action.DestinationCluster}
 */
proto.ratelimit.api.solo.io.Action.DestinationCluster.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ratelimit.api.solo.io.Action.DestinationCluster;
  return proto.ratelimit.api.solo.io.Action.DestinationCluster.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ratelimit.api.solo.io.Action.DestinationCluster} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ratelimit.api.solo.io.Action.DestinationCluster}
 */
proto.ratelimit.api.solo.io.Action.DestinationCluster.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ratelimit.api.solo.io.Action.DestinationCluster.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ratelimit.api.solo.io.Action.DestinationCluster.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ratelimit.api.solo.io.Action.DestinationCluster} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.api.solo.io.Action.DestinationCluster.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ratelimit.api.solo.io.Action.RequestHeaders = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ratelimit.api.solo.io.Action.RequestHeaders, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ratelimit.api.solo.io.Action.RequestHeaders.displayName = 'proto.ratelimit.api.solo.io.Action.RequestHeaders';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ratelimit.api.solo.io.Action.RequestHeaders.prototype.toObject = function(opt_includeInstance) {
  return proto.ratelimit.api.solo.io.Action.RequestHeaders.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ratelimit.api.solo.io.Action.RequestHeaders} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.api.solo.io.Action.RequestHeaders.toObject = function(includeInstance, msg) {
  var f, obj = {
    headerName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    descriptorKey: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ratelimit.api.solo.io.Action.RequestHeaders}
 */
proto.ratelimit.api.solo.io.Action.RequestHeaders.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ratelimit.api.solo.io.Action.RequestHeaders;
  return proto.ratelimit.api.solo.io.Action.RequestHeaders.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ratelimit.api.solo.io.Action.RequestHeaders} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ratelimit.api.solo.io.Action.RequestHeaders}
 */
proto.ratelimit.api.solo.io.Action.RequestHeaders.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHeaderName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescriptorKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ratelimit.api.solo.io.Action.RequestHeaders.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ratelimit.api.solo.io.Action.RequestHeaders.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ratelimit.api.solo.io.Action.RequestHeaders} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.api.solo.io.Action.RequestHeaders.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeaderName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescriptorKey();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string header_name = 1;
 * @return {string}
 */
proto.ratelimit.api.solo.io.Action.RequestHeaders.prototype.getHeaderName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ratelimit.api.solo.io.Action.RequestHeaders.prototype.setHeaderName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string descriptor_key = 2;
 * @return {string}
 */
proto.ratelimit.api.solo.io.Action.RequestHeaders.prototype.getDescriptorKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ratelimit.api.solo.io.Action.RequestHeaders.prototype.setDescriptorKey = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ratelimit.api.solo.io.Action.RemoteAddress = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ratelimit.api.solo.io.Action.RemoteAddress, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ratelimit.api.solo.io.Action.RemoteAddress.displayName = 'proto.ratelimit.api.solo.io.Action.RemoteAddress';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ratelimit.api.solo.io.Action.RemoteAddress.prototype.toObject = function(opt_includeInstance) {
  return proto.ratelimit.api.solo.io.Action.RemoteAddress.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ratelimit.api.solo.io.Action.RemoteAddress} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.api.solo.io.Action.RemoteAddress.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ratelimit.api.solo.io.Action.RemoteAddress}
 */
proto.ratelimit.api.solo.io.Action.RemoteAddress.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ratelimit.api.solo.io.Action.RemoteAddress;
  return proto.ratelimit.api.solo.io.Action.RemoteAddress.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ratelimit.api.solo.io.Action.RemoteAddress} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ratelimit.api.solo.io.Action.RemoteAddress}
 */
proto.ratelimit.api.solo.io.Action.RemoteAddress.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ratelimit.api.solo.io.Action.RemoteAddress.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ratelimit.api.solo.io.Action.RemoteAddress.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ratelimit.api.solo.io.Action.RemoteAddress} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.api.solo.io.Action.RemoteAddress.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ratelimit.api.solo.io.Action.GenericKey = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ratelimit.api.solo.io.Action.GenericKey, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ratelimit.api.solo.io.Action.GenericKey.displayName = 'proto.ratelimit.api.solo.io.Action.GenericKey';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ratelimit.api.solo.io.Action.GenericKey.prototype.toObject = function(opt_includeInstance) {
  return proto.ratelimit.api.solo.io.Action.GenericKey.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ratelimit.api.solo.io.Action.GenericKey} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.api.solo.io.Action.GenericKey.toObject = function(includeInstance, msg) {
  var f, obj = {
    descriptorValue: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ratelimit.api.solo.io.Action.GenericKey}
 */
proto.ratelimit.api.solo.io.Action.GenericKey.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ratelimit.api.solo.io.Action.GenericKey;
  return proto.ratelimit.api.solo.io.Action.GenericKey.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ratelimit.api.solo.io.Action.GenericKey} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ratelimit.api.solo.io.Action.GenericKey}
 */
proto.ratelimit.api.solo.io.Action.GenericKey.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescriptorValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ratelimit.api.solo.io.Action.GenericKey.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ratelimit.api.solo.io.Action.GenericKey.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ratelimit.api.solo.io.Action.GenericKey} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.api.solo.io.Action.GenericKey.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDescriptorValue();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string descriptor_value = 1;
 * @return {string}
 */
proto.ratelimit.api.solo.io.Action.GenericKey.prototype.getDescriptorValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ratelimit.api.solo.io.Action.GenericKey.prototype.setDescriptorValue = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ratelimit.api.solo.io.Action.HeaderValueMatch.repeatedFields_, null);
};
goog.inherits(proto.ratelimit.api.solo.io.Action.HeaderValueMatch, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ratelimit.api.solo.io.Action.HeaderValueMatch.displayName = 'proto.ratelimit.api.solo.io.Action.HeaderValueMatch';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.prototype.toObject = function(opt_includeInstance) {
  return proto.ratelimit.api.solo.io.Action.HeaderValueMatch.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ratelimit.api.solo.io.Action.HeaderValueMatch} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.toObject = function(includeInstance, msg) {
  var f, obj = {
    descriptorValue: jspb.Message.getFieldWithDefault(msg, 1, ""),
    expectMatch: (f = msg.getExpectMatch()) && google_protobuf_wrappers_pb.BoolValue.toObject(includeInstance, f),
    headersList: jspb.Message.toObjectList(msg.getHeadersList(),
    proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ratelimit.api.solo.io.Action.HeaderValueMatch}
 */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ratelimit.api.solo.io.Action.HeaderValueMatch;
  return proto.ratelimit.api.solo.io.Action.HeaderValueMatch.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ratelimit.api.solo.io.Action.HeaderValueMatch} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ratelimit.api.solo.io.Action.HeaderValueMatch}
 */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescriptorValue(value);
      break;
    case 2:
      var value = new google_protobuf_wrappers_pb.BoolValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.BoolValue.deserializeBinaryFromReader);
      msg.setExpectMatch(value);
      break;
    case 3:
      var value = new proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher;
      reader.readMessage(value,proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.deserializeBinaryFromReader);
      msg.addHeaders(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ratelimit.api.solo.io.Action.HeaderValueMatch.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ratelimit.api.solo.io.Action.HeaderValueMatch} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDescriptorValue();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getExpectMatch();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_wrappers_pb.BoolValue.serializeBinaryToWriter
    );
  }
  f = message.getHeadersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.oneofGroups_);
};
goog.inherits(proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.displayName = 'proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.oneofGroups_ = [[4,5,6,7,9,10]];

/**
 * @enum {number}
 */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.HeaderMatchSpecifierCase = {
  HEADER_MATCH_SPECIFIER_NOT_SET: 0,
  EXACT_MATCH: 4,
  REGEX_MATCH: 5,
  RANGE_MATCH: 6,
  PRESENT_MATCH: 7,
  PREFIX_MATCH: 9,
  SUFFIX_MATCH: 10
};

/**
 * @return {proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.HeaderMatchSpecifierCase}
 */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.prototype.getHeaderMatchSpecifierCase = function() {
  return /** @type {proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.HeaderMatchSpecifierCase} */(jspb.Message.computeOneofCase(this, proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.prototype.toObject = function(opt_includeInstance) {
  return proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    exactMatch: jspb.Message.getFieldWithDefault(msg, 4, ""),
    regexMatch: jspb.Message.getFieldWithDefault(msg, 5, ""),
    rangeMatch: (f = msg.getRangeMatch()) && proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.Int64Range.toObject(includeInstance, f),
    presentMatch: jspb.Message.getFieldWithDefault(msg, 7, false),
    prefixMatch: jspb.Message.getFieldWithDefault(msg, 9, ""),
    suffixMatch: jspb.Message.getFieldWithDefault(msg, 10, ""),
    invertMatch: jspb.Message.getFieldWithDefault(msg, 8, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher}
 */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher;
  return proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher}
 */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setExactMatch(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegexMatch(value);
      break;
    case 6:
      var value = new proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.Int64Range;
      reader.readMessage(value,proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.Int64Range.deserializeBinaryFromReader);
      msg.setRangeMatch(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPresentMatch(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrefixMatch(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setSuffixMatch(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInvertMatch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getRangeMatch();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.Int64Range.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBool(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getInvertMatch();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.Int64Range = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.Int64Range, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.Int64Range.displayName = 'proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.Int64Range';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.Int64Range.prototype.toObject = function(opt_includeInstance) {
  return proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.Int64Range.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.Int64Range} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.Int64Range.toObject = function(includeInstance, msg) {
  var f, obj = {
    start: jspb.Message.getFieldWithDefault(msg, 1, 0),
    end: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.Int64Range}
 */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.Int64Range.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.Int64Range;
  return proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.Int64Range.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.Int64Range} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.Int64Range}
 */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.Int64Range.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStart(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEnd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.Int64Range.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.Int64Range.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.Int64Range} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.Int64Range.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStart();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getEnd();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional int64 start = 1;
 * @return {number}
 */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.Int64Range.prototype.getStart = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.Int64Range.prototype.setStart = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 end = 2;
 * @return {number}
 */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.Int64Range.prototype.getEnd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.Int64Range.prototype.setEnd = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string exact_match = 4;
 * @return {string}
 */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.prototype.getExactMatch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.prototype.setExactMatch = function(value) {
  jspb.Message.setOneofField(this, 4, proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.oneofGroups_[0], value);
};


proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.prototype.clearExactMatch = function() {
  jspb.Message.setOneofField(this, 4, proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.prototype.hasExactMatch = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string regex_match = 5;
 * @return {string}
 */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.prototype.getRegexMatch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.prototype.setRegexMatch = function(value) {
  jspb.Message.setOneofField(this, 5, proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.oneofGroups_[0], value);
};


proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.prototype.clearRegexMatch = function() {
  jspb.Message.setOneofField(this, 5, proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.prototype.hasRegexMatch = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Int64Range range_match = 6;
 * @return {?proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.Int64Range}
 */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.prototype.getRangeMatch = function() {
  return /** @type{?proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.Int64Range} */ (
    jspb.Message.getWrapperField(this, proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.Int64Range, 6));
};


/** @param {?proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.Int64Range|undefined} value */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.prototype.setRangeMatch = function(value) {
  jspb.Message.setOneofWrapperField(this, 6, proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.oneofGroups_[0], value);
};


proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.prototype.clearRangeMatch = function() {
  this.setRangeMatch(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.prototype.hasRangeMatch = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool present_match = 7;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.prototype.getPresentMatch = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 7, false));
};


/** @param {boolean} value */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.prototype.setPresentMatch = function(value) {
  jspb.Message.setOneofField(this, 7, proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.oneofGroups_[0], value);
};


proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.prototype.clearPresentMatch = function() {
  jspb.Message.setOneofField(this, 7, proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.prototype.hasPresentMatch = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string prefix_match = 9;
 * @return {string}
 */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.prototype.getPrefixMatch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.prototype.setPrefixMatch = function(value) {
  jspb.Message.setOneofField(this, 9, proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.oneofGroups_[0], value);
};


proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.prototype.clearPrefixMatch = function() {
  jspb.Message.setOneofField(this, 9, proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.prototype.hasPrefixMatch = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string suffix_match = 10;
 * @return {string}
 */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.prototype.getSuffixMatch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.prototype.setSuffixMatch = function(value) {
  jspb.Message.setOneofField(this, 10, proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.oneofGroups_[0], value);
};


proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.prototype.clearSuffixMatch = function() {
  jspb.Message.setOneofField(this, 10, proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.prototype.hasSuffixMatch = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional bool invert_match = 8;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.prototype.getInvertMatch = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 8, false));
};


/** @param {boolean} value */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher.prototype.setInvertMatch = function(value) {
  jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional string descriptor_value = 1;
 * @return {string}
 */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.prototype.getDescriptorValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.prototype.setDescriptorValue = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.BoolValue expect_match = 2;
 * @return {?proto.google.protobuf.BoolValue}
 */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.prototype.getExpectMatch = function() {
  return /** @type{?proto.google.protobuf.BoolValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.BoolValue, 2));
};


/** @param {?proto.google.protobuf.BoolValue|undefined} value */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.prototype.setExpectMatch = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.ratelimit.api.solo.io.Action.HeaderValueMatch.prototype.clearExpectMatch = function() {
  this.setExpectMatch(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.prototype.hasExpectMatch = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated HeaderMatcher headers = 3;
 * @return {!Array<!proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher>}
 */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.prototype.getHeadersList = function() {
  return /** @type{!Array<!proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher, 3));
};


/** @param {!Array<!proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher>} value */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.prototype.setHeadersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher}
 */
proto.ratelimit.api.solo.io.Action.HeaderValueMatch.prototype.addHeaders = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.ratelimit.api.solo.io.Action.HeaderValueMatch.HeaderMatcher, opt_index);
};


proto.ratelimit.api.solo.io.Action.HeaderValueMatch.prototype.clearHeadersList = function() {
  this.setHeadersList([]);
};


/**
 * optional SourceCluster source_cluster = 1;
 * @return {?proto.ratelimit.api.solo.io.Action.SourceCluster}
 */
proto.ratelimit.api.solo.io.Action.prototype.getSourceCluster = function() {
  return /** @type{?proto.ratelimit.api.solo.io.Action.SourceCluster} */ (
    jspb.Message.getWrapperField(this, proto.ratelimit.api.solo.io.Action.SourceCluster, 1));
};


/** @param {?proto.ratelimit.api.solo.io.Action.SourceCluster|undefined} value */
proto.ratelimit.api.solo.io.Action.prototype.setSourceCluster = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.ratelimit.api.solo.io.Action.oneofGroups_[0], value);
};


proto.ratelimit.api.solo.io.Action.prototype.clearSourceCluster = function() {
  this.setSourceCluster(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ratelimit.api.solo.io.Action.prototype.hasSourceCluster = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional DestinationCluster destination_cluster = 2;
 * @return {?proto.ratelimit.api.solo.io.Action.DestinationCluster}
 */
proto.ratelimit.api.solo.io.Action.prototype.getDestinationCluster = function() {
  return /** @type{?proto.ratelimit.api.solo.io.Action.DestinationCluster} */ (
    jspb.Message.getWrapperField(this, proto.ratelimit.api.solo.io.Action.DestinationCluster, 2));
};


/** @param {?proto.ratelimit.api.solo.io.Action.DestinationCluster|undefined} value */
proto.ratelimit.api.solo.io.Action.prototype.setDestinationCluster = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.ratelimit.api.solo.io.Action.oneofGroups_[0], value);
};


proto.ratelimit.api.solo.io.Action.prototype.clearDestinationCluster = function() {
  this.setDestinationCluster(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ratelimit.api.solo.io.Action.prototype.hasDestinationCluster = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional RequestHeaders request_headers = 3;
 * @return {?proto.ratelimit.api.solo.io.Action.RequestHeaders}
 */
proto.ratelimit.api.solo.io.Action.prototype.getRequestHeaders = function() {
  return /** @type{?proto.ratelimit.api.solo.io.Action.RequestHeaders} */ (
    jspb.Message.getWrapperField(this, proto.ratelimit.api.solo.io.Action.RequestHeaders, 3));
};


/** @param {?proto.ratelimit.api.solo.io.Action.RequestHeaders|undefined} value */
proto.ratelimit.api.solo.io.Action.prototype.setRequestHeaders = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.ratelimit.api.solo.io.Action.oneofGroups_[0], value);
};


proto.ratelimit.api.solo.io.Action.prototype.clearRequestHeaders = function() {
  this.setRequestHeaders(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ratelimit.api.solo.io.Action.prototype.hasRequestHeaders = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional RemoteAddress remote_address = 4;
 * @return {?proto.ratelimit.api.solo.io.Action.RemoteAddress}
 */
proto.ratelimit.api.solo.io.Action.prototype.getRemoteAddress = function() {
  return /** @type{?proto.ratelimit.api.solo.io.Action.RemoteAddress} */ (
    jspb.Message.getWrapperField(this, proto.ratelimit.api.solo.io.Action.RemoteAddress, 4));
};


/** @param {?proto.ratelimit.api.solo.io.Action.RemoteAddress|undefined} value */
proto.ratelimit.api.solo.io.Action.prototype.setRemoteAddress = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.ratelimit.api.solo.io.Action.oneofGroups_[0], value);
};


proto.ratelimit.api.solo.io.Action.prototype.clearRemoteAddress = function() {
  this.setRemoteAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ratelimit.api.solo.io.Action.prototype.hasRemoteAddress = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional GenericKey generic_key = 5;
 * @return {?proto.ratelimit.api.solo.io.Action.GenericKey}
 */
proto.ratelimit.api.solo.io.Action.prototype.getGenericKey = function() {
  return /** @type{?proto.ratelimit.api.solo.io.Action.GenericKey} */ (
    jspb.Message.getWrapperField(this, proto.ratelimit.api.solo.io.Action.GenericKey, 5));
};


/** @param {?proto.ratelimit.api.solo.io.Action.GenericKey|undefined} value */
proto.ratelimit.api.solo.io.Action.prototype.setGenericKey = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.ratelimit.api.solo.io.Action.oneofGroups_[0], value);
};


proto.ratelimit.api.solo.io.Action.prototype.clearGenericKey = function() {
  this.setGenericKey(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ratelimit.api.solo.io.Action.prototype.hasGenericKey = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional HeaderValueMatch header_value_match = 6;
 * @return {?proto.ratelimit.api.solo.io.Action.HeaderValueMatch}
 */
proto.ratelimit.api.solo.io.Action.prototype.getHeaderValueMatch = function() {
  return /** @type{?proto.ratelimit.api.solo.io.Action.HeaderValueMatch} */ (
    jspb.Message.getWrapperField(this, proto.ratelimit.api.solo.io.Action.HeaderValueMatch, 6));
};


/** @param {?proto.ratelimit.api.solo.io.Action.HeaderValueMatch|undefined} value */
proto.ratelimit.api.solo.io.Action.prototype.setHeaderValueMatch = function(value) {
  jspb.Message.setOneofWrapperField(this, 6, proto.ratelimit.api.solo.io.Action.oneofGroups_[0], value);
};


proto.ratelimit.api.solo.io.Action.prototype.clearHeaderValueMatch = function() {
  this.setHeaderValueMatch(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ratelimit.api.solo.io.Action.prototype.hasHeaderValueMatch = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional MetaData metadata = 8;
 * @return {?proto.ratelimit.api.solo.io.MetaData}
 */
proto.ratelimit.api.solo.io.Action.prototype.getMetadata = function() {
  return /** @type{?proto.ratelimit.api.solo.io.MetaData} */ (
    jspb.Message.getWrapperField(this, proto.ratelimit.api.solo.io.MetaData, 8));
};


/** @param {?proto.ratelimit.api.solo.io.MetaData|undefined} value */
proto.ratelimit.api.solo.io.Action.prototype.setMetadata = function(value) {
  jspb.Message.setOneofWrapperField(this, 8, proto.ratelimit.api.solo.io.Action.oneofGroups_[0], value);
};


proto.ratelimit.api.solo.io.Action.prototype.clearMetadata = function() {
  this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ratelimit.api.solo.io.Action.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ratelimit.api.solo.io.MetaData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ratelimit.api.solo.io.MetaData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ratelimit.api.solo.io.MetaData.displayName = 'proto.ratelimit.api.solo.io.MetaData';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ratelimit.api.solo.io.MetaData.prototype.toObject = function(opt_includeInstance) {
  return proto.ratelimit.api.solo.io.MetaData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ratelimit.api.solo.io.MetaData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.api.solo.io.MetaData.toObject = function(includeInstance, msg) {
  var f, obj = {
    descriptorKey: jspb.Message.getFieldWithDefault(msg, 1, ""),
    metadataKey: (f = msg.getMetadataKey()) && proto.ratelimit.api.solo.io.MetaData.MetadataKey.toObject(includeInstance, f),
    defaultValue: jspb.Message.getFieldWithDefault(msg, 3, ""),
    source: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ratelimit.api.solo.io.MetaData}
 */
proto.ratelimit.api.solo.io.MetaData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ratelimit.api.solo.io.MetaData;
  return proto.ratelimit.api.solo.io.MetaData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ratelimit.api.solo.io.MetaData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ratelimit.api.solo.io.MetaData}
 */
proto.ratelimit.api.solo.io.MetaData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescriptorKey(value);
      break;
    case 2:
      var value = new proto.ratelimit.api.solo.io.MetaData.MetadataKey;
      reader.readMessage(value,proto.ratelimit.api.solo.io.MetaData.MetadataKey.deserializeBinaryFromReader);
      msg.setMetadataKey(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDefaultValue(value);
      break;
    case 4:
      var value = /** @type {!proto.ratelimit.api.solo.io.MetaData.Source} */ (reader.readEnum());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ratelimit.api.solo.io.MetaData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ratelimit.api.solo.io.MetaData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ratelimit.api.solo.io.MetaData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.api.solo.io.MetaData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDescriptorKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMetadataKey();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ratelimit.api.solo.io.MetaData.MetadataKey.serializeBinaryToWriter
    );
  }
  f = message.getDefaultValue();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSource();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.ratelimit.api.solo.io.MetaData.Source = {
  DYNAMIC: 0,
  ROUTE_ENTRY: 1
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ratelimit.api.solo.io.MetaData.MetadataKey = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ratelimit.api.solo.io.MetaData.MetadataKey.repeatedFields_, null);
};
goog.inherits(proto.ratelimit.api.solo.io.MetaData.MetadataKey, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ratelimit.api.solo.io.MetaData.MetadataKey.displayName = 'proto.ratelimit.api.solo.io.MetaData.MetadataKey';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ratelimit.api.solo.io.MetaData.MetadataKey.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ratelimit.api.solo.io.MetaData.MetadataKey.prototype.toObject = function(opt_includeInstance) {
  return proto.ratelimit.api.solo.io.MetaData.MetadataKey.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ratelimit.api.solo.io.MetaData.MetadataKey} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.api.solo.io.MetaData.MetadataKey.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pathList: jspb.Message.toObjectList(msg.getPathList(),
    proto.ratelimit.api.solo.io.MetaData.MetadataKey.PathSegment.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ratelimit.api.solo.io.MetaData.MetadataKey}
 */
proto.ratelimit.api.solo.io.MetaData.MetadataKey.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ratelimit.api.solo.io.MetaData.MetadataKey;
  return proto.ratelimit.api.solo.io.MetaData.MetadataKey.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ratelimit.api.solo.io.MetaData.MetadataKey} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ratelimit.api.solo.io.MetaData.MetadataKey}
 */
proto.ratelimit.api.solo.io.MetaData.MetadataKey.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = new proto.ratelimit.api.solo.io.MetaData.MetadataKey.PathSegment;
      reader.readMessage(value,proto.ratelimit.api.solo.io.MetaData.MetadataKey.PathSegment.deserializeBinaryFromReader);
      msg.addPath(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ratelimit.api.solo.io.MetaData.MetadataKey.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ratelimit.api.solo.io.MetaData.MetadataKey.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ratelimit.api.solo.io.MetaData.MetadataKey} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.api.solo.io.MetaData.MetadataKey.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPathList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.ratelimit.api.solo.io.MetaData.MetadataKey.PathSegment.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ratelimit.api.solo.io.MetaData.MetadataKey.PathSegment = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.ratelimit.api.solo.io.MetaData.MetadataKey.PathSegment.oneofGroups_);
};
goog.inherits(proto.ratelimit.api.solo.io.MetaData.MetadataKey.PathSegment, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ratelimit.api.solo.io.MetaData.MetadataKey.PathSegment.displayName = 'proto.ratelimit.api.solo.io.MetaData.MetadataKey.PathSegment';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.ratelimit.api.solo.io.MetaData.MetadataKey.PathSegment.oneofGroups_ = [[1]];

/**
 * @enum {number}
 */
proto.ratelimit.api.solo.io.MetaData.MetadataKey.PathSegment.SegmentCase = {
  SEGMENT_NOT_SET: 0,
  KEY: 1
};

/**
 * @return {proto.ratelimit.api.solo.io.MetaData.MetadataKey.PathSegment.SegmentCase}
 */
proto.ratelimit.api.solo.io.MetaData.MetadataKey.PathSegment.prototype.getSegmentCase = function() {
  return /** @type {proto.ratelimit.api.solo.io.MetaData.MetadataKey.PathSegment.SegmentCase} */(jspb.Message.computeOneofCase(this, proto.ratelimit.api.solo.io.MetaData.MetadataKey.PathSegment.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ratelimit.api.solo.io.MetaData.MetadataKey.PathSegment.prototype.toObject = function(opt_includeInstance) {
  return proto.ratelimit.api.solo.io.MetaData.MetadataKey.PathSegment.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ratelimit.api.solo.io.MetaData.MetadataKey.PathSegment} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.api.solo.io.MetaData.MetadataKey.PathSegment.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ratelimit.api.solo.io.MetaData.MetadataKey.PathSegment}
 */
proto.ratelimit.api.solo.io.MetaData.MetadataKey.PathSegment.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ratelimit.api.solo.io.MetaData.MetadataKey.PathSegment;
  return proto.ratelimit.api.solo.io.MetaData.MetadataKey.PathSegment.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ratelimit.api.solo.io.MetaData.MetadataKey.PathSegment} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ratelimit.api.solo.io.MetaData.MetadataKey.PathSegment}
 */
proto.ratelimit.api.solo.io.MetaData.MetadataKey.PathSegment.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ratelimit.api.solo.io.MetaData.MetadataKey.PathSegment.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ratelimit.api.solo.io.MetaData.MetadataKey.PathSegment.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ratelimit.api.solo.io.MetaData.MetadataKey.PathSegment} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.api.solo.io.MetaData.MetadataKey.PathSegment.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.ratelimit.api.solo.io.MetaData.MetadataKey.PathSegment.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ratelimit.api.solo.io.MetaData.MetadataKey.PathSegment.prototype.setKey = function(value) {
  jspb.Message.setOneofField(this, 1, proto.ratelimit.api.solo.io.MetaData.MetadataKey.PathSegment.oneofGroups_[0], value);
};


proto.ratelimit.api.solo.io.MetaData.MetadataKey.PathSegment.prototype.clearKey = function() {
  jspb.Message.setOneofField(this, 1, proto.ratelimit.api.solo.io.MetaData.MetadataKey.PathSegment.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ratelimit.api.solo.io.MetaData.MetadataKey.PathSegment.prototype.hasKey = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.ratelimit.api.solo.io.MetaData.MetadataKey.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ratelimit.api.solo.io.MetaData.MetadataKey.prototype.setKey = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated PathSegment path = 2;
 * @return {!Array<!proto.ratelimit.api.solo.io.MetaData.MetadataKey.PathSegment>}
 */
proto.ratelimit.api.solo.io.MetaData.MetadataKey.prototype.getPathList = function() {
  return /** @type{!Array<!proto.ratelimit.api.solo.io.MetaData.MetadataKey.PathSegment>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ratelimit.api.solo.io.MetaData.MetadataKey.PathSegment, 2));
};


/** @param {!Array<!proto.ratelimit.api.solo.io.MetaData.MetadataKey.PathSegment>} value */
proto.ratelimit.api.solo.io.MetaData.MetadataKey.prototype.setPathList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.ratelimit.api.solo.io.MetaData.MetadataKey.PathSegment=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ratelimit.api.solo.io.MetaData.MetadataKey.PathSegment}
 */
proto.ratelimit.api.solo.io.MetaData.MetadataKey.prototype.addPath = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.ratelimit.api.solo.io.MetaData.MetadataKey.PathSegment, opt_index);
};


proto.ratelimit.api.solo.io.MetaData.MetadataKey.prototype.clearPathList = function() {
  this.setPathList([]);
};


/**
 * optional string descriptor_key = 1;
 * @return {string}
 */
proto.ratelimit.api.solo.io.MetaData.prototype.getDescriptorKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ratelimit.api.solo.io.MetaData.prototype.setDescriptorKey = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional MetadataKey metadata_key = 2;
 * @return {?proto.ratelimit.api.solo.io.MetaData.MetadataKey}
 */
proto.ratelimit.api.solo.io.MetaData.prototype.getMetadataKey = function() {
  return /** @type{?proto.ratelimit.api.solo.io.MetaData.MetadataKey} */ (
    jspb.Message.getWrapperField(this, proto.ratelimit.api.solo.io.MetaData.MetadataKey, 2));
};


/** @param {?proto.ratelimit.api.solo.io.MetaData.MetadataKey|undefined} value */
proto.ratelimit.api.solo.io.MetaData.prototype.setMetadataKey = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.ratelimit.api.solo.io.MetaData.prototype.clearMetadataKey = function() {
  this.setMetadataKey(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ratelimit.api.solo.io.MetaData.prototype.hasMetadataKey = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string default_value = 3;
 * @return {string}
 */
proto.ratelimit.api.solo.io.MetaData.prototype.getDefaultValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.ratelimit.api.solo.io.MetaData.prototype.setDefaultValue = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional Source source = 4;
 * @return {!proto.ratelimit.api.solo.io.MetaData.Source}
 */
proto.ratelimit.api.solo.io.MetaData.prototype.getSource = function() {
  return /** @type {!proto.ratelimit.api.solo.io.MetaData.Source} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {!proto.ratelimit.api.solo.io.MetaData.Source} value */
proto.ratelimit.api.solo.io.MetaData.prototype.setSource = function(value) {
  jspb.Message.setProto3EnumField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ratelimit.api.solo.io.Override = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.ratelimit.api.solo.io.Override.oneofGroups_);
};
goog.inherits(proto.ratelimit.api.solo.io.Override, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ratelimit.api.solo.io.Override.displayName = 'proto.ratelimit.api.solo.io.Override';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.ratelimit.api.solo.io.Override.oneofGroups_ = [[1]];

/**
 * @enum {number}
 */
proto.ratelimit.api.solo.io.Override.OverrideSpecifierCase = {
  OVERRIDE_SPECIFIER_NOT_SET: 0,
  DYNAMIC_METADATA: 1
};

/**
 * @return {proto.ratelimit.api.solo.io.Override.OverrideSpecifierCase}
 */
proto.ratelimit.api.solo.io.Override.prototype.getOverrideSpecifierCase = function() {
  return /** @type {proto.ratelimit.api.solo.io.Override.OverrideSpecifierCase} */(jspb.Message.computeOneofCase(this, proto.ratelimit.api.solo.io.Override.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ratelimit.api.solo.io.Override.prototype.toObject = function(opt_includeInstance) {
  return proto.ratelimit.api.solo.io.Override.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ratelimit.api.solo.io.Override} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.api.solo.io.Override.toObject = function(includeInstance, msg) {
  var f, obj = {
    dynamicMetadata: (f = msg.getDynamicMetadata()) && proto.ratelimit.api.solo.io.Override.DynamicMetadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ratelimit.api.solo.io.Override}
 */
proto.ratelimit.api.solo.io.Override.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ratelimit.api.solo.io.Override;
  return proto.ratelimit.api.solo.io.Override.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ratelimit.api.solo.io.Override} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ratelimit.api.solo.io.Override}
 */
proto.ratelimit.api.solo.io.Override.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ratelimit.api.solo.io.Override.DynamicMetadata;
      reader.readMessage(value,proto.ratelimit.api.solo.io.Override.DynamicMetadata.deserializeBinaryFromReader);
      msg.setDynamicMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ratelimit.api.solo.io.Override.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ratelimit.api.solo.io.Override.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ratelimit.api.solo.io.Override} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.api.solo.io.Override.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDynamicMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ratelimit.api.solo.io.Override.DynamicMetadata.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ratelimit.api.solo.io.Override.DynamicMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ratelimit.api.solo.io.Override.DynamicMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ratelimit.api.solo.io.Override.DynamicMetadata.displayName = 'proto.ratelimit.api.solo.io.Override.DynamicMetadata';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ratelimit.api.solo.io.Override.DynamicMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.ratelimit.api.solo.io.Override.DynamicMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ratelimit.api.solo.io.Override.DynamicMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.api.solo.io.Override.DynamicMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadataKey: (f = msg.getMetadataKey()) && proto.ratelimit.api.solo.io.MetaData.MetadataKey.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ratelimit.api.solo.io.Override.DynamicMetadata}
 */
proto.ratelimit.api.solo.io.Override.DynamicMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ratelimit.api.solo.io.Override.DynamicMetadata;
  return proto.ratelimit.api.solo.io.Override.DynamicMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ratelimit.api.solo.io.Override.DynamicMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ratelimit.api.solo.io.Override.DynamicMetadata}
 */
proto.ratelimit.api.solo.io.Override.DynamicMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ratelimit.api.solo.io.MetaData.MetadataKey;
      reader.readMessage(value,proto.ratelimit.api.solo.io.MetaData.MetadataKey.deserializeBinaryFromReader);
      msg.setMetadataKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ratelimit.api.solo.io.Override.DynamicMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ratelimit.api.solo.io.Override.DynamicMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ratelimit.api.solo.io.Override.DynamicMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ratelimit.api.solo.io.Override.DynamicMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadataKey();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ratelimit.api.solo.io.MetaData.MetadataKey.serializeBinaryToWriter
    );
  }
};


/**
 * optional MetaData.MetadataKey metadata_key = 1;
 * @return {?proto.ratelimit.api.solo.io.MetaData.MetadataKey}
 */
proto.ratelimit.api.solo.io.Override.DynamicMetadata.prototype.getMetadataKey = function() {
  return /** @type{?proto.ratelimit.api.solo.io.MetaData.MetadataKey} */ (
    jspb.Message.getWrapperField(this, proto.ratelimit.api.solo.io.MetaData.MetadataKey, 1));
};


/** @param {?proto.ratelimit.api.solo.io.MetaData.MetadataKey|undefined} value */
proto.ratelimit.api.solo.io.Override.DynamicMetadata.prototype.setMetadataKey = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.ratelimit.api.solo.io.Override.DynamicMetadata.prototype.clearMetadataKey = function() {
  this.setMetadataKey(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ratelimit.api.solo.io.Override.DynamicMetadata.prototype.hasMetadataKey = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional DynamicMetadata dynamic_metadata = 1;
 * @return {?proto.ratelimit.api.solo.io.Override.DynamicMetadata}
 */
proto.ratelimit.api.solo.io.Override.prototype.getDynamicMetadata = function() {
  return /** @type{?proto.ratelimit.api.solo.io.Override.DynamicMetadata} */ (
    jspb.Message.getWrapperField(this, proto.ratelimit.api.solo.io.Override.DynamicMetadata, 1));
};


/** @param {?proto.ratelimit.api.solo.io.Override.DynamicMetadata|undefined} value */
proto.ratelimit.api.solo.io.Override.prototype.setDynamicMetadata = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.ratelimit.api.solo.io.Override.oneofGroups_[0], value);
};


proto.ratelimit.api.solo.io.Override.prototype.clearDynamicMetadata = function() {
  this.setDynamicMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ratelimit.api.solo.io.Override.prototype.hasDynamicMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


goog.object.extend(exports, proto.ratelimit.api.solo.io);
