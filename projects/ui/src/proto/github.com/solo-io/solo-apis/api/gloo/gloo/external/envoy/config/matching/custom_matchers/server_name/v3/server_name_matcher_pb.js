/* eslint-disable */
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var validate_validate_pb = require('../../../../../../../../../../../../../validate/validate_pb.js');
var xds_type_matcher_v3_matcher_pb = require('../../../../../../../../../../../../../xds/type/matcher/v3/matcher_pb.js');
var extproto_ext_pb = require('../../../../../../../../../../../../../extproto/ext_pb.js');
goog.exportSymbol('proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher', null, global);
goog.exportSymbol('proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.ServerNameSetMatcher', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.repeatedFields_, null);
};
goog.inherits(proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.displayName = 'proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.toObject = function(includeInstance, msg) {
  var f, obj = {
    serverNameMatchersList: jspb.Message.toObjectList(msg.getServerNameMatchersList(),
    proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.ServerNameSetMatcher.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher}
 */
proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher;
  return proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher}
 */
proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.ServerNameSetMatcher;
      reader.readMessage(value,proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.ServerNameSetMatcher.deserializeBinaryFromReader);
      msg.addServerNameMatchers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServerNameMatchersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.ServerNameSetMatcher.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.ServerNameSetMatcher = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.ServerNameSetMatcher.repeatedFields_, null);
};
goog.inherits(proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.ServerNameSetMatcher, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.ServerNameSetMatcher.displayName = 'proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.ServerNameSetMatcher';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.ServerNameSetMatcher.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.ServerNameSetMatcher.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.ServerNameSetMatcher.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.ServerNameSetMatcher} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.ServerNameSetMatcher.toObject = function(includeInstance, msg) {
  var f, obj = {
    serverNamesList: jspb.Message.getRepeatedField(msg, 1),
    onMatch: (f = msg.getOnMatch()) && xds_type_matcher_v3_matcher_pb.Matcher.OnMatch.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.ServerNameSetMatcher}
 */
proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.ServerNameSetMatcher.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.ServerNameSetMatcher;
  return proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.ServerNameSetMatcher.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.ServerNameSetMatcher} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.ServerNameSetMatcher}
 */
proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.ServerNameSetMatcher.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addServerNames(value);
      break;
    case 2:
      var value = new xds_type_matcher_v3_matcher_pb.Matcher.OnMatch;
      reader.readMessage(value,xds_type_matcher_v3_matcher_pb.Matcher.OnMatch.deserializeBinaryFromReader);
      msg.setOnMatch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.ServerNameSetMatcher.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.ServerNameSetMatcher.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.ServerNameSetMatcher} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.ServerNameSetMatcher.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServerNamesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getOnMatch();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      xds_type_matcher_v3_matcher_pb.Matcher.OnMatch.serializeBinaryToWriter
    );
  }
};


/**
 * repeated string server_names = 1;
 * @return {!Array<string>}
 */
proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.ServerNameSetMatcher.prototype.getServerNamesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array<string>} value */
proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.ServerNameSetMatcher.prototype.setServerNamesList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.ServerNameSetMatcher.prototype.addServerNames = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.ServerNameSetMatcher.prototype.clearServerNamesList = function() {
  this.setServerNamesList([]);
};


/**
 * optional xds.type.matcher.v3.Matcher.OnMatch on_match = 2;
 * @return {?proto.xds.type.matcher.v3.Matcher.OnMatch}
 */
proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.ServerNameSetMatcher.prototype.getOnMatch = function() {
  return /** @type{?proto.xds.type.matcher.v3.Matcher.OnMatch} */ (
    jspb.Message.getWrapperField(this, xds_type_matcher_v3_matcher_pb.Matcher.OnMatch, 2));
};


/** @param {?proto.xds.type.matcher.v3.Matcher.OnMatch|undefined} value */
proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.ServerNameSetMatcher.prototype.setOnMatch = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.ServerNameSetMatcher.prototype.clearOnMatch = function() {
  this.setOnMatch(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.ServerNameSetMatcher.prototype.hasOnMatch = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated ServerNameSetMatcher server_name_matchers = 1;
 * @return {!Array<!proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.ServerNameSetMatcher>}
 */
proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.prototype.getServerNameMatchersList = function() {
  return /** @type{!Array<!proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.ServerNameSetMatcher>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.ServerNameSetMatcher, 1));
};


/** @param {!Array<!proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.ServerNameSetMatcher>} value */
proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.prototype.setServerNameMatchersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.ServerNameSetMatcher=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.ServerNameSetMatcher}
 */
proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.prototype.addServerNameMatchers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.ServerNameSetMatcher, opt_index);
};


proto.envoy.config.matching.custom_matchers.server_name.v3.ServerNameMatcher.prototype.clearServerNameMatchersList = function() {
  this.setServerNameMatchersList([]);
};


goog.object.extend(exports, proto.envoy.config.matching.custom_matchers.server_name.v3);
