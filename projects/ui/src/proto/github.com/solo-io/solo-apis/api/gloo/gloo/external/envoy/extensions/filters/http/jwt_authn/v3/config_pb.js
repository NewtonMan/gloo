/* eslint-disable */
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_core_v3_base_pb = require('../../../../../../../../../../../../../github.com/solo-io/solo-apis/api/gloo/gloo/external/envoy/config/core/v3/base_pb.js');
var github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_core_v3_http_uri_pb = require('../../../../../../../../../../../../../github.com/solo-io/solo-apis/api/gloo/gloo/external/envoy/config/core/v3/http_uri_pb.js');
var github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_route_v3_route_components_pb = require('../../../../../../../../../../../../../github.com/solo-io/solo-apis/api/gloo/gloo/external/envoy/config/route/v3/route_components_pb.js');
var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
var udpa_annotations_status_pb = require('../../../../../../../../../../../../../github.com/solo-io/solo-apis/api/gloo/gloo/external/udpa/annotations/status_pb.js');
var udpa_annotations_versioning_pb = require('../../../../../../../../../../../../../github.com/solo-io/solo-apis/api/gloo/gloo/external/udpa/annotations/versioning_pb.js');
var validate_validate_pb = require('../../../../../../../../../../../../../validate/validate_pb.js');
goog.exportSymbol('proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.FilterStateRule', null, global);
goog.exportSymbol('proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwksAsyncFetch', null, global);
goog.exportSymbol('proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication', null, global);
goog.exportSymbol('proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtHeader', null, global);
goog.exportSymbol('proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider', null, global);
goog.exportSymbol('proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement', null, global);
goog.exportSymbol('proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementAndList', null, global);
goog.exportSymbol('proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementOrList', null, global);
goog.exportSymbol('proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.PerRouteConfig', null, global);
goog.exportSymbol('proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.ProviderWithAudiences', null, global);
goog.exportSymbol('proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RemoteJwks', null, global);
goog.exportSymbol('proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider.repeatedFields_, proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider.oneofGroups_);
};
goog.inherits(proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider.displayName = 'proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider.repeatedFields_ = [2,6,7];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider.oneofGroups_ = [[3,4]];

/**
 * @enum {number}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider.JwksSourceSpecifierCase = {
  JWKS_SOURCE_SPECIFIER_NOT_SET: 0,
  REMOTE_JWKS: 3,
  LOCAL_JWKS: 4
};

/**
 * @return {proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider.JwksSourceSpecifierCase}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider.prototype.getJwksSourceSpecifierCase = function() {
  return /** @type {proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider.JwksSourceSpecifierCase} */(jspb.Message.computeOneofCase(this, proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider.prototype.toObject = function(opt_includeInstance) {
  return proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider.toObject = function(includeInstance, msg) {
  var f, obj = {
    issuer: jspb.Message.getFieldWithDefault(msg, 1, ""),
    audiencesList: jspb.Message.getRepeatedField(msg, 2),
    remoteJwks: (f = msg.getRemoteJwks()) && proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RemoteJwks.toObject(includeInstance, f),
    localJwks: (f = msg.getLocalJwks()) && github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_core_v3_base_pb.DataSource.toObject(includeInstance, f),
    forward: jspb.Message.getFieldWithDefault(msg, 5, false),
    fromHeadersList: jspb.Message.toObjectList(msg.getFromHeadersList(),
    proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtHeader.toObject, includeInstance),
    fromParamsList: jspb.Message.getRepeatedField(msg, 7),
    forwardPayloadHeader: jspb.Message.getFieldWithDefault(msg, 8, ""),
    payloadInMetadata: jspb.Message.getFieldWithDefault(msg, 9, ""),
    clockSkewSeconds: jspb.Message.getFieldWithDefault(msg, 10, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider;
  return proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIssuer(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addAudiences(value);
      break;
    case 3:
      var value = new proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RemoteJwks;
      reader.readMessage(value,proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RemoteJwks.deserializeBinaryFromReader);
      msg.setRemoteJwks(value);
      break;
    case 4:
      var value = new github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_core_v3_base_pb.DataSource;
      reader.readMessage(value,github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_core_v3_base_pb.DataSource.deserializeBinaryFromReader);
      msg.setLocalJwks(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setForward(value);
      break;
    case 6:
      var value = new proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtHeader;
      reader.readMessage(value,proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtHeader.deserializeBinaryFromReader);
      msg.addFromHeaders(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.addFromParams(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setForwardPayloadHeader(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setPayloadInMetadata(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setClockSkewSeconds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIssuer();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAudiencesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getRemoteJwks();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RemoteJwks.serializeBinaryToWriter
    );
  }
  f = message.getLocalJwks();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_core_v3_base_pb.DataSource.serializeBinaryToWriter
    );
  }
  f = message.getForward();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getFromHeadersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtHeader.serializeBinaryToWriter
    );
  }
  f = message.getFromParamsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      7,
      f
    );
  }
  f = message.getForwardPayloadHeader();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getPayloadInMetadata();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getClockSkewSeconds();
  if (f !== 0) {
    writer.writeUint32(
      10,
      f
    );
  }
};


/**
 * optional string issuer = 1;
 * @return {string}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider.prototype.getIssuer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider.prototype.setIssuer = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string audiences = 2;
 * @return {!Array<string>}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider.prototype.getAudiencesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array<string>} value */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider.prototype.setAudiencesList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider.prototype.addAudiences = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider.prototype.clearAudiencesList = function() {
  this.setAudiencesList([]);
};


/**
 * optional RemoteJwks remote_jwks = 3;
 * @return {?proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RemoteJwks}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider.prototype.getRemoteJwks = function() {
  return /** @type{?proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RemoteJwks} */ (
    jspb.Message.getWrapperField(this, proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RemoteJwks, 3));
};


/** @param {?proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RemoteJwks|undefined} value */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider.prototype.setRemoteJwks = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider.oneofGroups_[0], value);
};


proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider.prototype.clearRemoteJwks = function() {
  this.setRemoteJwks(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider.prototype.hasRemoteJwks = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional solo.io.envoy.config.core.v3.DataSource local_jwks = 4;
 * @return {?proto.solo.io.envoy.config.core.v3.DataSource}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider.prototype.getLocalJwks = function() {
  return /** @type{?proto.solo.io.envoy.config.core.v3.DataSource} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_core_v3_base_pb.DataSource, 4));
};


/** @param {?proto.solo.io.envoy.config.core.v3.DataSource|undefined} value */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider.prototype.setLocalJwks = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider.oneofGroups_[0], value);
};


proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider.prototype.clearLocalJwks = function() {
  this.setLocalJwks(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider.prototype.hasLocalJwks = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool forward = 5;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider.prototype.getForward = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));
};


/** @param {boolean} value */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider.prototype.setForward = function(value) {
  jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * repeated JwtHeader from_headers = 6;
 * @return {!Array<!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtHeader>}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider.prototype.getFromHeadersList = function() {
  return /** @type{!Array<!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtHeader>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtHeader, 6));
};


/** @param {!Array<!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtHeader>} value */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider.prototype.setFromHeadersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtHeader=} opt_value
 * @param {number=} opt_index
 * @return {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtHeader}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider.prototype.addFromHeaders = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtHeader, opt_index);
};


proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider.prototype.clearFromHeadersList = function() {
  this.setFromHeadersList([]);
};


/**
 * repeated string from_params = 7;
 * @return {!Array<string>}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider.prototype.getFromParamsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};


/** @param {!Array<string>} value */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider.prototype.setFromParamsList = function(value) {
  jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider.prototype.addFromParams = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider.prototype.clearFromParamsList = function() {
  this.setFromParamsList([]);
};


/**
 * optional string forward_payload_header = 8;
 * @return {string}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider.prototype.getForwardPayloadHeader = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider.prototype.setForwardPayloadHeader = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string payload_in_metadata = 9;
 * @return {string}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider.prototype.getPayloadInMetadata = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider.prototype.setPayloadInMetadata = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional uint32 clock_skew_seconds = 10;
 * @return {number}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider.prototype.getClockSkewSeconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider.prototype.setClockSkewSeconds = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RemoteJwks = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RemoteJwks, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RemoteJwks.displayName = 'proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RemoteJwks';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RemoteJwks.prototype.toObject = function(opt_includeInstance) {
  return proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RemoteJwks.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RemoteJwks} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RemoteJwks.toObject = function(includeInstance, msg) {
  var f, obj = {
    httpUri: (f = msg.getHttpUri()) && github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_core_v3_http_uri_pb.HttpUri.toObject(includeInstance, f),
    cacheDuration: (f = msg.getCacheDuration()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    asyncFetch: (f = msg.getAsyncFetch()) && proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwksAsyncFetch.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RemoteJwks}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RemoteJwks.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RemoteJwks;
  return proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RemoteJwks.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RemoteJwks} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RemoteJwks}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RemoteJwks.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_core_v3_http_uri_pb.HttpUri;
      reader.readMessage(value,github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_core_v3_http_uri_pb.HttpUri.deserializeBinaryFromReader);
      msg.setHttpUri(value);
      break;
    case 2:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setCacheDuration(value);
      break;
    case 3:
      var value = new proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwksAsyncFetch;
      reader.readMessage(value,proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwksAsyncFetch.deserializeBinaryFromReader);
      msg.setAsyncFetch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RemoteJwks.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RemoteJwks.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RemoteJwks} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RemoteJwks.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHttpUri();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_core_v3_http_uri_pb.HttpUri.serializeBinaryToWriter
    );
  }
  f = message.getCacheDuration();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getAsyncFetch();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwksAsyncFetch.serializeBinaryToWriter
    );
  }
};


/**
 * optional solo.io.envoy.config.core.v3.HttpUri http_uri = 1;
 * @return {?proto.solo.io.envoy.config.core.v3.HttpUri}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RemoteJwks.prototype.getHttpUri = function() {
  return /** @type{?proto.solo.io.envoy.config.core.v3.HttpUri} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_core_v3_http_uri_pb.HttpUri, 1));
};


/** @param {?proto.solo.io.envoy.config.core.v3.HttpUri|undefined} value */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RemoteJwks.prototype.setHttpUri = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RemoteJwks.prototype.clearHttpUri = function() {
  this.setHttpUri(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RemoteJwks.prototype.hasHttpUri = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Duration cache_duration = 2;
 * @return {?proto.google.protobuf.Duration}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RemoteJwks.prototype.getCacheDuration = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 2));
};


/** @param {?proto.google.protobuf.Duration|undefined} value */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RemoteJwks.prototype.setCacheDuration = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RemoteJwks.prototype.clearCacheDuration = function() {
  this.setCacheDuration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RemoteJwks.prototype.hasCacheDuration = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional JwksAsyncFetch async_fetch = 3;
 * @return {?proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwksAsyncFetch}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RemoteJwks.prototype.getAsyncFetch = function() {
  return /** @type{?proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwksAsyncFetch} */ (
    jspb.Message.getWrapperField(this, proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwksAsyncFetch, 3));
};


/** @param {?proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwksAsyncFetch|undefined} value */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RemoteJwks.prototype.setAsyncFetch = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RemoteJwks.prototype.clearAsyncFetch = function() {
  this.setAsyncFetch(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RemoteJwks.prototype.hasAsyncFetch = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwksAsyncFetch = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwksAsyncFetch, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwksAsyncFetch.displayName = 'proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwksAsyncFetch';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwksAsyncFetch.prototype.toObject = function(opt_includeInstance) {
  return proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwksAsyncFetch.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwksAsyncFetch} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwksAsyncFetch.toObject = function(includeInstance, msg) {
  var f, obj = {
    fastListener: jspb.Message.getFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwksAsyncFetch}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwksAsyncFetch.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwksAsyncFetch;
  return proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwksAsyncFetch.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwksAsyncFetch} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwksAsyncFetch}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwksAsyncFetch.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFastListener(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwksAsyncFetch.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwksAsyncFetch.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwksAsyncFetch} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwksAsyncFetch.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFastListener();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool fast_listener = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwksAsyncFetch.prototype.getFastListener = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwksAsyncFetch.prototype.setFastListener = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtHeader = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtHeader, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtHeader.displayName = 'proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtHeader';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtHeader.prototype.toObject = function(opt_includeInstance) {
  return proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtHeader.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtHeader} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtHeader.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    valuePrefix: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtHeader}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtHeader.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtHeader;
  return proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtHeader.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtHeader} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtHeader}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtHeader.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValuePrefix(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtHeader.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtHeader.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtHeader} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtHeader.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValuePrefix();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtHeader.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtHeader.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string value_prefix = 2;
 * @return {string}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtHeader.prototype.getValuePrefix = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtHeader.prototype.setValuePrefix = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.ProviderWithAudiences = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.ProviderWithAudiences.repeatedFields_, null);
};
goog.inherits(proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.ProviderWithAudiences, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.ProviderWithAudiences.displayName = 'proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.ProviderWithAudiences';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.ProviderWithAudiences.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.ProviderWithAudiences.prototype.toObject = function(opt_includeInstance) {
  return proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.ProviderWithAudiences.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.ProviderWithAudiences} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.ProviderWithAudiences.toObject = function(includeInstance, msg) {
  var f, obj = {
    providerName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    audiencesList: jspb.Message.getRepeatedField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.ProviderWithAudiences}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.ProviderWithAudiences.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.ProviderWithAudiences;
  return proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.ProviderWithAudiences.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.ProviderWithAudiences} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.ProviderWithAudiences}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.ProviderWithAudiences.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProviderName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addAudiences(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.ProviderWithAudiences.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.ProviderWithAudiences.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.ProviderWithAudiences} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.ProviderWithAudiences.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProviderName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAudiencesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional string provider_name = 1;
 * @return {string}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.ProviderWithAudiences.prototype.getProviderName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.ProviderWithAudiences.prototype.setProviderName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string audiences = 2;
 * @return {!Array<string>}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.ProviderWithAudiences.prototype.getAudiencesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array<string>} value */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.ProviderWithAudiences.prototype.setAudiencesList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.ProviderWithAudiences.prototype.addAudiences = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.ProviderWithAudiences.prototype.clearAudiencesList = function() {
  this.setAudiencesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.oneofGroups_);
};
goog.inherits(proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.displayName = 'proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.oneofGroups_ = [[1,2,3,4,5,6]];

/**
 * @enum {number}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.RequiresTypeCase = {
  REQUIRES_TYPE_NOT_SET: 0,
  PROVIDER_NAME: 1,
  PROVIDER_AND_AUDIENCES: 2,
  REQUIRES_ANY: 3,
  REQUIRES_ALL: 4,
  ALLOW_MISSING_OR_FAILED: 5,
  ALLOW_MISSING: 6
};

/**
 * @return {proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.RequiresTypeCase}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.prototype.getRequiresTypeCase = function() {
  return /** @type {proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.RequiresTypeCase} */(jspb.Message.computeOneofCase(this, proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.prototype.toObject = function(opt_includeInstance) {
  return proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.toObject = function(includeInstance, msg) {
  var f, obj = {
    providerName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    providerAndAudiences: (f = msg.getProviderAndAudiences()) && proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.ProviderWithAudiences.toObject(includeInstance, f),
    requiresAny: (f = msg.getRequiresAny()) && proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementOrList.toObject(includeInstance, f),
    requiresAll: (f = msg.getRequiresAll()) && proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementAndList.toObject(includeInstance, f),
    allowMissingOrFailed: (f = msg.getAllowMissingOrFailed()) && google_protobuf_empty_pb.Empty.toObject(includeInstance, f),
    allowMissing: (f = msg.getAllowMissing()) && google_protobuf_empty_pb.Empty.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement;
  return proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProviderName(value);
      break;
    case 2:
      var value = new proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.ProviderWithAudiences;
      reader.readMessage(value,proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.ProviderWithAudiences.deserializeBinaryFromReader);
      msg.setProviderAndAudiences(value);
      break;
    case 3:
      var value = new proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementOrList;
      reader.readMessage(value,proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementOrList.deserializeBinaryFromReader);
      msg.setRequiresAny(value);
      break;
    case 4:
      var value = new proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementAndList;
      reader.readMessage(value,proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementAndList.deserializeBinaryFromReader);
      msg.setRequiresAll(value);
      break;
    case 5:
      var value = new google_protobuf_empty_pb.Empty;
      reader.readMessage(value,google_protobuf_empty_pb.Empty.deserializeBinaryFromReader);
      msg.setAllowMissingOrFailed(value);
      break;
    case 6:
      var value = new google_protobuf_empty_pb.Empty;
      reader.readMessage(value,google_protobuf_empty_pb.Empty.deserializeBinaryFromReader);
      msg.setAllowMissing(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getProviderAndAudiences();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.ProviderWithAudiences.serializeBinaryToWriter
    );
  }
  f = message.getRequiresAny();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementOrList.serializeBinaryToWriter
    );
  }
  f = message.getRequiresAll();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementAndList.serializeBinaryToWriter
    );
  }
  f = message.getAllowMissingOrFailed();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_empty_pb.Empty.serializeBinaryToWriter
    );
  }
  f = message.getAllowMissing();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_empty_pb.Empty.serializeBinaryToWriter
    );
  }
};


/**
 * optional string provider_name = 1;
 * @return {string}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.prototype.getProviderName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.prototype.setProviderName = function(value) {
  jspb.Message.setOneofField(this, 1, proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.oneofGroups_[0], value);
};


proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.prototype.clearProviderName = function() {
  jspb.Message.setOneofField(this, 1, proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.prototype.hasProviderName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ProviderWithAudiences provider_and_audiences = 2;
 * @return {?proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.ProviderWithAudiences}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.prototype.getProviderAndAudiences = function() {
  return /** @type{?proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.ProviderWithAudiences} */ (
    jspb.Message.getWrapperField(this, proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.ProviderWithAudiences, 2));
};


/** @param {?proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.ProviderWithAudiences|undefined} value */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.prototype.setProviderAndAudiences = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.oneofGroups_[0], value);
};


proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.prototype.clearProviderAndAudiences = function() {
  this.setProviderAndAudiences(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.prototype.hasProviderAndAudiences = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional JwtRequirementOrList requires_any = 3;
 * @return {?proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementOrList}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.prototype.getRequiresAny = function() {
  return /** @type{?proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementOrList} */ (
    jspb.Message.getWrapperField(this, proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementOrList, 3));
};


/** @param {?proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementOrList|undefined} value */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.prototype.setRequiresAny = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.oneofGroups_[0], value);
};


proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.prototype.clearRequiresAny = function() {
  this.setRequiresAny(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.prototype.hasRequiresAny = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional JwtRequirementAndList requires_all = 4;
 * @return {?proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementAndList}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.prototype.getRequiresAll = function() {
  return /** @type{?proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementAndList} */ (
    jspb.Message.getWrapperField(this, proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementAndList, 4));
};


/** @param {?proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementAndList|undefined} value */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.prototype.setRequiresAll = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.oneofGroups_[0], value);
};


proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.prototype.clearRequiresAll = function() {
  this.setRequiresAll(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.prototype.hasRequiresAll = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.Empty allow_missing_or_failed = 5;
 * @return {?proto.google.protobuf.Empty}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.prototype.getAllowMissingOrFailed = function() {
  return /** @type{?proto.google.protobuf.Empty} */ (
    jspb.Message.getWrapperField(this, google_protobuf_empty_pb.Empty, 5));
};


/** @param {?proto.google.protobuf.Empty|undefined} value */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.prototype.setAllowMissingOrFailed = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.oneofGroups_[0], value);
};


proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.prototype.clearAllowMissingOrFailed = function() {
  this.setAllowMissingOrFailed(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.prototype.hasAllowMissingOrFailed = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.Empty allow_missing = 6;
 * @return {?proto.google.protobuf.Empty}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.prototype.getAllowMissing = function() {
  return /** @type{?proto.google.protobuf.Empty} */ (
    jspb.Message.getWrapperField(this, google_protobuf_empty_pb.Empty, 6));
};


/** @param {?proto.google.protobuf.Empty|undefined} value */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.prototype.setAllowMissing = function(value) {
  jspb.Message.setOneofWrapperField(this, 6, proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.oneofGroups_[0], value);
};


proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.prototype.clearAllowMissing = function() {
  this.setAllowMissing(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.prototype.hasAllowMissing = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementOrList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementOrList.repeatedFields_, null);
};
goog.inherits(proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementOrList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementOrList.displayName = 'proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementOrList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementOrList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementOrList.prototype.toObject = function(opt_includeInstance) {
  return proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementOrList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementOrList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementOrList.toObject = function(includeInstance, msg) {
  var f, obj = {
    requirementsList: jspb.Message.toObjectList(msg.getRequirementsList(),
    proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementOrList}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementOrList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementOrList;
  return proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementOrList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementOrList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementOrList}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementOrList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement;
      reader.readMessage(value,proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.deserializeBinaryFromReader);
      msg.addRequirements(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementOrList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementOrList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementOrList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementOrList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequirementsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.serializeBinaryToWriter
    );
  }
};


/**
 * repeated JwtRequirement requirements = 1;
 * @return {!Array<!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement>}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementOrList.prototype.getRequirementsList = function() {
  return /** @type{!Array<!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement, 1));
};


/** @param {!Array<!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement>} value */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementOrList.prototype.setRequirementsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement=} opt_value
 * @param {number=} opt_index
 * @return {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementOrList.prototype.addRequirements = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement, opt_index);
};


proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementOrList.prototype.clearRequirementsList = function() {
  this.setRequirementsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementAndList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementAndList.repeatedFields_, null);
};
goog.inherits(proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementAndList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementAndList.displayName = 'proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementAndList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementAndList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementAndList.prototype.toObject = function(opt_includeInstance) {
  return proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementAndList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementAndList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementAndList.toObject = function(includeInstance, msg) {
  var f, obj = {
    requirementsList: jspb.Message.toObjectList(msg.getRequirementsList(),
    proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementAndList}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementAndList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementAndList;
  return proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementAndList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementAndList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementAndList}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementAndList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement;
      reader.readMessage(value,proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.deserializeBinaryFromReader);
      msg.addRequirements(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementAndList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementAndList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementAndList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementAndList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequirementsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.serializeBinaryToWriter
    );
  }
};


/**
 * repeated JwtRequirement requirements = 1;
 * @return {!Array<!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement>}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementAndList.prototype.getRequirementsList = function() {
  return /** @type{!Array<!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement, 1));
};


/** @param {!Array<!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement>} value */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementAndList.prototype.setRequirementsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement=} opt_value
 * @param {number=} opt_index
 * @return {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementAndList.prototype.addRequirements = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement, opt_index);
};


proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirementAndList.prototype.clearRequirementsList = function() {
  this.setRequirementsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule.oneofGroups_);
};
goog.inherits(proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule.displayName = 'proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule.oneofGroups_ = [[2,3]];

/**
 * @enum {number}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule.RequirementTypeCase = {
  REQUIREMENT_TYPE_NOT_SET: 0,
  REQUIRES: 2,
  REQUIREMENT_NAME: 3
};

/**
 * @return {proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule.RequirementTypeCase}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule.prototype.getRequirementTypeCase = function() {
  return /** @type {proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule.RequirementTypeCase} */(jspb.Message.computeOneofCase(this, proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule.prototype.toObject = function(opt_includeInstance) {
  return proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule.toObject = function(includeInstance, msg) {
  var f, obj = {
    match: (f = msg.getMatch()) && github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_route_v3_route_components_pb.RouteMatch.toObject(includeInstance, f),
    requires: (f = msg.getRequires()) && proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.toObject(includeInstance, f),
    requirementName: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule;
  return proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_route_v3_route_components_pb.RouteMatch;
      reader.readMessage(value,github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_route_v3_route_components_pb.RouteMatch.deserializeBinaryFromReader);
      msg.setMatch(value);
      break;
    case 2:
      var value = new proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement;
      reader.readMessage(value,proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.deserializeBinaryFromReader);
      msg.setRequires(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequirementName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMatch();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_route_v3_route_components_pb.RouteMatch.serializeBinaryToWriter
    );
  }
  f = message.getRequires();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional solo.io.envoy.config.route.v3.RouteMatch match = 1;
 * @return {?proto.solo.io.envoy.config.route.v3.RouteMatch}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule.prototype.getMatch = function() {
  return /** @type{?proto.solo.io.envoy.config.route.v3.RouteMatch} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_route_v3_route_components_pb.RouteMatch, 1));
};


/** @param {?proto.solo.io.envoy.config.route.v3.RouteMatch|undefined} value */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule.prototype.setMatch = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule.prototype.clearMatch = function() {
  this.setMatch(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule.prototype.hasMatch = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional JwtRequirement requires = 2;
 * @return {?proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule.prototype.getRequires = function() {
  return /** @type{?proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement} */ (
    jspb.Message.getWrapperField(this, proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement, 2));
};


/** @param {?proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement|undefined} value */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule.prototype.setRequires = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule.oneofGroups_[0], value);
};


proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule.prototype.clearRequires = function() {
  this.setRequires(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule.prototype.hasRequires = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string requirement_name = 3;
 * @return {string}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule.prototype.getRequirementName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule.prototype.setRequirementName = function(value) {
  jspb.Message.setOneofField(this, 3, proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule.oneofGroups_[0], value);
};


proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule.prototype.clearRequirementName = function() {
  jspb.Message.setOneofField(this, 3, proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule.prototype.hasRequirementName = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.FilterStateRule = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.FilterStateRule, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.FilterStateRule.displayName = 'proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.FilterStateRule';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.FilterStateRule.prototype.toObject = function(opt_includeInstance) {
  return proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.FilterStateRule.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.FilterStateRule} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.FilterStateRule.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    requiresMap: (f = msg.getRequiresMap()) ? f.toObject(includeInstance, proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.FilterStateRule}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.FilterStateRule.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.FilterStateRule;
  return proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.FilterStateRule.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.FilterStateRule} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.FilterStateRule}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.FilterStateRule.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = msg.getRequiresMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.deserializeBinaryFromReader, "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.FilterStateRule.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.FilterStateRule.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.FilterStateRule} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.FilterStateRule.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRequiresMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.serializeBinaryToWriter);
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.FilterStateRule.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.FilterStateRule.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * map<string, JwtRequirement> requires = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement>}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.FilterStateRule.prototype.getRequiresMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement));
};


proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.FilterStateRule.prototype.clearRequiresMap = function() {
  this.getRequiresMap().clear();
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication.repeatedFields_, null);
};
goog.inherits(proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication.displayName = 'proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication.prototype.toObject = function(opt_includeInstance) {
  return proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication.toObject = function(includeInstance, msg) {
  var f, obj = {
    providersMap: (f = msg.getProvidersMap()) ? f.toObject(includeInstance, proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider.toObject) : [],
    rulesList: jspb.Message.toObjectList(msg.getRulesList(),
    proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule.toObject, includeInstance),
    filterStateRules: (f = msg.getFilterStateRules()) && proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.FilterStateRule.toObject(includeInstance, f),
    bypassCorsPreflight: jspb.Message.getFieldWithDefault(msg, 4, false),
    requirementMapMap: (f = msg.getRequirementMapMap()) ? f.toObject(includeInstance, proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication;
  return proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getProvidersMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider.deserializeBinaryFromReader, "");
         });
      break;
    case 2:
      var value = new proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule;
      reader.readMessage(value,proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule.deserializeBinaryFromReader);
      msg.addRules(value);
      break;
    case 3:
      var value = new proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.FilterStateRule;
      reader.readMessage(value,proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.FilterStateRule.deserializeBinaryFromReader);
      msg.setFilterStateRules(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBypassCorsPreflight(value);
      break;
    case 5:
      var value = msg.getRequirementMapMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.deserializeBinaryFromReader, "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProvidersMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider.serializeBinaryToWriter);
  }
  f = message.getRulesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule.serializeBinaryToWriter
    );
  }
  f = message.getFilterStateRules();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.FilterStateRule.serializeBinaryToWriter
    );
  }
  f = message.getBypassCorsPreflight();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getRequirementMapMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement.serializeBinaryToWriter);
  }
};


/**
 * map<string, JwtProvider> providers = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider>}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication.prototype.getProvidersMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtProvider));
};


proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication.prototype.clearProvidersMap = function() {
  this.getProvidersMap().clear();
};


/**
 * repeated RequirementRule rules = 2;
 * @return {!Array<!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule>}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication.prototype.getRulesList = function() {
  return /** @type{!Array<!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule, 2));
};


/** @param {!Array<!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule>} value */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication.prototype.setRulesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule=} opt_value
 * @param {number=} opt_index
 * @return {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication.prototype.addRules = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.RequirementRule, opt_index);
};


proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication.prototype.clearRulesList = function() {
  this.setRulesList([]);
};


/**
 * optional FilterStateRule filter_state_rules = 3;
 * @return {?proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.FilterStateRule}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication.prototype.getFilterStateRules = function() {
  return /** @type{?proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.FilterStateRule} */ (
    jspb.Message.getWrapperField(this, proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.FilterStateRule, 3));
};


/** @param {?proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.FilterStateRule|undefined} value */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication.prototype.setFilterStateRules = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication.prototype.clearFilterStateRules = function() {
  this.setFilterStateRules(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication.prototype.hasFilterStateRules = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool bypass_cors_preflight = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication.prototype.getBypassCorsPreflight = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication.prototype.setBypassCorsPreflight = function(value) {
  jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * map<string, JwtRequirement> requirement_map = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement>}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication.prototype.getRequirementMapMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement>} */ (
      jspb.Message.getMapField(this, 5, opt_noLazyCreate,
      proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtRequirement));
};


proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication.prototype.clearRequirementMapMap = function() {
  this.getRequirementMapMap().clear();
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.PerRouteConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.PerRouteConfig.oneofGroups_);
};
goog.inherits(proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.PerRouteConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.PerRouteConfig.displayName = 'proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.PerRouteConfig';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.PerRouteConfig.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.PerRouteConfig.RequirementSpecifierCase = {
  REQUIREMENT_SPECIFIER_NOT_SET: 0,
  DISABLED: 1,
  REQUIREMENT_NAME: 2
};

/**
 * @return {proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.PerRouteConfig.RequirementSpecifierCase}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.PerRouteConfig.prototype.getRequirementSpecifierCase = function() {
  return /** @type {proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.PerRouteConfig.RequirementSpecifierCase} */(jspb.Message.computeOneofCase(this, proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.PerRouteConfig.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.PerRouteConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.PerRouteConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.PerRouteConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.PerRouteConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    disabled: jspb.Message.getFieldWithDefault(msg, 1, false),
    requirementName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.PerRouteConfig}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.PerRouteConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.PerRouteConfig;
  return proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.PerRouteConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.PerRouteConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.PerRouteConfig}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.PerRouteConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDisabled(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequirementName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.PerRouteConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.PerRouteConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.PerRouteConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.PerRouteConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool disabled = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.PerRouteConfig.prototype.getDisabled = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.PerRouteConfig.prototype.setDisabled = function(value) {
  jspb.Message.setOneofField(this, 1, proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.PerRouteConfig.oneofGroups_[0], value);
};


proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.PerRouteConfig.prototype.clearDisabled = function() {
  jspb.Message.setOneofField(this, 1, proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.PerRouteConfig.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.PerRouteConfig.prototype.hasDisabled = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string requirement_name = 2;
 * @return {string}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.PerRouteConfig.prototype.getRequirementName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.PerRouteConfig.prototype.setRequirementName = function(value) {
  jspb.Message.setOneofField(this, 2, proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.PerRouteConfig.oneofGroups_[0], value);
};


proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.PerRouteConfig.prototype.clearRequirementName = function() {
  jspb.Message.setOneofField(this, 2, proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.PerRouteConfig.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3.PerRouteConfig.prototype.hasRequirementName = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.solo.io.envoy.extensions.filters.http.jwt_authn.v3);
