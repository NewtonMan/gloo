/* eslint-disable */
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var validate_validate_pb = require('../../../../../../../../../../validate/validate_pb.js');
var github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_core_v3_http_uri_pb = require('../../../../../../../../../../github.com/solo-io/solo-apis/api/gloo/gloo/external/envoy/config/core/v3/http_uri_pb.js');
var github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_core_v3_extension_pb = require('../../../../../../../../../../github.com/solo-io/solo-apis/api/gloo/gloo/external/envoy/config/core/v3/extension_pb.js');
var github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_core_v3_base_pb = require('../../../../../../../../../../github.com/solo-io/solo-apis/api/gloo/gloo/external/envoy/config/core/v3/base_pb.js');
goog.exportSymbol('proto.envoy.config.filter.http.graphql.v2.AbstractTypeResolver', null, global);
goog.exportSymbol('proto.envoy.config.filter.http.graphql.v2.GraphQLConfig', null, global);
goog.exportSymbol('proto.envoy.config.filter.http.graphql.v2.GraphQLRouteConfig', null, global);
goog.exportSymbol('proto.envoy.config.filter.http.graphql.v2.JsonKeyValue', null, global);
goog.exportSymbol('proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue', null, global);
goog.exportSymbol('proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValueList', null, global);
goog.exportSymbol('proto.envoy.config.filter.http.graphql.v2.JsonNode', null, global);
goog.exportSymbol('proto.envoy.config.filter.http.graphql.v2.PathSegment', null, global);
goog.exportSymbol('proto.envoy.config.filter.http.graphql.v2.Query', null, global);
goog.exportSymbol('proto.envoy.config.filter.http.graphql.v2.QueryMatcher', null, global);
goog.exportSymbol('proto.envoy.config.filter.http.graphql.v2.QueryMatcher.FieldMatcher', null, global);
goog.exportSymbol('proto.envoy.config.filter.http.graphql.v2.RESTResolver', null, global);
goog.exportSymbol('proto.envoy.config.filter.http.graphql.v2.RequestTemplate', null, global);
goog.exportSymbol('proto.envoy.config.filter.http.graphql.v2.Resolution', null, global);
goog.exportSymbol('proto.envoy.config.filter.http.graphql.v2.ResponseTemplate', null, global);
goog.exportSymbol('proto.envoy.config.filter.http.graphql.v2.ValueProvider', null, global);
goog.exportSymbol('proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLArgExtraction', null, global);
goog.exportSymbol('proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLParentExtraction', null, global);
goog.exportSymbol('proto.envoy.config.filter.http.graphql.v2.ValueProvider.TypedValueProvider', null, global);
goog.exportSymbol('proto.envoy.config.filter.http.graphql.v2.ValueProvider.TypedValueProvider.Type', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.filter.http.graphql.v2.PathSegment = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.envoy.config.filter.http.graphql.v2.PathSegment.oneofGroups_);
};
goog.inherits(proto.envoy.config.filter.http.graphql.v2.PathSegment, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.envoy.config.filter.http.graphql.v2.PathSegment.displayName = 'proto.envoy.config.filter.http.graphql.v2.PathSegment';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.envoy.config.filter.http.graphql.v2.PathSegment.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.envoy.config.filter.http.graphql.v2.PathSegment.SegmentCase = {
  SEGMENT_NOT_SET: 0,
  KEY: 1,
  INDEX: 2
};

/**
 * @return {proto.envoy.config.filter.http.graphql.v2.PathSegment.SegmentCase}
 */
proto.envoy.config.filter.http.graphql.v2.PathSegment.prototype.getSegmentCase = function() {
  return /** @type {proto.envoy.config.filter.http.graphql.v2.PathSegment.SegmentCase} */(jspb.Message.computeOneofCase(this, proto.envoy.config.filter.http.graphql.v2.PathSegment.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.filter.http.graphql.v2.PathSegment.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.filter.http.graphql.v2.PathSegment.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.filter.http.graphql.v2.PathSegment} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.http.graphql.v2.PathSegment.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, ""),
    index: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.filter.http.graphql.v2.PathSegment}
 */
proto.envoy.config.filter.http.graphql.v2.PathSegment.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.filter.http.graphql.v2.PathSegment;
  return proto.envoy.config.filter.http.graphql.v2.PathSegment.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.filter.http.graphql.v2.PathSegment} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.filter.http.graphql.v2.PathSegment}
 */
proto.envoy.config.filter.http.graphql.v2.PathSegment.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIndex(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.filter.http.graphql.v2.PathSegment.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.filter.http.graphql.v2.PathSegment.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.filter.http.graphql.v2.PathSegment} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.http.graphql.v2.PathSegment.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.envoy.config.filter.http.graphql.v2.PathSegment.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.envoy.config.filter.http.graphql.v2.PathSegment.prototype.setKey = function(value) {
  jspb.Message.setOneofField(this, 1, proto.envoy.config.filter.http.graphql.v2.PathSegment.oneofGroups_[0], value);
};


proto.envoy.config.filter.http.graphql.v2.PathSegment.prototype.clearKey = function() {
  jspb.Message.setOneofField(this, 1, proto.envoy.config.filter.http.graphql.v2.PathSegment.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.config.filter.http.graphql.v2.PathSegment.prototype.hasKey = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 index = 2;
 * @return {number}
 */
proto.envoy.config.filter.http.graphql.v2.PathSegment.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.envoy.config.filter.http.graphql.v2.PathSegment.prototype.setIndex = function(value) {
  jspb.Message.setOneofField(this, 2, proto.envoy.config.filter.http.graphql.v2.PathSegment.oneofGroups_[0], value);
};


proto.envoy.config.filter.http.graphql.v2.PathSegment.prototype.clearIndex = function() {
  jspb.Message.setOneofField(this, 2, proto.envoy.config.filter.http.graphql.v2.PathSegment.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.config.filter.http.graphql.v2.PathSegment.prototype.hasIndex = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.filter.http.graphql.v2.ValueProvider = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.envoy.config.filter.http.graphql.v2.ValueProvider.oneofGroups_);
};
goog.inherits(proto.envoy.config.filter.http.graphql.v2.ValueProvider, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.envoy.config.filter.http.graphql.v2.ValueProvider.displayName = 'proto.envoy.config.filter.http.graphql.v2.ValueProvider';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.ProviderCase = {
  PROVIDER_NOT_SET: 0,
  GRAPHQL_ARG: 1,
  TYPED_PROVIDER: 2,
  GRAPHQL_PARENT: 3
};

/**
 * @return {proto.envoy.config.filter.http.graphql.v2.ValueProvider.ProviderCase}
 */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.prototype.getProviderCase = function() {
  return /** @type {proto.envoy.config.filter.http.graphql.v2.ValueProvider.ProviderCase} */(jspb.Message.computeOneofCase(this, proto.envoy.config.filter.http.graphql.v2.ValueProvider.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.filter.http.graphql.v2.ValueProvider.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.filter.http.graphql.v2.ValueProvider} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.toObject = function(includeInstance, msg) {
  var f, obj = {
    graphqlArg: (f = msg.getGraphqlArg()) && proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLArgExtraction.toObject(includeInstance, f),
    typedProvider: (f = msg.getTypedProvider()) && proto.envoy.config.filter.http.graphql.v2.ValueProvider.TypedValueProvider.toObject(includeInstance, f),
    graphqlParent: (f = msg.getGraphqlParent()) && proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLParentExtraction.toObject(includeInstance, f),
    providerTemplate: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.filter.http.graphql.v2.ValueProvider}
 */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.filter.http.graphql.v2.ValueProvider;
  return proto.envoy.config.filter.http.graphql.v2.ValueProvider.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.filter.http.graphql.v2.ValueProvider} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.filter.http.graphql.v2.ValueProvider}
 */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLArgExtraction;
      reader.readMessage(value,proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLArgExtraction.deserializeBinaryFromReader);
      msg.setGraphqlArg(value);
      break;
    case 2:
      var value = new proto.envoy.config.filter.http.graphql.v2.ValueProvider.TypedValueProvider;
      reader.readMessage(value,proto.envoy.config.filter.http.graphql.v2.ValueProvider.TypedValueProvider.deserializeBinaryFromReader);
      msg.setTypedProvider(value);
      break;
    case 3:
      var value = new proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLParentExtraction;
      reader.readMessage(value,proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLParentExtraction.deserializeBinaryFromReader);
      msg.setGraphqlParent(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setProviderTemplate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.filter.http.graphql.v2.ValueProvider.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.filter.http.graphql.v2.ValueProvider} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGraphqlArg();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLArgExtraction.serializeBinaryToWriter
    );
  }
  f = message.getTypedProvider();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.envoy.config.filter.http.graphql.v2.ValueProvider.TypedValueProvider.serializeBinaryToWriter
    );
  }
  f = message.getGraphqlParent();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLParentExtraction.serializeBinaryToWriter
    );
  }
  f = message.getProviderTemplate();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLArgExtraction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLArgExtraction.repeatedFields_, null);
};
goog.inherits(proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLArgExtraction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLArgExtraction.displayName = 'proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLArgExtraction';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLArgExtraction.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLArgExtraction.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLArgExtraction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLArgExtraction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLArgExtraction.toObject = function(includeInstance, msg) {
  var f, obj = {
    argName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pathList: jspb.Message.toObjectList(msg.getPathList(),
    proto.envoy.config.filter.http.graphql.v2.PathSegment.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLArgExtraction}
 */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLArgExtraction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLArgExtraction;
  return proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLArgExtraction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLArgExtraction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLArgExtraction}
 */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLArgExtraction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setArgName(value);
      break;
    case 2:
      var value = new proto.envoy.config.filter.http.graphql.v2.PathSegment;
      reader.readMessage(value,proto.envoy.config.filter.http.graphql.v2.PathSegment.deserializeBinaryFromReader);
      msg.addPath(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLArgExtraction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLArgExtraction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLArgExtraction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLArgExtraction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getArgName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPathList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.envoy.config.filter.http.graphql.v2.PathSegment.serializeBinaryToWriter
    );
  }
};


/**
 * optional string arg_name = 1;
 * @return {string}
 */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLArgExtraction.prototype.getArgName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLArgExtraction.prototype.setArgName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated PathSegment path = 2;
 * @return {!Array<!proto.envoy.config.filter.http.graphql.v2.PathSegment>}
 */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLArgExtraction.prototype.getPathList = function() {
  return /** @type{!Array<!proto.envoy.config.filter.http.graphql.v2.PathSegment>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.config.filter.http.graphql.v2.PathSegment, 2));
};


/** @param {!Array<!proto.envoy.config.filter.http.graphql.v2.PathSegment>} value */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLArgExtraction.prototype.setPathList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.envoy.config.filter.http.graphql.v2.PathSegment=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.config.filter.http.graphql.v2.PathSegment}
 */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLArgExtraction.prototype.addPath = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.envoy.config.filter.http.graphql.v2.PathSegment, opt_index);
};


proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLArgExtraction.prototype.clearPathList = function() {
  this.setPathList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLParentExtraction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLParentExtraction.repeatedFields_, null);
};
goog.inherits(proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLParentExtraction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLParentExtraction.displayName = 'proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLParentExtraction';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLParentExtraction.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLParentExtraction.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLParentExtraction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLParentExtraction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLParentExtraction.toObject = function(includeInstance, msg) {
  var f, obj = {
    pathList: jspb.Message.toObjectList(msg.getPathList(),
    proto.envoy.config.filter.http.graphql.v2.PathSegment.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLParentExtraction}
 */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLParentExtraction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLParentExtraction;
  return proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLParentExtraction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLParentExtraction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLParentExtraction}
 */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLParentExtraction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.envoy.config.filter.http.graphql.v2.PathSegment;
      reader.readMessage(value,proto.envoy.config.filter.http.graphql.v2.PathSegment.deserializeBinaryFromReader);
      msg.addPath(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLParentExtraction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLParentExtraction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLParentExtraction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLParentExtraction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPathList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.envoy.config.filter.http.graphql.v2.PathSegment.serializeBinaryToWriter
    );
  }
};


/**
 * repeated PathSegment path = 1;
 * @return {!Array<!proto.envoy.config.filter.http.graphql.v2.PathSegment>}
 */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLParentExtraction.prototype.getPathList = function() {
  return /** @type{!Array<!proto.envoy.config.filter.http.graphql.v2.PathSegment>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.config.filter.http.graphql.v2.PathSegment, 1));
};


/** @param {!Array<!proto.envoy.config.filter.http.graphql.v2.PathSegment>} value */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLParentExtraction.prototype.setPathList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.envoy.config.filter.http.graphql.v2.PathSegment=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.config.filter.http.graphql.v2.PathSegment}
 */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLParentExtraction.prototype.addPath = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.envoy.config.filter.http.graphql.v2.PathSegment, opt_index);
};


proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLParentExtraction.prototype.clearPathList = function() {
  this.setPathList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.TypedValueProvider = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.envoy.config.filter.http.graphql.v2.ValueProvider.TypedValueProvider.oneofGroups_);
};
goog.inherits(proto.envoy.config.filter.http.graphql.v2.ValueProvider.TypedValueProvider, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.envoy.config.filter.http.graphql.v2.ValueProvider.TypedValueProvider.displayName = 'proto.envoy.config.filter.http.graphql.v2.ValueProvider.TypedValueProvider';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.TypedValueProvider.oneofGroups_ = [[2,3]];

/**
 * @enum {number}
 */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.TypedValueProvider.ValProviderCase = {
  VAL_PROVIDER_NOT_SET: 0,
  HEADER: 2,
  VALUE: 3
};

/**
 * @return {proto.envoy.config.filter.http.graphql.v2.ValueProvider.TypedValueProvider.ValProviderCase}
 */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.TypedValueProvider.prototype.getValProviderCase = function() {
  return /** @type {proto.envoy.config.filter.http.graphql.v2.ValueProvider.TypedValueProvider.ValProviderCase} */(jspb.Message.computeOneofCase(this, proto.envoy.config.filter.http.graphql.v2.ValueProvider.TypedValueProvider.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.TypedValueProvider.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.filter.http.graphql.v2.ValueProvider.TypedValueProvider.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.filter.http.graphql.v2.ValueProvider.TypedValueProvider} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.TypedValueProvider.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    header: jspb.Message.getFieldWithDefault(msg, 2, ""),
    value: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.filter.http.graphql.v2.ValueProvider.TypedValueProvider}
 */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.TypedValueProvider.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.filter.http.graphql.v2.ValueProvider.TypedValueProvider;
  return proto.envoy.config.filter.http.graphql.v2.ValueProvider.TypedValueProvider.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.filter.http.graphql.v2.ValueProvider.TypedValueProvider} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.filter.http.graphql.v2.ValueProvider.TypedValueProvider}
 */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.TypedValueProvider.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.envoy.config.filter.http.graphql.v2.ValueProvider.TypedValueProvider.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHeader(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.TypedValueProvider.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.filter.http.graphql.v2.ValueProvider.TypedValueProvider.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.filter.http.graphql.v2.ValueProvider.TypedValueProvider} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.TypedValueProvider.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.TypedValueProvider.Type = {
  STRING: 0,
  INT: 1,
  FLOAT: 2,
  BOOLEAN: 3
};

/**
 * optional Type type = 1;
 * @return {!proto.envoy.config.filter.http.graphql.v2.ValueProvider.TypedValueProvider.Type}
 */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.TypedValueProvider.prototype.getType = function() {
  return /** @type {!proto.envoy.config.filter.http.graphql.v2.ValueProvider.TypedValueProvider.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.envoy.config.filter.http.graphql.v2.ValueProvider.TypedValueProvider.Type} value */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.TypedValueProvider.prototype.setType = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string header = 2;
 * @return {string}
 */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.TypedValueProvider.prototype.getHeader = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.TypedValueProvider.prototype.setHeader = function(value) {
  jspb.Message.setOneofField(this, 2, proto.envoy.config.filter.http.graphql.v2.ValueProvider.TypedValueProvider.oneofGroups_[0], value);
};


proto.envoy.config.filter.http.graphql.v2.ValueProvider.TypedValueProvider.prototype.clearHeader = function() {
  jspb.Message.setOneofField(this, 2, proto.envoy.config.filter.http.graphql.v2.ValueProvider.TypedValueProvider.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.TypedValueProvider.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string value = 3;
 * @return {string}
 */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.TypedValueProvider.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.TypedValueProvider.prototype.setValue = function(value) {
  jspb.Message.setOneofField(this, 3, proto.envoy.config.filter.http.graphql.v2.ValueProvider.TypedValueProvider.oneofGroups_[0], value);
};


proto.envoy.config.filter.http.graphql.v2.ValueProvider.TypedValueProvider.prototype.clearValue = function() {
  jspb.Message.setOneofField(this, 3, proto.envoy.config.filter.http.graphql.v2.ValueProvider.TypedValueProvider.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.TypedValueProvider.prototype.hasValue = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional GraphQLArgExtraction graphql_arg = 1;
 * @return {?proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLArgExtraction}
 */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.prototype.getGraphqlArg = function() {
  return /** @type{?proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLArgExtraction} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLArgExtraction, 1));
};


/** @param {?proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLArgExtraction|undefined} value */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.prototype.setGraphqlArg = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.envoy.config.filter.http.graphql.v2.ValueProvider.oneofGroups_[0], value);
};


proto.envoy.config.filter.http.graphql.v2.ValueProvider.prototype.clearGraphqlArg = function() {
  this.setGraphqlArg(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.prototype.hasGraphqlArg = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TypedValueProvider typed_provider = 2;
 * @return {?proto.envoy.config.filter.http.graphql.v2.ValueProvider.TypedValueProvider}
 */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.prototype.getTypedProvider = function() {
  return /** @type{?proto.envoy.config.filter.http.graphql.v2.ValueProvider.TypedValueProvider} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.filter.http.graphql.v2.ValueProvider.TypedValueProvider, 2));
};


/** @param {?proto.envoy.config.filter.http.graphql.v2.ValueProvider.TypedValueProvider|undefined} value */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.prototype.setTypedProvider = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.envoy.config.filter.http.graphql.v2.ValueProvider.oneofGroups_[0], value);
};


proto.envoy.config.filter.http.graphql.v2.ValueProvider.prototype.clearTypedProvider = function() {
  this.setTypedProvider(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.prototype.hasTypedProvider = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional GraphQLParentExtraction graphql_parent = 3;
 * @return {?proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLParentExtraction}
 */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.prototype.getGraphqlParent = function() {
  return /** @type{?proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLParentExtraction} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLParentExtraction, 3));
};


/** @param {?proto.envoy.config.filter.http.graphql.v2.ValueProvider.GraphQLParentExtraction|undefined} value */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.prototype.setGraphqlParent = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.envoy.config.filter.http.graphql.v2.ValueProvider.oneofGroups_[0], value);
};


proto.envoy.config.filter.http.graphql.v2.ValueProvider.prototype.clearGraphqlParent = function() {
  this.setGraphqlParent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.prototype.hasGraphqlParent = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string provider_template = 4;
 * @return {string}
 */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.prototype.getProviderTemplate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.envoy.config.filter.http.graphql.v2.ValueProvider.prototype.setProviderTemplate = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.filter.http.graphql.v2.JsonKeyValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.config.filter.http.graphql.v2.JsonKeyValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.displayName = 'proto.envoy.config.filter.http.graphql.v2.JsonKeyValue';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.filter.http.graphql.v2.JsonKeyValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: (f = msg.getValue()) && proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.filter.http.graphql.v2.JsonKeyValue}
 */
proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.filter.http.graphql.v2.JsonKeyValue;
  return proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.filter.http.graphql.v2.JsonKeyValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.filter.http.graphql.v2.JsonKeyValue}
 */
proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = new proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue;
      reader.readMessage(value,proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.filter.http.graphql.v2.JsonKeyValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValueList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValueList.repeatedFields_, null);
};
goog.inherits(proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValueList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValueList.displayName = 'proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValueList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValueList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValueList.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValueList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValueList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValueList.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuesList: jspb.Message.toObjectList(msg.getValuesList(),
    proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValueList}
 */
proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValueList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValueList;
  return proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValueList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValueList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValueList}
 */
proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValueList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue;
      reader.readMessage(value,proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue.deserializeBinaryFromReader);
      msg.addValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValueList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValueList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValueList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValueList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue.serializeBinaryToWriter
    );
  }
};


/**
 * repeated JsonValue values = 1;
 * @return {!Array<!proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue>}
 */
proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValueList.prototype.getValuesList = function() {
  return /** @type{!Array<!proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue, 1));
};


/** @param {!Array<!proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue>} value */
proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValueList.prototype.setValuesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue}
 */
proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValueList.prototype.addValues = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue, opt_index);
};


proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValueList.prototype.clearValuesList = function() {
  this.setValuesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue.oneofGroups_);
};
goog.inherits(proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue.displayName = 'proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue.JsonValCase = {
  JSON_VAL_NOT_SET: 0,
  NODE: 1,
  VALUE_PROVIDER: 2,
  LIST: 3
};

/**
 * @return {proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue.JsonValCase}
 */
proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue.prototype.getJsonValCase = function() {
  return /** @type {proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue.JsonValCase} */(jspb.Message.computeOneofCase(this, proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    node: (f = msg.getNode()) && proto.envoy.config.filter.http.graphql.v2.JsonNode.toObject(includeInstance, f),
    valueProvider: (f = msg.getValueProvider()) && proto.envoy.config.filter.http.graphql.v2.ValueProvider.toObject(includeInstance, f),
    list: (f = msg.getList()) && proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValueList.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue}
 */
proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue;
  return proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue}
 */
proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.envoy.config.filter.http.graphql.v2.JsonNode;
      reader.readMessage(value,proto.envoy.config.filter.http.graphql.v2.JsonNode.deserializeBinaryFromReader);
      msg.setNode(value);
      break;
    case 2:
      var value = new proto.envoy.config.filter.http.graphql.v2.ValueProvider;
      reader.readMessage(value,proto.envoy.config.filter.http.graphql.v2.ValueProvider.deserializeBinaryFromReader);
      msg.setValueProvider(value);
      break;
    case 3:
      var value = new proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValueList;
      reader.readMessage(value,proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValueList.deserializeBinaryFromReader);
      msg.setList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNode();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.envoy.config.filter.http.graphql.v2.JsonNode.serializeBinaryToWriter
    );
  }
  f = message.getValueProvider();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.envoy.config.filter.http.graphql.v2.ValueProvider.serializeBinaryToWriter
    );
  }
  f = message.getList();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValueList.serializeBinaryToWriter
    );
  }
};


/**
 * optional JsonNode node = 1;
 * @return {?proto.envoy.config.filter.http.graphql.v2.JsonNode}
 */
proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue.prototype.getNode = function() {
  return /** @type{?proto.envoy.config.filter.http.graphql.v2.JsonNode} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.filter.http.graphql.v2.JsonNode, 1));
};


/** @param {?proto.envoy.config.filter.http.graphql.v2.JsonNode|undefined} value */
proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue.prototype.setNode = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue.oneofGroups_[0], value);
};


proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue.prototype.clearNode = function() {
  this.setNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue.prototype.hasNode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ValueProvider value_provider = 2;
 * @return {?proto.envoy.config.filter.http.graphql.v2.ValueProvider}
 */
proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue.prototype.getValueProvider = function() {
  return /** @type{?proto.envoy.config.filter.http.graphql.v2.ValueProvider} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.filter.http.graphql.v2.ValueProvider, 2));
};


/** @param {?proto.envoy.config.filter.http.graphql.v2.ValueProvider|undefined} value */
proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue.prototype.setValueProvider = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue.oneofGroups_[0], value);
};


proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue.prototype.clearValueProvider = function() {
  this.setValueProvider(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue.prototype.hasValueProvider = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional JsonValueList list = 3;
 * @return {?proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValueList}
 */
proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue.prototype.getList = function() {
  return /** @type{?proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValueList} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValueList, 3));
};


/** @param {?proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValueList|undefined} value */
proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue.prototype.setList = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue.oneofGroups_[0], value);
};


proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue.prototype.clearList = function() {
  this.setList(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue.prototype.hasList = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.prototype.setKey = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional JsonValue value = 2;
 * @return {?proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue}
 */
proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.prototype.getValue = function() {
  return /** @type{?proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue, 2));
};


/** @param {?proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.JsonValue|undefined} value */
proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.prototype.setValue = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.prototype.clearValue = function() {
  this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.prototype.hasValue = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.filter.http.graphql.v2.JsonNode = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.config.filter.http.graphql.v2.JsonNode.repeatedFields_, null);
};
goog.inherits(proto.envoy.config.filter.http.graphql.v2.JsonNode, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.envoy.config.filter.http.graphql.v2.JsonNode.displayName = 'proto.envoy.config.filter.http.graphql.v2.JsonNode';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.config.filter.http.graphql.v2.JsonNode.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.filter.http.graphql.v2.JsonNode.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.filter.http.graphql.v2.JsonNode.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.filter.http.graphql.v2.JsonNode} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.http.graphql.v2.JsonNode.toObject = function(includeInstance, msg) {
  var f, obj = {
    keyValuesList: jspb.Message.toObjectList(msg.getKeyValuesList(),
    proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.filter.http.graphql.v2.JsonNode}
 */
proto.envoy.config.filter.http.graphql.v2.JsonNode.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.filter.http.graphql.v2.JsonNode;
  return proto.envoy.config.filter.http.graphql.v2.JsonNode.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.filter.http.graphql.v2.JsonNode} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.filter.http.graphql.v2.JsonNode}
 */
proto.envoy.config.filter.http.graphql.v2.JsonNode.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.envoy.config.filter.http.graphql.v2.JsonKeyValue;
      reader.readMessage(value,proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.deserializeBinaryFromReader);
      msg.addKeyValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.filter.http.graphql.v2.JsonNode.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.filter.http.graphql.v2.JsonNode.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.filter.http.graphql.v2.JsonNode} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.http.graphql.v2.JsonNode.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKeyValuesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.envoy.config.filter.http.graphql.v2.JsonKeyValue.serializeBinaryToWriter
    );
  }
};


/**
 * repeated JsonKeyValue key_values = 1;
 * @return {!Array<!proto.envoy.config.filter.http.graphql.v2.JsonKeyValue>}
 */
proto.envoy.config.filter.http.graphql.v2.JsonNode.prototype.getKeyValuesList = function() {
  return /** @type{!Array<!proto.envoy.config.filter.http.graphql.v2.JsonKeyValue>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.config.filter.http.graphql.v2.JsonKeyValue, 1));
};


/** @param {!Array<!proto.envoy.config.filter.http.graphql.v2.JsonKeyValue>} value */
proto.envoy.config.filter.http.graphql.v2.JsonNode.prototype.setKeyValuesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.envoy.config.filter.http.graphql.v2.JsonKeyValue=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.config.filter.http.graphql.v2.JsonKeyValue}
 */
proto.envoy.config.filter.http.graphql.v2.JsonNode.prototype.addKeyValues = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.envoy.config.filter.http.graphql.v2.JsonKeyValue, opt_index);
};


proto.envoy.config.filter.http.graphql.v2.JsonNode.prototype.clearKeyValuesList = function() {
  this.setKeyValuesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.filter.http.graphql.v2.RequestTemplate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.envoy.config.filter.http.graphql.v2.RequestTemplate.oneofGroups_);
};
goog.inherits(proto.envoy.config.filter.http.graphql.v2.RequestTemplate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.envoy.config.filter.http.graphql.v2.RequestTemplate.displayName = 'proto.envoy.config.filter.http.graphql.v2.RequestTemplate';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.envoy.config.filter.http.graphql.v2.RequestTemplate.oneofGroups_ = [[3]];

/**
 * @enum {number}
 */
proto.envoy.config.filter.http.graphql.v2.RequestTemplate.OutgoingBodyCase = {
  OUTGOING_BODY_NOT_SET: 0,
  JSON: 3
};

/**
 * @return {proto.envoy.config.filter.http.graphql.v2.RequestTemplate.OutgoingBodyCase}
 */
proto.envoy.config.filter.http.graphql.v2.RequestTemplate.prototype.getOutgoingBodyCase = function() {
  return /** @type {proto.envoy.config.filter.http.graphql.v2.RequestTemplate.OutgoingBodyCase} */(jspb.Message.computeOneofCase(this, proto.envoy.config.filter.http.graphql.v2.RequestTemplate.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.filter.http.graphql.v2.RequestTemplate.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.filter.http.graphql.v2.RequestTemplate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.filter.http.graphql.v2.RequestTemplate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.http.graphql.v2.RequestTemplate.toObject = function(includeInstance, msg) {
  var f, obj = {
    headersMap: (f = msg.getHeadersMap()) ? f.toObject(includeInstance, proto.envoy.config.filter.http.graphql.v2.ValueProvider.toObject) : [],
    queryParamsMap: (f = msg.getQueryParamsMap()) ? f.toObject(includeInstance, proto.envoy.config.filter.http.graphql.v2.ValueProvider.toObject) : [],
    json: (f = msg.getJson()) && proto.envoy.config.filter.http.graphql.v2.JsonNode.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.filter.http.graphql.v2.RequestTemplate}
 */
proto.envoy.config.filter.http.graphql.v2.RequestTemplate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.filter.http.graphql.v2.RequestTemplate;
  return proto.envoy.config.filter.http.graphql.v2.RequestTemplate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.filter.http.graphql.v2.RequestTemplate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.filter.http.graphql.v2.RequestTemplate}
 */
proto.envoy.config.filter.http.graphql.v2.RequestTemplate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getHeadersMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.envoy.config.filter.http.graphql.v2.ValueProvider.deserializeBinaryFromReader, "");
         });
      break;
    case 2:
      var value = msg.getQueryParamsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.envoy.config.filter.http.graphql.v2.ValueProvider.deserializeBinaryFromReader, "");
         });
      break;
    case 3:
      var value = new proto.envoy.config.filter.http.graphql.v2.JsonNode;
      reader.readMessage(value,proto.envoy.config.filter.http.graphql.v2.JsonNode.deserializeBinaryFromReader);
      msg.setJson(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.filter.http.graphql.v2.RequestTemplate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.filter.http.graphql.v2.RequestTemplate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.filter.http.graphql.v2.RequestTemplate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.http.graphql.v2.RequestTemplate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeadersMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.envoy.config.filter.http.graphql.v2.ValueProvider.serializeBinaryToWriter);
  }
  f = message.getQueryParamsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.envoy.config.filter.http.graphql.v2.ValueProvider.serializeBinaryToWriter);
  }
  f = message.getJson();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.envoy.config.filter.http.graphql.v2.JsonNode.serializeBinaryToWriter
    );
  }
};


/**
 * map<string, ValueProvider> headers = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.envoy.config.filter.http.graphql.v2.ValueProvider>}
 */
proto.envoy.config.filter.http.graphql.v2.RequestTemplate.prototype.getHeadersMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.envoy.config.filter.http.graphql.v2.ValueProvider>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.envoy.config.filter.http.graphql.v2.ValueProvider));
};


proto.envoy.config.filter.http.graphql.v2.RequestTemplate.prototype.clearHeadersMap = function() {
  this.getHeadersMap().clear();
};


/**
 * map<string, ValueProvider> query_params = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.envoy.config.filter.http.graphql.v2.ValueProvider>}
 */
proto.envoy.config.filter.http.graphql.v2.RequestTemplate.prototype.getQueryParamsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.envoy.config.filter.http.graphql.v2.ValueProvider>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.envoy.config.filter.http.graphql.v2.ValueProvider));
};


proto.envoy.config.filter.http.graphql.v2.RequestTemplate.prototype.clearQueryParamsMap = function() {
  this.getQueryParamsMap().clear();
};


/**
 * optional JsonNode json = 3;
 * @return {?proto.envoy.config.filter.http.graphql.v2.JsonNode}
 */
proto.envoy.config.filter.http.graphql.v2.RequestTemplate.prototype.getJson = function() {
  return /** @type{?proto.envoy.config.filter.http.graphql.v2.JsonNode} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.filter.http.graphql.v2.JsonNode, 3));
};


/** @param {?proto.envoy.config.filter.http.graphql.v2.JsonNode|undefined} value */
proto.envoy.config.filter.http.graphql.v2.RequestTemplate.prototype.setJson = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.envoy.config.filter.http.graphql.v2.RequestTemplate.oneofGroups_[0], value);
};


proto.envoy.config.filter.http.graphql.v2.RequestTemplate.prototype.clearJson = function() {
  this.setJson(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.config.filter.http.graphql.v2.RequestTemplate.prototype.hasJson = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.filter.http.graphql.v2.ResponseTemplate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.config.filter.http.graphql.v2.ResponseTemplate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.envoy.config.filter.http.graphql.v2.ResponseTemplate.displayName = 'proto.envoy.config.filter.http.graphql.v2.ResponseTemplate';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.filter.http.graphql.v2.ResponseTemplate.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.filter.http.graphql.v2.ResponseTemplate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.filter.http.graphql.v2.ResponseTemplate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.http.graphql.v2.ResponseTemplate.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.filter.http.graphql.v2.ResponseTemplate}
 */
proto.envoy.config.filter.http.graphql.v2.ResponseTemplate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.filter.http.graphql.v2.ResponseTemplate;
  return proto.envoy.config.filter.http.graphql.v2.ResponseTemplate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.filter.http.graphql.v2.ResponseTemplate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.filter.http.graphql.v2.ResponseTemplate}
 */
proto.envoy.config.filter.http.graphql.v2.ResponseTemplate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.filter.http.graphql.v2.ResponseTemplate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.filter.http.graphql.v2.ResponseTemplate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.filter.http.graphql.v2.ResponseTemplate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.http.graphql.v2.ResponseTemplate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.filter.http.graphql.v2.RESTResolver = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.config.filter.http.graphql.v2.RESTResolver, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.envoy.config.filter.http.graphql.v2.RESTResolver.displayName = 'proto.envoy.config.filter.http.graphql.v2.RESTResolver';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.filter.http.graphql.v2.RESTResolver.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.filter.http.graphql.v2.RESTResolver.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.filter.http.graphql.v2.RESTResolver} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.http.graphql.v2.RESTResolver.toObject = function(includeInstance, msg) {
  var f, obj = {
    serverUri: (f = msg.getServerUri()) && github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_core_v3_http_uri_pb.HttpUri.toObject(includeInstance, f),
    requestTransform: (f = msg.getRequestTransform()) && proto.envoy.config.filter.http.graphql.v2.RequestTemplate.toObject(includeInstance, f),
    spanName: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.filter.http.graphql.v2.RESTResolver}
 */
proto.envoy.config.filter.http.graphql.v2.RESTResolver.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.filter.http.graphql.v2.RESTResolver;
  return proto.envoy.config.filter.http.graphql.v2.RESTResolver.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.filter.http.graphql.v2.RESTResolver} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.filter.http.graphql.v2.RESTResolver}
 */
proto.envoy.config.filter.http.graphql.v2.RESTResolver.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_core_v3_http_uri_pb.HttpUri;
      reader.readMessage(value,github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_core_v3_http_uri_pb.HttpUri.deserializeBinaryFromReader);
      msg.setServerUri(value);
      break;
    case 2:
      var value = new proto.envoy.config.filter.http.graphql.v2.RequestTemplate;
      reader.readMessage(value,proto.envoy.config.filter.http.graphql.v2.RequestTemplate.deserializeBinaryFromReader);
      msg.setRequestTransform(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSpanName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.filter.http.graphql.v2.RESTResolver.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.filter.http.graphql.v2.RESTResolver.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.filter.http.graphql.v2.RESTResolver} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.http.graphql.v2.RESTResolver.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServerUri();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_core_v3_http_uri_pb.HttpUri.serializeBinaryToWriter
    );
  }
  f = message.getRequestTransform();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.envoy.config.filter.http.graphql.v2.RequestTemplate.serializeBinaryToWriter
    );
  }
  f = message.getSpanName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional solo.io.envoy.config.core.v3.HttpUri server_uri = 1;
 * @return {?proto.solo.io.envoy.config.core.v3.HttpUri}
 */
proto.envoy.config.filter.http.graphql.v2.RESTResolver.prototype.getServerUri = function() {
  return /** @type{?proto.solo.io.envoy.config.core.v3.HttpUri} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_core_v3_http_uri_pb.HttpUri, 1));
};


/** @param {?proto.solo.io.envoy.config.core.v3.HttpUri|undefined} value */
proto.envoy.config.filter.http.graphql.v2.RESTResolver.prototype.setServerUri = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.envoy.config.filter.http.graphql.v2.RESTResolver.prototype.clearServerUri = function() {
  this.setServerUri(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.config.filter.http.graphql.v2.RESTResolver.prototype.hasServerUri = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RequestTemplate request_transform = 2;
 * @return {?proto.envoy.config.filter.http.graphql.v2.RequestTemplate}
 */
proto.envoy.config.filter.http.graphql.v2.RESTResolver.prototype.getRequestTransform = function() {
  return /** @type{?proto.envoy.config.filter.http.graphql.v2.RequestTemplate} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.filter.http.graphql.v2.RequestTemplate, 2));
};


/** @param {?proto.envoy.config.filter.http.graphql.v2.RequestTemplate|undefined} value */
proto.envoy.config.filter.http.graphql.v2.RESTResolver.prototype.setRequestTransform = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.envoy.config.filter.http.graphql.v2.RESTResolver.prototype.clearRequestTransform = function() {
  this.setRequestTransform(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.config.filter.http.graphql.v2.RESTResolver.prototype.hasRequestTransform = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string span_name = 4;
 * @return {string}
 */
proto.envoy.config.filter.http.graphql.v2.RESTResolver.prototype.getSpanName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.envoy.config.filter.http.graphql.v2.RESTResolver.prototype.setSpanName = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.filter.http.graphql.v2.AbstractTypeResolver = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.config.filter.http.graphql.v2.AbstractTypeResolver, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.envoy.config.filter.http.graphql.v2.AbstractTypeResolver.displayName = 'proto.envoy.config.filter.http.graphql.v2.AbstractTypeResolver';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.filter.http.graphql.v2.AbstractTypeResolver.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.filter.http.graphql.v2.AbstractTypeResolver.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.filter.http.graphql.v2.AbstractTypeResolver} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.http.graphql.v2.AbstractTypeResolver.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.filter.http.graphql.v2.AbstractTypeResolver}
 */
proto.envoy.config.filter.http.graphql.v2.AbstractTypeResolver.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.filter.http.graphql.v2.AbstractTypeResolver;
  return proto.envoy.config.filter.http.graphql.v2.AbstractTypeResolver.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.filter.http.graphql.v2.AbstractTypeResolver} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.filter.http.graphql.v2.AbstractTypeResolver}
 */
proto.envoy.config.filter.http.graphql.v2.AbstractTypeResolver.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.filter.http.graphql.v2.AbstractTypeResolver.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.filter.http.graphql.v2.AbstractTypeResolver.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.filter.http.graphql.v2.AbstractTypeResolver} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.http.graphql.v2.AbstractTypeResolver.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.filter.http.graphql.v2.Query = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.config.filter.http.graphql.v2.Query, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.envoy.config.filter.http.graphql.v2.Query.displayName = 'proto.envoy.config.filter.http.graphql.v2.Query';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.filter.http.graphql.v2.Query.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.filter.http.graphql.v2.Query.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.filter.http.graphql.v2.Query} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.http.graphql.v2.Query.toObject = function(includeInstance, msg) {
  var f, obj = {
    query: (f = msg.getQuery()) && github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_core_v3_base_pb.DataSource.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.filter.http.graphql.v2.Query}
 */
proto.envoy.config.filter.http.graphql.v2.Query.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.filter.http.graphql.v2.Query;
  return proto.envoy.config.filter.http.graphql.v2.Query.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.filter.http.graphql.v2.Query} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.filter.http.graphql.v2.Query}
 */
proto.envoy.config.filter.http.graphql.v2.Query.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_core_v3_base_pb.DataSource;
      reader.readMessage(value,github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_core_v3_base_pb.DataSource.deserializeBinaryFromReader);
      msg.setQuery(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.filter.http.graphql.v2.Query.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.filter.http.graphql.v2.Query.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.filter.http.graphql.v2.Query} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.http.graphql.v2.Query.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuery();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_core_v3_base_pb.DataSource.serializeBinaryToWriter
    );
  }
};


/**
 * optional solo.io.envoy.config.core.v3.DataSource query = 1;
 * @return {?proto.solo.io.envoy.config.core.v3.DataSource}
 */
proto.envoy.config.filter.http.graphql.v2.Query.prototype.getQuery = function() {
  return /** @type{?proto.solo.io.envoy.config.core.v3.DataSource} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_core_v3_base_pb.DataSource, 1));
};


/** @param {?proto.solo.io.envoy.config.core.v3.DataSource|undefined} value */
proto.envoy.config.filter.http.graphql.v2.Query.prototype.setQuery = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.envoy.config.filter.http.graphql.v2.Query.prototype.clearQuery = function() {
  this.setQuery(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.config.filter.http.graphql.v2.Query.prototype.hasQuery = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.filter.http.graphql.v2.QueryMatcher = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.envoy.config.filter.http.graphql.v2.QueryMatcher.oneofGroups_);
};
goog.inherits(proto.envoy.config.filter.http.graphql.v2.QueryMatcher, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.envoy.config.filter.http.graphql.v2.QueryMatcher.displayName = 'proto.envoy.config.filter.http.graphql.v2.QueryMatcher';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.envoy.config.filter.http.graphql.v2.QueryMatcher.oneofGroups_ = [[1]];

/**
 * @enum {number}
 */
proto.envoy.config.filter.http.graphql.v2.QueryMatcher.MatchCase = {
  MATCH_NOT_SET: 0,
  FIELD_MATCHER: 1
};

/**
 * @return {proto.envoy.config.filter.http.graphql.v2.QueryMatcher.MatchCase}
 */
proto.envoy.config.filter.http.graphql.v2.QueryMatcher.prototype.getMatchCase = function() {
  return /** @type {proto.envoy.config.filter.http.graphql.v2.QueryMatcher.MatchCase} */(jspb.Message.computeOneofCase(this, proto.envoy.config.filter.http.graphql.v2.QueryMatcher.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.filter.http.graphql.v2.QueryMatcher.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.filter.http.graphql.v2.QueryMatcher.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.filter.http.graphql.v2.QueryMatcher} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.http.graphql.v2.QueryMatcher.toObject = function(includeInstance, msg) {
  var f, obj = {
    fieldMatcher: (f = msg.getFieldMatcher()) && proto.envoy.config.filter.http.graphql.v2.QueryMatcher.FieldMatcher.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.filter.http.graphql.v2.QueryMatcher}
 */
proto.envoy.config.filter.http.graphql.v2.QueryMatcher.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.filter.http.graphql.v2.QueryMatcher;
  return proto.envoy.config.filter.http.graphql.v2.QueryMatcher.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.filter.http.graphql.v2.QueryMatcher} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.filter.http.graphql.v2.QueryMatcher}
 */
proto.envoy.config.filter.http.graphql.v2.QueryMatcher.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.envoy.config.filter.http.graphql.v2.QueryMatcher.FieldMatcher;
      reader.readMessage(value,proto.envoy.config.filter.http.graphql.v2.QueryMatcher.FieldMatcher.deserializeBinaryFromReader);
      msg.setFieldMatcher(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.filter.http.graphql.v2.QueryMatcher.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.filter.http.graphql.v2.QueryMatcher.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.filter.http.graphql.v2.QueryMatcher} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.http.graphql.v2.QueryMatcher.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFieldMatcher();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.envoy.config.filter.http.graphql.v2.QueryMatcher.FieldMatcher.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.filter.http.graphql.v2.QueryMatcher.FieldMatcher = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.config.filter.http.graphql.v2.QueryMatcher.FieldMatcher, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.envoy.config.filter.http.graphql.v2.QueryMatcher.FieldMatcher.displayName = 'proto.envoy.config.filter.http.graphql.v2.QueryMatcher.FieldMatcher';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.filter.http.graphql.v2.QueryMatcher.FieldMatcher.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.filter.http.graphql.v2.QueryMatcher.FieldMatcher.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.filter.http.graphql.v2.QueryMatcher.FieldMatcher} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.http.graphql.v2.QueryMatcher.FieldMatcher.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, ""),
    field: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.filter.http.graphql.v2.QueryMatcher.FieldMatcher}
 */
proto.envoy.config.filter.http.graphql.v2.QueryMatcher.FieldMatcher.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.filter.http.graphql.v2.QueryMatcher.FieldMatcher;
  return proto.envoy.config.filter.http.graphql.v2.QueryMatcher.FieldMatcher.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.filter.http.graphql.v2.QueryMatcher.FieldMatcher} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.filter.http.graphql.v2.QueryMatcher.FieldMatcher}
 */
proto.envoy.config.filter.http.graphql.v2.QueryMatcher.FieldMatcher.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setField(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.filter.http.graphql.v2.QueryMatcher.FieldMatcher.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.filter.http.graphql.v2.QueryMatcher.FieldMatcher.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.filter.http.graphql.v2.QueryMatcher.FieldMatcher} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.http.graphql.v2.QueryMatcher.FieldMatcher.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getField();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string type = 1;
 * @return {string}
 */
proto.envoy.config.filter.http.graphql.v2.QueryMatcher.FieldMatcher.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.envoy.config.filter.http.graphql.v2.QueryMatcher.FieldMatcher.prototype.setType = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string field = 2;
 * @return {string}
 */
proto.envoy.config.filter.http.graphql.v2.QueryMatcher.FieldMatcher.prototype.getField = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.envoy.config.filter.http.graphql.v2.QueryMatcher.FieldMatcher.prototype.setField = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional FieldMatcher field_matcher = 1;
 * @return {?proto.envoy.config.filter.http.graphql.v2.QueryMatcher.FieldMatcher}
 */
proto.envoy.config.filter.http.graphql.v2.QueryMatcher.prototype.getFieldMatcher = function() {
  return /** @type{?proto.envoy.config.filter.http.graphql.v2.QueryMatcher.FieldMatcher} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.filter.http.graphql.v2.QueryMatcher.FieldMatcher, 1));
};


/** @param {?proto.envoy.config.filter.http.graphql.v2.QueryMatcher.FieldMatcher|undefined} value */
proto.envoy.config.filter.http.graphql.v2.QueryMatcher.prototype.setFieldMatcher = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.envoy.config.filter.http.graphql.v2.QueryMatcher.oneofGroups_[0], value);
};


proto.envoy.config.filter.http.graphql.v2.QueryMatcher.prototype.clearFieldMatcher = function() {
  this.setFieldMatcher(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.config.filter.http.graphql.v2.QueryMatcher.prototype.hasFieldMatcher = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.filter.http.graphql.v2.Resolution = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.config.filter.http.graphql.v2.Resolution, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.envoy.config.filter.http.graphql.v2.Resolution.displayName = 'proto.envoy.config.filter.http.graphql.v2.Resolution';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.filter.http.graphql.v2.Resolution.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.filter.http.graphql.v2.Resolution.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.filter.http.graphql.v2.Resolution} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.http.graphql.v2.Resolution.toObject = function(includeInstance, msg) {
  var f, obj = {
    matcher: (f = msg.getMatcher()) && proto.envoy.config.filter.http.graphql.v2.QueryMatcher.toObject(includeInstance, f),
    resolver: (f = msg.getResolver()) && github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_core_v3_extension_pb.TypedExtensionConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.filter.http.graphql.v2.Resolution}
 */
proto.envoy.config.filter.http.graphql.v2.Resolution.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.filter.http.graphql.v2.Resolution;
  return proto.envoy.config.filter.http.graphql.v2.Resolution.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.filter.http.graphql.v2.Resolution} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.filter.http.graphql.v2.Resolution}
 */
proto.envoy.config.filter.http.graphql.v2.Resolution.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.envoy.config.filter.http.graphql.v2.QueryMatcher;
      reader.readMessage(value,proto.envoy.config.filter.http.graphql.v2.QueryMatcher.deserializeBinaryFromReader);
      msg.setMatcher(value);
      break;
    case 2:
      var value = new github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_core_v3_extension_pb.TypedExtensionConfig;
      reader.readMessage(value,github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_core_v3_extension_pb.TypedExtensionConfig.deserializeBinaryFromReader);
      msg.setResolver(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.filter.http.graphql.v2.Resolution.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.filter.http.graphql.v2.Resolution.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.filter.http.graphql.v2.Resolution} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.http.graphql.v2.Resolution.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMatcher();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.envoy.config.filter.http.graphql.v2.QueryMatcher.serializeBinaryToWriter
    );
  }
  f = message.getResolver();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_core_v3_extension_pb.TypedExtensionConfig.serializeBinaryToWriter
    );
  }
};


/**
 * optional QueryMatcher matcher = 1;
 * @return {?proto.envoy.config.filter.http.graphql.v2.QueryMatcher}
 */
proto.envoy.config.filter.http.graphql.v2.Resolution.prototype.getMatcher = function() {
  return /** @type{?proto.envoy.config.filter.http.graphql.v2.QueryMatcher} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.filter.http.graphql.v2.QueryMatcher, 1));
};


/** @param {?proto.envoy.config.filter.http.graphql.v2.QueryMatcher|undefined} value */
proto.envoy.config.filter.http.graphql.v2.Resolution.prototype.setMatcher = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.envoy.config.filter.http.graphql.v2.Resolution.prototype.clearMatcher = function() {
  this.setMatcher(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.config.filter.http.graphql.v2.Resolution.prototype.hasMatcher = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional solo.io.envoy.config.core.v3.TypedExtensionConfig resolver = 2;
 * @return {?proto.solo.io.envoy.config.core.v3.TypedExtensionConfig}
 */
proto.envoy.config.filter.http.graphql.v2.Resolution.prototype.getResolver = function() {
  return /** @type{?proto.solo.io.envoy.config.core.v3.TypedExtensionConfig} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_core_v3_extension_pb.TypedExtensionConfig, 2));
};


/** @param {?proto.solo.io.envoy.config.core.v3.TypedExtensionConfig|undefined} value */
proto.envoy.config.filter.http.graphql.v2.Resolution.prototype.setResolver = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.envoy.config.filter.http.graphql.v2.Resolution.prototype.clearResolver = function() {
  this.setResolver(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.config.filter.http.graphql.v2.Resolution.prototype.hasResolver = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.filter.http.graphql.v2.GraphQLConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.config.filter.http.graphql.v2.GraphQLConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.envoy.config.filter.http.graphql.v2.GraphQLConfig.displayName = 'proto.envoy.config.filter.http.graphql.v2.GraphQLConfig';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.filter.http.graphql.v2.GraphQLConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.filter.http.graphql.v2.GraphQLConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.filter.http.graphql.v2.GraphQLConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.http.graphql.v2.GraphQLConfig.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.filter.http.graphql.v2.GraphQLConfig}
 */
proto.envoy.config.filter.http.graphql.v2.GraphQLConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.filter.http.graphql.v2.GraphQLConfig;
  return proto.envoy.config.filter.http.graphql.v2.GraphQLConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.filter.http.graphql.v2.GraphQLConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.filter.http.graphql.v2.GraphQLConfig}
 */
proto.envoy.config.filter.http.graphql.v2.GraphQLConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.filter.http.graphql.v2.GraphQLConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.filter.http.graphql.v2.GraphQLConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.filter.http.graphql.v2.GraphQLConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.http.graphql.v2.GraphQLConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.filter.http.graphql.v2.GraphQLRouteConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.config.filter.http.graphql.v2.GraphQLRouteConfig.repeatedFields_, null);
};
goog.inherits(proto.envoy.config.filter.http.graphql.v2.GraphQLRouteConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.envoy.config.filter.http.graphql.v2.GraphQLRouteConfig.displayName = 'proto.envoy.config.filter.http.graphql.v2.GraphQLRouteConfig';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.config.filter.http.graphql.v2.GraphQLRouteConfig.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.filter.http.graphql.v2.GraphQLRouteConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.filter.http.graphql.v2.GraphQLRouteConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.filter.http.graphql.v2.GraphQLRouteConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.http.graphql.v2.GraphQLRouteConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    schema: (f = msg.getSchema()) && github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_core_v3_base_pb.DataSource.toObject(includeInstance, f),
    enableIntrospection: jspb.Message.getFieldWithDefault(msg, 2, false),
    resolutionsList: jspb.Message.toObjectList(msg.getResolutionsList(),
    proto.envoy.config.filter.http.graphql.v2.Resolution.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.filter.http.graphql.v2.GraphQLRouteConfig}
 */
proto.envoy.config.filter.http.graphql.v2.GraphQLRouteConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.filter.http.graphql.v2.GraphQLRouteConfig;
  return proto.envoy.config.filter.http.graphql.v2.GraphQLRouteConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.filter.http.graphql.v2.GraphQLRouteConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.filter.http.graphql.v2.GraphQLRouteConfig}
 */
proto.envoy.config.filter.http.graphql.v2.GraphQLRouteConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_core_v3_base_pb.DataSource;
      reader.readMessage(value,github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_core_v3_base_pb.DataSource.deserializeBinaryFromReader);
      msg.setSchema(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableIntrospection(value);
      break;
    case 3:
      var value = new proto.envoy.config.filter.http.graphql.v2.Resolution;
      reader.readMessage(value,proto.envoy.config.filter.http.graphql.v2.Resolution.deserializeBinaryFromReader);
      msg.addResolutions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.filter.http.graphql.v2.GraphQLRouteConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.filter.http.graphql.v2.GraphQLRouteConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.filter.http.graphql.v2.GraphQLRouteConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.http.graphql.v2.GraphQLRouteConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchema();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_core_v3_base_pb.DataSource.serializeBinaryToWriter
    );
  }
  f = message.getEnableIntrospection();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getResolutionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.envoy.config.filter.http.graphql.v2.Resolution.serializeBinaryToWriter
    );
  }
};


/**
 * optional solo.io.envoy.config.core.v3.DataSource schema = 1;
 * @return {?proto.solo.io.envoy.config.core.v3.DataSource}
 */
proto.envoy.config.filter.http.graphql.v2.GraphQLRouteConfig.prototype.getSchema = function() {
  return /** @type{?proto.solo.io.envoy.config.core.v3.DataSource} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_core_v3_base_pb.DataSource, 1));
};


/** @param {?proto.solo.io.envoy.config.core.v3.DataSource|undefined} value */
proto.envoy.config.filter.http.graphql.v2.GraphQLRouteConfig.prototype.setSchema = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.envoy.config.filter.http.graphql.v2.GraphQLRouteConfig.prototype.clearSchema = function() {
  this.setSchema(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.envoy.config.filter.http.graphql.v2.GraphQLRouteConfig.prototype.hasSchema = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool enable_introspection = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.envoy.config.filter.http.graphql.v2.GraphQLRouteConfig.prototype.getEnableIntrospection = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.envoy.config.filter.http.graphql.v2.GraphQLRouteConfig.prototype.setEnableIntrospection = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * repeated Resolution resolutions = 3;
 * @return {!Array<!proto.envoy.config.filter.http.graphql.v2.Resolution>}
 */
proto.envoy.config.filter.http.graphql.v2.GraphQLRouteConfig.prototype.getResolutionsList = function() {
  return /** @type{!Array<!proto.envoy.config.filter.http.graphql.v2.Resolution>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.config.filter.http.graphql.v2.Resolution, 3));
};


/** @param {!Array<!proto.envoy.config.filter.http.graphql.v2.Resolution>} value */
proto.envoy.config.filter.http.graphql.v2.GraphQLRouteConfig.prototype.setResolutionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.envoy.config.filter.http.graphql.v2.Resolution=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.config.filter.http.graphql.v2.Resolution}
 */
proto.envoy.config.filter.http.graphql.v2.GraphQLRouteConfig.prototype.addResolutions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.envoy.config.filter.http.graphql.v2.Resolution, opt_index);
};


proto.envoy.config.filter.http.graphql.v2.GraphQLRouteConfig.prototype.clearResolutionsList = function() {
  this.setResolutionsList([]);
};


goog.object.extend(exports, proto.envoy.config.filter.http.graphql.v2);
