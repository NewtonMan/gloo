/* eslint-disable */
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var extproto_ext_pb = require('../../../../../../../extproto/ext_pb.js');
var github_com_solo$io_solo$kit_api_v1_metadata_pb = require('../../../../../../../github.com/solo-io/solo-kit/api/v1/metadata_pb.js');
var github_com_solo$io_solo$kit_api_v1_status_pb = require('../../../../../../../github.com/solo-io/solo-kit/api/v1/status_pb.js');
var github_com_solo$io_solo$kit_api_v1_ref_pb = require('../../../../../../../github.com/solo-io/solo-kit/api/v1/ref_pb.js');
var github_com_solo$io_solo$kit_api_v1_solo$kit_pb = require('../../../../../../../github.com/solo-io/solo-kit/api/v1/solo-kit_pb.js');
var github_com_solo$io_solo$apis_api_gloo_gloo_v1_proxy_pb = require('../../../../../../../github.com/solo-io/solo-apis/api/gloo/gloo/v1/proxy_pb.js');
var github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb = require('../../../../../../../github.com/solo-io/solo-apis/api/gloo/gloo/v1/options_pb.js');
var github_com_solo$io_solo$apis_api_gloo_gloo_v1_ssl_pb = require('../../../../../../../github.com/solo-io/solo-apis/api/gloo/gloo/v1/ssl_pb.js');
var github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_core_v3_address_pb = require('../../../../../../../github.com/solo-io/solo-apis/api/gloo/gloo/external/envoy/config/core/v3/address_pb.js');
goog.exportSymbol('proto.gateway.solo.io.HttpGateway', null, global);
goog.exportSymbol('proto.gateway.solo.io.MatchableHttpGateway', null, global);
goog.exportSymbol('proto.gateway.solo.io.MatchableHttpGateway.Matcher', null, global);
goog.exportSymbol('proto.gateway.solo.io.VirtualServiceSelectorExpressions', null, global);
goog.exportSymbol('proto.gateway.solo.io.VirtualServiceSelectorExpressions.Expression', null, global);
goog.exportSymbol('proto.gateway.solo.io.VirtualServiceSelectorExpressions.Expression.Operator', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gateway.solo.io.MatchableHttpGateway = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gateway.solo.io.MatchableHttpGateway, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gateway.solo.io.MatchableHttpGateway.displayName = 'proto.gateway.solo.io.MatchableHttpGateway';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gateway.solo.io.MatchableHttpGateway.prototype.toObject = function(opt_includeInstance) {
  return proto.gateway.solo.io.MatchableHttpGateway.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gateway.solo.io.MatchableHttpGateway} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gateway.solo.io.MatchableHttpGateway.toObject = function(includeInstance, msg) {
  var f, obj = {
    namespacedStatuses: (f = msg.getNamespacedStatuses()) && github_com_solo$io_solo$kit_api_v1_status_pb.NamespacedStatuses.toObject(includeInstance, f),
    metadata: (f = msg.getMetadata()) && github_com_solo$io_solo$kit_api_v1_metadata_pb.Metadata.toObject(includeInstance, f),
    matcher: (f = msg.getMatcher()) && proto.gateway.solo.io.MatchableHttpGateway.Matcher.toObject(includeInstance, f),
    httpGateway: (f = msg.getHttpGateway()) && proto.gateway.solo.io.HttpGateway.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gateway.solo.io.MatchableHttpGateway}
 */
proto.gateway.solo.io.MatchableHttpGateway.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gateway.solo.io.MatchableHttpGateway;
  return proto.gateway.solo.io.MatchableHttpGateway.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gateway.solo.io.MatchableHttpGateway} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gateway.solo.io.MatchableHttpGateway}
 */
proto.gateway.solo.io.MatchableHttpGateway.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_solo$kit_api_v1_status_pb.NamespacedStatuses;
      reader.readMessage(value,github_com_solo$io_solo$kit_api_v1_status_pb.NamespacedStatuses.deserializeBinaryFromReader);
      msg.setNamespacedStatuses(value);
      break;
    case 2:
      var value = new github_com_solo$io_solo$kit_api_v1_metadata_pb.Metadata;
      reader.readMessage(value,github_com_solo$io_solo$kit_api_v1_metadata_pb.Metadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 3:
      var value = new proto.gateway.solo.io.MatchableHttpGateway.Matcher;
      reader.readMessage(value,proto.gateway.solo.io.MatchableHttpGateway.Matcher.deserializeBinaryFromReader);
      msg.setMatcher(value);
      break;
    case 4:
      var value = new proto.gateway.solo.io.HttpGateway;
      reader.readMessage(value,proto.gateway.solo.io.HttpGateway.deserializeBinaryFromReader);
      msg.setHttpGateway(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gateway.solo.io.MatchableHttpGateway.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gateway.solo.io.MatchableHttpGateway.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gateway.solo.io.MatchableHttpGateway} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gateway.solo.io.MatchableHttpGateway.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNamespacedStatuses();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_solo$kit_api_v1_status_pb.NamespacedStatuses.serializeBinaryToWriter
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      github_com_solo$io_solo$kit_api_v1_metadata_pb.Metadata.serializeBinaryToWriter
    );
  }
  f = message.getMatcher();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.gateway.solo.io.MatchableHttpGateway.Matcher.serializeBinaryToWriter
    );
  }
  f = message.getHttpGateway();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.gateway.solo.io.HttpGateway.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gateway.solo.io.MatchableHttpGateway.Matcher = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gateway.solo.io.MatchableHttpGateway.Matcher.repeatedFields_, null);
};
goog.inherits(proto.gateway.solo.io.MatchableHttpGateway.Matcher, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gateway.solo.io.MatchableHttpGateway.Matcher.displayName = 'proto.gateway.solo.io.MatchableHttpGateway.Matcher';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gateway.solo.io.MatchableHttpGateway.Matcher.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gateway.solo.io.MatchableHttpGateway.Matcher.prototype.toObject = function(opt_includeInstance) {
  return proto.gateway.solo.io.MatchableHttpGateway.Matcher.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gateway.solo.io.MatchableHttpGateway.Matcher} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gateway.solo.io.MatchableHttpGateway.Matcher.toObject = function(includeInstance, msg) {
  var f, obj = {
    sourcePrefixRangesList: jspb.Message.toObjectList(msg.getSourcePrefixRangesList(),
    github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_core_v3_address_pb.CidrRange.toObject, includeInstance),
    sslConfig: (f = msg.getSslConfig()) && github_com_solo$io_solo$apis_api_gloo_gloo_v1_ssl_pb.SslConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gateway.solo.io.MatchableHttpGateway.Matcher}
 */
proto.gateway.solo.io.MatchableHttpGateway.Matcher.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gateway.solo.io.MatchableHttpGateway.Matcher;
  return proto.gateway.solo.io.MatchableHttpGateway.Matcher.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gateway.solo.io.MatchableHttpGateway.Matcher} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gateway.solo.io.MatchableHttpGateway.Matcher}
 */
proto.gateway.solo.io.MatchableHttpGateway.Matcher.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_core_v3_address_pb.CidrRange;
      reader.readMessage(value,github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_core_v3_address_pb.CidrRange.deserializeBinaryFromReader);
      msg.addSourcePrefixRanges(value);
      break;
    case 2:
      var value = new github_com_solo$io_solo$apis_api_gloo_gloo_v1_ssl_pb.SslConfig;
      reader.readMessage(value,github_com_solo$io_solo$apis_api_gloo_gloo_v1_ssl_pb.SslConfig.deserializeBinaryFromReader);
      msg.setSslConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gateway.solo.io.MatchableHttpGateway.Matcher.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gateway.solo.io.MatchableHttpGateway.Matcher.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gateway.solo.io.MatchableHttpGateway.Matcher} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gateway.solo.io.MatchableHttpGateway.Matcher.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSourcePrefixRangesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_core_v3_address_pb.CidrRange.serializeBinaryToWriter
    );
  }
  f = message.getSslConfig();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      github_com_solo$io_solo$apis_api_gloo_gloo_v1_ssl_pb.SslConfig.serializeBinaryToWriter
    );
  }
};


/**
 * repeated solo.io.envoy.config.core.v3.CidrRange source_prefix_ranges = 1;
 * @return {!Array<!proto.solo.io.envoy.config.core.v3.CidrRange>}
 */
proto.gateway.solo.io.MatchableHttpGateway.Matcher.prototype.getSourcePrefixRangesList = function() {
  return /** @type{!Array<!proto.solo.io.envoy.config.core.v3.CidrRange>} */ (
    jspb.Message.getRepeatedWrapperField(this, github_com_solo$io_solo$apis_api_gloo_gloo_external_envoy_config_core_v3_address_pb.CidrRange, 1));
};


/** @param {!Array<!proto.solo.io.envoy.config.core.v3.CidrRange>} value */
proto.gateway.solo.io.MatchableHttpGateway.Matcher.prototype.setSourcePrefixRangesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.solo.io.envoy.config.core.v3.CidrRange=} opt_value
 * @param {number=} opt_index
 * @return {!proto.solo.io.envoy.config.core.v3.CidrRange}
 */
proto.gateway.solo.io.MatchableHttpGateway.Matcher.prototype.addSourcePrefixRanges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.solo.io.envoy.config.core.v3.CidrRange, opt_index);
};


proto.gateway.solo.io.MatchableHttpGateway.Matcher.prototype.clearSourcePrefixRangesList = function() {
  this.setSourcePrefixRangesList([]);
};


/**
 * optional gloo.solo.io.SslConfig ssl_config = 2;
 * @return {?proto.gloo.solo.io.SslConfig}
 */
proto.gateway.solo.io.MatchableHttpGateway.Matcher.prototype.getSslConfig = function() {
  return /** @type{?proto.gloo.solo.io.SslConfig} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$apis_api_gloo_gloo_v1_ssl_pb.SslConfig, 2));
};


/** @param {?proto.gloo.solo.io.SslConfig|undefined} value */
proto.gateway.solo.io.MatchableHttpGateway.Matcher.prototype.setSslConfig = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.gateway.solo.io.MatchableHttpGateway.Matcher.prototype.clearSslConfig = function() {
  this.setSslConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gateway.solo.io.MatchableHttpGateway.Matcher.prototype.hasSslConfig = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional core.solo.io.NamespacedStatuses namespaced_statuses = 1;
 * @return {?proto.core.solo.io.NamespacedStatuses}
 */
proto.gateway.solo.io.MatchableHttpGateway.prototype.getNamespacedStatuses = function() {
  return /** @type{?proto.core.solo.io.NamespacedStatuses} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$kit_api_v1_status_pb.NamespacedStatuses, 1));
};


/** @param {?proto.core.solo.io.NamespacedStatuses|undefined} value */
proto.gateway.solo.io.MatchableHttpGateway.prototype.setNamespacedStatuses = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.gateway.solo.io.MatchableHttpGateway.prototype.clearNamespacedStatuses = function() {
  this.setNamespacedStatuses(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gateway.solo.io.MatchableHttpGateway.prototype.hasNamespacedStatuses = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional core.solo.io.Metadata metadata = 2;
 * @return {?proto.core.solo.io.Metadata}
 */
proto.gateway.solo.io.MatchableHttpGateway.prototype.getMetadata = function() {
  return /** @type{?proto.core.solo.io.Metadata} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$kit_api_v1_metadata_pb.Metadata, 2));
};


/** @param {?proto.core.solo.io.Metadata|undefined} value */
proto.gateway.solo.io.MatchableHttpGateway.prototype.setMetadata = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.gateway.solo.io.MatchableHttpGateway.prototype.clearMetadata = function() {
  this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gateway.solo.io.MatchableHttpGateway.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Matcher matcher = 3;
 * @return {?proto.gateway.solo.io.MatchableHttpGateway.Matcher}
 */
proto.gateway.solo.io.MatchableHttpGateway.prototype.getMatcher = function() {
  return /** @type{?proto.gateway.solo.io.MatchableHttpGateway.Matcher} */ (
    jspb.Message.getWrapperField(this, proto.gateway.solo.io.MatchableHttpGateway.Matcher, 3));
};


/** @param {?proto.gateway.solo.io.MatchableHttpGateway.Matcher|undefined} value */
proto.gateway.solo.io.MatchableHttpGateway.prototype.setMatcher = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.gateway.solo.io.MatchableHttpGateway.prototype.clearMatcher = function() {
  this.setMatcher(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gateway.solo.io.MatchableHttpGateway.prototype.hasMatcher = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional HttpGateway http_gateway = 4;
 * @return {?proto.gateway.solo.io.HttpGateway}
 */
proto.gateway.solo.io.MatchableHttpGateway.prototype.getHttpGateway = function() {
  return /** @type{?proto.gateway.solo.io.HttpGateway} */ (
    jspb.Message.getWrapperField(this, proto.gateway.solo.io.HttpGateway, 4));
};


/** @param {?proto.gateway.solo.io.HttpGateway|undefined} value */
proto.gateway.solo.io.MatchableHttpGateway.prototype.setHttpGateway = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.gateway.solo.io.MatchableHttpGateway.prototype.clearHttpGateway = function() {
  this.setHttpGateway(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gateway.solo.io.MatchableHttpGateway.prototype.hasHttpGateway = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gateway.solo.io.HttpGateway = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gateway.solo.io.HttpGateway.repeatedFields_, null);
};
goog.inherits(proto.gateway.solo.io.HttpGateway, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gateway.solo.io.HttpGateway.displayName = 'proto.gateway.solo.io.HttpGateway';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gateway.solo.io.HttpGateway.repeatedFields_ = [1,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gateway.solo.io.HttpGateway.prototype.toObject = function(opt_includeInstance) {
  return proto.gateway.solo.io.HttpGateway.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gateway.solo.io.HttpGateway} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gateway.solo.io.HttpGateway.toObject = function(includeInstance, msg) {
  var f, obj = {
    virtualServicesList: jspb.Message.toObjectList(msg.getVirtualServicesList(),
    github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.toObject, includeInstance),
    virtualServiceSelectorMap: (f = msg.getVirtualServiceSelectorMap()) ? f.toObject(includeInstance, undefined) : [],
    virtualServiceExpressions: (f = msg.getVirtualServiceExpressions()) && proto.gateway.solo.io.VirtualServiceSelectorExpressions.toObject(includeInstance, f),
    virtualServiceNamespacesList: jspb.Message.getRepeatedField(msg, 3),
    options: (f = msg.getOptions()) && github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.HttpListenerOptions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gateway.solo.io.HttpGateway}
 */
proto.gateway.solo.io.HttpGateway.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gateway.solo.io.HttpGateway;
  return proto.gateway.solo.io.HttpGateway.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gateway.solo.io.HttpGateway} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gateway.solo.io.HttpGateway}
 */
proto.gateway.solo.io.HttpGateway.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef;
      reader.readMessage(value,github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.deserializeBinaryFromReader);
      msg.addVirtualServices(value);
      break;
    case 2:
      var value = msg.getVirtualServiceSelectorMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    case 9:
      var value = new proto.gateway.solo.io.VirtualServiceSelectorExpressions;
      reader.readMessage(value,proto.gateway.solo.io.VirtualServiceSelectorExpressions.deserializeBinaryFromReader);
      msg.setVirtualServiceExpressions(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addVirtualServiceNamespaces(value);
      break;
    case 8:
      var value = new github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.HttpListenerOptions;
      reader.readMessage(value,github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.HttpListenerOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gateway.solo.io.HttpGateway.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gateway.solo.io.HttpGateway.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gateway.solo.io.HttpGateway} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gateway.solo.io.HttpGateway.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVirtualServicesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef.serializeBinaryToWriter
    );
  }
  f = message.getVirtualServiceSelectorMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getVirtualServiceExpressions();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.gateway.solo.io.VirtualServiceSelectorExpressions.serializeBinaryToWriter
    );
  }
  f = message.getVirtualServiceNamespacesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.HttpListenerOptions.serializeBinaryToWriter
    );
  }
};


/**
 * repeated core.solo.io.ResourceRef virtual_services = 1;
 * @return {!Array<!proto.core.solo.io.ResourceRef>}
 */
proto.gateway.solo.io.HttpGateway.prototype.getVirtualServicesList = function() {
  return /** @type{!Array<!proto.core.solo.io.ResourceRef>} */ (
    jspb.Message.getRepeatedWrapperField(this, github_com_solo$io_solo$kit_api_v1_ref_pb.ResourceRef, 1));
};


/** @param {!Array<!proto.core.solo.io.ResourceRef>} value */
proto.gateway.solo.io.HttpGateway.prototype.setVirtualServicesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.core.solo.io.ResourceRef=} opt_value
 * @param {number=} opt_index
 * @return {!proto.core.solo.io.ResourceRef}
 */
proto.gateway.solo.io.HttpGateway.prototype.addVirtualServices = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.core.solo.io.ResourceRef, opt_index);
};


proto.gateway.solo.io.HttpGateway.prototype.clearVirtualServicesList = function() {
  this.setVirtualServicesList([]);
};


/**
 * map<string, string> virtual_service_selector = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.gateway.solo.io.HttpGateway.prototype.getVirtualServiceSelectorMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


proto.gateway.solo.io.HttpGateway.prototype.clearVirtualServiceSelectorMap = function() {
  this.getVirtualServiceSelectorMap().clear();
};


/**
 * optional VirtualServiceSelectorExpressions virtual_service_expressions = 9;
 * @return {?proto.gateway.solo.io.VirtualServiceSelectorExpressions}
 */
proto.gateway.solo.io.HttpGateway.prototype.getVirtualServiceExpressions = function() {
  return /** @type{?proto.gateway.solo.io.VirtualServiceSelectorExpressions} */ (
    jspb.Message.getWrapperField(this, proto.gateway.solo.io.VirtualServiceSelectorExpressions, 9));
};


/** @param {?proto.gateway.solo.io.VirtualServiceSelectorExpressions|undefined} value */
proto.gateway.solo.io.HttpGateway.prototype.setVirtualServiceExpressions = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


proto.gateway.solo.io.HttpGateway.prototype.clearVirtualServiceExpressions = function() {
  this.setVirtualServiceExpressions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gateway.solo.io.HttpGateway.prototype.hasVirtualServiceExpressions = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * repeated string virtual_service_namespaces = 3;
 * @return {!Array<string>}
 */
proto.gateway.solo.io.HttpGateway.prototype.getVirtualServiceNamespacesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array<string>} value */
proto.gateway.solo.io.HttpGateway.prototype.setVirtualServiceNamespacesList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.gateway.solo.io.HttpGateway.prototype.addVirtualServiceNamespaces = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.gateway.solo.io.HttpGateway.prototype.clearVirtualServiceNamespacesList = function() {
  this.setVirtualServiceNamespacesList([]);
};


/**
 * optional gloo.solo.io.HttpListenerOptions options = 8;
 * @return {?proto.gloo.solo.io.HttpListenerOptions}
 */
proto.gateway.solo.io.HttpGateway.prototype.getOptions = function() {
  return /** @type{?proto.gloo.solo.io.HttpListenerOptions} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_pb.HttpListenerOptions, 8));
};


/** @param {?proto.gloo.solo.io.HttpListenerOptions|undefined} value */
proto.gateway.solo.io.HttpGateway.prototype.setOptions = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.gateway.solo.io.HttpGateway.prototype.clearOptions = function() {
  this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gateway.solo.io.HttpGateway.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gateway.solo.io.VirtualServiceSelectorExpressions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gateway.solo.io.VirtualServiceSelectorExpressions.repeatedFields_, null);
};
goog.inherits(proto.gateway.solo.io.VirtualServiceSelectorExpressions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gateway.solo.io.VirtualServiceSelectorExpressions.displayName = 'proto.gateway.solo.io.VirtualServiceSelectorExpressions';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gateway.solo.io.VirtualServiceSelectorExpressions.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gateway.solo.io.VirtualServiceSelectorExpressions.prototype.toObject = function(opt_includeInstance) {
  return proto.gateway.solo.io.VirtualServiceSelectorExpressions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gateway.solo.io.VirtualServiceSelectorExpressions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gateway.solo.io.VirtualServiceSelectorExpressions.toObject = function(includeInstance, msg) {
  var f, obj = {
    expressionsList: jspb.Message.toObjectList(msg.getExpressionsList(),
    proto.gateway.solo.io.VirtualServiceSelectorExpressions.Expression.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gateway.solo.io.VirtualServiceSelectorExpressions}
 */
proto.gateway.solo.io.VirtualServiceSelectorExpressions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gateway.solo.io.VirtualServiceSelectorExpressions;
  return proto.gateway.solo.io.VirtualServiceSelectorExpressions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gateway.solo.io.VirtualServiceSelectorExpressions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gateway.solo.io.VirtualServiceSelectorExpressions}
 */
proto.gateway.solo.io.VirtualServiceSelectorExpressions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = new proto.gateway.solo.io.VirtualServiceSelectorExpressions.Expression;
      reader.readMessage(value,proto.gateway.solo.io.VirtualServiceSelectorExpressions.Expression.deserializeBinaryFromReader);
      msg.addExpressions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gateway.solo.io.VirtualServiceSelectorExpressions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gateway.solo.io.VirtualServiceSelectorExpressions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gateway.solo.io.VirtualServiceSelectorExpressions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gateway.solo.io.VirtualServiceSelectorExpressions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExpressionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.gateway.solo.io.VirtualServiceSelectorExpressions.Expression.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gateway.solo.io.VirtualServiceSelectorExpressions.Expression = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gateway.solo.io.VirtualServiceSelectorExpressions.Expression.repeatedFields_, null);
};
goog.inherits(proto.gateway.solo.io.VirtualServiceSelectorExpressions.Expression, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gateway.solo.io.VirtualServiceSelectorExpressions.Expression.displayName = 'proto.gateway.solo.io.VirtualServiceSelectorExpressions.Expression';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gateway.solo.io.VirtualServiceSelectorExpressions.Expression.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gateway.solo.io.VirtualServiceSelectorExpressions.Expression.prototype.toObject = function(opt_includeInstance) {
  return proto.gateway.solo.io.VirtualServiceSelectorExpressions.Expression.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gateway.solo.io.VirtualServiceSelectorExpressions.Expression} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gateway.solo.io.VirtualServiceSelectorExpressions.Expression.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, ""),
    operator: jspb.Message.getFieldWithDefault(msg, 2, 0),
    valuesList: jspb.Message.getRepeatedField(msg, 3)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gateway.solo.io.VirtualServiceSelectorExpressions.Expression}
 */
proto.gateway.solo.io.VirtualServiceSelectorExpressions.Expression.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gateway.solo.io.VirtualServiceSelectorExpressions.Expression;
  return proto.gateway.solo.io.VirtualServiceSelectorExpressions.Expression.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gateway.solo.io.VirtualServiceSelectorExpressions.Expression} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gateway.solo.io.VirtualServiceSelectorExpressions.Expression}
 */
proto.gateway.solo.io.VirtualServiceSelectorExpressions.Expression.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {!proto.gateway.solo.io.VirtualServiceSelectorExpressions.Expression.Operator} */ (reader.readEnum());
      msg.setOperator(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gateway.solo.io.VirtualServiceSelectorExpressions.Expression.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gateway.solo.io.VirtualServiceSelectorExpressions.Expression.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gateway.solo.io.VirtualServiceSelectorExpressions.Expression} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gateway.solo.io.VirtualServiceSelectorExpressions.Expression.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOperator();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.gateway.solo.io.VirtualServiceSelectorExpressions.Expression.Operator = {
  EQUALS: 0,
  DOUBLEEQUALS: 1,
  NOTEQUALS: 2,
  IN: 3,
  NOTIN: 4,
  EXISTS: 5,
  DOESNOTEXIST: 6,
  GREATERTHAN: 7,
  LESSTHAN: 8
};

/**
 * optional string key = 1;
 * @return {string}
 */
proto.gateway.solo.io.VirtualServiceSelectorExpressions.Expression.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.gateway.solo.io.VirtualServiceSelectorExpressions.Expression.prototype.setKey = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Operator operator = 2;
 * @return {!proto.gateway.solo.io.VirtualServiceSelectorExpressions.Expression.Operator}
 */
proto.gateway.solo.io.VirtualServiceSelectorExpressions.Expression.prototype.getOperator = function() {
  return /** @type {!proto.gateway.solo.io.VirtualServiceSelectorExpressions.Expression.Operator} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.gateway.solo.io.VirtualServiceSelectorExpressions.Expression.Operator} value */
proto.gateway.solo.io.VirtualServiceSelectorExpressions.Expression.prototype.setOperator = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * repeated string values = 3;
 * @return {!Array<string>}
 */
proto.gateway.solo.io.VirtualServiceSelectorExpressions.Expression.prototype.getValuesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array<string>} value */
proto.gateway.solo.io.VirtualServiceSelectorExpressions.Expression.prototype.setValuesList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.gateway.solo.io.VirtualServiceSelectorExpressions.Expression.prototype.addValues = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.gateway.solo.io.VirtualServiceSelectorExpressions.Expression.prototype.clearValuesList = function() {
  this.setValuesList([]);
};


/**
 * repeated Expression expressions = 3;
 * @return {!Array<!proto.gateway.solo.io.VirtualServiceSelectorExpressions.Expression>}
 */
proto.gateway.solo.io.VirtualServiceSelectorExpressions.prototype.getExpressionsList = function() {
  return /** @type{!Array<!proto.gateway.solo.io.VirtualServiceSelectorExpressions.Expression>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gateway.solo.io.VirtualServiceSelectorExpressions.Expression, 3));
};


/** @param {!Array<!proto.gateway.solo.io.VirtualServiceSelectorExpressions.Expression>} value */
proto.gateway.solo.io.VirtualServiceSelectorExpressions.prototype.setExpressionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.gateway.solo.io.VirtualServiceSelectorExpressions.Expression=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gateway.solo.io.VirtualServiceSelectorExpressions.Expression}
 */
proto.gateway.solo.io.VirtualServiceSelectorExpressions.prototype.addExpressions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.gateway.solo.io.VirtualServiceSelectorExpressions.Expression, opt_index);
};


proto.gateway.solo.io.VirtualServiceSelectorExpressions.prototype.clearExpressionsList = function() {
  this.setExpressionsList([]);
};


goog.object.extend(exports, proto.gateway.solo.io);
