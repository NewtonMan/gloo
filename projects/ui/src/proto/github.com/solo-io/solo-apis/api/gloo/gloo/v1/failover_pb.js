/* eslint-disable */
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var extproto_ext_pb = require('../../../../../../../extproto/ext_pb.js');
var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
var github_com_solo$io_solo$apis_api_gloo_gloo_v1_ssl_pb = require('../../../../../../../github.com/solo-io/solo-apis/api/gloo/gloo/v1/ssl_pb.js');
var validate_validate_pb = require('../../../../../../../validate/validate_pb.js');
goog.exportSymbol('proto.gloo.solo.io.Failover', null, global);
goog.exportSymbol('proto.gloo.solo.io.Failover.Policy', null, global);
goog.exportSymbol('proto.gloo.solo.io.Failover.PrioritizedLocality', null, global);
goog.exportSymbol('proto.gloo.solo.io.LbEndpoint', null, global);
goog.exportSymbol('proto.gloo.solo.io.LbEndpoint.HealthCheckConfig', null, global);
goog.exportSymbol('proto.gloo.solo.io.Locality', null, global);
goog.exportSymbol('proto.gloo.solo.io.LocalityLbEndpoints', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.Failover = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gloo.solo.io.Failover.repeatedFields_, null);
};
goog.inherits(proto.gloo.solo.io.Failover, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.Failover.displayName = 'proto.gloo.solo.io.Failover';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gloo.solo.io.Failover.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.Failover.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.Failover.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.Failover} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.Failover.toObject = function(includeInstance, msg) {
  var f, obj = {
    prioritizedLocalitiesList: jspb.Message.toObjectList(msg.getPrioritizedLocalitiesList(),
    proto.gloo.solo.io.Failover.PrioritizedLocality.toObject, includeInstance),
    policy: (f = msg.getPolicy()) && proto.gloo.solo.io.Failover.Policy.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.Failover}
 */
proto.gloo.solo.io.Failover.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.Failover;
  return proto.gloo.solo.io.Failover.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.Failover} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.Failover}
 */
proto.gloo.solo.io.Failover.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gloo.solo.io.Failover.PrioritizedLocality;
      reader.readMessage(value,proto.gloo.solo.io.Failover.PrioritizedLocality.deserializeBinaryFromReader);
      msg.addPrioritizedLocalities(value);
      break;
    case 2:
      var value = new proto.gloo.solo.io.Failover.Policy;
      reader.readMessage(value,proto.gloo.solo.io.Failover.Policy.deserializeBinaryFromReader);
      msg.setPolicy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.Failover.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.Failover.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.Failover} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.Failover.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPrioritizedLocalitiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.gloo.solo.io.Failover.PrioritizedLocality.serializeBinaryToWriter
    );
  }
  f = message.getPolicy();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.gloo.solo.io.Failover.Policy.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.Failover.PrioritizedLocality = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gloo.solo.io.Failover.PrioritizedLocality.repeatedFields_, null);
};
goog.inherits(proto.gloo.solo.io.Failover.PrioritizedLocality, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.Failover.PrioritizedLocality.displayName = 'proto.gloo.solo.io.Failover.PrioritizedLocality';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gloo.solo.io.Failover.PrioritizedLocality.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.Failover.PrioritizedLocality.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.Failover.PrioritizedLocality.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.Failover.PrioritizedLocality} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.Failover.PrioritizedLocality.toObject = function(includeInstance, msg) {
  var f, obj = {
    localityEndpointsList: jspb.Message.toObjectList(msg.getLocalityEndpointsList(),
    proto.gloo.solo.io.LocalityLbEndpoints.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.Failover.PrioritizedLocality}
 */
proto.gloo.solo.io.Failover.PrioritizedLocality.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.Failover.PrioritizedLocality;
  return proto.gloo.solo.io.Failover.PrioritizedLocality.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.Failover.PrioritizedLocality} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.Failover.PrioritizedLocality}
 */
proto.gloo.solo.io.Failover.PrioritizedLocality.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new proto.gloo.solo.io.LocalityLbEndpoints;
      reader.readMessage(value,proto.gloo.solo.io.LocalityLbEndpoints.deserializeBinaryFromReader);
      msg.addLocalityEndpoints(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.Failover.PrioritizedLocality.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.Failover.PrioritizedLocality.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.Failover.PrioritizedLocality} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.Failover.PrioritizedLocality.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLocalityEndpointsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.gloo.solo.io.LocalityLbEndpoints.serializeBinaryToWriter
    );
  }
};


/**
 * repeated LocalityLbEndpoints locality_endpoints = 2;
 * @return {!Array<!proto.gloo.solo.io.LocalityLbEndpoints>}
 */
proto.gloo.solo.io.Failover.PrioritizedLocality.prototype.getLocalityEndpointsList = function() {
  return /** @type{!Array<!proto.gloo.solo.io.LocalityLbEndpoints>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gloo.solo.io.LocalityLbEndpoints, 2));
};


/** @param {!Array<!proto.gloo.solo.io.LocalityLbEndpoints>} value */
proto.gloo.solo.io.Failover.PrioritizedLocality.prototype.setLocalityEndpointsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.gloo.solo.io.LocalityLbEndpoints=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gloo.solo.io.LocalityLbEndpoints}
 */
proto.gloo.solo.io.Failover.PrioritizedLocality.prototype.addLocalityEndpoints = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.gloo.solo.io.LocalityLbEndpoints, opt_index);
};


proto.gloo.solo.io.Failover.PrioritizedLocality.prototype.clearLocalityEndpointsList = function() {
  this.setLocalityEndpointsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.Failover.Policy = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gloo.solo.io.Failover.Policy, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.Failover.Policy.displayName = 'proto.gloo.solo.io.Failover.Policy';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.Failover.Policy.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.Failover.Policy.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.Failover.Policy} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.Failover.Policy.toObject = function(includeInstance, msg) {
  var f, obj = {
    overprovisioningFactor: (f = msg.getOverprovisioningFactor()) && google_protobuf_wrappers_pb.UInt32Value.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.Failover.Policy}
 */
proto.gloo.solo.io.Failover.Policy.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.Failover.Policy;
  return proto.gloo.solo.io.Failover.Policy.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.Failover.Policy} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.Failover.Policy}
 */
proto.gloo.solo.io.Failover.Policy.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_wrappers_pb.UInt32Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.UInt32Value.deserializeBinaryFromReader);
      msg.setOverprovisioningFactor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.Failover.Policy.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.Failover.Policy.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.Failover.Policy} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.Failover.Policy.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOverprovisioningFactor();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_wrappers_pb.UInt32Value.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.UInt32Value overprovisioning_factor = 1;
 * @return {?proto.google.protobuf.UInt32Value}
 */
proto.gloo.solo.io.Failover.Policy.prototype.getOverprovisioningFactor = function() {
  return /** @type{?proto.google.protobuf.UInt32Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.UInt32Value, 1));
};


/** @param {?proto.google.protobuf.UInt32Value|undefined} value */
proto.gloo.solo.io.Failover.Policy.prototype.setOverprovisioningFactor = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.gloo.solo.io.Failover.Policy.prototype.clearOverprovisioningFactor = function() {
  this.setOverprovisioningFactor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.Failover.Policy.prototype.hasOverprovisioningFactor = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated PrioritizedLocality prioritized_localities = 1;
 * @return {!Array<!proto.gloo.solo.io.Failover.PrioritizedLocality>}
 */
proto.gloo.solo.io.Failover.prototype.getPrioritizedLocalitiesList = function() {
  return /** @type{!Array<!proto.gloo.solo.io.Failover.PrioritizedLocality>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gloo.solo.io.Failover.PrioritizedLocality, 1));
};


/** @param {!Array<!proto.gloo.solo.io.Failover.PrioritizedLocality>} value */
proto.gloo.solo.io.Failover.prototype.setPrioritizedLocalitiesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.gloo.solo.io.Failover.PrioritizedLocality=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gloo.solo.io.Failover.PrioritizedLocality}
 */
proto.gloo.solo.io.Failover.prototype.addPrioritizedLocalities = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.gloo.solo.io.Failover.PrioritizedLocality, opt_index);
};


proto.gloo.solo.io.Failover.prototype.clearPrioritizedLocalitiesList = function() {
  this.setPrioritizedLocalitiesList([]);
};


/**
 * optional Policy policy = 2;
 * @return {?proto.gloo.solo.io.Failover.Policy}
 */
proto.gloo.solo.io.Failover.prototype.getPolicy = function() {
  return /** @type{?proto.gloo.solo.io.Failover.Policy} */ (
    jspb.Message.getWrapperField(this, proto.gloo.solo.io.Failover.Policy, 2));
};


/** @param {?proto.gloo.solo.io.Failover.Policy|undefined} value */
proto.gloo.solo.io.Failover.prototype.setPolicy = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.gloo.solo.io.Failover.prototype.clearPolicy = function() {
  this.setPolicy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.Failover.prototype.hasPolicy = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.LocalityLbEndpoints = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gloo.solo.io.LocalityLbEndpoints.repeatedFields_, null);
};
goog.inherits(proto.gloo.solo.io.LocalityLbEndpoints, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.LocalityLbEndpoints.displayName = 'proto.gloo.solo.io.LocalityLbEndpoints';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gloo.solo.io.LocalityLbEndpoints.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.LocalityLbEndpoints.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.LocalityLbEndpoints.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.LocalityLbEndpoints} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.LocalityLbEndpoints.toObject = function(includeInstance, msg) {
  var f, obj = {
    locality: (f = msg.getLocality()) && proto.gloo.solo.io.Locality.toObject(includeInstance, f),
    lbEndpointsList: jspb.Message.toObjectList(msg.getLbEndpointsList(),
    proto.gloo.solo.io.LbEndpoint.toObject, includeInstance),
    loadBalancingWeight: (f = msg.getLoadBalancingWeight()) && google_protobuf_wrappers_pb.UInt32Value.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.LocalityLbEndpoints}
 */
proto.gloo.solo.io.LocalityLbEndpoints.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.LocalityLbEndpoints;
  return proto.gloo.solo.io.LocalityLbEndpoints.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.LocalityLbEndpoints} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.LocalityLbEndpoints}
 */
proto.gloo.solo.io.LocalityLbEndpoints.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gloo.solo.io.Locality;
      reader.readMessage(value,proto.gloo.solo.io.Locality.deserializeBinaryFromReader);
      msg.setLocality(value);
      break;
    case 2:
      var value = new proto.gloo.solo.io.LbEndpoint;
      reader.readMessage(value,proto.gloo.solo.io.LbEndpoint.deserializeBinaryFromReader);
      msg.addLbEndpoints(value);
      break;
    case 3:
      var value = new google_protobuf_wrappers_pb.UInt32Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.UInt32Value.deserializeBinaryFromReader);
      msg.setLoadBalancingWeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.LocalityLbEndpoints.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.LocalityLbEndpoints.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.LocalityLbEndpoints} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.LocalityLbEndpoints.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLocality();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.gloo.solo.io.Locality.serializeBinaryToWriter
    );
  }
  f = message.getLbEndpointsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.gloo.solo.io.LbEndpoint.serializeBinaryToWriter
    );
  }
  f = message.getLoadBalancingWeight();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_wrappers_pb.UInt32Value.serializeBinaryToWriter
    );
  }
};


/**
 * optional Locality locality = 1;
 * @return {?proto.gloo.solo.io.Locality}
 */
proto.gloo.solo.io.LocalityLbEndpoints.prototype.getLocality = function() {
  return /** @type{?proto.gloo.solo.io.Locality} */ (
    jspb.Message.getWrapperField(this, proto.gloo.solo.io.Locality, 1));
};


/** @param {?proto.gloo.solo.io.Locality|undefined} value */
proto.gloo.solo.io.LocalityLbEndpoints.prototype.setLocality = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.gloo.solo.io.LocalityLbEndpoints.prototype.clearLocality = function() {
  this.setLocality(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.LocalityLbEndpoints.prototype.hasLocality = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated LbEndpoint lb_endpoints = 2;
 * @return {!Array<!proto.gloo.solo.io.LbEndpoint>}
 */
proto.gloo.solo.io.LocalityLbEndpoints.prototype.getLbEndpointsList = function() {
  return /** @type{!Array<!proto.gloo.solo.io.LbEndpoint>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gloo.solo.io.LbEndpoint, 2));
};


/** @param {!Array<!proto.gloo.solo.io.LbEndpoint>} value */
proto.gloo.solo.io.LocalityLbEndpoints.prototype.setLbEndpointsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.gloo.solo.io.LbEndpoint=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gloo.solo.io.LbEndpoint}
 */
proto.gloo.solo.io.LocalityLbEndpoints.prototype.addLbEndpoints = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.gloo.solo.io.LbEndpoint, opt_index);
};


proto.gloo.solo.io.LocalityLbEndpoints.prototype.clearLbEndpointsList = function() {
  this.setLbEndpointsList([]);
};


/**
 * optional google.protobuf.UInt32Value load_balancing_weight = 3;
 * @return {?proto.google.protobuf.UInt32Value}
 */
proto.gloo.solo.io.LocalityLbEndpoints.prototype.getLoadBalancingWeight = function() {
  return /** @type{?proto.google.protobuf.UInt32Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.UInt32Value, 3));
};


/** @param {?proto.google.protobuf.UInt32Value|undefined} value */
proto.gloo.solo.io.LocalityLbEndpoints.prototype.setLoadBalancingWeight = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.gloo.solo.io.LocalityLbEndpoints.prototype.clearLoadBalancingWeight = function() {
  this.setLoadBalancingWeight(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.LocalityLbEndpoints.prototype.hasLoadBalancingWeight = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.LbEndpoint = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gloo.solo.io.LbEndpoint, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.LbEndpoint.displayName = 'proto.gloo.solo.io.LbEndpoint';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.LbEndpoint.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.LbEndpoint.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.LbEndpoint} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.LbEndpoint.toObject = function(includeInstance, msg) {
  var f, obj = {
    address: jspb.Message.getFieldWithDefault(msg, 1, ""),
    port: jspb.Message.getFieldWithDefault(msg, 2, 0),
    healthCheckConfig: (f = msg.getHealthCheckConfig()) && proto.gloo.solo.io.LbEndpoint.HealthCheckConfig.toObject(includeInstance, f),
    upstreamSslConfig: (f = msg.getUpstreamSslConfig()) && github_com_solo$io_solo$apis_api_gloo_gloo_v1_ssl_pb.UpstreamSslConfig.toObject(includeInstance, f),
    loadBalancingWeight: (f = msg.getLoadBalancingWeight()) && google_protobuf_wrappers_pb.UInt32Value.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.LbEndpoint}
 */
proto.gloo.solo.io.LbEndpoint.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.LbEndpoint;
  return proto.gloo.solo.io.LbEndpoint.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.LbEndpoint} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.LbEndpoint}
 */
proto.gloo.solo.io.LbEndpoint.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPort(value);
      break;
    case 3:
      var value = new proto.gloo.solo.io.LbEndpoint.HealthCheckConfig;
      reader.readMessage(value,proto.gloo.solo.io.LbEndpoint.HealthCheckConfig.deserializeBinaryFromReader);
      msg.setHealthCheckConfig(value);
      break;
    case 4:
      var value = new github_com_solo$io_solo$apis_api_gloo_gloo_v1_ssl_pb.UpstreamSslConfig;
      reader.readMessage(value,github_com_solo$io_solo$apis_api_gloo_gloo_v1_ssl_pb.UpstreamSslConfig.deserializeBinaryFromReader);
      msg.setUpstreamSslConfig(value);
      break;
    case 5:
      var value = new google_protobuf_wrappers_pb.UInt32Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.UInt32Value.deserializeBinaryFromReader);
      msg.setLoadBalancingWeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.LbEndpoint.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.LbEndpoint.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.LbEndpoint} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.LbEndpoint.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPort();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getHealthCheckConfig();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.gloo.solo.io.LbEndpoint.HealthCheckConfig.serializeBinaryToWriter
    );
  }
  f = message.getUpstreamSslConfig();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      github_com_solo$io_solo$apis_api_gloo_gloo_v1_ssl_pb.UpstreamSslConfig.serializeBinaryToWriter
    );
  }
  f = message.getLoadBalancingWeight();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_wrappers_pb.UInt32Value.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.LbEndpoint.HealthCheckConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gloo.solo.io.LbEndpoint.HealthCheckConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.LbEndpoint.HealthCheckConfig.displayName = 'proto.gloo.solo.io.LbEndpoint.HealthCheckConfig';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.LbEndpoint.HealthCheckConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.LbEndpoint.HealthCheckConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.LbEndpoint.HealthCheckConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.LbEndpoint.HealthCheckConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    portValue: jspb.Message.getFieldWithDefault(msg, 1, 0),
    hostname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    path: jspb.Message.getFieldWithDefault(msg, 3, ""),
    method: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.LbEndpoint.HealthCheckConfig}
 */
proto.gloo.solo.io.LbEndpoint.HealthCheckConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.LbEndpoint.HealthCheckConfig;
  return proto.gloo.solo.io.LbEndpoint.HealthCheckConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.LbEndpoint.HealthCheckConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.LbEndpoint.HealthCheckConfig}
 */
proto.gloo.solo.io.LbEndpoint.HealthCheckConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPortValue(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHostname(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMethod(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.LbEndpoint.HealthCheckConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.LbEndpoint.HealthCheckConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.LbEndpoint.HealthCheckConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.LbEndpoint.HealthCheckConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPortValue();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getHostname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMethod();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional uint32 port_value = 1;
 * @return {number}
 */
proto.gloo.solo.io.LbEndpoint.HealthCheckConfig.prototype.getPortValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.gloo.solo.io.LbEndpoint.HealthCheckConfig.prototype.setPortValue = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string hostname = 2;
 * @return {string}
 */
proto.gloo.solo.io.LbEndpoint.HealthCheckConfig.prototype.getHostname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.gloo.solo.io.LbEndpoint.HealthCheckConfig.prototype.setHostname = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string path = 3;
 * @return {string}
 */
proto.gloo.solo.io.LbEndpoint.HealthCheckConfig.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.gloo.solo.io.LbEndpoint.HealthCheckConfig.prototype.setPath = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string method = 4;
 * @return {string}
 */
proto.gloo.solo.io.LbEndpoint.HealthCheckConfig.prototype.getMethod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.gloo.solo.io.LbEndpoint.HealthCheckConfig.prototype.setMethod = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string address = 1;
 * @return {string}
 */
proto.gloo.solo.io.LbEndpoint.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.gloo.solo.io.LbEndpoint.prototype.setAddress = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 port = 2;
 * @return {number}
 */
proto.gloo.solo.io.LbEndpoint.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.gloo.solo.io.LbEndpoint.prototype.setPort = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional HealthCheckConfig health_check_config = 3;
 * @return {?proto.gloo.solo.io.LbEndpoint.HealthCheckConfig}
 */
proto.gloo.solo.io.LbEndpoint.prototype.getHealthCheckConfig = function() {
  return /** @type{?proto.gloo.solo.io.LbEndpoint.HealthCheckConfig} */ (
    jspb.Message.getWrapperField(this, proto.gloo.solo.io.LbEndpoint.HealthCheckConfig, 3));
};


/** @param {?proto.gloo.solo.io.LbEndpoint.HealthCheckConfig|undefined} value */
proto.gloo.solo.io.LbEndpoint.prototype.setHealthCheckConfig = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.gloo.solo.io.LbEndpoint.prototype.clearHealthCheckConfig = function() {
  this.setHealthCheckConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.LbEndpoint.prototype.hasHealthCheckConfig = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional UpstreamSslConfig upstream_ssl_config = 4;
 * @return {?proto.gloo.solo.io.UpstreamSslConfig}
 */
proto.gloo.solo.io.LbEndpoint.prototype.getUpstreamSslConfig = function() {
  return /** @type{?proto.gloo.solo.io.UpstreamSslConfig} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$apis_api_gloo_gloo_v1_ssl_pb.UpstreamSslConfig, 4));
};


/** @param {?proto.gloo.solo.io.UpstreamSslConfig|undefined} value */
proto.gloo.solo.io.LbEndpoint.prototype.setUpstreamSslConfig = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.gloo.solo.io.LbEndpoint.prototype.clearUpstreamSslConfig = function() {
  this.setUpstreamSslConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.LbEndpoint.prototype.hasUpstreamSslConfig = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.UInt32Value load_balancing_weight = 5;
 * @return {?proto.google.protobuf.UInt32Value}
 */
proto.gloo.solo.io.LbEndpoint.prototype.getLoadBalancingWeight = function() {
  return /** @type{?proto.google.protobuf.UInt32Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.UInt32Value, 5));
};


/** @param {?proto.google.protobuf.UInt32Value|undefined} value */
proto.gloo.solo.io.LbEndpoint.prototype.setLoadBalancingWeight = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.gloo.solo.io.LbEndpoint.prototype.clearLoadBalancingWeight = function() {
  this.setLoadBalancingWeight(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gloo.solo.io.LbEndpoint.prototype.hasLoadBalancingWeight = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gloo.solo.io.Locality = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gloo.solo.io.Locality, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gloo.solo.io.Locality.displayName = 'proto.gloo.solo.io.Locality';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gloo.solo.io.Locality.prototype.toObject = function(opt_includeInstance) {
  return proto.gloo.solo.io.Locality.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gloo.solo.io.Locality} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.Locality.toObject = function(includeInstance, msg) {
  var f, obj = {
    region: jspb.Message.getFieldWithDefault(msg, 1, ""),
    zone: jspb.Message.getFieldWithDefault(msg, 2, ""),
    subZone: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gloo.solo.io.Locality}
 */
proto.gloo.solo.io.Locality.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gloo.solo.io.Locality;
  return proto.gloo.solo.io.Locality.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gloo.solo.io.Locality} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gloo.solo.io.Locality}
 */
proto.gloo.solo.io.Locality.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegion(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setZone(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubZone(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gloo.solo.io.Locality.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gloo.solo.io.Locality.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gloo.solo.io.Locality} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gloo.solo.io.Locality.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRegion();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getZone();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSubZone();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string region = 1;
 * @return {string}
 */
proto.gloo.solo.io.Locality.prototype.getRegion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.gloo.solo.io.Locality.prototype.setRegion = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string zone = 2;
 * @return {string}
 */
proto.gloo.solo.io.Locality.prototype.getZone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.gloo.solo.io.Locality.prototype.setZone = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string sub_zone = 3;
 * @return {string}
 */
proto.gloo.solo.io.Locality.prototype.getSubZone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.gloo.solo.io.Locality.prototype.setSubZone = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


goog.object.extend(exports, proto.gloo.solo.io);
