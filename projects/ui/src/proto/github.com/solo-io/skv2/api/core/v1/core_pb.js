/* eslint-disable */
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
var extproto_ext_pb = require('../../../../../../extproto/ext_pb.js');
goog.exportSymbol('proto.core.skv2.solo.io.ClusterObjectRef', null, global);
goog.exportSymbol('proto.core.skv2.solo.io.ObjectRef', null, global);
goog.exportSymbol('proto.core.skv2.solo.io.ObjectRefList', null, global);
goog.exportSymbol('proto.core.skv2.solo.io.ObjectSelector', null, global);
goog.exportSymbol('proto.core.skv2.solo.io.ObjectSelector.Expression', null, global);
goog.exportSymbol('proto.core.skv2.solo.io.ObjectSelector.Expression.Operator', null, global);
goog.exportSymbol('proto.core.skv2.solo.io.Status', null, global);
goog.exportSymbol('proto.core.skv2.solo.io.Status.State', null, global);
goog.exportSymbol('proto.core.skv2.solo.io.TypedClusterObjectRef', null, global);
goog.exportSymbol('proto.core.skv2.solo.io.TypedObjectRef', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.core.skv2.solo.io.ObjectRef = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.core.skv2.solo.io.ObjectRef, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.core.skv2.solo.io.ObjectRef.displayName = 'proto.core.skv2.solo.io.ObjectRef';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.core.skv2.solo.io.ObjectRef.prototype.toObject = function(opt_includeInstance) {
  return proto.core.skv2.solo.io.ObjectRef.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.core.skv2.solo.io.ObjectRef} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.core.skv2.solo.io.ObjectRef.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    namespace: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.core.skv2.solo.io.ObjectRef}
 */
proto.core.skv2.solo.io.ObjectRef.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.core.skv2.solo.io.ObjectRef;
  return proto.core.skv2.solo.io.ObjectRef.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.core.skv2.solo.io.ObjectRef} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.core.skv2.solo.io.ObjectRef}
 */
proto.core.skv2.solo.io.ObjectRef.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.core.skv2.solo.io.ObjectRef.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.core.skv2.solo.io.ObjectRef.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.core.skv2.solo.io.ObjectRef} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.core.skv2.solo.io.ObjectRef.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.core.skv2.solo.io.ObjectRef.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.core.skv2.solo.io.ObjectRef.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string namespace = 2;
 * @return {string}
 */
proto.core.skv2.solo.io.ObjectRef.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.core.skv2.solo.io.ObjectRef.prototype.setNamespace = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.core.skv2.solo.io.ObjectRefList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.core.skv2.solo.io.ObjectRefList.repeatedFields_, null);
};
goog.inherits(proto.core.skv2.solo.io.ObjectRefList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.core.skv2.solo.io.ObjectRefList.displayName = 'proto.core.skv2.solo.io.ObjectRefList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.core.skv2.solo.io.ObjectRefList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.core.skv2.solo.io.ObjectRefList.prototype.toObject = function(opt_includeInstance) {
  return proto.core.skv2.solo.io.ObjectRefList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.core.skv2.solo.io.ObjectRefList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.core.skv2.solo.io.ObjectRefList.toObject = function(includeInstance, msg) {
  var f, obj = {
    refsList: jspb.Message.toObjectList(msg.getRefsList(),
    proto.core.skv2.solo.io.ObjectRef.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.core.skv2.solo.io.ObjectRefList}
 */
proto.core.skv2.solo.io.ObjectRefList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.core.skv2.solo.io.ObjectRefList;
  return proto.core.skv2.solo.io.ObjectRefList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.core.skv2.solo.io.ObjectRefList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.core.skv2.solo.io.ObjectRefList}
 */
proto.core.skv2.solo.io.ObjectRefList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.core.skv2.solo.io.ObjectRef;
      reader.readMessage(value,proto.core.skv2.solo.io.ObjectRef.deserializeBinaryFromReader);
      msg.addRefs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.core.skv2.solo.io.ObjectRefList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.core.skv2.solo.io.ObjectRefList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.core.skv2.solo.io.ObjectRefList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.core.skv2.solo.io.ObjectRefList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRefsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.core.skv2.solo.io.ObjectRef.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ObjectRef refs = 1;
 * @return {!Array<!proto.core.skv2.solo.io.ObjectRef>}
 */
proto.core.skv2.solo.io.ObjectRefList.prototype.getRefsList = function() {
  return /** @type{!Array<!proto.core.skv2.solo.io.ObjectRef>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.core.skv2.solo.io.ObjectRef, 1));
};


/** @param {!Array<!proto.core.skv2.solo.io.ObjectRef>} value */
proto.core.skv2.solo.io.ObjectRefList.prototype.setRefsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.core.skv2.solo.io.ObjectRef=} opt_value
 * @param {number=} opt_index
 * @return {!proto.core.skv2.solo.io.ObjectRef}
 */
proto.core.skv2.solo.io.ObjectRefList.prototype.addRefs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.core.skv2.solo.io.ObjectRef, opt_index);
};


proto.core.skv2.solo.io.ObjectRefList.prototype.clearRefsList = function() {
  this.setRefsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.core.skv2.solo.io.ClusterObjectRef = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.core.skv2.solo.io.ClusterObjectRef, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.core.skv2.solo.io.ClusterObjectRef.displayName = 'proto.core.skv2.solo.io.ClusterObjectRef';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.core.skv2.solo.io.ClusterObjectRef.prototype.toObject = function(opt_includeInstance) {
  return proto.core.skv2.solo.io.ClusterObjectRef.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.core.skv2.solo.io.ClusterObjectRef} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.core.skv2.solo.io.ClusterObjectRef.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    namespace: jspb.Message.getFieldWithDefault(msg, 2, ""),
    clusterName: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.core.skv2.solo.io.ClusterObjectRef}
 */
proto.core.skv2.solo.io.ClusterObjectRef.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.core.skv2.solo.io.ClusterObjectRef;
  return proto.core.skv2.solo.io.ClusterObjectRef.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.core.skv2.solo.io.ClusterObjectRef} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.core.skv2.solo.io.ClusterObjectRef}
 */
proto.core.skv2.solo.io.ClusterObjectRef.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setClusterName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.core.skv2.solo.io.ClusterObjectRef.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.core.skv2.solo.io.ClusterObjectRef.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.core.skv2.solo.io.ClusterObjectRef} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.core.skv2.solo.io.ClusterObjectRef.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getClusterName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.core.skv2.solo.io.ClusterObjectRef.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.core.skv2.solo.io.ClusterObjectRef.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string namespace = 2;
 * @return {string}
 */
proto.core.skv2.solo.io.ClusterObjectRef.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.core.skv2.solo.io.ClusterObjectRef.prototype.setNamespace = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string cluster_name = 3;
 * @return {string}
 */
proto.core.skv2.solo.io.ClusterObjectRef.prototype.getClusterName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.core.skv2.solo.io.ClusterObjectRef.prototype.setClusterName = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.core.skv2.solo.io.TypedObjectRef = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.core.skv2.solo.io.TypedObjectRef, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.core.skv2.solo.io.TypedObjectRef.displayName = 'proto.core.skv2.solo.io.TypedObjectRef';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.core.skv2.solo.io.TypedObjectRef.prototype.toObject = function(opt_includeInstance) {
  return proto.core.skv2.solo.io.TypedObjectRef.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.core.skv2.solo.io.TypedObjectRef} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.core.skv2.solo.io.TypedObjectRef.toObject = function(includeInstance, msg) {
  var f, obj = {
    apiGroup: (f = msg.getApiGroup()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    kind: (f = msg.getKind()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    namespace: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.core.skv2.solo.io.TypedObjectRef}
 */
proto.core.skv2.solo.io.TypedObjectRef.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.core.skv2.solo.io.TypedObjectRef;
  return proto.core.skv2.solo.io.TypedObjectRef.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.core.skv2.solo.io.TypedObjectRef} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.core.skv2.solo.io.TypedObjectRef}
 */
proto.core.skv2.solo.io.TypedObjectRef.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setApiGroup(value);
      break;
    case 2:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setKind(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.core.skv2.solo.io.TypedObjectRef.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.core.skv2.solo.io.TypedObjectRef.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.core.skv2.solo.io.TypedObjectRef} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.core.skv2.solo.io.TypedObjectRef.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApiGroup();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getKind();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional google.protobuf.StringValue api_group = 1;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.core.skv2.solo.io.TypedObjectRef.prototype.getApiGroup = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 1));
};


/** @param {?proto.google.protobuf.StringValue|undefined} value */
proto.core.skv2.solo.io.TypedObjectRef.prototype.setApiGroup = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.core.skv2.solo.io.TypedObjectRef.prototype.clearApiGroup = function() {
  this.setApiGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.core.skv2.solo.io.TypedObjectRef.prototype.hasApiGroup = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.StringValue kind = 2;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.core.skv2.solo.io.TypedObjectRef.prototype.getKind = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 2));
};


/** @param {?proto.google.protobuf.StringValue|undefined} value */
proto.core.skv2.solo.io.TypedObjectRef.prototype.setKind = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.core.skv2.solo.io.TypedObjectRef.prototype.clearKind = function() {
  this.setKind(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.core.skv2.solo.io.TypedObjectRef.prototype.hasKind = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.core.skv2.solo.io.TypedObjectRef.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.core.skv2.solo.io.TypedObjectRef.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string namespace = 4;
 * @return {string}
 */
proto.core.skv2.solo.io.TypedObjectRef.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.core.skv2.solo.io.TypedObjectRef.prototype.setNamespace = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.core.skv2.solo.io.TypedClusterObjectRef = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.core.skv2.solo.io.TypedClusterObjectRef, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.core.skv2.solo.io.TypedClusterObjectRef.displayName = 'proto.core.skv2.solo.io.TypedClusterObjectRef';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.core.skv2.solo.io.TypedClusterObjectRef.prototype.toObject = function(opt_includeInstance) {
  return proto.core.skv2.solo.io.TypedClusterObjectRef.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.core.skv2.solo.io.TypedClusterObjectRef} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.core.skv2.solo.io.TypedClusterObjectRef.toObject = function(includeInstance, msg) {
  var f, obj = {
    apiGroup: (f = msg.getApiGroup()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    kind: (f = msg.getKind()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    namespace: jspb.Message.getFieldWithDefault(msg, 4, ""),
    clusterName: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.core.skv2.solo.io.TypedClusterObjectRef}
 */
proto.core.skv2.solo.io.TypedClusterObjectRef.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.core.skv2.solo.io.TypedClusterObjectRef;
  return proto.core.skv2.solo.io.TypedClusterObjectRef.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.core.skv2.solo.io.TypedClusterObjectRef} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.core.skv2.solo.io.TypedClusterObjectRef}
 */
proto.core.skv2.solo.io.TypedClusterObjectRef.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setApiGroup(value);
      break;
    case 2:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setKind(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setClusterName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.core.skv2.solo.io.TypedClusterObjectRef.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.core.skv2.solo.io.TypedClusterObjectRef.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.core.skv2.solo.io.TypedClusterObjectRef} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.core.skv2.solo.io.TypedClusterObjectRef.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApiGroup();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getKind();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getClusterName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional google.protobuf.StringValue api_group = 1;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.core.skv2.solo.io.TypedClusterObjectRef.prototype.getApiGroup = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 1));
};


/** @param {?proto.google.protobuf.StringValue|undefined} value */
proto.core.skv2.solo.io.TypedClusterObjectRef.prototype.setApiGroup = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.core.skv2.solo.io.TypedClusterObjectRef.prototype.clearApiGroup = function() {
  this.setApiGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.core.skv2.solo.io.TypedClusterObjectRef.prototype.hasApiGroup = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.StringValue kind = 2;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.core.skv2.solo.io.TypedClusterObjectRef.prototype.getKind = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 2));
};


/** @param {?proto.google.protobuf.StringValue|undefined} value */
proto.core.skv2.solo.io.TypedClusterObjectRef.prototype.setKind = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.core.skv2.solo.io.TypedClusterObjectRef.prototype.clearKind = function() {
  this.setKind(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.core.skv2.solo.io.TypedClusterObjectRef.prototype.hasKind = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.core.skv2.solo.io.TypedClusterObjectRef.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.core.skv2.solo.io.TypedClusterObjectRef.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string namespace = 4;
 * @return {string}
 */
proto.core.skv2.solo.io.TypedClusterObjectRef.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.core.skv2.solo.io.TypedClusterObjectRef.prototype.setNamespace = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string cluster_name = 5;
 * @return {string}
 */
proto.core.skv2.solo.io.TypedClusterObjectRef.prototype.getClusterName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.core.skv2.solo.io.TypedClusterObjectRef.prototype.setClusterName = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.core.skv2.solo.io.Status = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.core.skv2.solo.io.Status, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.core.skv2.solo.io.Status.displayName = 'proto.core.skv2.solo.io.Status';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.core.skv2.solo.io.Status.prototype.toObject = function(opt_includeInstance) {
  return proto.core.skv2.solo.io.Status.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.core.skv2.solo.io.Status} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.core.skv2.solo.io.Status.toObject = function(includeInstance, msg) {
  var f, obj = {
    state: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    observedGeneration: jspb.Message.getFieldWithDefault(msg, 3, 0),
    processingTime: (f = msg.getProcessingTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    owner: (f = msg.getOwner()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.core.skv2.solo.io.Status}
 */
proto.core.skv2.solo.io.Status.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.core.skv2.solo.io.Status;
  return proto.core.skv2.solo.io.Status.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.core.skv2.solo.io.Status} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.core.skv2.solo.io.Status}
 */
proto.core.skv2.solo.io.Status.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.core.skv2.solo.io.Status.State} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setObservedGeneration(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setProcessingTime(value);
      break;
    case 5:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setOwner(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.core.skv2.solo.io.Status.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.core.skv2.solo.io.Status.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.core.skv2.solo.io.Status} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.core.skv2.solo.io.Status.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getObservedGeneration();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getProcessingTime();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getOwner();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.core.skv2.solo.io.Status.State = {
  PENDING: 0,
  PROCESSING: 1,
  INVALID: 2,
  FAILED: 3,
  ACCEPTED: 4
};

/**
 * optional State state = 1;
 * @return {!proto.core.skv2.solo.io.Status.State}
 */
proto.core.skv2.solo.io.Status.prototype.getState = function() {
  return /** @type {!proto.core.skv2.solo.io.Status.State} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.core.skv2.solo.io.Status.State} value */
proto.core.skv2.solo.io.Status.prototype.setState = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.core.skv2.solo.io.Status.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.core.skv2.solo.io.Status.prototype.setMessage = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 observed_generation = 3;
 * @return {number}
 */
proto.core.skv2.solo.io.Status.prototype.getObservedGeneration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.core.skv2.solo.io.Status.prototype.setObservedGeneration = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional google.protobuf.Timestamp processing_time = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.core.skv2.solo.io.Status.prototype.getProcessingTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.core.skv2.solo.io.Status.prototype.setProcessingTime = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.core.skv2.solo.io.Status.prototype.clearProcessingTime = function() {
  this.setProcessingTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.core.skv2.solo.io.Status.prototype.hasProcessingTime = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.StringValue owner = 5;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.core.skv2.solo.io.Status.prototype.getOwner = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 5));
};


/** @param {?proto.google.protobuf.StringValue|undefined} value */
proto.core.skv2.solo.io.Status.prototype.setOwner = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.core.skv2.solo.io.Status.prototype.clearOwner = function() {
  this.setOwner(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.core.skv2.solo.io.Status.prototype.hasOwner = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.core.skv2.solo.io.ObjectSelector = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.core.skv2.solo.io.ObjectSelector.repeatedFields_, null);
};
goog.inherits(proto.core.skv2.solo.io.ObjectSelector, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.core.skv2.solo.io.ObjectSelector.displayName = 'proto.core.skv2.solo.io.ObjectSelector';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.core.skv2.solo.io.ObjectSelector.repeatedFields_ = [1,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.core.skv2.solo.io.ObjectSelector.prototype.toObject = function(opt_includeInstance) {
  return proto.core.skv2.solo.io.ObjectSelector.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.core.skv2.solo.io.ObjectSelector} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.core.skv2.solo.io.ObjectSelector.toObject = function(includeInstance, msg) {
  var f, obj = {
    namespacesList: jspb.Message.getRepeatedField(msg, 1),
    labelsMap: (f = msg.getLabelsMap()) ? f.toObject(includeInstance, undefined) : [],
    expressionsList: jspb.Message.toObjectList(msg.getExpressionsList(),
    proto.core.skv2.solo.io.ObjectSelector.Expression.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.core.skv2.solo.io.ObjectSelector}
 */
proto.core.skv2.solo.io.ObjectSelector.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.core.skv2.solo.io.ObjectSelector;
  return proto.core.skv2.solo.io.ObjectSelector.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.core.skv2.solo.io.ObjectSelector} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.core.skv2.solo.io.ObjectSelector}
 */
proto.core.skv2.solo.io.ObjectSelector.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addNamespaces(value);
      break;
    case 2:
      var value = msg.getLabelsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    case 3:
      var value = new proto.core.skv2.solo.io.ObjectSelector.Expression;
      reader.readMessage(value,proto.core.skv2.solo.io.ObjectSelector.Expression.deserializeBinaryFromReader);
      msg.addExpressions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.core.skv2.solo.io.ObjectSelector.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.core.skv2.solo.io.ObjectSelector.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.core.skv2.solo.io.ObjectSelector} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.core.skv2.solo.io.ObjectSelector.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNamespacesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getLabelsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getExpressionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.core.skv2.solo.io.ObjectSelector.Expression.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.core.skv2.solo.io.ObjectSelector.Expression = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.core.skv2.solo.io.ObjectSelector.Expression.repeatedFields_, null);
};
goog.inherits(proto.core.skv2.solo.io.ObjectSelector.Expression, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.core.skv2.solo.io.ObjectSelector.Expression.displayName = 'proto.core.skv2.solo.io.ObjectSelector.Expression';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.core.skv2.solo.io.ObjectSelector.Expression.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.core.skv2.solo.io.ObjectSelector.Expression.prototype.toObject = function(opt_includeInstance) {
  return proto.core.skv2.solo.io.ObjectSelector.Expression.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.core.skv2.solo.io.ObjectSelector.Expression} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.core.skv2.solo.io.ObjectSelector.Expression.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, ""),
    operator: jspb.Message.getFieldWithDefault(msg, 2, 0),
    valuesList: jspb.Message.getRepeatedField(msg, 3)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.core.skv2.solo.io.ObjectSelector.Expression}
 */
proto.core.skv2.solo.io.ObjectSelector.Expression.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.core.skv2.solo.io.ObjectSelector.Expression;
  return proto.core.skv2.solo.io.ObjectSelector.Expression.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.core.skv2.solo.io.ObjectSelector.Expression} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.core.skv2.solo.io.ObjectSelector.Expression}
 */
proto.core.skv2.solo.io.ObjectSelector.Expression.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {!proto.core.skv2.solo.io.ObjectSelector.Expression.Operator} */ (reader.readEnum());
      msg.setOperator(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.core.skv2.solo.io.ObjectSelector.Expression.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.core.skv2.solo.io.ObjectSelector.Expression.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.core.skv2.solo.io.ObjectSelector.Expression} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.core.skv2.solo.io.ObjectSelector.Expression.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOperator();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.core.skv2.solo.io.ObjectSelector.Expression.Operator = {
  EQUALS: 0,
  DOUBLEEQUALS: 1,
  NOTEQUALS: 2,
  IN: 3,
  NOTIN: 4,
  EXISTS: 5,
  DOESNOTEXIST: 6,
  GREATERTHAN: 7,
  LESSTHAN: 8
};

/**
 * optional string key = 1;
 * @return {string}
 */
proto.core.skv2.solo.io.ObjectSelector.Expression.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.core.skv2.solo.io.ObjectSelector.Expression.prototype.setKey = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Operator operator = 2;
 * @return {!proto.core.skv2.solo.io.ObjectSelector.Expression.Operator}
 */
proto.core.skv2.solo.io.ObjectSelector.Expression.prototype.getOperator = function() {
  return /** @type {!proto.core.skv2.solo.io.ObjectSelector.Expression.Operator} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.core.skv2.solo.io.ObjectSelector.Expression.Operator} value */
proto.core.skv2.solo.io.ObjectSelector.Expression.prototype.setOperator = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * repeated string values = 3;
 * @return {!Array<string>}
 */
proto.core.skv2.solo.io.ObjectSelector.Expression.prototype.getValuesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array<string>} value */
proto.core.skv2.solo.io.ObjectSelector.Expression.prototype.setValuesList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.core.skv2.solo.io.ObjectSelector.Expression.prototype.addValues = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.core.skv2.solo.io.ObjectSelector.Expression.prototype.clearValuesList = function() {
  this.setValuesList([]);
};


/**
 * repeated string namespaces = 1;
 * @return {!Array<string>}
 */
proto.core.skv2.solo.io.ObjectSelector.prototype.getNamespacesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array<string>} value */
proto.core.skv2.solo.io.ObjectSelector.prototype.setNamespacesList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.core.skv2.solo.io.ObjectSelector.prototype.addNamespaces = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.core.skv2.solo.io.ObjectSelector.prototype.clearNamespacesList = function() {
  this.setNamespacesList([]);
};


/**
 * map<string, string> labels = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.core.skv2.solo.io.ObjectSelector.prototype.getLabelsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


proto.core.skv2.solo.io.ObjectSelector.prototype.clearLabelsMap = function() {
  this.getLabelsMap().clear();
};


/**
 * repeated Expression expressions = 3;
 * @return {!Array<!proto.core.skv2.solo.io.ObjectSelector.Expression>}
 */
proto.core.skv2.solo.io.ObjectSelector.prototype.getExpressionsList = function() {
  return /** @type{!Array<!proto.core.skv2.solo.io.ObjectSelector.Expression>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.core.skv2.solo.io.ObjectSelector.Expression, 3));
};


/** @param {!Array<!proto.core.skv2.solo.io.ObjectSelector.Expression>} value */
proto.core.skv2.solo.io.ObjectSelector.prototype.setExpressionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.core.skv2.solo.io.ObjectSelector.Expression=} opt_value
 * @param {number=} opt_index
 * @return {!proto.core.skv2.solo.io.ObjectSelector.Expression}
 */
proto.core.skv2.solo.io.ObjectSelector.prototype.addExpressions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.core.skv2.solo.io.ObjectSelector.Expression, opt_index);
};


proto.core.skv2.solo.io.ObjectSelector.prototype.clearExpressionsList = function() {
  this.setExpressionsList([]);
};


goog.object.extend(exports, proto.core.skv2.solo.io);
