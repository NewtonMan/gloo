/* eslint-disable */
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var extproto_ext_pb = require('../../../../../../../../extproto/ext_pb.js');
var github_com_solo$io_solo$apis_api_rate$limiter_v1alpha1_ratelimit_pb = require('../../../../../../../../github.com/solo-io/solo-apis/api/rate-limiter/v1alpha1/ratelimit_pb.js');
var github_com_solo$io_skv2_api_core_v1_core_pb = require('../../../../../../../../github.com/solo-io/skv2/api/core/v1/core_pb.js');
var github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb = require('../../../../../../../../github.com/solo-io/solo-projects/projects/apiserver/api/rpc.edge.gloo/v1/common_pb.js');
goog.exportSymbol('proto.rpc.edge.gloo.solo.io.GetRateLimitConfigYamlRequest', null, global);
goog.exportSymbol('proto.rpc.edge.gloo.solo.io.GetRateLimitConfigYamlResponse', null, global);
goog.exportSymbol('proto.rpc.edge.gloo.solo.io.ListRateLimitConfigsRequest', null, global);
goog.exportSymbol('proto.rpc.edge.gloo.solo.io.ListRateLimitConfigsResponse', null, global);
goog.exportSymbol('proto.rpc.edge.gloo.solo.io.RateLimitConfig', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rpc.edge.gloo.solo.io.RateLimitConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rpc.edge.gloo.solo.io.RateLimitConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.rpc.edge.gloo.solo.io.RateLimitConfig.displayName = 'proto.rpc.edge.gloo.solo.io.RateLimitConfig';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rpc.edge.gloo.solo.io.RateLimitConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.rpc.edge.gloo.solo.io.RateLimitConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rpc.edge.gloo.solo.io.RateLimitConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.RateLimitConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.ObjectMeta.toObject(includeInstance, f),
    spec: (f = msg.getSpec()) && github_com_solo$io_solo$apis_api_rate$limiter_v1alpha1_ratelimit_pb.RateLimitConfigSpec.toObject(includeInstance, f),
    status: (f = msg.getStatus()) && github_com_solo$io_solo$apis_api_rate$limiter_v1alpha1_ratelimit_pb.RateLimitConfigStatus.toObject(includeInstance, f),
    glooInstance: (f = msg.getGlooInstance()) && github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rpc.edge.gloo.solo.io.RateLimitConfig}
 */
proto.rpc.edge.gloo.solo.io.RateLimitConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rpc.edge.gloo.solo.io.RateLimitConfig;
  return proto.rpc.edge.gloo.solo.io.RateLimitConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rpc.edge.gloo.solo.io.RateLimitConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rpc.edge.gloo.solo.io.RateLimitConfig}
 */
proto.rpc.edge.gloo.solo.io.RateLimitConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.ObjectMeta;
      reader.readMessage(value,github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.ObjectMeta.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = new github_com_solo$io_solo$apis_api_rate$limiter_v1alpha1_ratelimit_pb.RateLimitConfigSpec;
      reader.readMessage(value,github_com_solo$io_solo$apis_api_rate$limiter_v1alpha1_ratelimit_pb.RateLimitConfigSpec.deserializeBinaryFromReader);
      msg.setSpec(value);
      break;
    case 3:
      var value = new github_com_solo$io_solo$apis_api_rate$limiter_v1alpha1_ratelimit_pb.RateLimitConfigStatus;
      reader.readMessage(value,github_com_solo$io_solo$apis_api_rate$limiter_v1alpha1_ratelimit_pb.RateLimitConfigStatus.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 4:
      var value = new github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef;
      reader.readMessage(value,github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef.deserializeBinaryFromReader);
      msg.setGlooInstance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rpc.edge.gloo.solo.io.RateLimitConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rpc.edge.gloo.solo.io.RateLimitConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rpc.edge.gloo.solo.io.RateLimitConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.RateLimitConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.ObjectMeta.serializeBinaryToWriter
    );
  }
  f = message.getSpec();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      github_com_solo$io_solo$apis_api_rate$limiter_v1alpha1_ratelimit_pb.RateLimitConfigSpec.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      github_com_solo$io_solo$apis_api_rate$limiter_v1alpha1_ratelimit_pb.RateLimitConfigStatus.serializeBinaryToWriter
    );
  }
  f = message.getGlooInstance();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef.serializeBinaryToWriter
    );
  }
};


/**
 * optional ObjectMeta metadata = 1;
 * @return {?proto.rpc.edge.gloo.solo.io.ObjectMeta}
 */
proto.rpc.edge.gloo.solo.io.RateLimitConfig.prototype.getMetadata = function() {
  return /** @type{?proto.rpc.edge.gloo.solo.io.ObjectMeta} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.ObjectMeta, 1));
};


/** @param {?proto.rpc.edge.gloo.solo.io.ObjectMeta|undefined} value */
proto.rpc.edge.gloo.solo.io.RateLimitConfig.prototype.setMetadata = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.rpc.edge.gloo.solo.io.RateLimitConfig.prototype.clearMetadata = function() {
  this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rpc.edge.gloo.solo.io.RateLimitConfig.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ratelimit.api.solo.io.RateLimitConfigSpec spec = 2;
 * @return {?proto.ratelimit.api.solo.io.RateLimitConfigSpec}
 */
proto.rpc.edge.gloo.solo.io.RateLimitConfig.prototype.getSpec = function() {
  return /** @type{?proto.ratelimit.api.solo.io.RateLimitConfigSpec} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$apis_api_rate$limiter_v1alpha1_ratelimit_pb.RateLimitConfigSpec, 2));
};


/** @param {?proto.ratelimit.api.solo.io.RateLimitConfigSpec|undefined} value */
proto.rpc.edge.gloo.solo.io.RateLimitConfig.prototype.setSpec = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.rpc.edge.gloo.solo.io.RateLimitConfig.prototype.clearSpec = function() {
  this.setSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rpc.edge.gloo.solo.io.RateLimitConfig.prototype.hasSpec = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ratelimit.api.solo.io.RateLimitConfigStatus status = 3;
 * @return {?proto.ratelimit.api.solo.io.RateLimitConfigStatus}
 */
proto.rpc.edge.gloo.solo.io.RateLimitConfig.prototype.getStatus = function() {
  return /** @type{?proto.ratelimit.api.solo.io.RateLimitConfigStatus} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$apis_api_rate$limiter_v1alpha1_ratelimit_pb.RateLimitConfigStatus, 3));
};


/** @param {?proto.ratelimit.api.solo.io.RateLimitConfigStatus|undefined} value */
proto.rpc.edge.gloo.solo.io.RateLimitConfig.prototype.setStatus = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.rpc.edge.gloo.solo.io.RateLimitConfig.prototype.clearStatus = function() {
  this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rpc.edge.gloo.solo.io.RateLimitConfig.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional core.skv2.solo.io.ObjectRef gloo_instance = 4;
 * @return {?proto.core.skv2.solo.io.ObjectRef}
 */
proto.rpc.edge.gloo.solo.io.RateLimitConfig.prototype.getGlooInstance = function() {
  return /** @type{?proto.core.skv2.solo.io.ObjectRef} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef, 4));
};


/** @param {?proto.core.skv2.solo.io.ObjectRef|undefined} value */
proto.rpc.edge.gloo.solo.io.RateLimitConfig.prototype.setGlooInstance = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.rpc.edge.gloo.solo.io.RateLimitConfig.prototype.clearGlooInstance = function() {
  this.setGlooInstance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rpc.edge.gloo.solo.io.RateLimitConfig.prototype.hasGlooInstance = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rpc.edge.gloo.solo.io.ListRateLimitConfigsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rpc.edge.gloo.solo.io.ListRateLimitConfigsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.rpc.edge.gloo.solo.io.ListRateLimitConfigsRequest.displayName = 'proto.rpc.edge.gloo.solo.io.ListRateLimitConfigsRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rpc.edge.gloo.solo.io.ListRateLimitConfigsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.rpc.edge.gloo.solo.io.ListRateLimitConfigsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rpc.edge.gloo.solo.io.ListRateLimitConfigsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.ListRateLimitConfigsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    glooInstanceRef: (f = msg.getGlooInstanceRef()) && github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rpc.edge.gloo.solo.io.ListRateLimitConfigsRequest}
 */
proto.rpc.edge.gloo.solo.io.ListRateLimitConfigsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rpc.edge.gloo.solo.io.ListRateLimitConfigsRequest;
  return proto.rpc.edge.gloo.solo.io.ListRateLimitConfigsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rpc.edge.gloo.solo.io.ListRateLimitConfigsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rpc.edge.gloo.solo.io.ListRateLimitConfigsRequest}
 */
proto.rpc.edge.gloo.solo.io.ListRateLimitConfigsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef;
      reader.readMessage(value,github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef.deserializeBinaryFromReader);
      msg.setGlooInstanceRef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rpc.edge.gloo.solo.io.ListRateLimitConfigsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rpc.edge.gloo.solo.io.ListRateLimitConfigsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rpc.edge.gloo.solo.io.ListRateLimitConfigsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.ListRateLimitConfigsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGlooInstanceRef();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef.serializeBinaryToWriter
    );
  }
};


/**
 * optional core.skv2.solo.io.ObjectRef gloo_instance_ref = 1;
 * @return {?proto.core.skv2.solo.io.ObjectRef}
 */
proto.rpc.edge.gloo.solo.io.ListRateLimitConfigsRequest.prototype.getGlooInstanceRef = function() {
  return /** @type{?proto.core.skv2.solo.io.ObjectRef} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef, 1));
};


/** @param {?proto.core.skv2.solo.io.ObjectRef|undefined} value */
proto.rpc.edge.gloo.solo.io.ListRateLimitConfigsRequest.prototype.setGlooInstanceRef = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.rpc.edge.gloo.solo.io.ListRateLimitConfigsRequest.prototype.clearGlooInstanceRef = function() {
  this.setGlooInstanceRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rpc.edge.gloo.solo.io.ListRateLimitConfigsRequest.prototype.hasGlooInstanceRef = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rpc.edge.gloo.solo.io.ListRateLimitConfigsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rpc.edge.gloo.solo.io.ListRateLimitConfigsResponse.repeatedFields_, null);
};
goog.inherits(proto.rpc.edge.gloo.solo.io.ListRateLimitConfigsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.rpc.edge.gloo.solo.io.ListRateLimitConfigsResponse.displayName = 'proto.rpc.edge.gloo.solo.io.ListRateLimitConfigsResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rpc.edge.gloo.solo.io.ListRateLimitConfigsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rpc.edge.gloo.solo.io.ListRateLimitConfigsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.rpc.edge.gloo.solo.io.ListRateLimitConfigsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rpc.edge.gloo.solo.io.ListRateLimitConfigsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.ListRateLimitConfigsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    rateLimitConfigsList: jspb.Message.toObjectList(msg.getRateLimitConfigsList(),
    proto.rpc.edge.gloo.solo.io.RateLimitConfig.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rpc.edge.gloo.solo.io.ListRateLimitConfigsResponse}
 */
proto.rpc.edge.gloo.solo.io.ListRateLimitConfigsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rpc.edge.gloo.solo.io.ListRateLimitConfigsResponse;
  return proto.rpc.edge.gloo.solo.io.ListRateLimitConfigsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rpc.edge.gloo.solo.io.ListRateLimitConfigsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rpc.edge.gloo.solo.io.ListRateLimitConfigsResponse}
 */
proto.rpc.edge.gloo.solo.io.ListRateLimitConfigsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rpc.edge.gloo.solo.io.RateLimitConfig;
      reader.readMessage(value,proto.rpc.edge.gloo.solo.io.RateLimitConfig.deserializeBinaryFromReader);
      msg.addRateLimitConfigs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rpc.edge.gloo.solo.io.ListRateLimitConfigsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rpc.edge.gloo.solo.io.ListRateLimitConfigsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rpc.edge.gloo.solo.io.ListRateLimitConfigsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.ListRateLimitConfigsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRateLimitConfigsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.rpc.edge.gloo.solo.io.RateLimitConfig.serializeBinaryToWriter
    );
  }
};


/**
 * repeated RateLimitConfig rate_limit_configs = 1;
 * @return {!Array<!proto.rpc.edge.gloo.solo.io.RateLimitConfig>}
 */
proto.rpc.edge.gloo.solo.io.ListRateLimitConfigsResponse.prototype.getRateLimitConfigsList = function() {
  return /** @type{!Array<!proto.rpc.edge.gloo.solo.io.RateLimitConfig>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.rpc.edge.gloo.solo.io.RateLimitConfig, 1));
};


/** @param {!Array<!proto.rpc.edge.gloo.solo.io.RateLimitConfig>} value */
proto.rpc.edge.gloo.solo.io.ListRateLimitConfigsResponse.prototype.setRateLimitConfigsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.rpc.edge.gloo.solo.io.RateLimitConfig=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rpc.edge.gloo.solo.io.RateLimitConfig}
 */
proto.rpc.edge.gloo.solo.io.ListRateLimitConfigsResponse.prototype.addRateLimitConfigs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.rpc.edge.gloo.solo.io.RateLimitConfig, opt_index);
};


proto.rpc.edge.gloo.solo.io.ListRateLimitConfigsResponse.prototype.clearRateLimitConfigsList = function() {
  this.setRateLimitConfigsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rpc.edge.gloo.solo.io.GetRateLimitConfigYamlRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rpc.edge.gloo.solo.io.GetRateLimitConfigYamlRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.rpc.edge.gloo.solo.io.GetRateLimitConfigYamlRequest.displayName = 'proto.rpc.edge.gloo.solo.io.GetRateLimitConfigYamlRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rpc.edge.gloo.solo.io.GetRateLimitConfigYamlRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.rpc.edge.gloo.solo.io.GetRateLimitConfigYamlRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rpc.edge.gloo.solo.io.GetRateLimitConfigYamlRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.GetRateLimitConfigYamlRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    rateLimitConfigRef: (f = msg.getRateLimitConfigRef()) && github_com_solo$io_skv2_api_core_v1_core_pb.ClusterObjectRef.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rpc.edge.gloo.solo.io.GetRateLimitConfigYamlRequest}
 */
proto.rpc.edge.gloo.solo.io.GetRateLimitConfigYamlRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rpc.edge.gloo.solo.io.GetRateLimitConfigYamlRequest;
  return proto.rpc.edge.gloo.solo.io.GetRateLimitConfigYamlRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rpc.edge.gloo.solo.io.GetRateLimitConfigYamlRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rpc.edge.gloo.solo.io.GetRateLimitConfigYamlRequest}
 */
proto.rpc.edge.gloo.solo.io.GetRateLimitConfigYamlRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_skv2_api_core_v1_core_pb.ClusterObjectRef;
      reader.readMessage(value,github_com_solo$io_skv2_api_core_v1_core_pb.ClusterObjectRef.deserializeBinaryFromReader);
      msg.setRateLimitConfigRef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rpc.edge.gloo.solo.io.GetRateLimitConfigYamlRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rpc.edge.gloo.solo.io.GetRateLimitConfigYamlRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rpc.edge.gloo.solo.io.GetRateLimitConfigYamlRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.GetRateLimitConfigYamlRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRateLimitConfigRef();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_skv2_api_core_v1_core_pb.ClusterObjectRef.serializeBinaryToWriter
    );
  }
};


/**
 * optional core.skv2.solo.io.ClusterObjectRef rate_limit_config_ref = 1;
 * @return {?proto.core.skv2.solo.io.ClusterObjectRef}
 */
proto.rpc.edge.gloo.solo.io.GetRateLimitConfigYamlRequest.prototype.getRateLimitConfigRef = function() {
  return /** @type{?proto.core.skv2.solo.io.ClusterObjectRef} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_skv2_api_core_v1_core_pb.ClusterObjectRef, 1));
};


/** @param {?proto.core.skv2.solo.io.ClusterObjectRef|undefined} value */
proto.rpc.edge.gloo.solo.io.GetRateLimitConfigYamlRequest.prototype.setRateLimitConfigRef = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.rpc.edge.gloo.solo.io.GetRateLimitConfigYamlRequest.prototype.clearRateLimitConfigRef = function() {
  this.setRateLimitConfigRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rpc.edge.gloo.solo.io.GetRateLimitConfigYamlRequest.prototype.hasRateLimitConfigRef = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rpc.edge.gloo.solo.io.GetRateLimitConfigYamlResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rpc.edge.gloo.solo.io.GetRateLimitConfigYamlResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.rpc.edge.gloo.solo.io.GetRateLimitConfigYamlResponse.displayName = 'proto.rpc.edge.gloo.solo.io.GetRateLimitConfigYamlResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rpc.edge.gloo.solo.io.GetRateLimitConfigYamlResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.rpc.edge.gloo.solo.io.GetRateLimitConfigYamlResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rpc.edge.gloo.solo.io.GetRateLimitConfigYamlResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.GetRateLimitConfigYamlResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    yamlData: (f = msg.getYamlData()) && github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.ResourceYaml.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rpc.edge.gloo.solo.io.GetRateLimitConfigYamlResponse}
 */
proto.rpc.edge.gloo.solo.io.GetRateLimitConfigYamlResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rpc.edge.gloo.solo.io.GetRateLimitConfigYamlResponse;
  return proto.rpc.edge.gloo.solo.io.GetRateLimitConfigYamlResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rpc.edge.gloo.solo.io.GetRateLimitConfigYamlResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rpc.edge.gloo.solo.io.GetRateLimitConfigYamlResponse}
 */
proto.rpc.edge.gloo.solo.io.GetRateLimitConfigYamlResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.ResourceYaml;
      reader.readMessage(value,github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.ResourceYaml.deserializeBinaryFromReader);
      msg.setYamlData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rpc.edge.gloo.solo.io.GetRateLimitConfigYamlResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rpc.edge.gloo.solo.io.GetRateLimitConfigYamlResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rpc.edge.gloo.solo.io.GetRateLimitConfigYamlResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.GetRateLimitConfigYamlResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getYamlData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.ResourceYaml.serializeBinaryToWriter
    );
  }
};


/**
 * optional ResourceYaml yaml_data = 1;
 * @return {?proto.rpc.edge.gloo.solo.io.ResourceYaml}
 */
proto.rpc.edge.gloo.solo.io.GetRateLimitConfigYamlResponse.prototype.getYamlData = function() {
  return /** @type{?proto.rpc.edge.gloo.solo.io.ResourceYaml} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.ResourceYaml, 1));
};


/** @param {?proto.rpc.edge.gloo.solo.io.ResourceYaml|undefined} value */
proto.rpc.edge.gloo.solo.io.GetRateLimitConfigYamlResponse.prototype.setYamlData = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.rpc.edge.gloo.solo.io.GetRateLimitConfigYamlResponse.prototype.clearYamlData = function() {
  this.setYamlData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rpc.edge.gloo.solo.io.GetRateLimitConfigYamlResponse.prototype.hasYamlData = function() {
  return jspb.Message.getField(this, 1) != null;
};


goog.object.extend(exports, proto.rpc.edge.gloo.solo.io);
