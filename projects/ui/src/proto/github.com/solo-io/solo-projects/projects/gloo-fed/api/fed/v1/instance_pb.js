/* eslint-disable */
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var github_com_solo$io_skv2_api_core_v1_core_pb = require('../../../../../../../../github.com/solo-io/skv2/api/core/v1/core_pb.js');
var extproto_ext_pb = require('../../../../../../../../extproto/ext_pb.js');
goog.exportSymbol('proto.fed.solo.io.GlooInstanceSpec', null, global);
goog.exportSymbol('proto.fed.solo.io.GlooInstanceSpec.Admin', null, global);
goog.exportSymbol('proto.fed.solo.io.GlooInstanceSpec.Check', null, global);
goog.exportSymbol('proto.fed.solo.io.GlooInstanceSpec.Check.Summary', null, global);
goog.exportSymbol('proto.fed.solo.io.GlooInstanceSpec.Check.Summary.ResourceReport', null, global);
goog.exportSymbol('proto.fed.solo.io.GlooInstanceSpec.ControlPlane', null, global);
goog.exportSymbol('proto.fed.solo.io.GlooInstanceSpec.Proxy', null, global);
goog.exportSymbol('proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint', null, global);
goog.exportSymbol('proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.Port', null, global);
goog.exportSymbol('proto.fed.solo.io.GlooInstanceSpec.Proxy.WorkloadController', null, global);
goog.exportSymbol('proto.fed.solo.io.GlooInstanceStatus', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fed.solo.io.GlooInstanceSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.fed.solo.io.GlooInstanceSpec.repeatedFields_, null);
};
goog.inherits(proto.fed.solo.io.GlooInstanceSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.fed.solo.io.GlooInstanceSpec.displayName = 'proto.fed.solo.io.GlooInstanceSpec';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.fed.solo.io.GlooInstanceSpec.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fed.solo.io.GlooInstanceSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.fed.solo.io.GlooInstanceSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fed.solo.io.GlooInstanceSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fed.solo.io.GlooInstanceSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    cluster: jspb.Message.getFieldWithDefault(msg, 1, ""),
    isEnterprise: jspb.Message.getFieldWithDefault(msg, 2, false),
    controlPlane: (f = msg.getControlPlane()) && proto.fed.solo.io.GlooInstanceSpec.ControlPlane.toObject(includeInstance, f),
    proxiesList: jspb.Message.toObjectList(msg.getProxiesList(),
    proto.fed.solo.io.GlooInstanceSpec.Proxy.toObject, includeInstance),
    region: jspb.Message.getFieldWithDefault(msg, 5, ""),
    admin: (f = msg.getAdmin()) && proto.fed.solo.io.GlooInstanceSpec.Admin.toObject(includeInstance, f),
    check: (f = msg.getCheck()) && proto.fed.solo.io.GlooInstanceSpec.Check.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fed.solo.io.GlooInstanceSpec}
 */
proto.fed.solo.io.GlooInstanceSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fed.solo.io.GlooInstanceSpec;
  return proto.fed.solo.io.GlooInstanceSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fed.solo.io.GlooInstanceSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fed.solo.io.GlooInstanceSpec}
 */
proto.fed.solo.io.GlooInstanceSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCluster(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsEnterprise(value);
      break;
    case 3:
      var value = new proto.fed.solo.io.GlooInstanceSpec.ControlPlane;
      reader.readMessage(value,proto.fed.solo.io.GlooInstanceSpec.ControlPlane.deserializeBinaryFromReader);
      msg.setControlPlane(value);
      break;
    case 4:
      var value = new proto.fed.solo.io.GlooInstanceSpec.Proxy;
      reader.readMessage(value,proto.fed.solo.io.GlooInstanceSpec.Proxy.deserializeBinaryFromReader);
      msg.addProxies(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegion(value);
      break;
    case 6:
      var value = new proto.fed.solo.io.GlooInstanceSpec.Admin;
      reader.readMessage(value,proto.fed.solo.io.GlooInstanceSpec.Admin.deserializeBinaryFromReader);
      msg.setAdmin(value);
      break;
    case 7:
      var value = new proto.fed.solo.io.GlooInstanceSpec.Check;
      reader.readMessage(value,proto.fed.solo.io.GlooInstanceSpec.Check.deserializeBinaryFromReader);
      msg.setCheck(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fed.solo.io.GlooInstanceSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fed.solo.io.GlooInstanceSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fed.solo.io.GlooInstanceSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fed.solo.io.GlooInstanceSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCluster();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIsEnterprise();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getControlPlane();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.fed.solo.io.GlooInstanceSpec.ControlPlane.serializeBinaryToWriter
    );
  }
  f = message.getProxiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.fed.solo.io.GlooInstanceSpec.Proxy.serializeBinaryToWriter
    );
  }
  f = message.getRegion();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getAdmin();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.fed.solo.io.GlooInstanceSpec.Admin.serializeBinaryToWriter
    );
  }
  f = message.getCheck();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.fed.solo.io.GlooInstanceSpec.Check.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fed.solo.io.GlooInstanceSpec.ControlPlane = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.fed.solo.io.GlooInstanceSpec.ControlPlane.repeatedFields_, null);
};
goog.inherits(proto.fed.solo.io.GlooInstanceSpec.ControlPlane, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.fed.solo.io.GlooInstanceSpec.ControlPlane.displayName = 'proto.fed.solo.io.GlooInstanceSpec.ControlPlane';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.fed.solo.io.GlooInstanceSpec.ControlPlane.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fed.solo.io.GlooInstanceSpec.ControlPlane.prototype.toObject = function(opt_includeInstance) {
  return proto.fed.solo.io.GlooInstanceSpec.ControlPlane.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fed.solo.io.GlooInstanceSpec.ControlPlane} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fed.solo.io.GlooInstanceSpec.ControlPlane.toObject = function(includeInstance, msg) {
  var f, obj = {
    version: jspb.Message.getFieldWithDefault(msg, 1, ""),
    namespace: jspb.Message.getFieldWithDefault(msg, 2, ""),
    watchedNamespacesList: jspb.Message.getRepeatedField(msg, 3)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fed.solo.io.GlooInstanceSpec.ControlPlane}
 */
proto.fed.solo.io.GlooInstanceSpec.ControlPlane.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fed.solo.io.GlooInstanceSpec.ControlPlane;
  return proto.fed.solo.io.GlooInstanceSpec.ControlPlane.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fed.solo.io.GlooInstanceSpec.ControlPlane} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fed.solo.io.GlooInstanceSpec.ControlPlane}
 */
proto.fed.solo.io.GlooInstanceSpec.ControlPlane.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addWatchedNamespaces(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fed.solo.io.GlooInstanceSpec.ControlPlane.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fed.solo.io.GlooInstanceSpec.ControlPlane.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fed.solo.io.GlooInstanceSpec.ControlPlane} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fed.solo.io.GlooInstanceSpec.ControlPlane.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getWatchedNamespacesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional string version = 1;
 * @return {string}
 */
proto.fed.solo.io.GlooInstanceSpec.ControlPlane.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.fed.solo.io.GlooInstanceSpec.ControlPlane.prototype.setVersion = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string namespace = 2;
 * @return {string}
 */
proto.fed.solo.io.GlooInstanceSpec.ControlPlane.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.fed.solo.io.GlooInstanceSpec.ControlPlane.prototype.setNamespace = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string watched_namespaces = 3;
 * @return {!Array<string>}
 */
proto.fed.solo.io.GlooInstanceSpec.ControlPlane.prototype.getWatchedNamespacesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array<string>} value */
proto.fed.solo.io.GlooInstanceSpec.ControlPlane.prototype.setWatchedNamespacesList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.fed.solo.io.GlooInstanceSpec.ControlPlane.prototype.addWatchedNamespaces = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.fed.solo.io.GlooInstanceSpec.ControlPlane.prototype.clearWatchedNamespacesList = function() {
  this.setWatchedNamespacesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fed.solo.io.GlooInstanceSpec.Proxy = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.fed.solo.io.GlooInstanceSpec.Proxy.repeatedFields_, null);
};
goog.inherits(proto.fed.solo.io.GlooInstanceSpec.Proxy, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.fed.solo.io.GlooInstanceSpec.Proxy.displayName = 'proto.fed.solo.io.GlooInstanceSpec.Proxy';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.fed.solo.io.GlooInstanceSpec.Proxy.repeatedFields_ = [8,9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fed.solo.io.GlooInstanceSpec.Proxy.prototype.toObject = function(opt_includeInstance) {
  return proto.fed.solo.io.GlooInstanceSpec.Proxy.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fed.solo.io.GlooInstanceSpec.Proxy} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fed.solo.io.GlooInstanceSpec.Proxy.toObject = function(includeInstance, msg) {
  var f, obj = {
    replicas: jspb.Message.getFieldWithDefault(msg, 1, 0),
    availableReplicas: jspb.Message.getFieldWithDefault(msg, 2, 0),
    readyReplicas: jspb.Message.getFieldWithDefault(msg, 3, 0),
    wasmEnabled: jspb.Message.getFieldWithDefault(msg, 4, false),
    readConfigMulticlusterEnabled: jspb.Message.getFieldWithDefault(msg, 11, false),
    version: jspb.Message.getFieldWithDefault(msg, 5, ""),
    name: jspb.Message.getFieldWithDefault(msg, 6, ""),
    namespace: jspb.Message.getFieldWithDefault(msg, 7, ""),
    workloadControllerType: jspb.Message.getFieldWithDefault(msg, 10, 0),
    zonesList: jspb.Message.getRepeatedField(msg, 8),
    ingressEndpointsList: jspb.Message.toObjectList(msg.getIngressEndpointsList(),
    proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fed.solo.io.GlooInstanceSpec.Proxy}
 */
proto.fed.solo.io.GlooInstanceSpec.Proxy.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fed.solo.io.GlooInstanceSpec.Proxy;
  return proto.fed.solo.io.GlooInstanceSpec.Proxy.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fed.solo.io.GlooInstanceSpec.Proxy} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fed.solo.io.GlooInstanceSpec.Proxy}
 */
proto.fed.solo.io.GlooInstanceSpec.Proxy.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setReplicas(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAvailableReplicas(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setReadyReplicas(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWasmEnabled(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReadConfigMulticlusterEnabled(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    case 10:
      var value = /** @type {!proto.fed.solo.io.GlooInstanceSpec.Proxy.WorkloadController} */ (reader.readEnum());
      msg.setWorkloadControllerType(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.addZones(value);
      break;
    case 9:
      var value = new proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint;
      reader.readMessage(value,proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.deserializeBinaryFromReader);
      msg.addIngressEndpoints(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fed.solo.io.GlooInstanceSpec.Proxy.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fed.solo.io.GlooInstanceSpec.Proxy.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fed.solo.io.GlooInstanceSpec.Proxy} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fed.solo.io.GlooInstanceSpec.Proxy.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReplicas();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getAvailableReplicas();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getReadyReplicas();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getWasmEnabled();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getReadConfigMulticlusterEnabled();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getWorkloadControllerType();
  if (f !== 0.0) {
    writer.writeEnum(
      10,
      f
    );
  }
  f = message.getZonesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f
    );
  }
  f = message.getIngressEndpointsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.fed.solo.io.GlooInstanceSpec.Proxy.WorkloadController = {
  UNDEFINED: 0,
  DEPLOYMENT: 1,
  DAEMON_SET: 2
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.repeatedFields_, null);
};
goog.inherits(proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.displayName = 'proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.prototype.toObject = function(opt_includeInstance) {
  return proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.toObject = function(includeInstance, msg) {
  var f, obj = {
    address: jspb.Message.getFieldWithDefault(msg, 1, ""),
    portsList: jspb.Message.toObjectList(msg.getPortsList(),
    proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.Port.toObject, includeInstance),
    serviceName: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint}
 */
proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint;
  return proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint}
 */
proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 2:
      var value = new proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.Port;
      reader.readMessage(value,proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.Port.deserializeBinaryFromReader);
      msg.addPorts(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setServiceName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPortsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.Port.serializeBinaryToWriter
    );
  }
  f = message.getServiceName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.Port = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.Port, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.Port.displayName = 'proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.Port';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.Port.prototype.toObject = function(opt_includeInstance) {
  return proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.Port.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.Port} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.Port.toObject = function(includeInstance, msg) {
  var f, obj = {
    port: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.Port}
 */
proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.Port.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.Port;
  return proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.Port.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.Port} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.Port}
 */
proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.Port.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPort(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.Port.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.Port.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.Port} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.Port.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPort();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint32 port = 1;
 * @return {number}
 */
proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.Port.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.Port.prototype.setPort = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.Port.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.Port.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string address = 1;
 * @return {string}
 */
proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.prototype.setAddress = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated Port ports = 2;
 * @return {!Array<!proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.Port>}
 */
proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.prototype.getPortsList = function() {
  return /** @type{!Array<!proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.Port>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.Port, 2));
};


/** @param {!Array<!proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.Port>} value */
proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.prototype.setPortsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.Port=} opt_value
 * @param {number=} opt_index
 * @return {!proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.Port}
 */
proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.prototype.addPorts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.Port, opt_index);
};


proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.prototype.clearPortsList = function() {
  this.setPortsList([]);
};


/**
 * optional string service_name = 3;
 * @return {string}
 */
proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.prototype.getServiceName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint.prototype.setServiceName = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 replicas = 1;
 * @return {number}
 */
proto.fed.solo.io.GlooInstanceSpec.Proxy.prototype.getReplicas = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.fed.solo.io.GlooInstanceSpec.Proxy.prototype.setReplicas = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 available_replicas = 2;
 * @return {number}
 */
proto.fed.solo.io.GlooInstanceSpec.Proxy.prototype.getAvailableReplicas = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.fed.solo.io.GlooInstanceSpec.Proxy.prototype.setAvailableReplicas = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 ready_replicas = 3;
 * @return {number}
 */
proto.fed.solo.io.GlooInstanceSpec.Proxy.prototype.getReadyReplicas = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.fed.solo.io.GlooInstanceSpec.Proxy.prototype.setReadyReplicas = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bool wasm_enabled = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.fed.solo.io.GlooInstanceSpec.Proxy.prototype.getWasmEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.fed.solo.io.GlooInstanceSpec.Proxy.prototype.setWasmEnabled = function(value) {
  jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool read_config_multicluster_enabled = 11;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.fed.solo.io.GlooInstanceSpec.Proxy.prototype.getReadConfigMulticlusterEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 11, false));
};


/** @param {boolean} value */
proto.fed.solo.io.GlooInstanceSpec.Proxy.prototype.setReadConfigMulticlusterEnabled = function(value) {
  jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional string version = 5;
 * @return {string}
 */
proto.fed.solo.io.GlooInstanceSpec.Proxy.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.fed.solo.io.GlooInstanceSpec.Proxy.prototype.setVersion = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string name = 6;
 * @return {string}
 */
proto.fed.solo.io.GlooInstanceSpec.Proxy.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.fed.solo.io.GlooInstanceSpec.Proxy.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string namespace = 7;
 * @return {string}
 */
proto.fed.solo.io.GlooInstanceSpec.Proxy.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.fed.solo.io.GlooInstanceSpec.Proxy.prototype.setNamespace = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional WorkloadController workload_controller_type = 10;
 * @return {!proto.fed.solo.io.GlooInstanceSpec.Proxy.WorkloadController}
 */
proto.fed.solo.io.GlooInstanceSpec.Proxy.prototype.getWorkloadControllerType = function() {
  return /** @type {!proto.fed.solo.io.GlooInstanceSpec.Proxy.WorkloadController} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {!proto.fed.solo.io.GlooInstanceSpec.Proxy.WorkloadController} value */
proto.fed.solo.io.GlooInstanceSpec.Proxy.prototype.setWorkloadControllerType = function(value) {
  jspb.Message.setProto3EnumField(this, 10, value);
};


/**
 * repeated string zones = 8;
 * @return {!Array<string>}
 */
proto.fed.solo.io.GlooInstanceSpec.Proxy.prototype.getZonesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 8));
};


/** @param {!Array<string>} value */
proto.fed.solo.io.GlooInstanceSpec.Proxy.prototype.setZonesList = function(value) {
  jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.fed.solo.io.GlooInstanceSpec.Proxy.prototype.addZones = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


proto.fed.solo.io.GlooInstanceSpec.Proxy.prototype.clearZonesList = function() {
  this.setZonesList([]);
};


/**
 * repeated IngressEndpoint ingress_endpoints = 9;
 * @return {!Array<!proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint>}
 */
proto.fed.solo.io.GlooInstanceSpec.Proxy.prototype.getIngressEndpointsList = function() {
  return /** @type{!Array<!proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint, 9));
};


/** @param {!Array<!proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint>} value */
proto.fed.solo.io.GlooInstanceSpec.Proxy.prototype.setIngressEndpointsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint=} opt_value
 * @param {number=} opt_index
 * @return {!proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint}
 */
proto.fed.solo.io.GlooInstanceSpec.Proxy.prototype.addIngressEndpoints = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.fed.solo.io.GlooInstanceSpec.Proxy.IngressEndpoint, opt_index);
};


proto.fed.solo.io.GlooInstanceSpec.Proxy.prototype.clearIngressEndpointsList = function() {
  this.setIngressEndpointsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fed.solo.io.GlooInstanceSpec.Admin = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fed.solo.io.GlooInstanceSpec.Admin, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.fed.solo.io.GlooInstanceSpec.Admin.displayName = 'proto.fed.solo.io.GlooInstanceSpec.Admin';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fed.solo.io.GlooInstanceSpec.Admin.prototype.toObject = function(opt_includeInstance) {
  return proto.fed.solo.io.GlooInstanceSpec.Admin.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fed.solo.io.GlooInstanceSpec.Admin} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fed.solo.io.GlooInstanceSpec.Admin.toObject = function(includeInstance, msg) {
  var f, obj = {
    writeNamespace: jspb.Message.getFieldWithDefault(msg, 1, ""),
    proxyId: (f = msg.getProxyId()) && github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fed.solo.io.GlooInstanceSpec.Admin}
 */
proto.fed.solo.io.GlooInstanceSpec.Admin.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fed.solo.io.GlooInstanceSpec.Admin;
  return proto.fed.solo.io.GlooInstanceSpec.Admin.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fed.solo.io.GlooInstanceSpec.Admin} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fed.solo.io.GlooInstanceSpec.Admin}
 */
proto.fed.solo.io.GlooInstanceSpec.Admin.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setWriteNamespace(value);
      break;
    case 2:
      var value = new github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef;
      reader.readMessage(value,github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef.deserializeBinaryFromReader);
      msg.setProxyId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fed.solo.io.GlooInstanceSpec.Admin.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fed.solo.io.GlooInstanceSpec.Admin.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fed.solo.io.GlooInstanceSpec.Admin} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fed.solo.io.GlooInstanceSpec.Admin.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWriteNamespace();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getProxyId();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef.serializeBinaryToWriter
    );
  }
};


/**
 * optional string write_namespace = 1;
 * @return {string}
 */
proto.fed.solo.io.GlooInstanceSpec.Admin.prototype.getWriteNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.fed.solo.io.GlooInstanceSpec.Admin.prototype.setWriteNamespace = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional core.skv2.solo.io.ObjectRef proxy_id = 2;
 * @return {?proto.core.skv2.solo.io.ObjectRef}
 */
proto.fed.solo.io.GlooInstanceSpec.Admin.prototype.getProxyId = function() {
  return /** @type{?proto.core.skv2.solo.io.ObjectRef} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef, 2));
};


/** @param {?proto.core.skv2.solo.io.ObjectRef|undefined} value */
proto.fed.solo.io.GlooInstanceSpec.Admin.prototype.setProxyId = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.fed.solo.io.GlooInstanceSpec.Admin.prototype.clearProxyId = function() {
  this.setProxyId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.fed.solo.io.GlooInstanceSpec.Admin.prototype.hasProxyId = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fed.solo.io.GlooInstanceSpec.Check = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fed.solo.io.GlooInstanceSpec.Check, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.fed.solo.io.GlooInstanceSpec.Check.displayName = 'proto.fed.solo.io.GlooInstanceSpec.Check';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fed.solo.io.GlooInstanceSpec.Check.prototype.toObject = function(opt_includeInstance) {
  return proto.fed.solo.io.GlooInstanceSpec.Check.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fed.solo.io.GlooInstanceSpec.Check} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fed.solo.io.GlooInstanceSpec.Check.toObject = function(includeInstance, msg) {
  var f, obj = {
    gateways: (f = msg.getGateways()) && proto.fed.solo.io.GlooInstanceSpec.Check.Summary.toObject(includeInstance, f),
    virtualServices: (f = msg.getVirtualServices()) && proto.fed.solo.io.GlooInstanceSpec.Check.Summary.toObject(includeInstance, f),
    routeTables: (f = msg.getRouteTables()) && proto.fed.solo.io.GlooInstanceSpec.Check.Summary.toObject(includeInstance, f),
    authConfigs: (f = msg.getAuthConfigs()) && proto.fed.solo.io.GlooInstanceSpec.Check.Summary.toObject(includeInstance, f),
    settings: (f = msg.getSettings()) && proto.fed.solo.io.GlooInstanceSpec.Check.Summary.toObject(includeInstance, f),
    upstreams: (f = msg.getUpstreams()) && proto.fed.solo.io.GlooInstanceSpec.Check.Summary.toObject(includeInstance, f),
    upstreamGroups: (f = msg.getUpstreamGroups()) && proto.fed.solo.io.GlooInstanceSpec.Check.Summary.toObject(includeInstance, f),
    proxies: (f = msg.getProxies()) && proto.fed.solo.io.GlooInstanceSpec.Check.Summary.toObject(includeInstance, f),
    rateLimitConfigs: (f = msg.getRateLimitConfigs()) && proto.fed.solo.io.GlooInstanceSpec.Check.Summary.toObject(includeInstance, f),
    matchableHttpGateways: (f = msg.getMatchableHttpGateways()) && proto.fed.solo.io.GlooInstanceSpec.Check.Summary.toObject(includeInstance, f),
    deployments: (f = msg.getDeployments()) && proto.fed.solo.io.GlooInstanceSpec.Check.Summary.toObject(includeInstance, f),
    pods: (f = msg.getPods()) && proto.fed.solo.io.GlooInstanceSpec.Check.Summary.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fed.solo.io.GlooInstanceSpec.Check}
 */
proto.fed.solo.io.GlooInstanceSpec.Check.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fed.solo.io.GlooInstanceSpec.Check;
  return proto.fed.solo.io.GlooInstanceSpec.Check.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fed.solo.io.GlooInstanceSpec.Check} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fed.solo.io.GlooInstanceSpec.Check}
 */
proto.fed.solo.io.GlooInstanceSpec.Check.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.fed.solo.io.GlooInstanceSpec.Check.Summary;
      reader.readMessage(value,proto.fed.solo.io.GlooInstanceSpec.Check.Summary.deserializeBinaryFromReader);
      msg.setGateways(value);
      break;
    case 2:
      var value = new proto.fed.solo.io.GlooInstanceSpec.Check.Summary;
      reader.readMessage(value,proto.fed.solo.io.GlooInstanceSpec.Check.Summary.deserializeBinaryFromReader);
      msg.setVirtualServices(value);
      break;
    case 3:
      var value = new proto.fed.solo.io.GlooInstanceSpec.Check.Summary;
      reader.readMessage(value,proto.fed.solo.io.GlooInstanceSpec.Check.Summary.deserializeBinaryFromReader);
      msg.setRouteTables(value);
      break;
    case 4:
      var value = new proto.fed.solo.io.GlooInstanceSpec.Check.Summary;
      reader.readMessage(value,proto.fed.solo.io.GlooInstanceSpec.Check.Summary.deserializeBinaryFromReader);
      msg.setAuthConfigs(value);
      break;
    case 5:
      var value = new proto.fed.solo.io.GlooInstanceSpec.Check.Summary;
      reader.readMessage(value,proto.fed.solo.io.GlooInstanceSpec.Check.Summary.deserializeBinaryFromReader);
      msg.setSettings(value);
      break;
    case 6:
      var value = new proto.fed.solo.io.GlooInstanceSpec.Check.Summary;
      reader.readMessage(value,proto.fed.solo.io.GlooInstanceSpec.Check.Summary.deserializeBinaryFromReader);
      msg.setUpstreams(value);
      break;
    case 7:
      var value = new proto.fed.solo.io.GlooInstanceSpec.Check.Summary;
      reader.readMessage(value,proto.fed.solo.io.GlooInstanceSpec.Check.Summary.deserializeBinaryFromReader);
      msg.setUpstreamGroups(value);
      break;
    case 8:
      var value = new proto.fed.solo.io.GlooInstanceSpec.Check.Summary;
      reader.readMessage(value,proto.fed.solo.io.GlooInstanceSpec.Check.Summary.deserializeBinaryFromReader);
      msg.setProxies(value);
      break;
    case 9:
      var value = new proto.fed.solo.io.GlooInstanceSpec.Check.Summary;
      reader.readMessage(value,proto.fed.solo.io.GlooInstanceSpec.Check.Summary.deserializeBinaryFromReader);
      msg.setRateLimitConfigs(value);
      break;
    case 10:
      var value = new proto.fed.solo.io.GlooInstanceSpec.Check.Summary;
      reader.readMessage(value,proto.fed.solo.io.GlooInstanceSpec.Check.Summary.deserializeBinaryFromReader);
      msg.setMatchableHttpGateways(value);
      break;
    case 20:
      var value = new proto.fed.solo.io.GlooInstanceSpec.Check.Summary;
      reader.readMessage(value,proto.fed.solo.io.GlooInstanceSpec.Check.Summary.deserializeBinaryFromReader);
      msg.setDeployments(value);
      break;
    case 22:
      var value = new proto.fed.solo.io.GlooInstanceSpec.Check.Summary;
      reader.readMessage(value,proto.fed.solo.io.GlooInstanceSpec.Check.Summary.deserializeBinaryFromReader);
      msg.setPods(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fed.solo.io.GlooInstanceSpec.Check.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fed.solo.io.GlooInstanceSpec.Check.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fed.solo.io.GlooInstanceSpec.Check} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fed.solo.io.GlooInstanceSpec.Check.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGateways();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.fed.solo.io.GlooInstanceSpec.Check.Summary.serializeBinaryToWriter
    );
  }
  f = message.getVirtualServices();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.fed.solo.io.GlooInstanceSpec.Check.Summary.serializeBinaryToWriter
    );
  }
  f = message.getRouteTables();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.fed.solo.io.GlooInstanceSpec.Check.Summary.serializeBinaryToWriter
    );
  }
  f = message.getAuthConfigs();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.fed.solo.io.GlooInstanceSpec.Check.Summary.serializeBinaryToWriter
    );
  }
  f = message.getSettings();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.fed.solo.io.GlooInstanceSpec.Check.Summary.serializeBinaryToWriter
    );
  }
  f = message.getUpstreams();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.fed.solo.io.GlooInstanceSpec.Check.Summary.serializeBinaryToWriter
    );
  }
  f = message.getUpstreamGroups();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.fed.solo.io.GlooInstanceSpec.Check.Summary.serializeBinaryToWriter
    );
  }
  f = message.getProxies();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.fed.solo.io.GlooInstanceSpec.Check.Summary.serializeBinaryToWriter
    );
  }
  f = message.getRateLimitConfigs();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.fed.solo.io.GlooInstanceSpec.Check.Summary.serializeBinaryToWriter
    );
  }
  f = message.getMatchableHttpGateways();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.fed.solo.io.GlooInstanceSpec.Check.Summary.serializeBinaryToWriter
    );
  }
  f = message.getDeployments();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      proto.fed.solo.io.GlooInstanceSpec.Check.Summary.serializeBinaryToWriter
    );
  }
  f = message.getPods();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      proto.fed.solo.io.GlooInstanceSpec.Check.Summary.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fed.solo.io.GlooInstanceSpec.Check.Summary = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.fed.solo.io.GlooInstanceSpec.Check.Summary.repeatedFields_, null);
};
goog.inherits(proto.fed.solo.io.GlooInstanceSpec.Check.Summary, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.fed.solo.io.GlooInstanceSpec.Check.Summary.displayName = 'proto.fed.solo.io.GlooInstanceSpec.Check.Summary';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.fed.solo.io.GlooInstanceSpec.Check.Summary.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fed.solo.io.GlooInstanceSpec.Check.Summary.prototype.toObject = function(opt_includeInstance) {
  return proto.fed.solo.io.GlooInstanceSpec.Check.Summary.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fed.solo.io.GlooInstanceSpec.Check.Summary} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fed.solo.io.GlooInstanceSpec.Check.Summary.toObject = function(includeInstance, msg) {
  var f, obj = {
    total: jspb.Message.getFieldWithDefault(msg, 1, 0),
    errorsList: jspb.Message.toObjectList(msg.getErrorsList(),
    proto.fed.solo.io.GlooInstanceSpec.Check.Summary.ResourceReport.toObject, includeInstance),
    warningsList: jspb.Message.toObjectList(msg.getWarningsList(),
    proto.fed.solo.io.GlooInstanceSpec.Check.Summary.ResourceReport.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fed.solo.io.GlooInstanceSpec.Check.Summary}
 */
proto.fed.solo.io.GlooInstanceSpec.Check.Summary.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fed.solo.io.GlooInstanceSpec.Check.Summary;
  return proto.fed.solo.io.GlooInstanceSpec.Check.Summary.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fed.solo.io.GlooInstanceSpec.Check.Summary} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fed.solo.io.GlooInstanceSpec.Check.Summary}
 */
proto.fed.solo.io.GlooInstanceSpec.Check.Summary.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotal(value);
      break;
    case 2:
      var value = new proto.fed.solo.io.GlooInstanceSpec.Check.Summary.ResourceReport;
      reader.readMessage(value,proto.fed.solo.io.GlooInstanceSpec.Check.Summary.ResourceReport.deserializeBinaryFromReader);
      msg.addErrors(value);
      break;
    case 3:
      var value = new proto.fed.solo.io.GlooInstanceSpec.Check.Summary.ResourceReport;
      reader.readMessage(value,proto.fed.solo.io.GlooInstanceSpec.Check.Summary.ResourceReport.deserializeBinaryFromReader);
      msg.addWarnings(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fed.solo.io.GlooInstanceSpec.Check.Summary.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fed.solo.io.GlooInstanceSpec.Check.Summary.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fed.solo.io.GlooInstanceSpec.Check.Summary} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fed.solo.io.GlooInstanceSpec.Check.Summary.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotal();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getErrorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.fed.solo.io.GlooInstanceSpec.Check.Summary.ResourceReport.serializeBinaryToWriter
    );
  }
  f = message.getWarningsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.fed.solo.io.GlooInstanceSpec.Check.Summary.ResourceReport.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fed.solo.io.GlooInstanceSpec.Check.Summary.ResourceReport = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fed.solo.io.GlooInstanceSpec.Check.Summary.ResourceReport, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.fed.solo.io.GlooInstanceSpec.Check.Summary.ResourceReport.displayName = 'proto.fed.solo.io.GlooInstanceSpec.Check.Summary.ResourceReport';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fed.solo.io.GlooInstanceSpec.Check.Summary.ResourceReport.prototype.toObject = function(opt_includeInstance) {
  return proto.fed.solo.io.GlooInstanceSpec.Check.Summary.ResourceReport.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fed.solo.io.GlooInstanceSpec.Check.Summary.ResourceReport} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fed.solo.io.GlooInstanceSpec.Check.Summary.ResourceReport.toObject = function(includeInstance, msg) {
  var f, obj = {
    ref: (f = msg.getRef()) && github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef.toObject(includeInstance, f),
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fed.solo.io.GlooInstanceSpec.Check.Summary.ResourceReport}
 */
proto.fed.solo.io.GlooInstanceSpec.Check.Summary.ResourceReport.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fed.solo.io.GlooInstanceSpec.Check.Summary.ResourceReport;
  return proto.fed.solo.io.GlooInstanceSpec.Check.Summary.ResourceReport.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fed.solo.io.GlooInstanceSpec.Check.Summary.ResourceReport} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fed.solo.io.GlooInstanceSpec.Check.Summary.ResourceReport}
 */
proto.fed.solo.io.GlooInstanceSpec.Check.Summary.ResourceReport.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef;
      reader.readMessage(value,github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef.deserializeBinaryFromReader);
      msg.setRef(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fed.solo.io.GlooInstanceSpec.Check.Summary.ResourceReport.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fed.solo.io.GlooInstanceSpec.Check.Summary.ResourceReport.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fed.solo.io.GlooInstanceSpec.Check.Summary.ResourceReport} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fed.solo.io.GlooInstanceSpec.Check.Summary.ResourceReport.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRef();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef.serializeBinaryToWriter
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional core.skv2.solo.io.ObjectRef ref = 1;
 * @return {?proto.core.skv2.solo.io.ObjectRef}
 */
proto.fed.solo.io.GlooInstanceSpec.Check.Summary.ResourceReport.prototype.getRef = function() {
  return /** @type{?proto.core.skv2.solo.io.ObjectRef} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef, 1));
};


/** @param {?proto.core.skv2.solo.io.ObjectRef|undefined} value */
proto.fed.solo.io.GlooInstanceSpec.Check.Summary.ResourceReport.prototype.setRef = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.fed.solo.io.GlooInstanceSpec.Check.Summary.ResourceReport.prototype.clearRef = function() {
  this.setRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.fed.solo.io.GlooInstanceSpec.Check.Summary.ResourceReport.prototype.hasRef = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.fed.solo.io.GlooInstanceSpec.Check.Summary.ResourceReport.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.fed.solo.io.GlooInstanceSpec.Check.Summary.ResourceReport.prototype.setMessage = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 total = 1;
 * @return {number}
 */
proto.fed.solo.io.GlooInstanceSpec.Check.Summary.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.fed.solo.io.GlooInstanceSpec.Check.Summary.prototype.setTotal = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated ResourceReport errors = 2;
 * @return {!Array<!proto.fed.solo.io.GlooInstanceSpec.Check.Summary.ResourceReport>}
 */
proto.fed.solo.io.GlooInstanceSpec.Check.Summary.prototype.getErrorsList = function() {
  return /** @type{!Array<!proto.fed.solo.io.GlooInstanceSpec.Check.Summary.ResourceReport>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.fed.solo.io.GlooInstanceSpec.Check.Summary.ResourceReport, 2));
};


/** @param {!Array<!proto.fed.solo.io.GlooInstanceSpec.Check.Summary.ResourceReport>} value */
proto.fed.solo.io.GlooInstanceSpec.Check.Summary.prototype.setErrorsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.fed.solo.io.GlooInstanceSpec.Check.Summary.ResourceReport=} opt_value
 * @param {number=} opt_index
 * @return {!proto.fed.solo.io.GlooInstanceSpec.Check.Summary.ResourceReport}
 */
proto.fed.solo.io.GlooInstanceSpec.Check.Summary.prototype.addErrors = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.fed.solo.io.GlooInstanceSpec.Check.Summary.ResourceReport, opt_index);
};


proto.fed.solo.io.GlooInstanceSpec.Check.Summary.prototype.clearErrorsList = function() {
  this.setErrorsList([]);
};


/**
 * repeated ResourceReport warnings = 3;
 * @return {!Array<!proto.fed.solo.io.GlooInstanceSpec.Check.Summary.ResourceReport>}
 */
proto.fed.solo.io.GlooInstanceSpec.Check.Summary.prototype.getWarningsList = function() {
  return /** @type{!Array<!proto.fed.solo.io.GlooInstanceSpec.Check.Summary.ResourceReport>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.fed.solo.io.GlooInstanceSpec.Check.Summary.ResourceReport, 3));
};


/** @param {!Array<!proto.fed.solo.io.GlooInstanceSpec.Check.Summary.ResourceReport>} value */
proto.fed.solo.io.GlooInstanceSpec.Check.Summary.prototype.setWarningsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.fed.solo.io.GlooInstanceSpec.Check.Summary.ResourceReport=} opt_value
 * @param {number=} opt_index
 * @return {!proto.fed.solo.io.GlooInstanceSpec.Check.Summary.ResourceReport}
 */
proto.fed.solo.io.GlooInstanceSpec.Check.Summary.prototype.addWarnings = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.fed.solo.io.GlooInstanceSpec.Check.Summary.ResourceReport, opt_index);
};


proto.fed.solo.io.GlooInstanceSpec.Check.Summary.prototype.clearWarningsList = function() {
  this.setWarningsList([]);
};


/**
 * optional Summary gateways = 1;
 * @return {?proto.fed.solo.io.GlooInstanceSpec.Check.Summary}
 */
proto.fed.solo.io.GlooInstanceSpec.Check.prototype.getGateways = function() {
  return /** @type{?proto.fed.solo.io.GlooInstanceSpec.Check.Summary} */ (
    jspb.Message.getWrapperField(this, proto.fed.solo.io.GlooInstanceSpec.Check.Summary, 1));
};


/** @param {?proto.fed.solo.io.GlooInstanceSpec.Check.Summary|undefined} value */
proto.fed.solo.io.GlooInstanceSpec.Check.prototype.setGateways = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.fed.solo.io.GlooInstanceSpec.Check.prototype.clearGateways = function() {
  this.setGateways(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.fed.solo.io.GlooInstanceSpec.Check.prototype.hasGateways = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Summary virtual_services = 2;
 * @return {?proto.fed.solo.io.GlooInstanceSpec.Check.Summary}
 */
proto.fed.solo.io.GlooInstanceSpec.Check.prototype.getVirtualServices = function() {
  return /** @type{?proto.fed.solo.io.GlooInstanceSpec.Check.Summary} */ (
    jspb.Message.getWrapperField(this, proto.fed.solo.io.GlooInstanceSpec.Check.Summary, 2));
};


/** @param {?proto.fed.solo.io.GlooInstanceSpec.Check.Summary|undefined} value */
proto.fed.solo.io.GlooInstanceSpec.Check.prototype.setVirtualServices = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.fed.solo.io.GlooInstanceSpec.Check.prototype.clearVirtualServices = function() {
  this.setVirtualServices(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.fed.solo.io.GlooInstanceSpec.Check.prototype.hasVirtualServices = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Summary route_tables = 3;
 * @return {?proto.fed.solo.io.GlooInstanceSpec.Check.Summary}
 */
proto.fed.solo.io.GlooInstanceSpec.Check.prototype.getRouteTables = function() {
  return /** @type{?proto.fed.solo.io.GlooInstanceSpec.Check.Summary} */ (
    jspb.Message.getWrapperField(this, proto.fed.solo.io.GlooInstanceSpec.Check.Summary, 3));
};


/** @param {?proto.fed.solo.io.GlooInstanceSpec.Check.Summary|undefined} value */
proto.fed.solo.io.GlooInstanceSpec.Check.prototype.setRouteTables = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.fed.solo.io.GlooInstanceSpec.Check.prototype.clearRouteTables = function() {
  this.setRouteTables(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.fed.solo.io.GlooInstanceSpec.Check.prototype.hasRouteTables = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Summary auth_configs = 4;
 * @return {?proto.fed.solo.io.GlooInstanceSpec.Check.Summary}
 */
proto.fed.solo.io.GlooInstanceSpec.Check.prototype.getAuthConfigs = function() {
  return /** @type{?proto.fed.solo.io.GlooInstanceSpec.Check.Summary} */ (
    jspb.Message.getWrapperField(this, proto.fed.solo.io.GlooInstanceSpec.Check.Summary, 4));
};


/** @param {?proto.fed.solo.io.GlooInstanceSpec.Check.Summary|undefined} value */
proto.fed.solo.io.GlooInstanceSpec.Check.prototype.setAuthConfigs = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.fed.solo.io.GlooInstanceSpec.Check.prototype.clearAuthConfigs = function() {
  this.setAuthConfigs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.fed.solo.io.GlooInstanceSpec.Check.prototype.hasAuthConfigs = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Summary settings = 5;
 * @return {?proto.fed.solo.io.GlooInstanceSpec.Check.Summary}
 */
proto.fed.solo.io.GlooInstanceSpec.Check.prototype.getSettings = function() {
  return /** @type{?proto.fed.solo.io.GlooInstanceSpec.Check.Summary} */ (
    jspb.Message.getWrapperField(this, proto.fed.solo.io.GlooInstanceSpec.Check.Summary, 5));
};


/** @param {?proto.fed.solo.io.GlooInstanceSpec.Check.Summary|undefined} value */
proto.fed.solo.io.GlooInstanceSpec.Check.prototype.setSettings = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.fed.solo.io.GlooInstanceSpec.Check.prototype.clearSettings = function() {
  this.setSettings(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.fed.solo.io.GlooInstanceSpec.Check.prototype.hasSettings = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Summary upstreams = 6;
 * @return {?proto.fed.solo.io.GlooInstanceSpec.Check.Summary}
 */
proto.fed.solo.io.GlooInstanceSpec.Check.prototype.getUpstreams = function() {
  return /** @type{?proto.fed.solo.io.GlooInstanceSpec.Check.Summary} */ (
    jspb.Message.getWrapperField(this, proto.fed.solo.io.GlooInstanceSpec.Check.Summary, 6));
};


/** @param {?proto.fed.solo.io.GlooInstanceSpec.Check.Summary|undefined} value */
proto.fed.solo.io.GlooInstanceSpec.Check.prototype.setUpstreams = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.fed.solo.io.GlooInstanceSpec.Check.prototype.clearUpstreams = function() {
  this.setUpstreams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.fed.solo.io.GlooInstanceSpec.Check.prototype.hasUpstreams = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Summary upstream_groups = 7;
 * @return {?proto.fed.solo.io.GlooInstanceSpec.Check.Summary}
 */
proto.fed.solo.io.GlooInstanceSpec.Check.prototype.getUpstreamGroups = function() {
  return /** @type{?proto.fed.solo.io.GlooInstanceSpec.Check.Summary} */ (
    jspb.Message.getWrapperField(this, proto.fed.solo.io.GlooInstanceSpec.Check.Summary, 7));
};


/** @param {?proto.fed.solo.io.GlooInstanceSpec.Check.Summary|undefined} value */
proto.fed.solo.io.GlooInstanceSpec.Check.prototype.setUpstreamGroups = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.fed.solo.io.GlooInstanceSpec.Check.prototype.clearUpstreamGroups = function() {
  this.setUpstreamGroups(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.fed.solo.io.GlooInstanceSpec.Check.prototype.hasUpstreamGroups = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Summary proxies = 8;
 * @return {?proto.fed.solo.io.GlooInstanceSpec.Check.Summary}
 */
proto.fed.solo.io.GlooInstanceSpec.Check.prototype.getProxies = function() {
  return /** @type{?proto.fed.solo.io.GlooInstanceSpec.Check.Summary} */ (
    jspb.Message.getWrapperField(this, proto.fed.solo.io.GlooInstanceSpec.Check.Summary, 8));
};


/** @param {?proto.fed.solo.io.GlooInstanceSpec.Check.Summary|undefined} value */
proto.fed.solo.io.GlooInstanceSpec.Check.prototype.setProxies = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.fed.solo.io.GlooInstanceSpec.Check.prototype.clearProxies = function() {
  this.setProxies(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.fed.solo.io.GlooInstanceSpec.Check.prototype.hasProxies = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional Summary rate_limit_configs = 9;
 * @return {?proto.fed.solo.io.GlooInstanceSpec.Check.Summary}
 */
proto.fed.solo.io.GlooInstanceSpec.Check.prototype.getRateLimitConfigs = function() {
  return /** @type{?proto.fed.solo.io.GlooInstanceSpec.Check.Summary} */ (
    jspb.Message.getWrapperField(this, proto.fed.solo.io.GlooInstanceSpec.Check.Summary, 9));
};


/** @param {?proto.fed.solo.io.GlooInstanceSpec.Check.Summary|undefined} value */
proto.fed.solo.io.GlooInstanceSpec.Check.prototype.setRateLimitConfigs = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


proto.fed.solo.io.GlooInstanceSpec.Check.prototype.clearRateLimitConfigs = function() {
  this.setRateLimitConfigs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.fed.solo.io.GlooInstanceSpec.Check.prototype.hasRateLimitConfigs = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Summary matchable_http_gateways = 10;
 * @return {?proto.fed.solo.io.GlooInstanceSpec.Check.Summary}
 */
proto.fed.solo.io.GlooInstanceSpec.Check.prototype.getMatchableHttpGateways = function() {
  return /** @type{?proto.fed.solo.io.GlooInstanceSpec.Check.Summary} */ (
    jspb.Message.getWrapperField(this, proto.fed.solo.io.GlooInstanceSpec.Check.Summary, 10));
};


/** @param {?proto.fed.solo.io.GlooInstanceSpec.Check.Summary|undefined} value */
proto.fed.solo.io.GlooInstanceSpec.Check.prototype.setMatchableHttpGateways = function(value) {
  jspb.Message.setWrapperField(this, 10, value);
};


proto.fed.solo.io.GlooInstanceSpec.Check.prototype.clearMatchableHttpGateways = function() {
  this.setMatchableHttpGateways(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.fed.solo.io.GlooInstanceSpec.Check.prototype.hasMatchableHttpGateways = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional Summary deployments = 20;
 * @return {?proto.fed.solo.io.GlooInstanceSpec.Check.Summary}
 */
proto.fed.solo.io.GlooInstanceSpec.Check.prototype.getDeployments = function() {
  return /** @type{?proto.fed.solo.io.GlooInstanceSpec.Check.Summary} */ (
    jspb.Message.getWrapperField(this, proto.fed.solo.io.GlooInstanceSpec.Check.Summary, 20));
};


/** @param {?proto.fed.solo.io.GlooInstanceSpec.Check.Summary|undefined} value */
proto.fed.solo.io.GlooInstanceSpec.Check.prototype.setDeployments = function(value) {
  jspb.Message.setWrapperField(this, 20, value);
};


proto.fed.solo.io.GlooInstanceSpec.Check.prototype.clearDeployments = function() {
  this.setDeployments(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.fed.solo.io.GlooInstanceSpec.Check.prototype.hasDeployments = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional Summary pods = 22;
 * @return {?proto.fed.solo.io.GlooInstanceSpec.Check.Summary}
 */
proto.fed.solo.io.GlooInstanceSpec.Check.prototype.getPods = function() {
  return /** @type{?proto.fed.solo.io.GlooInstanceSpec.Check.Summary} */ (
    jspb.Message.getWrapperField(this, proto.fed.solo.io.GlooInstanceSpec.Check.Summary, 22));
};


/** @param {?proto.fed.solo.io.GlooInstanceSpec.Check.Summary|undefined} value */
proto.fed.solo.io.GlooInstanceSpec.Check.prototype.setPods = function(value) {
  jspb.Message.setWrapperField(this, 22, value);
};


proto.fed.solo.io.GlooInstanceSpec.Check.prototype.clearPods = function() {
  this.setPods(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.fed.solo.io.GlooInstanceSpec.Check.prototype.hasPods = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional string cluster = 1;
 * @return {string}
 */
proto.fed.solo.io.GlooInstanceSpec.prototype.getCluster = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.fed.solo.io.GlooInstanceSpec.prototype.setCluster = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool is_enterprise = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.fed.solo.io.GlooInstanceSpec.prototype.getIsEnterprise = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.fed.solo.io.GlooInstanceSpec.prototype.setIsEnterprise = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional ControlPlane control_plane = 3;
 * @return {?proto.fed.solo.io.GlooInstanceSpec.ControlPlane}
 */
proto.fed.solo.io.GlooInstanceSpec.prototype.getControlPlane = function() {
  return /** @type{?proto.fed.solo.io.GlooInstanceSpec.ControlPlane} */ (
    jspb.Message.getWrapperField(this, proto.fed.solo.io.GlooInstanceSpec.ControlPlane, 3));
};


/** @param {?proto.fed.solo.io.GlooInstanceSpec.ControlPlane|undefined} value */
proto.fed.solo.io.GlooInstanceSpec.prototype.setControlPlane = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.fed.solo.io.GlooInstanceSpec.prototype.clearControlPlane = function() {
  this.setControlPlane(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.fed.solo.io.GlooInstanceSpec.prototype.hasControlPlane = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated Proxy proxies = 4;
 * @return {!Array<!proto.fed.solo.io.GlooInstanceSpec.Proxy>}
 */
proto.fed.solo.io.GlooInstanceSpec.prototype.getProxiesList = function() {
  return /** @type{!Array<!proto.fed.solo.io.GlooInstanceSpec.Proxy>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.fed.solo.io.GlooInstanceSpec.Proxy, 4));
};


/** @param {!Array<!proto.fed.solo.io.GlooInstanceSpec.Proxy>} value */
proto.fed.solo.io.GlooInstanceSpec.prototype.setProxiesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.fed.solo.io.GlooInstanceSpec.Proxy=} opt_value
 * @param {number=} opt_index
 * @return {!proto.fed.solo.io.GlooInstanceSpec.Proxy}
 */
proto.fed.solo.io.GlooInstanceSpec.prototype.addProxies = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.fed.solo.io.GlooInstanceSpec.Proxy, opt_index);
};


proto.fed.solo.io.GlooInstanceSpec.prototype.clearProxiesList = function() {
  this.setProxiesList([]);
};


/**
 * optional string region = 5;
 * @return {string}
 */
proto.fed.solo.io.GlooInstanceSpec.prototype.getRegion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.fed.solo.io.GlooInstanceSpec.prototype.setRegion = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional Admin admin = 6;
 * @return {?proto.fed.solo.io.GlooInstanceSpec.Admin}
 */
proto.fed.solo.io.GlooInstanceSpec.prototype.getAdmin = function() {
  return /** @type{?proto.fed.solo.io.GlooInstanceSpec.Admin} */ (
    jspb.Message.getWrapperField(this, proto.fed.solo.io.GlooInstanceSpec.Admin, 6));
};


/** @param {?proto.fed.solo.io.GlooInstanceSpec.Admin|undefined} value */
proto.fed.solo.io.GlooInstanceSpec.prototype.setAdmin = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.fed.solo.io.GlooInstanceSpec.prototype.clearAdmin = function() {
  this.setAdmin(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.fed.solo.io.GlooInstanceSpec.prototype.hasAdmin = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Check check = 7;
 * @return {?proto.fed.solo.io.GlooInstanceSpec.Check}
 */
proto.fed.solo.io.GlooInstanceSpec.prototype.getCheck = function() {
  return /** @type{?proto.fed.solo.io.GlooInstanceSpec.Check} */ (
    jspb.Message.getWrapperField(this, proto.fed.solo.io.GlooInstanceSpec.Check, 7));
};


/** @param {?proto.fed.solo.io.GlooInstanceSpec.Check|undefined} value */
proto.fed.solo.io.GlooInstanceSpec.prototype.setCheck = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.fed.solo.io.GlooInstanceSpec.prototype.clearCheck = function() {
  this.setCheck(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.fed.solo.io.GlooInstanceSpec.prototype.hasCheck = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fed.solo.io.GlooInstanceStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fed.solo.io.GlooInstanceStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.fed.solo.io.GlooInstanceStatus.displayName = 'proto.fed.solo.io.GlooInstanceStatus';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fed.solo.io.GlooInstanceStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.fed.solo.io.GlooInstanceStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fed.solo.io.GlooInstanceStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fed.solo.io.GlooInstanceStatus.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fed.solo.io.GlooInstanceStatus}
 */
proto.fed.solo.io.GlooInstanceStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fed.solo.io.GlooInstanceStatus;
  return proto.fed.solo.io.GlooInstanceStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fed.solo.io.GlooInstanceStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fed.solo.io.GlooInstanceStatus}
 */
proto.fed.solo.io.GlooInstanceStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fed.solo.io.GlooInstanceStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fed.solo.io.GlooInstanceStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fed.solo.io.GlooInstanceStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fed.solo.io.GlooInstanceStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.fed.solo.io);
