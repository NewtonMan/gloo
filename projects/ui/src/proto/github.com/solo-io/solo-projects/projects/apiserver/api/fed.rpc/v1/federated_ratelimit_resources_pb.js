/* eslint-disable */
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var extproto_ext_pb = require('../../../../../../../../extproto/ext_pb.js');
var github_com_solo$io_solo$projects_projects_gloo$fed_api_fed_ratelimit_v1alpha1_rate_limit_config_pb = require('../../../../../../../../github.com/solo-io/solo-projects/projects/gloo-fed/api/fed.ratelimit/v1alpha1/rate_limit_config_pb.js');
var github_com_solo$io_skv2_api_core_v1_core_pb = require('../../../../../../../../github.com/solo-io/skv2/api/core/v1/core_pb.js');
var github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb = require('../../../../../../../../github.com/solo-io/solo-projects/projects/apiserver/api/rpc.edge.gloo/v1/common_pb.js');
goog.exportSymbol('proto.fed.rpc.solo.io.FederatedRateLimitConfig', null, global);
goog.exportSymbol('proto.fed.rpc.solo.io.GetFederatedRateLimitConfigYamlRequest', null, global);
goog.exportSymbol('proto.fed.rpc.solo.io.GetFederatedRateLimitConfigYamlResponse', null, global);
goog.exportSymbol('proto.fed.rpc.solo.io.ListFederatedRateLimitConfigsRequest', null, global);
goog.exportSymbol('proto.fed.rpc.solo.io.ListFederatedRateLimitConfigsResponse', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fed.rpc.solo.io.FederatedRateLimitConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fed.rpc.solo.io.FederatedRateLimitConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.fed.rpc.solo.io.FederatedRateLimitConfig.displayName = 'proto.fed.rpc.solo.io.FederatedRateLimitConfig';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fed.rpc.solo.io.FederatedRateLimitConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.fed.rpc.solo.io.FederatedRateLimitConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fed.rpc.solo.io.FederatedRateLimitConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fed.rpc.solo.io.FederatedRateLimitConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.ObjectMeta.toObject(includeInstance, f),
    spec: (f = msg.getSpec()) && github_com_solo$io_solo$projects_projects_gloo$fed_api_fed_ratelimit_v1alpha1_rate_limit_config_pb.FederatedRateLimitConfigSpec.toObject(includeInstance, f),
    status: (f = msg.getStatus()) && github_com_solo$io_solo$projects_projects_gloo$fed_api_fed_ratelimit_v1alpha1_rate_limit_config_pb.FederatedRateLimitConfigStatus.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fed.rpc.solo.io.FederatedRateLimitConfig}
 */
proto.fed.rpc.solo.io.FederatedRateLimitConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fed.rpc.solo.io.FederatedRateLimitConfig;
  return proto.fed.rpc.solo.io.FederatedRateLimitConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fed.rpc.solo.io.FederatedRateLimitConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fed.rpc.solo.io.FederatedRateLimitConfig}
 */
proto.fed.rpc.solo.io.FederatedRateLimitConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.ObjectMeta;
      reader.readMessage(value,github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.ObjectMeta.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = new github_com_solo$io_solo$projects_projects_gloo$fed_api_fed_ratelimit_v1alpha1_rate_limit_config_pb.FederatedRateLimitConfigSpec;
      reader.readMessage(value,github_com_solo$io_solo$projects_projects_gloo$fed_api_fed_ratelimit_v1alpha1_rate_limit_config_pb.FederatedRateLimitConfigSpec.deserializeBinaryFromReader);
      msg.setSpec(value);
      break;
    case 3:
      var value = new github_com_solo$io_solo$projects_projects_gloo$fed_api_fed_ratelimit_v1alpha1_rate_limit_config_pb.FederatedRateLimitConfigStatus;
      reader.readMessage(value,github_com_solo$io_solo$projects_projects_gloo$fed_api_fed_ratelimit_v1alpha1_rate_limit_config_pb.FederatedRateLimitConfigStatus.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fed.rpc.solo.io.FederatedRateLimitConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fed.rpc.solo.io.FederatedRateLimitConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fed.rpc.solo.io.FederatedRateLimitConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fed.rpc.solo.io.FederatedRateLimitConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.ObjectMeta.serializeBinaryToWriter
    );
  }
  f = message.getSpec();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      github_com_solo$io_solo$projects_projects_gloo$fed_api_fed_ratelimit_v1alpha1_rate_limit_config_pb.FederatedRateLimitConfigSpec.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      github_com_solo$io_solo$projects_projects_gloo$fed_api_fed_ratelimit_v1alpha1_rate_limit_config_pb.FederatedRateLimitConfigStatus.serializeBinaryToWriter
    );
  }
};


/**
 * optional rpc.edge.gloo.solo.io.ObjectMeta metadata = 1;
 * @return {?proto.rpc.edge.gloo.solo.io.ObjectMeta}
 */
proto.fed.rpc.solo.io.FederatedRateLimitConfig.prototype.getMetadata = function() {
  return /** @type{?proto.rpc.edge.gloo.solo.io.ObjectMeta} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.ObjectMeta, 1));
};


/** @param {?proto.rpc.edge.gloo.solo.io.ObjectMeta|undefined} value */
proto.fed.rpc.solo.io.FederatedRateLimitConfig.prototype.setMetadata = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.fed.rpc.solo.io.FederatedRateLimitConfig.prototype.clearMetadata = function() {
  this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.fed.rpc.solo.io.FederatedRateLimitConfig.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional fed.ratelimit.solo.io.FederatedRateLimitConfigSpec spec = 2;
 * @return {?proto.fed.ratelimit.solo.io.FederatedRateLimitConfigSpec}
 */
proto.fed.rpc.solo.io.FederatedRateLimitConfig.prototype.getSpec = function() {
  return /** @type{?proto.fed.ratelimit.solo.io.FederatedRateLimitConfigSpec} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$projects_projects_gloo$fed_api_fed_ratelimit_v1alpha1_rate_limit_config_pb.FederatedRateLimitConfigSpec, 2));
};


/** @param {?proto.fed.ratelimit.solo.io.FederatedRateLimitConfigSpec|undefined} value */
proto.fed.rpc.solo.io.FederatedRateLimitConfig.prototype.setSpec = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.fed.rpc.solo.io.FederatedRateLimitConfig.prototype.clearSpec = function() {
  this.setSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.fed.rpc.solo.io.FederatedRateLimitConfig.prototype.hasSpec = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional fed.ratelimit.solo.io.FederatedRateLimitConfigStatus status = 3;
 * @return {?proto.fed.ratelimit.solo.io.FederatedRateLimitConfigStatus}
 */
proto.fed.rpc.solo.io.FederatedRateLimitConfig.prototype.getStatus = function() {
  return /** @type{?proto.fed.ratelimit.solo.io.FederatedRateLimitConfigStatus} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$projects_projects_gloo$fed_api_fed_ratelimit_v1alpha1_rate_limit_config_pb.FederatedRateLimitConfigStatus, 3));
};


/** @param {?proto.fed.ratelimit.solo.io.FederatedRateLimitConfigStatus|undefined} value */
proto.fed.rpc.solo.io.FederatedRateLimitConfig.prototype.setStatus = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.fed.rpc.solo.io.FederatedRateLimitConfig.prototype.clearStatus = function() {
  this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.fed.rpc.solo.io.FederatedRateLimitConfig.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fed.rpc.solo.io.ListFederatedRateLimitConfigsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fed.rpc.solo.io.ListFederatedRateLimitConfigsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.fed.rpc.solo.io.ListFederatedRateLimitConfigsRequest.displayName = 'proto.fed.rpc.solo.io.ListFederatedRateLimitConfigsRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fed.rpc.solo.io.ListFederatedRateLimitConfigsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.fed.rpc.solo.io.ListFederatedRateLimitConfigsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fed.rpc.solo.io.ListFederatedRateLimitConfigsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fed.rpc.solo.io.ListFederatedRateLimitConfigsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fed.rpc.solo.io.ListFederatedRateLimitConfigsRequest}
 */
proto.fed.rpc.solo.io.ListFederatedRateLimitConfigsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fed.rpc.solo.io.ListFederatedRateLimitConfigsRequest;
  return proto.fed.rpc.solo.io.ListFederatedRateLimitConfigsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fed.rpc.solo.io.ListFederatedRateLimitConfigsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fed.rpc.solo.io.ListFederatedRateLimitConfigsRequest}
 */
proto.fed.rpc.solo.io.ListFederatedRateLimitConfigsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fed.rpc.solo.io.ListFederatedRateLimitConfigsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fed.rpc.solo.io.ListFederatedRateLimitConfigsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fed.rpc.solo.io.ListFederatedRateLimitConfigsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fed.rpc.solo.io.ListFederatedRateLimitConfigsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fed.rpc.solo.io.ListFederatedRateLimitConfigsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.fed.rpc.solo.io.ListFederatedRateLimitConfigsResponse.repeatedFields_, null);
};
goog.inherits(proto.fed.rpc.solo.io.ListFederatedRateLimitConfigsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.fed.rpc.solo.io.ListFederatedRateLimitConfigsResponse.displayName = 'proto.fed.rpc.solo.io.ListFederatedRateLimitConfigsResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.fed.rpc.solo.io.ListFederatedRateLimitConfigsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fed.rpc.solo.io.ListFederatedRateLimitConfigsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.fed.rpc.solo.io.ListFederatedRateLimitConfigsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fed.rpc.solo.io.ListFederatedRateLimitConfigsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fed.rpc.solo.io.ListFederatedRateLimitConfigsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    federatedRateLimitConfigsList: jspb.Message.toObjectList(msg.getFederatedRateLimitConfigsList(),
    proto.fed.rpc.solo.io.FederatedRateLimitConfig.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fed.rpc.solo.io.ListFederatedRateLimitConfigsResponse}
 */
proto.fed.rpc.solo.io.ListFederatedRateLimitConfigsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fed.rpc.solo.io.ListFederatedRateLimitConfigsResponse;
  return proto.fed.rpc.solo.io.ListFederatedRateLimitConfigsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fed.rpc.solo.io.ListFederatedRateLimitConfigsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fed.rpc.solo.io.ListFederatedRateLimitConfigsResponse}
 */
proto.fed.rpc.solo.io.ListFederatedRateLimitConfigsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.fed.rpc.solo.io.FederatedRateLimitConfig;
      reader.readMessage(value,proto.fed.rpc.solo.io.FederatedRateLimitConfig.deserializeBinaryFromReader);
      msg.addFederatedRateLimitConfigs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fed.rpc.solo.io.ListFederatedRateLimitConfigsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fed.rpc.solo.io.ListFederatedRateLimitConfigsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fed.rpc.solo.io.ListFederatedRateLimitConfigsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fed.rpc.solo.io.ListFederatedRateLimitConfigsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFederatedRateLimitConfigsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.fed.rpc.solo.io.FederatedRateLimitConfig.serializeBinaryToWriter
    );
  }
};


/**
 * repeated FederatedRateLimitConfig federated_rate_limit_configs = 1;
 * @return {!Array<!proto.fed.rpc.solo.io.FederatedRateLimitConfig>}
 */
proto.fed.rpc.solo.io.ListFederatedRateLimitConfigsResponse.prototype.getFederatedRateLimitConfigsList = function() {
  return /** @type{!Array<!proto.fed.rpc.solo.io.FederatedRateLimitConfig>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.fed.rpc.solo.io.FederatedRateLimitConfig, 1));
};


/** @param {!Array<!proto.fed.rpc.solo.io.FederatedRateLimitConfig>} value */
proto.fed.rpc.solo.io.ListFederatedRateLimitConfigsResponse.prototype.setFederatedRateLimitConfigsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.fed.rpc.solo.io.FederatedRateLimitConfig=} opt_value
 * @param {number=} opt_index
 * @return {!proto.fed.rpc.solo.io.FederatedRateLimitConfig}
 */
proto.fed.rpc.solo.io.ListFederatedRateLimitConfigsResponse.prototype.addFederatedRateLimitConfigs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.fed.rpc.solo.io.FederatedRateLimitConfig, opt_index);
};


proto.fed.rpc.solo.io.ListFederatedRateLimitConfigsResponse.prototype.clearFederatedRateLimitConfigsList = function() {
  this.setFederatedRateLimitConfigsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fed.rpc.solo.io.GetFederatedRateLimitConfigYamlRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fed.rpc.solo.io.GetFederatedRateLimitConfigYamlRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.fed.rpc.solo.io.GetFederatedRateLimitConfigYamlRequest.displayName = 'proto.fed.rpc.solo.io.GetFederatedRateLimitConfigYamlRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fed.rpc.solo.io.GetFederatedRateLimitConfigYamlRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.fed.rpc.solo.io.GetFederatedRateLimitConfigYamlRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fed.rpc.solo.io.GetFederatedRateLimitConfigYamlRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fed.rpc.solo.io.GetFederatedRateLimitConfigYamlRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    federatedRateLimitConfigRef: (f = msg.getFederatedRateLimitConfigRef()) && github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fed.rpc.solo.io.GetFederatedRateLimitConfigYamlRequest}
 */
proto.fed.rpc.solo.io.GetFederatedRateLimitConfigYamlRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fed.rpc.solo.io.GetFederatedRateLimitConfigYamlRequest;
  return proto.fed.rpc.solo.io.GetFederatedRateLimitConfigYamlRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fed.rpc.solo.io.GetFederatedRateLimitConfigYamlRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fed.rpc.solo.io.GetFederatedRateLimitConfigYamlRequest}
 */
proto.fed.rpc.solo.io.GetFederatedRateLimitConfigYamlRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef;
      reader.readMessage(value,github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef.deserializeBinaryFromReader);
      msg.setFederatedRateLimitConfigRef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fed.rpc.solo.io.GetFederatedRateLimitConfigYamlRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fed.rpc.solo.io.GetFederatedRateLimitConfigYamlRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fed.rpc.solo.io.GetFederatedRateLimitConfigYamlRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fed.rpc.solo.io.GetFederatedRateLimitConfigYamlRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFederatedRateLimitConfigRef();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef.serializeBinaryToWriter
    );
  }
};


/**
 * optional core.skv2.solo.io.ObjectRef federated_rate_limit_config_ref = 1;
 * @return {?proto.core.skv2.solo.io.ObjectRef}
 */
proto.fed.rpc.solo.io.GetFederatedRateLimitConfigYamlRequest.prototype.getFederatedRateLimitConfigRef = function() {
  return /** @type{?proto.core.skv2.solo.io.ObjectRef} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef, 1));
};


/** @param {?proto.core.skv2.solo.io.ObjectRef|undefined} value */
proto.fed.rpc.solo.io.GetFederatedRateLimitConfigYamlRequest.prototype.setFederatedRateLimitConfigRef = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.fed.rpc.solo.io.GetFederatedRateLimitConfigYamlRequest.prototype.clearFederatedRateLimitConfigRef = function() {
  this.setFederatedRateLimitConfigRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.fed.rpc.solo.io.GetFederatedRateLimitConfigYamlRequest.prototype.hasFederatedRateLimitConfigRef = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fed.rpc.solo.io.GetFederatedRateLimitConfigYamlResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fed.rpc.solo.io.GetFederatedRateLimitConfigYamlResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.fed.rpc.solo.io.GetFederatedRateLimitConfigYamlResponse.displayName = 'proto.fed.rpc.solo.io.GetFederatedRateLimitConfigYamlResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fed.rpc.solo.io.GetFederatedRateLimitConfigYamlResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.fed.rpc.solo.io.GetFederatedRateLimitConfigYamlResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fed.rpc.solo.io.GetFederatedRateLimitConfigYamlResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fed.rpc.solo.io.GetFederatedRateLimitConfigYamlResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    yamlData: (f = msg.getYamlData()) && github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.ResourceYaml.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fed.rpc.solo.io.GetFederatedRateLimitConfigYamlResponse}
 */
proto.fed.rpc.solo.io.GetFederatedRateLimitConfigYamlResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fed.rpc.solo.io.GetFederatedRateLimitConfigYamlResponse;
  return proto.fed.rpc.solo.io.GetFederatedRateLimitConfigYamlResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fed.rpc.solo.io.GetFederatedRateLimitConfigYamlResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fed.rpc.solo.io.GetFederatedRateLimitConfigYamlResponse}
 */
proto.fed.rpc.solo.io.GetFederatedRateLimitConfigYamlResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.ResourceYaml;
      reader.readMessage(value,github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.ResourceYaml.deserializeBinaryFromReader);
      msg.setYamlData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fed.rpc.solo.io.GetFederatedRateLimitConfigYamlResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fed.rpc.solo.io.GetFederatedRateLimitConfigYamlResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fed.rpc.solo.io.GetFederatedRateLimitConfigYamlResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fed.rpc.solo.io.GetFederatedRateLimitConfigYamlResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getYamlData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.ResourceYaml.serializeBinaryToWriter
    );
  }
};


/**
 * optional rpc.edge.gloo.solo.io.ResourceYaml yaml_data = 1;
 * @return {?proto.rpc.edge.gloo.solo.io.ResourceYaml}
 */
proto.fed.rpc.solo.io.GetFederatedRateLimitConfigYamlResponse.prototype.getYamlData = function() {
  return /** @type{?proto.rpc.edge.gloo.solo.io.ResourceYaml} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.ResourceYaml, 1));
};


/** @param {?proto.rpc.edge.gloo.solo.io.ResourceYaml|undefined} value */
proto.fed.rpc.solo.io.GetFederatedRateLimitConfigYamlResponse.prototype.setYamlData = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.fed.rpc.solo.io.GetFederatedRateLimitConfigYamlResponse.prototype.clearYamlData = function() {
  this.setYamlData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.fed.rpc.solo.io.GetFederatedRateLimitConfigYamlResponse.prototype.hasYamlData = function() {
  return jspb.Message.getField(this, 1) != null;
};


goog.object.extend(exports, proto.fed.rpc.solo.io);
