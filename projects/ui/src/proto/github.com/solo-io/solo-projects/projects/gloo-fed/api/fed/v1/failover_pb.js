/* eslint-disable */
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var extproto_ext_pb = require('../../../../../../../../extproto/ext_pb.js');
var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
var github_com_solo$io_skv2_api_core_v1_core_pb = require('../../../../../../../../github.com/solo-io/skv2/api/core/v1/core_pb.js');
goog.exportSymbol('proto.fed.solo.io.FailoverSchemeSpec', null, global);
goog.exportSymbol('proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints', null, global);
goog.exportSymbol('proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.LocalityLbTargets', null, global);
goog.exportSymbol('proto.fed.solo.io.FailoverSchemeStatus', null, global);
goog.exportSymbol('proto.fed.solo.io.FailoverSchemeStatus.State', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fed.solo.io.FailoverSchemeSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.fed.solo.io.FailoverSchemeSpec.repeatedFields_, null);
};
goog.inherits(proto.fed.solo.io.FailoverSchemeSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.fed.solo.io.FailoverSchemeSpec.displayName = 'proto.fed.solo.io.FailoverSchemeSpec';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.fed.solo.io.FailoverSchemeSpec.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fed.solo.io.FailoverSchemeSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.fed.solo.io.FailoverSchemeSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fed.solo.io.FailoverSchemeSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fed.solo.io.FailoverSchemeSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    primary: (f = msg.getPrimary()) && github_com_solo$io_skv2_api_core_v1_core_pb.ClusterObjectRef.toObject(includeInstance, f),
    failoverGroupsList: jspb.Message.toObjectList(msg.getFailoverGroupsList(),
    proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fed.solo.io.FailoverSchemeSpec}
 */
proto.fed.solo.io.FailoverSchemeSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fed.solo.io.FailoverSchemeSpec;
  return proto.fed.solo.io.FailoverSchemeSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fed.solo.io.FailoverSchemeSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fed.solo.io.FailoverSchemeSpec}
 */
proto.fed.solo.io.FailoverSchemeSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_skv2_api_core_v1_core_pb.ClusterObjectRef;
      reader.readMessage(value,github_com_solo$io_skv2_api_core_v1_core_pb.ClusterObjectRef.deserializeBinaryFromReader);
      msg.setPrimary(value);
      break;
    case 2:
      var value = new proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints;
      reader.readMessage(value,proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.deserializeBinaryFromReader);
      msg.addFailoverGroups(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fed.solo.io.FailoverSchemeSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fed.solo.io.FailoverSchemeSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fed.solo.io.FailoverSchemeSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fed.solo.io.FailoverSchemeSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPrimary();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_skv2_api_core_v1_core_pb.ClusterObjectRef.serializeBinaryToWriter
    );
  }
  f = message.getFailoverGroupsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.repeatedFields_, null);
};
goog.inherits(proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.displayName = 'proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.prototype.toObject = function(opt_includeInstance) {
  return proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.toObject = function(includeInstance, msg) {
  var f, obj = {
    priorityGroupList: jspb.Message.toObjectList(msg.getPriorityGroupList(),
    proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.LocalityLbTargets.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints}
 */
proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints;
  return proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints}
 */
proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.LocalityLbTargets;
      reader.readMessage(value,proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.LocalityLbTargets.deserializeBinaryFromReader);
      msg.addPriorityGroup(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPriorityGroupList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.LocalityLbTargets.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.LocalityLbTargets = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.LocalityLbTargets.repeatedFields_, null);
};
goog.inherits(proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.LocalityLbTargets, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.LocalityLbTargets.displayName = 'proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.LocalityLbTargets';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.LocalityLbTargets.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.LocalityLbTargets.prototype.toObject = function(opt_includeInstance) {
  return proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.LocalityLbTargets.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.LocalityLbTargets} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.LocalityLbTargets.toObject = function(includeInstance, msg) {
  var f, obj = {
    cluster: jspb.Message.getFieldWithDefault(msg, 1, ""),
    upstreamsList: jspb.Message.toObjectList(msg.getUpstreamsList(),
    github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef.toObject, includeInstance),
    localityWeight: (f = msg.getLocalityWeight()) && google_protobuf_wrappers_pb.UInt32Value.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.LocalityLbTargets}
 */
proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.LocalityLbTargets.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.LocalityLbTargets;
  return proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.LocalityLbTargets.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.LocalityLbTargets} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.LocalityLbTargets}
 */
proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.LocalityLbTargets.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCluster(value);
      break;
    case 2:
      var value = new github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef;
      reader.readMessage(value,github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef.deserializeBinaryFromReader);
      msg.addUpstreams(value);
      break;
    case 3:
      var value = new google_protobuf_wrappers_pb.UInt32Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.UInt32Value.deserializeBinaryFromReader);
      msg.setLocalityWeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.LocalityLbTargets.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.LocalityLbTargets.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.LocalityLbTargets} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.LocalityLbTargets.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCluster();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUpstreamsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef.serializeBinaryToWriter
    );
  }
  f = message.getLocalityWeight();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_wrappers_pb.UInt32Value.serializeBinaryToWriter
    );
  }
};


/**
 * optional string cluster = 1;
 * @return {string}
 */
proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.LocalityLbTargets.prototype.getCluster = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.LocalityLbTargets.prototype.setCluster = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated core.skv2.solo.io.ObjectRef upstreams = 2;
 * @return {!Array<!proto.core.skv2.solo.io.ObjectRef>}
 */
proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.LocalityLbTargets.prototype.getUpstreamsList = function() {
  return /** @type{!Array<!proto.core.skv2.solo.io.ObjectRef>} */ (
    jspb.Message.getRepeatedWrapperField(this, github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef, 2));
};


/** @param {!Array<!proto.core.skv2.solo.io.ObjectRef>} value */
proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.LocalityLbTargets.prototype.setUpstreamsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.core.skv2.solo.io.ObjectRef=} opt_value
 * @param {number=} opt_index
 * @return {!proto.core.skv2.solo.io.ObjectRef}
 */
proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.LocalityLbTargets.prototype.addUpstreams = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.core.skv2.solo.io.ObjectRef, opt_index);
};


proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.LocalityLbTargets.prototype.clearUpstreamsList = function() {
  this.setUpstreamsList([]);
};


/**
 * optional google.protobuf.UInt32Value locality_weight = 3;
 * @return {?proto.google.protobuf.UInt32Value}
 */
proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.LocalityLbTargets.prototype.getLocalityWeight = function() {
  return /** @type{?proto.google.protobuf.UInt32Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.UInt32Value, 3));
};


/** @param {?proto.google.protobuf.UInt32Value|undefined} value */
proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.LocalityLbTargets.prototype.setLocalityWeight = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.LocalityLbTargets.prototype.clearLocalityWeight = function() {
  this.setLocalityWeight(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.LocalityLbTargets.prototype.hasLocalityWeight = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated LocalityLbTargets priority_group = 2;
 * @return {!Array<!proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.LocalityLbTargets>}
 */
proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.prototype.getPriorityGroupList = function() {
  return /** @type{!Array<!proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.LocalityLbTargets>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.LocalityLbTargets, 2));
};


/** @param {!Array<!proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.LocalityLbTargets>} value */
proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.prototype.setPriorityGroupList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.LocalityLbTargets=} opt_value
 * @param {number=} opt_index
 * @return {!proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.LocalityLbTargets}
 */
proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.prototype.addPriorityGroup = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.LocalityLbTargets, opt_index);
};


proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints.prototype.clearPriorityGroupList = function() {
  this.setPriorityGroupList([]);
};


/**
 * optional core.skv2.solo.io.ClusterObjectRef primary = 1;
 * @return {?proto.core.skv2.solo.io.ClusterObjectRef}
 */
proto.fed.solo.io.FailoverSchemeSpec.prototype.getPrimary = function() {
  return /** @type{?proto.core.skv2.solo.io.ClusterObjectRef} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_skv2_api_core_v1_core_pb.ClusterObjectRef, 1));
};


/** @param {?proto.core.skv2.solo.io.ClusterObjectRef|undefined} value */
proto.fed.solo.io.FailoverSchemeSpec.prototype.setPrimary = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.fed.solo.io.FailoverSchemeSpec.prototype.clearPrimary = function() {
  this.setPrimary(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.fed.solo.io.FailoverSchemeSpec.prototype.hasPrimary = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated FailoverEndpoints failover_groups = 2;
 * @return {!Array<!proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints>}
 */
proto.fed.solo.io.FailoverSchemeSpec.prototype.getFailoverGroupsList = function() {
  return /** @type{!Array<!proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints, 2));
};


/** @param {!Array<!proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints>} value */
proto.fed.solo.io.FailoverSchemeSpec.prototype.setFailoverGroupsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints=} opt_value
 * @param {number=} opt_index
 * @return {!proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints}
 */
proto.fed.solo.io.FailoverSchemeSpec.prototype.addFailoverGroups = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.fed.solo.io.FailoverSchemeSpec.FailoverEndpoints, opt_index);
};


proto.fed.solo.io.FailoverSchemeSpec.prototype.clearFailoverGroupsList = function() {
  this.setFailoverGroupsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fed.solo.io.FailoverSchemeStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fed.solo.io.FailoverSchemeStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.fed.solo.io.FailoverSchemeStatus.displayName = 'proto.fed.solo.io.FailoverSchemeStatus';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fed.solo.io.FailoverSchemeStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.fed.solo.io.FailoverSchemeStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fed.solo.io.FailoverSchemeStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fed.solo.io.FailoverSchemeStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    state: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    observedGeneration: jspb.Message.getFieldWithDefault(msg, 3, 0),
    processingTime: (f = msg.getProcessingTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fed.solo.io.FailoverSchemeStatus}
 */
proto.fed.solo.io.FailoverSchemeStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fed.solo.io.FailoverSchemeStatus;
  return proto.fed.solo.io.FailoverSchemeStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fed.solo.io.FailoverSchemeStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fed.solo.io.FailoverSchemeStatus}
 */
proto.fed.solo.io.FailoverSchemeStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.fed.solo.io.FailoverSchemeStatus.State} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setObservedGeneration(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setProcessingTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fed.solo.io.FailoverSchemeStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fed.solo.io.FailoverSchemeStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fed.solo.io.FailoverSchemeStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fed.solo.io.FailoverSchemeStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getObservedGeneration();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getProcessingTime();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.fed.solo.io.FailoverSchemeStatus.State = {
  PENDING: 0,
  PROCESSING: 1,
  INVALID: 2,
  FAILED: 3,
  ACCEPTED: 4
};

/**
 * optional State state = 1;
 * @return {!proto.fed.solo.io.FailoverSchemeStatus.State}
 */
proto.fed.solo.io.FailoverSchemeStatus.prototype.getState = function() {
  return /** @type {!proto.fed.solo.io.FailoverSchemeStatus.State} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.fed.solo.io.FailoverSchemeStatus.State} value */
proto.fed.solo.io.FailoverSchemeStatus.prototype.setState = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.fed.solo.io.FailoverSchemeStatus.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.fed.solo.io.FailoverSchemeStatus.prototype.setMessage = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 observed_generation = 3;
 * @return {number}
 */
proto.fed.solo.io.FailoverSchemeStatus.prototype.getObservedGeneration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.fed.solo.io.FailoverSchemeStatus.prototype.setObservedGeneration = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional google.protobuf.Timestamp processing_time = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.fed.solo.io.FailoverSchemeStatus.prototype.getProcessingTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.fed.solo.io.FailoverSchemeStatus.prototype.setProcessingTime = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.fed.solo.io.FailoverSchemeStatus.prototype.clearProcessingTime = function() {
  this.setProcessingTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.fed.solo.io.FailoverSchemeStatus.prototype.hasProcessingTime = function() {
  return jspb.Message.getField(this, 4) != null;
};


goog.object.extend(exports, proto.fed.solo.io);
