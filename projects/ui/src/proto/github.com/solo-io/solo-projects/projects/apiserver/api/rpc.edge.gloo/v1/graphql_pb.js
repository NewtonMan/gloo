/* eslint-disable */
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var extproto_ext_pb = require('../../../../../../../../extproto/ext_pb.js');
var github_com_solo$io_skv2_api_core_v1_core_pb = require('../../../../../../../../github.com/solo-io/skv2/api/core/v1/core_pb.js');
var github_com_solo$io_solo$apis_api_gloo_graphql_gloo_v1alpha1_graphql_pb = require('../../../../../../../../github.com/solo-io/solo-apis/api/gloo/graphql.gloo/v1alpha1/graphql_pb.js');
var github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb = require('../../../../../../../../github.com/solo-io/solo-projects/projects/apiserver/api/rpc.edge.gloo/v1/common_pb.js');
goog.exportSymbol('proto.rpc.edge.gloo.solo.io.CreateGraphqlApiRequest', null, global);
goog.exportSymbol('proto.rpc.edge.gloo.solo.io.CreateGraphqlApiResponse', null, global);
goog.exportSymbol('proto.rpc.edge.gloo.solo.io.DeleteGraphqlApiRequest', null, global);
goog.exportSymbol('proto.rpc.edge.gloo.solo.io.DeleteGraphqlApiResponse', null, global);
goog.exportSymbol('proto.rpc.edge.gloo.solo.io.GetGraphqlApiRequest', null, global);
goog.exportSymbol('proto.rpc.edge.gloo.solo.io.GetGraphqlApiResponse', null, global);
goog.exportSymbol('proto.rpc.edge.gloo.solo.io.GetGraphqlApiYamlRequest', null, global);
goog.exportSymbol('proto.rpc.edge.gloo.solo.io.GetGraphqlApiYamlResponse', null, global);
goog.exportSymbol('proto.rpc.edge.gloo.solo.io.GraphqlApi', null, global);
goog.exportSymbol('proto.rpc.edge.gloo.solo.io.GraphqlApiSummary', null, global);
goog.exportSymbol('proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.ExecutableSchemaSummary', null, global);
goog.exportSymbol('proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.StitchedSchemaSummary', null, global);
goog.exportSymbol('proto.rpc.edge.gloo.solo.io.ListGraphqlApisRequest', null, global);
goog.exportSymbol('proto.rpc.edge.gloo.solo.io.ListGraphqlApisResponse', null, global);
goog.exportSymbol('proto.rpc.edge.gloo.solo.io.UpdateGraphqlApiRequest', null, global);
goog.exportSymbol('proto.rpc.edge.gloo.solo.io.UpdateGraphqlApiResponse', null, global);
goog.exportSymbol('proto.rpc.edge.gloo.solo.io.ValidateResolverYamlRequest', null, global);
goog.exportSymbol('proto.rpc.edge.gloo.solo.io.ValidateResolverYamlRequest.ResolverType', null, global);
goog.exportSymbol('proto.rpc.edge.gloo.solo.io.ValidateResolverYamlResponse', null, global);
goog.exportSymbol('proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionRequest', null, global);
goog.exportSymbol('proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionResponse', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rpc.edge.gloo.solo.io.GraphqlApi = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rpc.edge.gloo.solo.io.GraphqlApi, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.rpc.edge.gloo.solo.io.GraphqlApi.displayName = 'proto.rpc.edge.gloo.solo.io.GraphqlApi';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rpc.edge.gloo.solo.io.GraphqlApi.prototype.toObject = function(opt_includeInstance) {
  return proto.rpc.edge.gloo.solo.io.GraphqlApi.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rpc.edge.gloo.solo.io.GraphqlApi} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.GraphqlApi.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.ObjectMeta.toObject(includeInstance, f),
    spec: (f = msg.getSpec()) && github_com_solo$io_solo$apis_api_gloo_graphql_gloo_v1alpha1_graphql_pb.GraphQLApiSpec.toObject(includeInstance, f),
    status: (f = msg.getStatus()) && github_com_solo$io_solo$apis_api_gloo_graphql_gloo_v1alpha1_graphql_pb.GraphQLApiStatus.toObject(includeInstance, f),
    glooInstance: (f = msg.getGlooInstance()) && github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rpc.edge.gloo.solo.io.GraphqlApi}
 */
proto.rpc.edge.gloo.solo.io.GraphqlApi.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rpc.edge.gloo.solo.io.GraphqlApi;
  return proto.rpc.edge.gloo.solo.io.GraphqlApi.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rpc.edge.gloo.solo.io.GraphqlApi} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rpc.edge.gloo.solo.io.GraphqlApi}
 */
proto.rpc.edge.gloo.solo.io.GraphqlApi.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.ObjectMeta;
      reader.readMessage(value,github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.ObjectMeta.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = new github_com_solo$io_solo$apis_api_gloo_graphql_gloo_v1alpha1_graphql_pb.GraphQLApiSpec;
      reader.readMessage(value,github_com_solo$io_solo$apis_api_gloo_graphql_gloo_v1alpha1_graphql_pb.GraphQLApiSpec.deserializeBinaryFromReader);
      msg.setSpec(value);
      break;
    case 3:
      var value = new github_com_solo$io_solo$apis_api_gloo_graphql_gloo_v1alpha1_graphql_pb.GraphQLApiStatus;
      reader.readMessage(value,github_com_solo$io_solo$apis_api_gloo_graphql_gloo_v1alpha1_graphql_pb.GraphQLApiStatus.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 4:
      var value = new github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef;
      reader.readMessage(value,github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef.deserializeBinaryFromReader);
      msg.setGlooInstance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rpc.edge.gloo.solo.io.GraphqlApi.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rpc.edge.gloo.solo.io.GraphqlApi.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rpc.edge.gloo.solo.io.GraphqlApi} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.GraphqlApi.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.ObjectMeta.serializeBinaryToWriter
    );
  }
  f = message.getSpec();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      github_com_solo$io_solo$apis_api_gloo_graphql_gloo_v1alpha1_graphql_pb.GraphQLApiSpec.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      github_com_solo$io_solo$apis_api_gloo_graphql_gloo_v1alpha1_graphql_pb.GraphQLApiStatus.serializeBinaryToWriter
    );
  }
  f = message.getGlooInstance();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef.serializeBinaryToWriter
    );
  }
};


/**
 * optional ObjectMeta metadata = 1;
 * @return {?proto.rpc.edge.gloo.solo.io.ObjectMeta}
 */
proto.rpc.edge.gloo.solo.io.GraphqlApi.prototype.getMetadata = function() {
  return /** @type{?proto.rpc.edge.gloo.solo.io.ObjectMeta} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.ObjectMeta, 1));
};


/** @param {?proto.rpc.edge.gloo.solo.io.ObjectMeta|undefined} value */
proto.rpc.edge.gloo.solo.io.GraphqlApi.prototype.setMetadata = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.rpc.edge.gloo.solo.io.GraphqlApi.prototype.clearMetadata = function() {
  this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rpc.edge.gloo.solo.io.GraphqlApi.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional graphql.gloo.solo.io.GraphQLApiSpec spec = 2;
 * @return {?proto.graphql.gloo.solo.io.GraphQLApiSpec}
 */
proto.rpc.edge.gloo.solo.io.GraphqlApi.prototype.getSpec = function() {
  return /** @type{?proto.graphql.gloo.solo.io.GraphQLApiSpec} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$apis_api_gloo_graphql_gloo_v1alpha1_graphql_pb.GraphQLApiSpec, 2));
};


/** @param {?proto.graphql.gloo.solo.io.GraphQLApiSpec|undefined} value */
proto.rpc.edge.gloo.solo.io.GraphqlApi.prototype.setSpec = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.rpc.edge.gloo.solo.io.GraphqlApi.prototype.clearSpec = function() {
  this.setSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rpc.edge.gloo.solo.io.GraphqlApi.prototype.hasSpec = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional graphql.gloo.solo.io.GraphQLApiStatus status = 3;
 * @return {?proto.graphql.gloo.solo.io.GraphQLApiStatus}
 */
proto.rpc.edge.gloo.solo.io.GraphqlApi.prototype.getStatus = function() {
  return /** @type{?proto.graphql.gloo.solo.io.GraphQLApiStatus} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$apis_api_gloo_graphql_gloo_v1alpha1_graphql_pb.GraphQLApiStatus, 3));
};


/** @param {?proto.graphql.gloo.solo.io.GraphQLApiStatus|undefined} value */
proto.rpc.edge.gloo.solo.io.GraphqlApi.prototype.setStatus = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.rpc.edge.gloo.solo.io.GraphqlApi.prototype.clearStatus = function() {
  this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rpc.edge.gloo.solo.io.GraphqlApi.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional core.skv2.solo.io.ObjectRef gloo_instance = 4;
 * @return {?proto.core.skv2.solo.io.ObjectRef}
 */
proto.rpc.edge.gloo.solo.io.GraphqlApi.prototype.getGlooInstance = function() {
  return /** @type{?proto.core.skv2.solo.io.ObjectRef} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef, 4));
};


/** @param {?proto.core.skv2.solo.io.ObjectRef|undefined} value */
proto.rpc.edge.gloo.solo.io.GraphqlApi.prototype.setGlooInstance = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.rpc.edge.gloo.solo.io.GraphqlApi.prototype.clearGlooInstance = function() {
  this.setGlooInstance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rpc.edge.gloo.solo.io.GraphqlApi.prototype.hasGlooInstance = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rpc.edge.gloo.solo.io.GraphqlApiSummary = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.oneofGroups_);
};
goog.inherits(proto.rpc.edge.gloo.solo.io.GraphqlApiSummary, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.displayName = 'proto.rpc.edge.gloo.solo.io.GraphqlApiSummary';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.oneofGroups_ = [[4,5]];

/**
 * @enum {number}
 */
proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.ApiTypeSummaryCase = {
  API_TYPE_SUMMARY_NOT_SET: 0,
  EXECUTABLE: 4,
  STITCHED: 5
};

/**
 * @return {proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.ApiTypeSummaryCase}
 */
proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.prototype.getApiTypeSummaryCase = function() {
  return /** @type {proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.ApiTypeSummaryCase} */(jspb.Message.computeOneofCase(this, proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.prototype.toObject = function(opt_includeInstance) {
  return proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rpc.edge.gloo.solo.io.GraphqlApiSummary} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.ObjectMeta.toObject(includeInstance, f),
    status: (f = msg.getStatus()) && github_com_solo$io_solo$apis_api_gloo_graphql_gloo_v1alpha1_graphql_pb.GraphQLApiStatus.toObject(includeInstance, f),
    glooInstance: (f = msg.getGlooInstance()) && github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef.toObject(includeInstance, f),
    executable: (f = msg.getExecutable()) && proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.ExecutableSchemaSummary.toObject(includeInstance, f),
    stitched: (f = msg.getStitched()) && proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.StitchedSchemaSummary.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rpc.edge.gloo.solo.io.GraphqlApiSummary}
 */
proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rpc.edge.gloo.solo.io.GraphqlApiSummary;
  return proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rpc.edge.gloo.solo.io.GraphqlApiSummary} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rpc.edge.gloo.solo.io.GraphqlApiSummary}
 */
proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.ObjectMeta;
      reader.readMessage(value,github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.ObjectMeta.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = new github_com_solo$io_solo$apis_api_gloo_graphql_gloo_v1alpha1_graphql_pb.GraphQLApiStatus;
      reader.readMessage(value,github_com_solo$io_solo$apis_api_gloo_graphql_gloo_v1alpha1_graphql_pb.GraphQLApiStatus.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 3:
      var value = new github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef;
      reader.readMessage(value,github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef.deserializeBinaryFromReader);
      msg.setGlooInstance(value);
      break;
    case 4:
      var value = new proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.ExecutableSchemaSummary;
      reader.readMessage(value,proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.ExecutableSchemaSummary.deserializeBinaryFromReader);
      msg.setExecutable(value);
      break;
    case 5:
      var value = new proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.StitchedSchemaSummary;
      reader.readMessage(value,proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.StitchedSchemaSummary.deserializeBinaryFromReader);
      msg.setStitched(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rpc.edge.gloo.solo.io.GraphqlApiSummary} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.ObjectMeta.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      github_com_solo$io_solo$apis_api_gloo_graphql_gloo_v1alpha1_graphql_pb.GraphQLApiStatus.serializeBinaryToWriter
    );
  }
  f = message.getGlooInstance();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef.serializeBinaryToWriter
    );
  }
  f = message.getExecutable();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.ExecutableSchemaSummary.serializeBinaryToWriter
    );
  }
  f = message.getStitched();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.StitchedSchemaSummary.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.ExecutableSchemaSummary = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.ExecutableSchemaSummary, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.ExecutableSchemaSummary.displayName = 'proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.ExecutableSchemaSummary';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.ExecutableSchemaSummary.prototype.toObject = function(opt_includeInstance) {
  return proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.ExecutableSchemaSummary.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.ExecutableSchemaSummary} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.ExecutableSchemaSummary.toObject = function(includeInstance, msg) {
  var f, obj = {
    numResolvers: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.ExecutableSchemaSummary}
 */
proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.ExecutableSchemaSummary.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.ExecutableSchemaSummary;
  return proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.ExecutableSchemaSummary.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.ExecutableSchemaSummary} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.ExecutableSchemaSummary}
 */
proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.ExecutableSchemaSummary.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNumResolvers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.ExecutableSchemaSummary.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.ExecutableSchemaSummary.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.ExecutableSchemaSummary} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.ExecutableSchemaSummary.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNumResolvers();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 num_resolvers = 1;
 * @return {number}
 */
proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.ExecutableSchemaSummary.prototype.getNumResolvers = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.ExecutableSchemaSummary.prototype.setNumResolvers = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.StitchedSchemaSummary = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.StitchedSchemaSummary, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.StitchedSchemaSummary.displayName = 'proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.StitchedSchemaSummary';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.StitchedSchemaSummary.prototype.toObject = function(opt_includeInstance) {
  return proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.StitchedSchemaSummary.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.StitchedSchemaSummary} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.StitchedSchemaSummary.toObject = function(includeInstance, msg) {
  var f, obj = {
    numSubschemas: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.StitchedSchemaSummary}
 */
proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.StitchedSchemaSummary.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.StitchedSchemaSummary;
  return proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.StitchedSchemaSummary.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.StitchedSchemaSummary} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.StitchedSchemaSummary}
 */
proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.StitchedSchemaSummary.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNumSubschemas(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.StitchedSchemaSummary.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.StitchedSchemaSummary.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.StitchedSchemaSummary} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.StitchedSchemaSummary.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNumSubschemas();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 num_subschemas = 1;
 * @return {number}
 */
proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.StitchedSchemaSummary.prototype.getNumSubschemas = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.StitchedSchemaSummary.prototype.setNumSubschemas = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional ObjectMeta metadata = 1;
 * @return {?proto.rpc.edge.gloo.solo.io.ObjectMeta}
 */
proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.prototype.getMetadata = function() {
  return /** @type{?proto.rpc.edge.gloo.solo.io.ObjectMeta} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.ObjectMeta, 1));
};


/** @param {?proto.rpc.edge.gloo.solo.io.ObjectMeta|undefined} value */
proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.prototype.setMetadata = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.prototype.clearMetadata = function() {
  this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional graphql.gloo.solo.io.GraphQLApiStatus status = 2;
 * @return {?proto.graphql.gloo.solo.io.GraphQLApiStatus}
 */
proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.prototype.getStatus = function() {
  return /** @type{?proto.graphql.gloo.solo.io.GraphQLApiStatus} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$apis_api_gloo_graphql_gloo_v1alpha1_graphql_pb.GraphQLApiStatus, 2));
};


/** @param {?proto.graphql.gloo.solo.io.GraphQLApiStatus|undefined} value */
proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.prototype.setStatus = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.prototype.clearStatus = function() {
  this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional core.skv2.solo.io.ObjectRef gloo_instance = 3;
 * @return {?proto.core.skv2.solo.io.ObjectRef}
 */
proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.prototype.getGlooInstance = function() {
  return /** @type{?proto.core.skv2.solo.io.ObjectRef} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef, 3));
};


/** @param {?proto.core.skv2.solo.io.ObjectRef|undefined} value */
proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.prototype.setGlooInstance = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.prototype.clearGlooInstance = function() {
  this.setGlooInstance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.prototype.hasGlooInstance = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ExecutableSchemaSummary executable = 4;
 * @return {?proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.ExecutableSchemaSummary}
 */
proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.prototype.getExecutable = function() {
  return /** @type{?proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.ExecutableSchemaSummary} */ (
    jspb.Message.getWrapperField(this, proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.ExecutableSchemaSummary, 4));
};


/** @param {?proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.ExecutableSchemaSummary|undefined} value */
proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.prototype.setExecutable = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.oneofGroups_[0], value);
};


proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.prototype.clearExecutable = function() {
  this.setExecutable(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.prototype.hasExecutable = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional StitchedSchemaSummary stitched = 5;
 * @return {?proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.StitchedSchemaSummary}
 */
proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.prototype.getStitched = function() {
  return /** @type{?proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.StitchedSchemaSummary} */ (
    jspb.Message.getWrapperField(this, proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.StitchedSchemaSummary, 5));
};


/** @param {?proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.StitchedSchemaSummary|undefined} value */
proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.prototype.setStitched = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.oneofGroups_[0], value);
};


proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.prototype.clearStitched = function() {
  this.setStitched(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.prototype.hasStitched = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rpc.edge.gloo.solo.io.GetGraphqlApiRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rpc.edge.gloo.solo.io.GetGraphqlApiRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.rpc.edge.gloo.solo.io.GetGraphqlApiRequest.displayName = 'proto.rpc.edge.gloo.solo.io.GetGraphqlApiRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rpc.edge.gloo.solo.io.GetGraphqlApiRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.rpc.edge.gloo.solo.io.GetGraphqlApiRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rpc.edge.gloo.solo.io.GetGraphqlApiRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.GetGraphqlApiRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    graphqlApiRef: (f = msg.getGraphqlApiRef()) && github_com_solo$io_skv2_api_core_v1_core_pb.ClusterObjectRef.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rpc.edge.gloo.solo.io.GetGraphqlApiRequest}
 */
proto.rpc.edge.gloo.solo.io.GetGraphqlApiRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rpc.edge.gloo.solo.io.GetGraphqlApiRequest;
  return proto.rpc.edge.gloo.solo.io.GetGraphqlApiRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rpc.edge.gloo.solo.io.GetGraphqlApiRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rpc.edge.gloo.solo.io.GetGraphqlApiRequest}
 */
proto.rpc.edge.gloo.solo.io.GetGraphqlApiRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_skv2_api_core_v1_core_pb.ClusterObjectRef;
      reader.readMessage(value,github_com_solo$io_skv2_api_core_v1_core_pb.ClusterObjectRef.deserializeBinaryFromReader);
      msg.setGraphqlApiRef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rpc.edge.gloo.solo.io.GetGraphqlApiRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rpc.edge.gloo.solo.io.GetGraphqlApiRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rpc.edge.gloo.solo.io.GetGraphqlApiRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.GetGraphqlApiRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGraphqlApiRef();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_skv2_api_core_v1_core_pb.ClusterObjectRef.serializeBinaryToWriter
    );
  }
};


/**
 * optional core.skv2.solo.io.ClusterObjectRef graphql_api_ref = 1;
 * @return {?proto.core.skv2.solo.io.ClusterObjectRef}
 */
proto.rpc.edge.gloo.solo.io.GetGraphqlApiRequest.prototype.getGraphqlApiRef = function() {
  return /** @type{?proto.core.skv2.solo.io.ClusterObjectRef} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_skv2_api_core_v1_core_pb.ClusterObjectRef, 1));
};


/** @param {?proto.core.skv2.solo.io.ClusterObjectRef|undefined} value */
proto.rpc.edge.gloo.solo.io.GetGraphqlApiRequest.prototype.setGraphqlApiRef = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.rpc.edge.gloo.solo.io.GetGraphqlApiRequest.prototype.clearGraphqlApiRef = function() {
  this.setGraphqlApiRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rpc.edge.gloo.solo.io.GetGraphqlApiRequest.prototype.hasGraphqlApiRef = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rpc.edge.gloo.solo.io.GetGraphqlApiResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rpc.edge.gloo.solo.io.GetGraphqlApiResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.rpc.edge.gloo.solo.io.GetGraphqlApiResponse.displayName = 'proto.rpc.edge.gloo.solo.io.GetGraphqlApiResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rpc.edge.gloo.solo.io.GetGraphqlApiResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.rpc.edge.gloo.solo.io.GetGraphqlApiResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rpc.edge.gloo.solo.io.GetGraphqlApiResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.GetGraphqlApiResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    graphqlApi: (f = msg.getGraphqlApi()) && proto.rpc.edge.gloo.solo.io.GraphqlApi.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rpc.edge.gloo.solo.io.GetGraphqlApiResponse}
 */
proto.rpc.edge.gloo.solo.io.GetGraphqlApiResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rpc.edge.gloo.solo.io.GetGraphqlApiResponse;
  return proto.rpc.edge.gloo.solo.io.GetGraphqlApiResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rpc.edge.gloo.solo.io.GetGraphqlApiResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rpc.edge.gloo.solo.io.GetGraphqlApiResponse}
 */
proto.rpc.edge.gloo.solo.io.GetGraphqlApiResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rpc.edge.gloo.solo.io.GraphqlApi;
      reader.readMessage(value,proto.rpc.edge.gloo.solo.io.GraphqlApi.deserializeBinaryFromReader);
      msg.setGraphqlApi(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rpc.edge.gloo.solo.io.GetGraphqlApiResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rpc.edge.gloo.solo.io.GetGraphqlApiResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rpc.edge.gloo.solo.io.GetGraphqlApiResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.GetGraphqlApiResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGraphqlApi();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rpc.edge.gloo.solo.io.GraphqlApi.serializeBinaryToWriter
    );
  }
};


/**
 * optional GraphqlApi graphql_api = 1;
 * @return {?proto.rpc.edge.gloo.solo.io.GraphqlApi}
 */
proto.rpc.edge.gloo.solo.io.GetGraphqlApiResponse.prototype.getGraphqlApi = function() {
  return /** @type{?proto.rpc.edge.gloo.solo.io.GraphqlApi} */ (
    jspb.Message.getWrapperField(this, proto.rpc.edge.gloo.solo.io.GraphqlApi, 1));
};


/** @param {?proto.rpc.edge.gloo.solo.io.GraphqlApi|undefined} value */
proto.rpc.edge.gloo.solo.io.GetGraphqlApiResponse.prototype.setGraphqlApi = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.rpc.edge.gloo.solo.io.GetGraphqlApiResponse.prototype.clearGraphqlApi = function() {
  this.setGraphqlApi(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rpc.edge.gloo.solo.io.GetGraphqlApiResponse.prototype.hasGraphqlApi = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rpc.edge.gloo.solo.io.ListGraphqlApisRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rpc.edge.gloo.solo.io.ListGraphqlApisRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.rpc.edge.gloo.solo.io.ListGraphqlApisRequest.displayName = 'proto.rpc.edge.gloo.solo.io.ListGraphqlApisRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rpc.edge.gloo.solo.io.ListGraphqlApisRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.rpc.edge.gloo.solo.io.ListGraphqlApisRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rpc.edge.gloo.solo.io.ListGraphqlApisRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.ListGraphqlApisRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    glooInstanceRef: (f = msg.getGlooInstanceRef()) && github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rpc.edge.gloo.solo.io.ListGraphqlApisRequest}
 */
proto.rpc.edge.gloo.solo.io.ListGraphqlApisRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rpc.edge.gloo.solo.io.ListGraphqlApisRequest;
  return proto.rpc.edge.gloo.solo.io.ListGraphqlApisRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rpc.edge.gloo.solo.io.ListGraphqlApisRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rpc.edge.gloo.solo.io.ListGraphqlApisRequest}
 */
proto.rpc.edge.gloo.solo.io.ListGraphqlApisRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef;
      reader.readMessage(value,github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef.deserializeBinaryFromReader);
      msg.setGlooInstanceRef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rpc.edge.gloo.solo.io.ListGraphqlApisRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rpc.edge.gloo.solo.io.ListGraphqlApisRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rpc.edge.gloo.solo.io.ListGraphqlApisRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.ListGraphqlApisRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGlooInstanceRef();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef.serializeBinaryToWriter
    );
  }
};


/**
 * optional core.skv2.solo.io.ObjectRef gloo_instance_ref = 1;
 * @return {?proto.core.skv2.solo.io.ObjectRef}
 */
proto.rpc.edge.gloo.solo.io.ListGraphqlApisRequest.prototype.getGlooInstanceRef = function() {
  return /** @type{?proto.core.skv2.solo.io.ObjectRef} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef, 1));
};


/** @param {?proto.core.skv2.solo.io.ObjectRef|undefined} value */
proto.rpc.edge.gloo.solo.io.ListGraphqlApisRequest.prototype.setGlooInstanceRef = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.rpc.edge.gloo.solo.io.ListGraphqlApisRequest.prototype.clearGlooInstanceRef = function() {
  this.setGlooInstanceRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rpc.edge.gloo.solo.io.ListGraphqlApisRequest.prototype.hasGlooInstanceRef = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rpc.edge.gloo.solo.io.ListGraphqlApisResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rpc.edge.gloo.solo.io.ListGraphqlApisResponse.repeatedFields_, null);
};
goog.inherits(proto.rpc.edge.gloo.solo.io.ListGraphqlApisResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.rpc.edge.gloo.solo.io.ListGraphqlApisResponse.displayName = 'proto.rpc.edge.gloo.solo.io.ListGraphqlApisResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rpc.edge.gloo.solo.io.ListGraphqlApisResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rpc.edge.gloo.solo.io.ListGraphqlApisResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.rpc.edge.gloo.solo.io.ListGraphqlApisResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rpc.edge.gloo.solo.io.ListGraphqlApisResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.ListGraphqlApisResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    graphqlApisList: jspb.Message.toObjectList(msg.getGraphqlApisList(),
    proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rpc.edge.gloo.solo.io.ListGraphqlApisResponse}
 */
proto.rpc.edge.gloo.solo.io.ListGraphqlApisResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rpc.edge.gloo.solo.io.ListGraphqlApisResponse;
  return proto.rpc.edge.gloo.solo.io.ListGraphqlApisResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rpc.edge.gloo.solo.io.ListGraphqlApisResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rpc.edge.gloo.solo.io.ListGraphqlApisResponse}
 */
proto.rpc.edge.gloo.solo.io.ListGraphqlApisResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rpc.edge.gloo.solo.io.GraphqlApiSummary;
      reader.readMessage(value,proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.deserializeBinaryFromReader);
      msg.addGraphqlApis(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rpc.edge.gloo.solo.io.ListGraphqlApisResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rpc.edge.gloo.solo.io.ListGraphqlApisResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rpc.edge.gloo.solo.io.ListGraphqlApisResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.ListGraphqlApisResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGraphqlApisList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.rpc.edge.gloo.solo.io.GraphqlApiSummary.serializeBinaryToWriter
    );
  }
};


/**
 * repeated GraphqlApiSummary graphql_apis = 1;
 * @return {!Array<!proto.rpc.edge.gloo.solo.io.GraphqlApiSummary>}
 */
proto.rpc.edge.gloo.solo.io.ListGraphqlApisResponse.prototype.getGraphqlApisList = function() {
  return /** @type{!Array<!proto.rpc.edge.gloo.solo.io.GraphqlApiSummary>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.rpc.edge.gloo.solo.io.GraphqlApiSummary, 1));
};


/** @param {!Array<!proto.rpc.edge.gloo.solo.io.GraphqlApiSummary>} value */
proto.rpc.edge.gloo.solo.io.ListGraphqlApisResponse.prototype.setGraphqlApisList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.rpc.edge.gloo.solo.io.GraphqlApiSummary=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rpc.edge.gloo.solo.io.GraphqlApiSummary}
 */
proto.rpc.edge.gloo.solo.io.ListGraphqlApisResponse.prototype.addGraphqlApis = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.rpc.edge.gloo.solo.io.GraphqlApiSummary, opt_index);
};


proto.rpc.edge.gloo.solo.io.ListGraphqlApisResponse.prototype.clearGraphqlApisList = function() {
  this.setGraphqlApisList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rpc.edge.gloo.solo.io.GetGraphqlApiYamlRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rpc.edge.gloo.solo.io.GetGraphqlApiYamlRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.rpc.edge.gloo.solo.io.GetGraphqlApiYamlRequest.displayName = 'proto.rpc.edge.gloo.solo.io.GetGraphqlApiYamlRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rpc.edge.gloo.solo.io.GetGraphqlApiYamlRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.rpc.edge.gloo.solo.io.GetGraphqlApiYamlRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rpc.edge.gloo.solo.io.GetGraphqlApiYamlRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.GetGraphqlApiYamlRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    graphqlApiRef: (f = msg.getGraphqlApiRef()) && github_com_solo$io_skv2_api_core_v1_core_pb.ClusterObjectRef.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rpc.edge.gloo.solo.io.GetGraphqlApiYamlRequest}
 */
proto.rpc.edge.gloo.solo.io.GetGraphqlApiYamlRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rpc.edge.gloo.solo.io.GetGraphqlApiYamlRequest;
  return proto.rpc.edge.gloo.solo.io.GetGraphqlApiYamlRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rpc.edge.gloo.solo.io.GetGraphqlApiYamlRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rpc.edge.gloo.solo.io.GetGraphqlApiYamlRequest}
 */
proto.rpc.edge.gloo.solo.io.GetGraphqlApiYamlRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_skv2_api_core_v1_core_pb.ClusterObjectRef;
      reader.readMessage(value,github_com_solo$io_skv2_api_core_v1_core_pb.ClusterObjectRef.deserializeBinaryFromReader);
      msg.setGraphqlApiRef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rpc.edge.gloo.solo.io.GetGraphqlApiYamlRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rpc.edge.gloo.solo.io.GetGraphqlApiYamlRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rpc.edge.gloo.solo.io.GetGraphqlApiYamlRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.GetGraphqlApiYamlRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGraphqlApiRef();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_skv2_api_core_v1_core_pb.ClusterObjectRef.serializeBinaryToWriter
    );
  }
};


/**
 * optional core.skv2.solo.io.ClusterObjectRef graphql_api_ref = 1;
 * @return {?proto.core.skv2.solo.io.ClusterObjectRef}
 */
proto.rpc.edge.gloo.solo.io.GetGraphqlApiYamlRequest.prototype.getGraphqlApiRef = function() {
  return /** @type{?proto.core.skv2.solo.io.ClusterObjectRef} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_skv2_api_core_v1_core_pb.ClusterObjectRef, 1));
};


/** @param {?proto.core.skv2.solo.io.ClusterObjectRef|undefined} value */
proto.rpc.edge.gloo.solo.io.GetGraphqlApiYamlRequest.prototype.setGraphqlApiRef = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.rpc.edge.gloo.solo.io.GetGraphqlApiYamlRequest.prototype.clearGraphqlApiRef = function() {
  this.setGraphqlApiRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rpc.edge.gloo.solo.io.GetGraphqlApiYamlRequest.prototype.hasGraphqlApiRef = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rpc.edge.gloo.solo.io.GetGraphqlApiYamlResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rpc.edge.gloo.solo.io.GetGraphqlApiYamlResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.rpc.edge.gloo.solo.io.GetGraphqlApiYamlResponse.displayName = 'proto.rpc.edge.gloo.solo.io.GetGraphqlApiYamlResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rpc.edge.gloo.solo.io.GetGraphqlApiYamlResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.rpc.edge.gloo.solo.io.GetGraphqlApiYamlResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rpc.edge.gloo.solo.io.GetGraphqlApiYamlResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.GetGraphqlApiYamlResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    yamlData: (f = msg.getYamlData()) && github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.ResourceYaml.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rpc.edge.gloo.solo.io.GetGraphqlApiYamlResponse}
 */
proto.rpc.edge.gloo.solo.io.GetGraphqlApiYamlResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rpc.edge.gloo.solo.io.GetGraphqlApiYamlResponse;
  return proto.rpc.edge.gloo.solo.io.GetGraphqlApiYamlResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rpc.edge.gloo.solo.io.GetGraphqlApiYamlResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rpc.edge.gloo.solo.io.GetGraphqlApiYamlResponse}
 */
proto.rpc.edge.gloo.solo.io.GetGraphqlApiYamlResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.ResourceYaml;
      reader.readMessage(value,github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.ResourceYaml.deserializeBinaryFromReader);
      msg.setYamlData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rpc.edge.gloo.solo.io.GetGraphqlApiYamlResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rpc.edge.gloo.solo.io.GetGraphqlApiYamlResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rpc.edge.gloo.solo.io.GetGraphqlApiYamlResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.GetGraphqlApiYamlResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getYamlData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.ResourceYaml.serializeBinaryToWriter
    );
  }
};


/**
 * optional ResourceYaml yaml_data = 1;
 * @return {?proto.rpc.edge.gloo.solo.io.ResourceYaml}
 */
proto.rpc.edge.gloo.solo.io.GetGraphqlApiYamlResponse.prototype.getYamlData = function() {
  return /** @type{?proto.rpc.edge.gloo.solo.io.ResourceYaml} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.ResourceYaml, 1));
};


/** @param {?proto.rpc.edge.gloo.solo.io.ResourceYaml|undefined} value */
proto.rpc.edge.gloo.solo.io.GetGraphqlApiYamlResponse.prototype.setYamlData = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.rpc.edge.gloo.solo.io.GetGraphqlApiYamlResponse.prototype.clearYamlData = function() {
  this.setYamlData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rpc.edge.gloo.solo.io.GetGraphqlApiYamlResponse.prototype.hasYamlData = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rpc.edge.gloo.solo.io.CreateGraphqlApiRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rpc.edge.gloo.solo.io.CreateGraphqlApiRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.rpc.edge.gloo.solo.io.CreateGraphqlApiRequest.displayName = 'proto.rpc.edge.gloo.solo.io.CreateGraphqlApiRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rpc.edge.gloo.solo.io.CreateGraphqlApiRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.rpc.edge.gloo.solo.io.CreateGraphqlApiRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rpc.edge.gloo.solo.io.CreateGraphqlApiRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.CreateGraphqlApiRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    graphqlApiRef: (f = msg.getGraphqlApiRef()) && github_com_solo$io_skv2_api_core_v1_core_pb.ClusterObjectRef.toObject(includeInstance, f),
    spec: (f = msg.getSpec()) && github_com_solo$io_solo$apis_api_gloo_graphql_gloo_v1alpha1_graphql_pb.GraphQLApiSpec.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rpc.edge.gloo.solo.io.CreateGraphqlApiRequest}
 */
proto.rpc.edge.gloo.solo.io.CreateGraphqlApiRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rpc.edge.gloo.solo.io.CreateGraphqlApiRequest;
  return proto.rpc.edge.gloo.solo.io.CreateGraphqlApiRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rpc.edge.gloo.solo.io.CreateGraphqlApiRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rpc.edge.gloo.solo.io.CreateGraphqlApiRequest}
 */
proto.rpc.edge.gloo.solo.io.CreateGraphqlApiRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_skv2_api_core_v1_core_pb.ClusterObjectRef;
      reader.readMessage(value,github_com_solo$io_skv2_api_core_v1_core_pb.ClusterObjectRef.deserializeBinaryFromReader);
      msg.setGraphqlApiRef(value);
      break;
    case 2:
      var value = new github_com_solo$io_solo$apis_api_gloo_graphql_gloo_v1alpha1_graphql_pb.GraphQLApiSpec;
      reader.readMessage(value,github_com_solo$io_solo$apis_api_gloo_graphql_gloo_v1alpha1_graphql_pb.GraphQLApiSpec.deserializeBinaryFromReader);
      msg.setSpec(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rpc.edge.gloo.solo.io.CreateGraphqlApiRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rpc.edge.gloo.solo.io.CreateGraphqlApiRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rpc.edge.gloo.solo.io.CreateGraphqlApiRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.CreateGraphqlApiRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGraphqlApiRef();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_skv2_api_core_v1_core_pb.ClusterObjectRef.serializeBinaryToWriter
    );
  }
  f = message.getSpec();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      github_com_solo$io_solo$apis_api_gloo_graphql_gloo_v1alpha1_graphql_pb.GraphQLApiSpec.serializeBinaryToWriter
    );
  }
};


/**
 * optional core.skv2.solo.io.ClusterObjectRef graphql_api_ref = 1;
 * @return {?proto.core.skv2.solo.io.ClusterObjectRef}
 */
proto.rpc.edge.gloo.solo.io.CreateGraphqlApiRequest.prototype.getGraphqlApiRef = function() {
  return /** @type{?proto.core.skv2.solo.io.ClusterObjectRef} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_skv2_api_core_v1_core_pb.ClusterObjectRef, 1));
};


/** @param {?proto.core.skv2.solo.io.ClusterObjectRef|undefined} value */
proto.rpc.edge.gloo.solo.io.CreateGraphqlApiRequest.prototype.setGraphqlApiRef = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.rpc.edge.gloo.solo.io.CreateGraphqlApiRequest.prototype.clearGraphqlApiRef = function() {
  this.setGraphqlApiRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rpc.edge.gloo.solo.io.CreateGraphqlApiRequest.prototype.hasGraphqlApiRef = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional graphql.gloo.solo.io.GraphQLApiSpec spec = 2;
 * @return {?proto.graphql.gloo.solo.io.GraphQLApiSpec}
 */
proto.rpc.edge.gloo.solo.io.CreateGraphqlApiRequest.prototype.getSpec = function() {
  return /** @type{?proto.graphql.gloo.solo.io.GraphQLApiSpec} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$apis_api_gloo_graphql_gloo_v1alpha1_graphql_pb.GraphQLApiSpec, 2));
};


/** @param {?proto.graphql.gloo.solo.io.GraphQLApiSpec|undefined} value */
proto.rpc.edge.gloo.solo.io.CreateGraphqlApiRequest.prototype.setSpec = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.rpc.edge.gloo.solo.io.CreateGraphqlApiRequest.prototype.clearSpec = function() {
  this.setSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rpc.edge.gloo.solo.io.CreateGraphqlApiRequest.prototype.hasSpec = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rpc.edge.gloo.solo.io.CreateGraphqlApiResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rpc.edge.gloo.solo.io.CreateGraphqlApiResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.rpc.edge.gloo.solo.io.CreateGraphqlApiResponse.displayName = 'proto.rpc.edge.gloo.solo.io.CreateGraphqlApiResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rpc.edge.gloo.solo.io.CreateGraphqlApiResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.rpc.edge.gloo.solo.io.CreateGraphqlApiResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rpc.edge.gloo.solo.io.CreateGraphqlApiResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.CreateGraphqlApiResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    graphqlApi: (f = msg.getGraphqlApi()) && proto.rpc.edge.gloo.solo.io.GraphqlApi.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rpc.edge.gloo.solo.io.CreateGraphqlApiResponse}
 */
proto.rpc.edge.gloo.solo.io.CreateGraphqlApiResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rpc.edge.gloo.solo.io.CreateGraphqlApiResponse;
  return proto.rpc.edge.gloo.solo.io.CreateGraphqlApiResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rpc.edge.gloo.solo.io.CreateGraphqlApiResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rpc.edge.gloo.solo.io.CreateGraphqlApiResponse}
 */
proto.rpc.edge.gloo.solo.io.CreateGraphqlApiResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rpc.edge.gloo.solo.io.GraphqlApi;
      reader.readMessage(value,proto.rpc.edge.gloo.solo.io.GraphqlApi.deserializeBinaryFromReader);
      msg.setGraphqlApi(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rpc.edge.gloo.solo.io.CreateGraphqlApiResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rpc.edge.gloo.solo.io.CreateGraphqlApiResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rpc.edge.gloo.solo.io.CreateGraphqlApiResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.CreateGraphqlApiResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGraphqlApi();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rpc.edge.gloo.solo.io.GraphqlApi.serializeBinaryToWriter
    );
  }
};


/**
 * optional GraphqlApi graphql_api = 1;
 * @return {?proto.rpc.edge.gloo.solo.io.GraphqlApi}
 */
proto.rpc.edge.gloo.solo.io.CreateGraphqlApiResponse.prototype.getGraphqlApi = function() {
  return /** @type{?proto.rpc.edge.gloo.solo.io.GraphqlApi} */ (
    jspb.Message.getWrapperField(this, proto.rpc.edge.gloo.solo.io.GraphqlApi, 1));
};


/** @param {?proto.rpc.edge.gloo.solo.io.GraphqlApi|undefined} value */
proto.rpc.edge.gloo.solo.io.CreateGraphqlApiResponse.prototype.setGraphqlApi = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.rpc.edge.gloo.solo.io.CreateGraphqlApiResponse.prototype.clearGraphqlApi = function() {
  this.setGraphqlApi(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rpc.edge.gloo.solo.io.CreateGraphqlApiResponse.prototype.hasGraphqlApi = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rpc.edge.gloo.solo.io.UpdateGraphqlApiRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rpc.edge.gloo.solo.io.UpdateGraphqlApiRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.rpc.edge.gloo.solo.io.UpdateGraphqlApiRequest.displayName = 'proto.rpc.edge.gloo.solo.io.UpdateGraphqlApiRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rpc.edge.gloo.solo.io.UpdateGraphqlApiRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.rpc.edge.gloo.solo.io.UpdateGraphqlApiRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rpc.edge.gloo.solo.io.UpdateGraphqlApiRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.UpdateGraphqlApiRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    graphqlApiRef: (f = msg.getGraphqlApiRef()) && github_com_solo$io_skv2_api_core_v1_core_pb.ClusterObjectRef.toObject(includeInstance, f),
    spec: (f = msg.getSpec()) && github_com_solo$io_solo$apis_api_gloo_graphql_gloo_v1alpha1_graphql_pb.GraphQLApiSpec.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rpc.edge.gloo.solo.io.UpdateGraphqlApiRequest}
 */
proto.rpc.edge.gloo.solo.io.UpdateGraphqlApiRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rpc.edge.gloo.solo.io.UpdateGraphqlApiRequest;
  return proto.rpc.edge.gloo.solo.io.UpdateGraphqlApiRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rpc.edge.gloo.solo.io.UpdateGraphqlApiRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rpc.edge.gloo.solo.io.UpdateGraphqlApiRequest}
 */
proto.rpc.edge.gloo.solo.io.UpdateGraphqlApiRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_skv2_api_core_v1_core_pb.ClusterObjectRef;
      reader.readMessage(value,github_com_solo$io_skv2_api_core_v1_core_pb.ClusterObjectRef.deserializeBinaryFromReader);
      msg.setGraphqlApiRef(value);
      break;
    case 2:
      var value = new github_com_solo$io_solo$apis_api_gloo_graphql_gloo_v1alpha1_graphql_pb.GraphQLApiSpec;
      reader.readMessage(value,github_com_solo$io_solo$apis_api_gloo_graphql_gloo_v1alpha1_graphql_pb.GraphQLApiSpec.deserializeBinaryFromReader);
      msg.setSpec(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rpc.edge.gloo.solo.io.UpdateGraphqlApiRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rpc.edge.gloo.solo.io.UpdateGraphqlApiRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rpc.edge.gloo.solo.io.UpdateGraphqlApiRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.UpdateGraphqlApiRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGraphqlApiRef();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_skv2_api_core_v1_core_pb.ClusterObjectRef.serializeBinaryToWriter
    );
  }
  f = message.getSpec();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      github_com_solo$io_solo$apis_api_gloo_graphql_gloo_v1alpha1_graphql_pb.GraphQLApiSpec.serializeBinaryToWriter
    );
  }
};


/**
 * optional core.skv2.solo.io.ClusterObjectRef graphql_api_ref = 1;
 * @return {?proto.core.skv2.solo.io.ClusterObjectRef}
 */
proto.rpc.edge.gloo.solo.io.UpdateGraphqlApiRequest.prototype.getGraphqlApiRef = function() {
  return /** @type{?proto.core.skv2.solo.io.ClusterObjectRef} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_skv2_api_core_v1_core_pb.ClusterObjectRef, 1));
};


/** @param {?proto.core.skv2.solo.io.ClusterObjectRef|undefined} value */
proto.rpc.edge.gloo.solo.io.UpdateGraphqlApiRequest.prototype.setGraphqlApiRef = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.rpc.edge.gloo.solo.io.UpdateGraphqlApiRequest.prototype.clearGraphqlApiRef = function() {
  this.setGraphqlApiRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rpc.edge.gloo.solo.io.UpdateGraphqlApiRequest.prototype.hasGraphqlApiRef = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional graphql.gloo.solo.io.GraphQLApiSpec spec = 2;
 * @return {?proto.graphql.gloo.solo.io.GraphQLApiSpec}
 */
proto.rpc.edge.gloo.solo.io.UpdateGraphqlApiRequest.prototype.getSpec = function() {
  return /** @type{?proto.graphql.gloo.solo.io.GraphQLApiSpec} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$apis_api_gloo_graphql_gloo_v1alpha1_graphql_pb.GraphQLApiSpec, 2));
};


/** @param {?proto.graphql.gloo.solo.io.GraphQLApiSpec|undefined} value */
proto.rpc.edge.gloo.solo.io.UpdateGraphqlApiRequest.prototype.setSpec = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.rpc.edge.gloo.solo.io.UpdateGraphqlApiRequest.prototype.clearSpec = function() {
  this.setSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rpc.edge.gloo.solo.io.UpdateGraphqlApiRequest.prototype.hasSpec = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rpc.edge.gloo.solo.io.UpdateGraphqlApiResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rpc.edge.gloo.solo.io.UpdateGraphqlApiResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.rpc.edge.gloo.solo.io.UpdateGraphqlApiResponse.displayName = 'proto.rpc.edge.gloo.solo.io.UpdateGraphqlApiResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rpc.edge.gloo.solo.io.UpdateGraphqlApiResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.rpc.edge.gloo.solo.io.UpdateGraphqlApiResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rpc.edge.gloo.solo.io.UpdateGraphqlApiResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.UpdateGraphqlApiResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    graphqlApi: (f = msg.getGraphqlApi()) && proto.rpc.edge.gloo.solo.io.GraphqlApi.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rpc.edge.gloo.solo.io.UpdateGraphqlApiResponse}
 */
proto.rpc.edge.gloo.solo.io.UpdateGraphqlApiResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rpc.edge.gloo.solo.io.UpdateGraphqlApiResponse;
  return proto.rpc.edge.gloo.solo.io.UpdateGraphqlApiResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rpc.edge.gloo.solo.io.UpdateGraphqlApiResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rpc.edge.gloo.solo.io.UpdateGraphqlApiResponse}
 */
proto.rpc.edge.gloo.solo.io.UpdateGraphqlApiResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rpc.edge.gloo.solo.io.GraphqlApi;
      reader.readMessage(value,proto.rpc.edge.gloo.solo.io.GraphqlApi.deserializeBinaryFromReader);
      msg.setGraphqlApi(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rpc.edge.gloo.solo.io.UpdateGraphqlApiResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rpc.edge.gloo.solo.io.UpdateGraphqlApiResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rpc.edge.gloo.solo.io.UpdateGraphqlApiResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.UpdateGraphqlApiResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGraphqlApi();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rpc.edge.gloo.solo.io.GraphqlApi.serializeBinaryToWriter
    );
  }
};


/**
 * optional GraphqlApi graphql_api = 1;
 * @return {?proto.rpc.edge.gloo.solo.io.GraphqlApi}
 */
proto.rpc.edge.gloo.solo.io.UpdateGraphqlApiResponse.prototype.getGraphqlApi = function() {
  return /** @type{?proto.rpc.edge.gloo.solo.io.GraphqlApi} */ (
    jspb.Message.getWrapperField(this, proto.rpc.edge.gloo.solo.io.GraphqlApi, 1));
};


/** @param {?proto.rpc.edge.gloo.solo.io.GraphqlApi|undefined} value */
proto.rpc.edge.gloo.solo.io.UpdateGraphqlApiResponse.prototype.setGraphqlApi = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.rpc.edge.gloo.solo.io.UpdateGraphqlApiResponse.prototype.clearGraphqlApi = function() {
  this.setGraphqlApi(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rpc.edge.gloo.solo.io.UpdateGraphqlApiResponse.prototype.hasGraphqlApi = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rpc.edge.gloo.solo.io.DeleteGraphqlApiRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rpc.edge.gloo.solo.io.DeleteGraphqlApiRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.rpc.edge.gloo.solo.io.DeleteGraphqlApiRequest.displayName = 'proto.rpc.edge.gloo.solo.io.DeleteGraphqlApiRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rpc.edge.gloo.solo.io.DeleteGraphqlApiRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.rpc.edge.gloo.solo.io.DeleteGraphqlApiRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rpc.edge.gloo.solo.io.DeleteGraphqlApiRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.DeleteGraphqlApiRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    graphqlApiRef: (f = msg.getGraphqlApiRef()) && github_com_solo$io_skv2_api_core_v1_core_pb.ClusterObjectRef.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rpc.edge.gloo.solo.io.DeleteGraphqlApiRequest}
 */
proto.rpc.edge.gloo.solo.io.DeleteGraphqlApiRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rpc.edge.gloo.solo.io.DeleteGraphqlApiRequest;
  return proto.rpc.edge.gloo.solo.io.DeleteGraphqlApiRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rpc.edge.gloo.solo.io.DeleteGraphqlApiRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rpc.edge.gloo.solo.io.DeleteGraphqlApiRequest}
 */
proto.rpc.edge.gloo.solo.io.DeleteGraphqlApiRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_skv2_api_core_v1_core_pb.ClusterObjectRef;
      reader.readMessage(value,github_com_solo$io_skv2_api_core_v1_core_pb.ClusterObjectRef.deserializeBinaryFromReader);
      msg.setGraphqlApiRef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rpc.edge.gloo.solo.io.DeleteGraphqlApiRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rpc.edge.gloo.solo.io.DeleteGraphqlApiRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rpc.edge.gloo.solo.io.DeleteGraphqlApiRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.DeleteGraphqlApiRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGraphqlApiRef();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_skv2_api_core_v1_core_pb.ClusterObjectRef.serializeBinaryToWriter
    );
  }
};


/**
 * optional core.skv2.solo.io.ClusterObjectRef graphql_api_ref = 1;
 * @return {?proto.core.skv2.solo.io.ClusterObjectRef}
 */
proto.rpc.edge.gloo.solo.io.DeleteGraphqlApiRequest.prototype.getGraphqlApiRef = function() {
  return /** @type{?proto.core.skv2.solo.io.ClusterObjectRef} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_skv2_api_core_v1_core_pb.ClusterObjectRef, 1));
};


/** @param {?proto.core.skv2.solo.io.ClusterObjectRef|undefined} value */
proto.rpc.edge.gloo.solo.io.DeleteGraphqlApiRequest.prototype.setGraphqlApiRef = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.rpc.edge.gloo.solo.io.DeleteGraphqlApiRequest.prototype.clearGraphqlApiRef = function() {
  this.setGraphqlApiRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rpc.edge.gloo.solo.io.DeleteGraphqlApiRequest.prototype.hasGraphqlApiRef = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rpc.edge.gloo.solo.io.DeleteGraphqlApiResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rpc.edge.gloo.solo.io.DeleteGraphqlApiResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.rpc.edge.gloo.solo.io.DeleteGraphqlApiResponse.displayName = 'proto.rpc.edge.gloo.solo.io.DeleteGraphqlApiResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rpc.edge.gloo.solo.io.DeleteGraphqlApiResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.rpc.edge.gloo.solo.io.DeleteGraphqlApiResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rpc.edge.gloo.solo.io.DeleteGraphqlApiResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.DeleteGraphqlApiResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    graphqlApiRef: (f = msg.getGraphqlApiRef()) && github_com_solo$io_skv2_api_core_v1_core_pb.ClusterObjectRef.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rpc.edge.gloo.solo.io.DeleteGraphqlApiResponse}
 */
proto.rpc.edge.gloo.solo.io.DeleteGraphqlApiResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rpc.edge.gloo.solo.io.DeleteGraphqlApiResponse;
  return proto.rpc.edge.gloo.solo.io.DeleteGraphqlApiResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rpc.edge.gloo.solo.io.DeleteGraphqlApiResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rpc.edge.gloo.solo.io.DeleteGraphqlApiResponse}
 */
proto.rpc.edge.gloo.solo.io.DeleteGraphqlApiResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_skv2_api_core_v1_core_pb.ClusterObjectRef;
      reader.readMessage(value,github_com_solo$io_skv2_api_core_v1_core_pb.ClusterObjectRef.deserializeBinaryFromReader);
      msg.setGraphqlApiRef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rpc.edge.gloo.solo.io.DeleteGraphqlApiResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rpc.edge.gloo.solo.io.DeleteGraphqlApiResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rpc.edge.gloo.solo.io.DeleteGraphqlApiResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.DeleteGraphqlApiResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGraphqlApiRef();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_skv2_api_core_v1_core_pb.ClusterObjectRef.serializeBinaryToWriter
    );
  }
};


/**
 * optional core.skv2.solo.io.ClusterObjectRef graphql_api_ref = 1;
 * @return {?proto.core.skv2.solo.io.ClusterObjectRef}
 */
proto.rpc.edge.gloo.solo.io.DeleteGraphqlApiResponse.prototype.getGraphqlApiRef = function() {
  return /** @type{?proto.core.skv2.solo.io.ClusterObjectRef} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_skv2_api_core_v1_core_pb.ClusterObjectRef, 1));
};


/** @param {?proto.core.skv2.solo.io.ClusterObjectRef|undefined} value */
proto.rpc.edge.gloo.solo.io.DeleteGraphqlApiResponse.prototype.setGraphqlApiRef = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.rpc.edge.gloo.solo.io.DeleteGraphqlApiResponse.prototype.clearGraphqlApiRef = function() {
  this.setGraphqlApiRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rpc.edge.gloo.solo.io.DeleteGraphqlApiResponse.prototype.hasGraphqlApiRef = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rpc.edge.gloo.solo.io.ValidateResolverYamlRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rpc.edge.gloo.solo.io.ValidateResolverYamlRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.rpc.edge.gloo.solo.io.ValidateResolverYamlRequest.displayName = 'proto.rpc.edge.gloo.solo.io.ValidateResolverYamlRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rpc.edge.gloo.solo.io.ValidateResolverYamlRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.rpc.edge.gloo.solo.io.ValidateResolverYamlRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rpc.edge.gloo.solo.io.ValidateResolverYamlRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.ValidateResolverYamlRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    yaml: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resolverType: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rpc.edge.gloo.solo.io.ValidateResolverYamlRequest}
 */
proto.rpc.edge.gloo.solo.io.ValidateResolverYamlRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rpc.edge.gloo.solo.io.ValidateResolverYamlRequest;
  return proto.rpc.edge.gloo.solo.io.ValidateResolverYamlRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rpc.edge.gloo.solo.io.ValidateResolverYamlRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rpc.edge.gloo.solo.io.ValidateResolverYamlRequest}
 */
proto.rpc.edge.gloo.solo.io.ValidateResolverYamlRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setYaml(value);
      break;
    case 2:
      var value = /** @type {!proto.rpc.edge.gloo.solo.io.ValidateResolverYamlRequest.ResolverType} */ (reader.readEnum());
      msg.setResolverType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rpc.edge.gloo.solo.io.ValidateResolverYamlRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rpc.edge.gloo.solo.io.ValidateResolverYamlRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rpc.edge.gloo.solo.io.ValidateResolverYamlRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.ValidateResolverYamlRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getYaml();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResolverType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.rpc.edge.gloo.solo.io.ValidateResolverYamlRequest.ResolverType = {
  RESOLVER_NOT_SET: 0,
  REST_RESOLVER: 1,
  GRPC_RESOLVER: 2
};

/**
 * optional string yaml = 1;
 * @return {string}
 */
proto.rpc.edge.gloo.solo.io.ValidateResolverYamlRequest.prototype.getYaml = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.rpc.edge.gloo.solo.io.ValidateResolverYamlRequest.prototype.setYaml = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional ResolverType resolver_type = 2;
 * @return {!proto.rpc.edge.gloo.solo.io.ValidateResolverYamlRequest.ResolverType}
 */
proto.rpc.edge.gloo.solo.io.ValidateResolverYamlRequest.prototype.getResolverType = function() {
  return /** @type {!proto.rpc.edge.gloo.solo.io.ValidateResolverYamlRequest.ResolverType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.rpc.edge.gloo.solo.io.ValidateResolverYamlRequest.ResolverType} value */
proto.rpc.edge.gloo.solo.io.ValidateResolverYamlRequest.prototype.setResolverType = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rpc.edge.gloo.solo.io.ValidateResolverYamlResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rpc.edge.gloo.solo.io.ValidateResolverYamlResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.rpc.edge.gloo.solo.io.ValidateResolverYamlResponse.displayName = 'proto.rpc.edge.gloo.solo.io.ValidateResolverYamlResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rpc.edge.gloo.solo.io.ValidateResolverYamlResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.rpc.edge.gloo.solo.io.ValidateResolverYamlResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rpc.edge.gloo.solo.io.ValidateResolverYamlResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.ValidateResolverYamlResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rpc.edge.gloo.solo.io.ValidateResolverYamlResponse}
 */
proto.rpc.edge.gloo.solo.io.ValidateResolverYamlResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rpc.edge.gloo.solo.io.ValidateResolverYamlResponse;
  return proto.rpc.edge.gloo.solo.io.ValidateResolverYamlResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rpc.edge.gloo.solo.io.ValidateResolverYamlResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rpc.edge.gloo.solo.io.ValidateResolverYamlResponse}
 */
proto.rpc.edge.gloo.solo.io.ValidateResolverYamlResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rpc.edge.gloo.solo.io.ValidateResolverYamlResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rpc.edge.gloo.solo.io.ValidateResolverYamlResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rpc.edge.gloo.solo.io.ValidateResolverYamlResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.ValidateResolverYamlResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionRequest.oneofGroups_);
};
goog.inherits(proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionRequest.displayName = 'proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionRequest';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionRequest.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionRequest.InputCase = {
  INPUT_NOT_SET: 0,
  SCHEMA_DEFINITION: 1,
  SPEC: 2
};

/**
 * @return {proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionRequest.InputCase}
 */
proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionRequest.prototype.getInputCase = function() {
  return /** @type {proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionRequest.InputCase} */(jspb.Message.computeOneofCase(this, proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    schemaDefinition: jspb.Message.getFieldWithDefault(msg, 1, ""),
    spec: (f = msg.getSpec()) && github_com_solo$io_solo$apis_api_gloo_graphql_gloo_v1alpha1_graphql_pb.GraphQLApiSpec.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionRequest}
 */
proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionRequest;
  return proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionRequest}
 */
proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchemaDefinition(value);
      break;
    case 2:
      var value = new github_com_solo$io_solo$apis_api_gloo_graphql_gloo_v1alpha1_graphql_pb.GraphQLApiSpec;
      reader.readMessage(value,github_com_solo$io_solo$apis_api_gloo_graphql_gloo_v1alpha1_graphql_pb.GraphQLApiSpec.deserializeBinaryFromReader);
      msg.setSpec(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSpec();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      github_com_solo$io_solo$apis_api_gloo_graphql_gloo_v1alpha1_graphql_pb.GraphQLApiSpec.serializeBinaryToWriter
    );
  }
};


/**
 * optional string schema_definition = 1;
 * @return {string}
 */
proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionRequest.prototype.getSchemaDefinition = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionRequest.prototype.setSchemaDefinition = function(value) {
  jspb.Message.setOneofField(this, 1, proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionRequest.oneofGroups_[0], value);
};


proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionRequest.prototype.clearSchemaDefinition = function() {
  jspb.Message.setOneofField(this, 1, proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionRequest.prototype.hasSchemaDefinition = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional graphql.gloo.solo.io.GraphQLApiSpec spec = 2;
 * @return {?proto.graphql.gloo.solo.io.GraphQLApiSpec}
 */
proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionRequest.prototype.getSpec = function() {
  return /** @type{?proto.graphql.gloo.solo.io.GraphQLApiSpec} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$apis_api_gloo_graphql_gloo_v1alpha1_graphql_pb.GraphQLApiSpec, 2));
};


/** @param {?proto.graphql.gloo.solo.io.GraphQLApiSpec|undefined} value */
proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionRequest.prototype.setSpec = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionRequest.oneofGroups_[0], value);
};


proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionRequest.prototype.clearSpec = function() {
  this.setSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionRequest.prototype.hasSpec = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionResponse.displayName = 'proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionResponse}
 */
proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionResponse;
  return proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionResponse}
 */
proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.ValidateSchemaDefinitionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.rpc.edge.gloo.solo.io);
