/* eslint-disable */
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffInput', null, global);
goog.exportSymbol('proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput', null, global);
goog.exportSymbol('proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Change', null, global);
goog.exportSymbol('proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Criticality', null, global);
goog.exportSymbol('proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.CriticalityLevel', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffInput = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffInput, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffInput.displayName = 'proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffInput';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffInput.prototype.toObject = function(opt_includeInstance) {
  return proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffInput.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffInput} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffInput.toObject = function(includeInstance, msg) {
  var f, obj = {
    oldSchema: jspb.Message.getFieldWithDefault(msg, 1, ""),
    newSchema: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffInput}
 */
proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffInput.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffInput;
  return proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffInput.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffInput} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffInput}
 */
proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffInput.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOldSchema(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNewSchema(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffInput.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffInput.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffInput} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffInput.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOldSchema();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNewSchema();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string old_schema = 1;
 * @return {string}
 */
proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffInput.prototype.getOldSchema = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffInput.prototype.setOldSchema = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string new_schema = 2;
 * @return {string}
 */
proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffInput.prototype.getNewSchema = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffInput.prototype.setNewSchema = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.repeatedFields_, null);
};
goog.inherits(proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.displayName = 'proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.prototype.toObject = function(opt_includeInstance) {
  return proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.toObject = function(includeInstance, msg) {
  var f, obj = {
    changesList: jspb.Message.toObjectList(msg.getChangesList(),
    proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Change.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput}
 */
proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput;
  return proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput}
 */
proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Change;
      reader.readMessage(value,proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Change.deserializeBinaryFromReader);
      msg.addChanges(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChangesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Change.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.CriticalityLevel = {
  NON_BREAKING: 0,
  DANGEROUS: 1,
  BREAKING: 2
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Change = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Change, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Change.displayName = 'proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Change';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Change.prototype.toObject = function(opt_includeInstance) {
  return proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Change.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Change} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Change.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, ""),
    path: jspb.Message.getFieldWithDefault(msg, 2, ""),
    changeType: jspb.Message.getFieldWithDefault(msg, 3, ""),
    criticality: (f = msg.getCriticality()) && proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Criticality.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Change}
 */
proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Change.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Change;
  return proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Change.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Change} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Change}
 */
proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Change.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setChangeType(value);
      break;
    case 4:
      var value = new proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Criticality;
      reader.readMessage(value,proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Criticality.deserializeBinaryFromReader);
      msg.setCriticality(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Change.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Change.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Change} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Change.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getChangeType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCriticality();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Criticality.serializeBinaryToWriter
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Change.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Change.prototype.setMessage = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string path = 2;
 * @return {string}
 */
proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Change.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Change.prototype.setPath = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string change_type = 3;
 * @return {string}
 */
proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Change.prototype.getChangeType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Change.prototype.setChangeType = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional Criticality criticality = 4;
 * @return {?proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Criticality}
 */
proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Change.prototype.getCriticality = function() {
  return /** @type{?proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Criticality} */ (
    jspb.Message.getWrapperField(this, proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Criticality, 4));
};


/** @param {?proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Criticality|undefined} value */
proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Change.prototype.setCriticality = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Change.prototype.clearCriticality = function() {
  this.setCriticality(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Change.prototype.hasCriticality = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Criticality = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Criticality, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Criticality.displayName = 'proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Criticality';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Criticality.prototype.toObject = function(opt_includeInstance) {
  return proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Criticality.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Criticality} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Criticality.toObject = function(includeInstance, msg) {
  var f, obj = {
    level: jspb.Message.getFieldWithDefault(msg, 1, 0),
    reason: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Criticality}
 */
proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Criticality.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Criticality;
  return proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Criticality.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Criticality} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Criticality}
 */
proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Criticality.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.CriticalityLevel} */ (reader.readEnum());
      msg.setLevel(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setReason(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Criticality.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Criticality.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Criticality} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Criticality.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLevel();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getReason();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional CriticalityLevel level = 1;
 * @return {!proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.CriticalityLevel}
 */
proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Criticality.prototype.getLevel = function() {
  return /** @type {!proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.CriticalityLevel} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.CriticalityLevel} value */
proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Criticality.prototype.setLevel = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string reason = 2;
 * @return {string}
 */
proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Criticality.prototype.getReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Criticality.prototype.setReason = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Change changes = 1;
 * @return {!Array<!proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Change>}
 */
proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.prototype.getChangesList = function() {
  return /** @type{!Array<!proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Change>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Change, 1));
};


/** @param {!Array<!proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Change>} value */
proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.prototype.setChangesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Change=} opt_value
 * @param {number=} opt_index
 * @return {!proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Change}
 */
proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.prototype.addChanges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.Change, opt_index);
};


proto.enterprise.graphql.gloo.solo.io.GraphQLInspectorDiffOutput.prototype.clearChangesList = function() {
  this.setChangesList([]);
};


goog.object.extend(exports, proto.enterprise.graphql.gloo.solo.io);
