/* eslint-disable */
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var extproto_ext_pb = require('../../../../../../../../extproto/ext_pb.js');
var github_com_solo$io_solo$apis_api_gloo_gloo_v1_core_matchers_matchers_pb = require('../../../../../../../../github.com/solo-io/solo-apis/api/gloo/gloo/v1/core/matchers/matchers_pb.js');
var github_com_solo$io_solo$apis_api_gloo_gloo_v1_options_wasm_wasm_pb = require('../../../../../../../../github.com/solo-io/solo-apis/api/gloo/gloo/v1/options/wasm/wasm_pb.js');
var github_com_solo$io_solo$apis_api_gloo_gateway_v1_gateway_pb = require('../../../../../../../../github.com/solo-io/solo-apis/api/gloo/gateway/v1/gateway_pb.js');
var github_com_solo$io_skv2_api_core_v1_core_pb = require('../../../../../../../../github.com/solo-io/skv2/api/core/v1/core_pb.js');
goog.exportSymbol('proto.rpc.edge.gloo.solo.io.DescribeWasmFilterRequest', null, global);
goog.exportSymbol('proto.rpc.edge.gloo.solo.io.DescribeWasmFilterResponse', null, global);
goog.exportSymbol('proto.rpc.edge.gloo.solo.io.ListWasmFiltersRequest', null, global);
goog.exportSymbol('proto.rpc.edge.gloo.solo.io.ListWasmFiltersResponse', null, global);
goog.exportSymbol('proto.rpc.edge.gloo.solo.io.WasmFilter', null, global);
goog.exportSymbol('proto.rpc.edge.gloo.solo.io.WasmFilter.Location', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rpc.edge.gloo.solo.io.WasmFilter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rpc.edge.gloo.solo.io.WasmFilter.repeatedFields_, null);
};
goog.inherits(proto.rpc.edge.gloo.solo.io.WasmFilter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.rpc.edge.gloo.solo.io.WasmFilter.displayName = 'proto.rpc.edge.gloo.solo.io.WasmFilter';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rpc.edge.gloo.solo.io.WasmFilter.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rpc.edge.gloo.solo.io.WasmFilter.prototype.toObject = function(opt_includeInstance) {
  return proto.rpc.edge.gloo.solo.io.WasmFilter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rpc.edge.gloo.solo.io.WasmFilter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.WasmFilter.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    rootId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    source: jspb.Message.getFieldWithDefault(msg, 3, ""),
    config: jspb.Message.getFieldWithDefault(msg, 4, ""),
    locationsList: jspb.Message.toObjectList(msg.getLocationsList(),
    proto.rpc.edge.gloo.solo.io.WasmFilter.Location.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rpc.edge.gloo.solo.io.WasmFilter}
 */
proto.rpc.edge.gloo.solo.io.WasmFilter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rpc.edge.gloo.solo.io.WasmFilter;
  return proto.rpc.edge.gloo.solo.io.WasmFilter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rpc.edge.gloo.solo.io.WasmFilter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rpc.edge.gloo.solo.io.WasmFilter}
 */
proto.rpc.edge.gloo.solo.io.WasmFilter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRootId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setConfig(value);
      break;
    case 5:
      var value = new proto.rpc.edge.gloo.solo.io.WasmFilter.Location;
      reader.readMessage(value,proto.rpc.edge.gloo.solo.io.WasmFilter.Location.deserializeBinaryFromReader);
      msg.addLocations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rpc.edge.gloo.solo.io.WasmFilter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rpc.edge.gloo.solo.io.WasmFilter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rpc.edge.gloo.solo.io.WasmFilter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.WasmFilter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRootId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getConfig();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLocationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.rpc.edge.gloo.solo.io.WasmFilter.Location.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rpc.edge.gloo.solo.io.WasmFilter.Location = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rpc.edge.gloo.solo.io.WasmFilter.Location, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.rpc.edge.gloo.solo.io.WasmFilter.Location.displayName = 'proto.rpc.edge.gloo.solo.io.WasmFilter.Location';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rpc.edge.gloo.solo.io.WasmFilter.Location.prototype.toObject = function(opt_includeInstance) {
  return proto.rpc.edge.gloo.solo.io.WasmFilter.Location.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rpc.edge.gloo.solo.io.WasmFilter.Location} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.WasmFilter.Location.toObject = function(includeInstance, msg) {
  var f, obj = {
    gatewayRef: (f = msg.getGatewayRef()) && github_com_solo$io_skv2_api_core_v1_core_pb.ClusterObjectRef.toObject(includeInstance, f),
    gatewayStatus: (f = msg.getGatewayStatus()) && github_com_solo$io_solo$apis_api_gloo_gateway_v1_gateway_pb.GatewayStatus.toObject(includeInstance, f),
    glooInstanceRef: (f = msg.getGlooInstanceRef()) && github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rpc.edge.gloo.solo.io.WasmFilter.Location}
 */
proto.rpc.edge.gloo.solo.io.WasmFilter.Location.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rpc.edge.gloo.solo.io.WasmFilter.Location;
  return proto.rpc.edge.gloo.solo.io.WasmFilter.Location.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rpc.edge.gloo.solo.io.WasmFilter.Location} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rpc.edge.gloo.solo.io.WasmFilter.Location}
 */
proto.rpc.edge.gloo.solo.io.WasmFilter.Location.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_skv2_api_core_v1_core_pb.ClusterObjectRef;
      reader.readMessage(value,github_com_solo$io_skv2_api_core_v1_core_pb.ClusterObjectRef.deserializeBinaryFromReader);
      msg.setGatewayRef(value);
      break;
    case 2:
      var value = new github_com_solo$io_solo$apis_api_gloo_gateway_v1_gateway_pb.GatewayStatus;
      reader.readMessage(value,github_com_solo$io_solo$apis_api_gloo_gateway_v1_gateway_pb.GatewayStatus.deserializeBinaryFromReader);
      msg.setGatewayStatus(value);
      break;
    case 3:
      var value = new github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef;
      reader.readMessage(value,github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef.deserializeBinaryFromReader);
      msg.setGlooInstanceRef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rpc.edge.gloo.solo.io.WasmFilter.Location.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rpc.edge.gloo.solo.io.WasmFilter.Location.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rpc.edge.gloo.solo.io.WasmFilter.Location} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.WasmFilter.Location.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGatewayRef();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_skv2_api_core_v1_core_pb.ClusterObjectRef.serializeBinaryToWriter
    );
  }
  f = message.getGatewayStatus();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      github_com_solo$io_solo$apis_api_gloo_gateway_v1_gateway_pb.GatewayStatus.serializeBinaryToWriter
    );
  }
  f = message.getGlooInstanceRef();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef.serializeBinaryToWriter
    );
  }
};


/**
 * optional core.skv2.solo.io.ClusterObjectRef gateway_ref = 1;
 * @return {?proto.core.skv2.solo.io.ClusterObjectRef}
 */
proto.rpc.edge.gloo.solo.io.WasmFilter.Location.prototype.getGatewayRef = function() {
  return /** @type{?proto.core.skv2.solo.io.ClusterObjectRef} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_skv2_api_core_v1_core_pb.ClusterObjectRef, 1));
};


/** @param {?proto.core.skv2.solo.io.ClusterObjectRef|undefined} value */
proto.rpc.edge.gloo.solo.io.WasmFilter.Location.prototype.setGatewayRef = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.rpc.edge.gloo.solo.io.WasmFilter.Location.prototype.clearGatewayRef = function() {
  this.setGatewayRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rpc.edge.gloo.solo.io.WasmFilter.Location.prototype.hasGatewayRef = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional gateway.solo.io.GatewayStatus gateway_status = 2;
 * @return {?proto.gateway.solo.io.GatewayStatus}
 */
proto.rpc.edge.gloo.solo.io.WasmFilter.Location.prototype.getGatewayStatus = function() {
  return /** @type{?proto.gateway.solo.io.GatewayStatus} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$apis_api_gloo_gateway_v1_gateway_pb.GatewayStatus, 2));
};


/** @param {?proto.gateway.solo.io.GatewayStatus|undefined} value */
proto.rpc.edge.gloo.solo.io.WasmFilter.Location.prototype.setGatewayStatus = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.rpc.edge.gloo.solo.io.WasmFilter.Location.prototype.clearGatewayStatus = function() {
  this.setGatewayStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rpc.edge.gloo.solo.io.WasmFilter.Location.prototype.hasGatewayStatus = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional core.skv2.solo.io.ObjectRef gloo_instance_ref = 3;
 * @return {?proto.core.skv2.solo.io.ObjectRef}
 */
proto.rpc.edge.gloo.solo.io.WasmFilter.Location.prototype.getGlooInstanceRef = function() {
  return /** @type{?proto.core.skv2.solo.io.ObjectRef} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef, 3));
};


/** @param {?proto.core.skv2.solo.io.ObjectRef|undefined} value */
proto.rpc.edge.gloo.solo.io.WasmFilter.Location.prototype.setGlooInstanceRef = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.rpc.edge.gloo.solo.io.WasmFilter.Location.prototype.clearGlooInstanceRef = function() {
  this.setGlooInstanceRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rpc.edge.gloo.solo.io.WasmFilter.Location.prototype.hasGlooInstanceRef = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.rpc.edge.gloo.solo.io.WasmFilter.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.rpc.edge.gloo.solo.io.WasmFilter.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string root_id = 2;
 * @return {string}
 */
proto.rpc.edge.gloo.solo.io.WasmFilter.prototype.getRootId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.rpc.edge.gloo.solo.io.WasmFilter.prototype.setRootId = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string source = 3;
 * @return {string}
 */
proto.rpc.edge.gloo.solo.io.WasmFilter.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.rpc.edge.gloo.solo.io.WasmFilter.prototype.setSource = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string config = 4;
 * @return {string}
 */
proto.rpc.edge.gloo.solo.io.WasmFilter.prototype.getConfig = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.rpc.edge.gloo.solo.io.WasmFilter.prototype.setConfig = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated Location locations = 5;
 * @return {!Array<!proto.rpc.edge.gloo.solo.io.WasmFilter.Location>}
 */
proto.rpc.edge.gloo.solo.io.WasmFilter.prototype.getLocationsList = function() {
  return /** @type{!Array<!proto.rpc.edge.gloo.solo.io.WasmFilter.Location>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.rpc.edge.gloo.solo.io.WasmFilter.Location, 5));
};


/** @param {!Array<!proto.rpc.edge.gloo.solo.io.WasmFilter.Location>} value */
proto.rpc.edge.gloo.solo.io.WasmFilter.prototype.setLocationsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.rpc.edge.gloo.solo.io.WasmFilter.Location=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rpc.edge.gloo.solo.io.WasmFilter.Location}
 */
proto.rpc.edge.gloo.solo.io.WasmFilter.prototype.addLocations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.rpc.edge.gloo.solo.io.WasmFilter.Location, opt_index);
};


proto.rpc.edge.gloo.solo.io.WasmFilter.prototype.clearLocationsList = function() {
  this.setLocationsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rpc.edge.gloo.solo.io.ListWasmFiltersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rpc.edge.gloo.solo.io.ListWasmFiltersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.rpc.edge.gloo.solo.io.ListWasmFiltersRequest.displayName = 'proto.rpc.edge.gloo.solo.io.ListWasmFiltersRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rpc.edge.gloo.solo.io.ListWasmFiltersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.rpc.edge.gloo.solo.io.ListWasmFiltersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rpc.edge.gloo.solo.io.ListWasmFiltersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.ListWasmFiltersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rpc.edge.gloo.solo.io.ListWasmFiltersRequest}
 */
proto.rpc.edge.gloo.solo.io.ListWasmFiltersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rpc.edge.gloo.solo.io.ListWasmFiltersRequest;
  return proto.rpc.edge.gloo.solo.io.ListWasmFiltersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rpc.edge.gloo.solo.io.ListWasmFiltersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rpc.edge.gloo.solo.io.ListWasmFiltersRequest}
 */
proto.rpc.edge.gloo.solo.io.ListWasmFiltersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rpc.edge.gloo.solo.io.ListWasmFiltersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rpc.edge.gloo.solo.io.ListWasmFiltersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rpc.edge.gloo.solo.io.ListWasmFiltersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.ListWasmFiltersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rpc.edge.gloo.solo.io.ListWasmFiltersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rpc.edge.gloo.solo.io.ListWasmFiltersResponse.repeatedFields_, null);
};
goog.inherits(proto.rpc.edge.gloo.solo.io.ListWasmFiltersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.rpc.edge.gloo.solo.io.ListWasmFiltersResponse.displayName = 'proto.rpc.edge.gloo.solo.io.ListWasmFiltersResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rpc.edge.gloo.solo.io.ListWasmFiltersResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rpc.edge.gloo.solo.io.ListWasmFiltersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.rpc.edge.gloo.solo.io.ListWasmFiltersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rpc.edge.gloo.solo.io.ListWasmFiltersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.ListWasmFiltersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    wasmFiltersList: jspb.Message.toObjectList(msg.getWasmFiltersList(),
    proto.rpc.edge.gloo.solo.io.WasmFilter.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rpc.edge.gloo.solo.io.ListWasmFiltersResponse}
 */
proto.rpc.edge.gloo.solo.io.ListWasmFiltersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rpc.edge.gloo.solo.io.ListWasmFiltersResponse;
  return proto.rpc.edge.gloo.solo.io.ListWasmFiltersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rpc.edge.gloo.solo.io.ListWasmFiltersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rpc.edge.gloo.solo.io.ListWasmFiltersResponse}
 */
proto.rpc.edge.gloo.solo.io.ListWasmFiltersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rpc.edge.gloo.solo.io.WasmFilter;
      reader.readMessage(value,proto.rpc.edge.gloo.solo.io.WasmFilter.deserializeBinaryFromReader);
      msg.addWasmFilters(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rpc.edge.gloo.solo.io.ListWasmFiltersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rpc.edge.gloo.solo.io.ListWasmFiltersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rpc.edge.gloo.solo.io.ListWasmFiltersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.ListWasmFiltersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWasmFiltersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.rpc.edge.gloo.solo.io.WasmFilter.serializeBinaryToWriter
    );
  }
};


/**
 * repeated WasmFilter wasm_filters = 1;
 * @return {!Array<!proto.rpc.edge.gloo.solo.io.WasmFilter>}
 */
proto.rpc.edge.gloo.solo.io.ListWasmFiltersResponse.prototype.getWasmFiltersList = function() {
  return /** @type{!Array<!proto.rpc.edge.gloo.solo.io.WasmFilter>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.rpc.edge.gloo.solo.io.WasmFilter, 1));
};


/** @param {!Array<!proto.rpc.edge.gloo.solo.io.WasmFilter>} value */
proto.rpc.edge.gloo.solo.io.ListWasmFiltersResponse.prototype.setWasmFiltersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.rpc.edge.gloo.solo.io.WasmFilter=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rpc.edge.gloo.solo.io.WasmFilter}
 */
proto.rpc.edge.gloo.solo.io.ListWasmFiltersResponse.prototype.addWasmFilters = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.rpc.edge.gloo.solo.io.WasmFilter, opt_index);
};


proto.rpc.edge.gloo.solo.io.ListWasmFiltersResponse.prototype.clearWasmFiltersList = function() {
  this.setWasmFiltersList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rpc.edge.gloo.solo.io.DescribeWasmFilterRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rpc.edge.gloo.solo.io.DescribeWasmFilterRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.rpc.edge.gloo.solo.io.DescribeWasmFilterRequest.displayName = 'proto.rpc.edge.gloo.solo.io.DescribeWasmFilterRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rpc.edge.gloo.solo.io.DescribeWasmFilterRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.rpc.edge.gloo.solo.io.DescribeWasmFilterRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rpc.edge.gloo.solo.io.DescribeWasmFilterRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.DescribeWasmFilterRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    rootId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    gatewayRef: (f = msg.getGatewayRef()) && github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rpc.edge.gloo.solo.io.DescribeWasmFilterRequest}
 */
proto.rpc.edge.gloo.solo.io.DescribeWasmFilterRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rpc.edge.gloo.solo.io.DescribeWasmFilterRequest;
  return proto.rpc.edge.gloo.solo.io.DescribeWasmFilterRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rpc.edge.gloo.solo.io.DescribeWasmFilterRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rpc.edge.gloo.solo.io.DescribeWasmFilterRequest}
 */
proto.rpc.edge.gloo.solo.io.DescribeWasmFilterRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRootId(value);
      break;
    case 3:
      var value = new github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef;
      reader.readMessage(value,github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef.deserializeBinaryFromReader);
      msg.setGatewayRef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rpc.edge.gloo.solo.io.DescribeWasmFilterRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rpc.edge.gloo.solo.io.DescribeWasmFilterRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rpc.edge.gloo.solo.io.DescribeWasmFilterRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.DescribeWasmFilterRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRootId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getGatewayRef();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.rpc.edge.gloo.solo.io.DescribeWasmFilterRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.rpc.edge.gloo.solo.io.DescribeWasmFilterRequest.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string root_id = 2;
 * @return {string}
 */
proto.rpc.edge.gloo.solo.io.DescribeWasmFilterRequest.prototype.getRootId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.rpc.edge.gloo.solo.io.DescribeWasmFilterRequest.prototype.setRootId = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional core.skv2.solo.io.ObjectRef gateway_ref = 3;
 * @return {?proto.core.skv2.solo.io.ObjectRef}
 */
proto.rpc.edge.gloo.solo.io.DescribeWasmFilterRequest.prototype.getGatewayRef = function() {
  return /** @type{?proto.core.skv2.solo.io.ObjectRef} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef, 3));
};


/** @param {?proto.core.skv2.solo.io.ObjectRef|undefined} value */
proto.rpc.edge.gloo.solo.io.DescribeWasmFilterRequest.prototype.setGatewayRef = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.rpc.edge.gloo.solo.io.DescribeWasmFilterRequest.prototype.clearGatewayRef = function() {
  this.setGatewayRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rpc.edge.gloo.solo.io.DescribeWasmFilterRequest.prototype.hasGatewayRef = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rpc.edge.gloo.solo.io.DescribeWasmFilterResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rpc.edge.gloo.solo.io.DescribeWasmFilterResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.rpc.edge.gloo.solo.io.DescribeWasmFilterResponse.displayName = 'proto.rpc.edge.gloo.solo.io.DescribeWasmFilterResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rpc.edge.gloo.solo.io.DescribeWasmFilterResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.rpc.edge.gloo.solo.io.DescribeWasmFilterResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rpc.edge.gloo.solo.io.DescribeWasmFilterResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.DescribeWasmFilterResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    wasmFilter: (f = msg.getWasmFilter()) && proto.rpc.edge.gloo.solo.io.WasmFilter.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rpc.edge.gloo.solo.io.DescribeWasmFilterResponse}
 */
proto.rpc.edge.gloo.solo.io.DescribeWasmFilterResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rpc.edge.gloo.solo.io.DescribeWasmFilterResponse;
  return proto.rpc.edge.gloo.solo.io.DescribeWasmFilterResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rpc.edge.gloo.solo.io.DescribeWasmFilterResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rpc.edge.gloo.solo.io.DescribeWasmFilterResponse}
 */
proto.rpc.edge.gloo.solo.io.DescribeWasmFilterResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rpc.edge.gloo.solo.io.WasmFilter;
      reader.readMessage(value,proto.rpc.edge.gloo.solo.io.WasmFilter.deserializeBinaryFromReader);
      msg.setWasmFilter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rpc.edge.gloo.solo.io.DescribeWasmFilterResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rpc.edge.gloo.solo.io.DescribeWasmFilterResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rpc.edge.gloo.solo.io.DescribeWasmFilterResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.DescribeWasmFilterResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWasmFilter();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rpc.edge.gloo.solo.io.WasmFilter.serializeBinaryToWriter
    );
  }
};


/**
 * optional WasmFilter wasm_filter = 1;
 * @return {?proto.rpc.edge.gloo.solo.io.WasmFilter}
 */
proto.rpc.edge.gloo.solo.io.DescribeWasmFilterResponse.prototype.getWasmFilter = function() {
  return /** @type{?proto.rpc.edge.gloo.solo.io.WasmFilter} */ (
    jspb.Message.getWrapperField(this, proto.rpc.edge.gloo.solo.io.WasmFilter, 1));
};


/** @param {?proto.rpc.edge.gloo.solo.io.WasmFilter|undefined} value */
proto.rpc.edge.gloo.solo.io.DescribeWasmFilterResponse.prototype.setWasmFilter = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.rpc.edge.gloo.solo.io.DescribeWasmFilterResponse.prototype.clearWasmFilter = function() {
  this.setWasmFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rpc.edge.gloo.solo.io.DescribeWasmFilterResponse.prototype.hasWasmFilter = function() {
  return jspb.Message.getField(this, 1) != null;
};


goog.object.extend(exports, proto.rpc.edge.gloo.solo.io);
