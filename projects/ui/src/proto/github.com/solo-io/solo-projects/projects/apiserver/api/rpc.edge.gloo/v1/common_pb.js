/* eslint-disable */
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var extproto_ext_pb = require('../../../../../../../../extproto/ext_pb.js');
goog.exportSymbol('proto.rpc.edge.gloo.solo.io.ObjectMeta', null, global);
goog.exportSymbol('proto.rpc.edge.gloo.solo.io.Pagination', null, global);
goog.exportSymbol('proto.rpc.edge.gloo.solo.io.ResourceYaml', null, global);
goog.exportSymbol('proto.rpc.edge.gloo.solo.io.SortOptions', null, global);
goog.exportSymbol('proto.rpc.edge.gloo.solo.io.SortOptions.SortKey', null, global);
goog.exportSymbol('proto.rpc.edge.gloo.solo.io.StatusFilter', null, global);
goog.exportSymbol('proto.rpc.edge.gloo.solo.io.Time', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rpc.edge.gloo.solo.io.ObjectMeta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rpc.edge.gloo.solo.io.ObjectMeta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.rpc.edge.gloo.solo.io.ObjectMeta.displayName = 'proto.rpc.edge.gloo.solo.io.ObjectMeta';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rpc.edge.gloo.solo.io.ObjectMeta.prototype.toObject = function(opt_includeInstance) {
  return proto.rpc.edge.gloo.solo.io.ObjectMeta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rpc.edge.gloo.solo.io.ObjectMeta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.ObjectMeta.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    namespace: jspb.Message.getFieldWithDefault(msg, 3, ""),
    uid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    resourceVersion: jspb.Message.getFieldWithDefault(msg, 6, ""),
    creationTimestamp: (f = msg.getCreationTimestamp()) && proto.rpc.edge.gloo.solo.io.Time.toObject(includeInstance, f),
    labelsMap: (f = msg.getLabelsMap()) ? f.toObject(includeInstance, undefined) : [],
    annotationsMap: (f = msg.getAnnotationsMap()) ? f.toObject(includeInstance, undefined) : [],
    clusterName: jspb.Message.getFieldWithDefault(msg, 13, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rpc.edge.gloo.solo.io.ObjectMeta}
 */
proto.rpc.edge.gloo.solo.io.ObjectMeta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rpc.edge.gloo.solo.io.ObjectMeta;
  return proto.rpc.edge.gloo.solo.io.ObjectMeta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rpc.edge.gloo.solo.io.ObjectMeta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rpc.edge.gloo.solo.io.ObjectMeta}
 */
proto.rpc.edge.gloo.solo.io.ObjectMeta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setResourceVersion(value);
      break;
    case 8:
      var value = new proto.rpc.edge.gloo.solo.io.Time;
      reader.readMessage(value,proto.rpc.edge.gloo.solo.io.Time.deserializeBinaryFromReader);
      msg.setCreationTimestamp(value);
      break;
    case 11:
      var value = msg.getLabelsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    case 12:
      var value = msg.getAnnotationsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setClusterName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rpc.edge.gloo.solo.io.ObjectMeta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rpc.edge.gloo.solo.io.ObjectMeta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rpc.edge.gloo.solo.io.ObjectMeta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.ObjectMeta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getResourceVersion();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCreationTimestamp();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.rpc.edge.gloo.solo.io.Time.serializeBinaryToWriter
    );
  }
  f = message.getLabelsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(11, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getAnnotationsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(12, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getClusterName();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.rpc.edge.gloo.solo.io.ObjectMeta.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.rpc.edge.gloo.solo.io.ObjectMeta.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string namespace = 3;
 * @return {string}
 */
proto.rpc.edge.gloo.solo.io.ObjectMeta.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.rpc.edge.gloo.solo.io.ObjectMeta.prototype.setNamespace = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string uid = 5;
 * @return {string}
 */
proto.rpc.edge.gloo.solo.io.ObjectMeta.prototype.getUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.rpc.edge.gloo.solo.io.ObjectMeta.prototype.setUid = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string resource_version = 6;
 * @return {string}
 */
proto.rpc.edge.gloo.solo.io.ObjectMeta.prototype.getResourceVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.rpc.edge.gloo.solo.io.ObjectMeta.prototype.setResourceVersion = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional Time creation_timestamp = 8;
 * @return {?proto.rpc.edge.gloo.solo.io.Time}
 */
proto.rpc.edge.gloo.solo.io.ObjectMeta.prototype.getCreationTimestamp = function() {
  return /** @type{?proto.rpc.edge.gloo.solo.io.Time} */ (
    jspb.Message.getWrapperField(this, proto.rpc.edge.gloo.solo.io.Time, 8));
};


/** @param {?proto.rpc.edge.gloo.solo.io.Time|undefined} value */
proto.rpc.edge.gloo.solo.io.ObjectMeta.prototype.setCreationTimestamp = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.rpc.edge.gloo.solo.io.ObjectMeta.prototype.clearCreationTimestamp = function() {
  this.setCreationTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rpc.edge.gloo.solo.io.ObjectMeta.prototype.hasCreationTimestamp = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * map<string, string> labels = 11;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.rpc.edge.gloo.solo.io.ObjectMeta.prototype.getLabelsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 11, opt_noLazyCreate,
      null));
};


proto.rpc.edge.gloo.solo.io.ObjectMeta.prototype.clearLabelsMap = function() {
  this.getLabelsMap().clear();
};


/**
 * map<string, string> annotations = 12;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.rpc.edge.gloo.solo.io.ObjectMeta.prototype.getAnnotationsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 12, opt_noLazyCreate,
      null));
};


proto.rpc.edge.gloo.solo.io.ObjectMeta.prototype.clearAnnotationsMap = function() {
  this.getAnnotationsMap().clear();
};


/**
 * optional string cluster_name = 13;
 * @return {string}
 */
proto.rpc.edge.gloo.solo.io.ObjectMeta.prototype.getClusterName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.rpc.edge.gloo.solo.io.ObjectMeta.prototype.setClusterName = function(value) {
  jspb.Message.setProto3StringField(this, 13, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rpc.edge.gloo.solo.io.Time = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rpc.edge.gloo.solo.io.Time, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.rpc.edge.gloo.solo.io.Time.displayName = 'proto.rpc.edge.gloo.solo.io.Time';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rpc.edge.gloo.solo.io.Time.prototype.toObject = function(opt_includeInstance) {
  return proto.rpc.edge.gloo.solo.io.Time.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rpc.edge.gloo.solo.io.Time} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.Time.toObject = function(includeInstance, msg) {
  var f, obj = {
    seconds: jspb.Message.getFieldWithDefault(msg, 1, 0),
    nanos: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rpc.edge.gloo.solo.io.Time}
 */
proto.rpc.edge.gloo.solo.io.Time.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rpc.edge.gloo.solo.io.Time;
  return proto.rpc.edge.gloo.solo.io.Time.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rpc.edge.gloo.solo.io.Time} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rpc.edge.gloo.solo.io.Time}
 */
proto.rpc.edge.gloo.solo.io.Time.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSeconds(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNanos(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rpc.edge.gloo.solo.io.Time.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rpc.edge.gloo.solo.io.Time.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rpc.edge.gloo.solo.io.Time} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.Time.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSeconds();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getNanos();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int64 seconds = 1;
 * @return {number}
 */
proto.rpc.edge.gloo.solo.io.Time.prototype.getSeconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.rpc.edge.gloo.solo.io.Time.prototype.setSeconds = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 nanos = 2;
 * @return {number}
 */
proto.rpc.edge.gloo.solo.io.Time.prototype.getNanos = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.rpc.edge.gloo.solo.io.Time.prototype.setNanos = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rpc.edge.gloo.solo.io.ResourceYaml = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rpc.edge.gloo.solo.io.ResourceYaml, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.rpc.edge.gloo.solo.io.ResourceYaml.displayName = 'proto.rpc.edge.gloo.solo.io.ResourceYaml';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rpc.edge.gloo.solo.io.ResourceYaml.prototype.toObject = function(opt_includeInstance) {
  return proto.rpc.edge.gloo.solo.io.ResourceYaml.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rpc.edge.gloo.solo.io.ResourceYaml} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.ResourceYaml.toObject = function(includeInstance, msg) {
  var f, obj = {
    yaml: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rpc.edge.gloo.solo.io.ResourceYaml}
 */
proto.rpc.edge.gloo.solo.io.ResourceYaml.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rpc.edge.gloo.solo.io.ResourceYaml;
  return proto.rpc.edge.gloo.solo.io.ResourceYaml.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rpc.edge.gloo.solo.io.ResourceYaml} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rpc.edge.gloo.solo.io.ResourceYaml}
 */
proto.rpc.edge.gloo.solo.io.ResourceYaml.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setYaml(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rpc.edge.gloo.solo.io.ResourceYaml.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rpc.edge.gloo.solo.io.ResourceYaml.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rpc.edge.gloo.solo.io.ResourceYaml} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.ResourceYaml.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getYaml();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string yaml = 1;
 * @return {string}
 */
proto.rpc.edge.gloo.solo.io.ResourceYaml.prototype.getYaml = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.rpc.edge.gloo.solo.io.ResourceYaml.prototype.setYaml = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rpc.edge.gloo.solo.io.Pagination = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rpc.edge.gloo.solo.io.Pagination, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.rpc.edge.gloo.solo.io.Pagination.displayName = 'proto.rpc.edge.gloo.solo.io.Pagination';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rpc.edge.gloo.solo.io.Pagination.prototype.toObject = function(opt_includeInstance) {
  return proto.rpc.edge.gloo.solo.io.Pagination.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rpc.edge.gloo.solo.io.Pagination} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.Pagination.toObject = function(includeInstance, msg) {
  var f, obj = {
    limit: jspb.Message.getFieldWithDefault(msg, 1, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rpc.edge.gloo.solo.io.Pagination}
 */
proto.rpc.edge.gloo.solo.io.Pagination.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rpc.edge.gloo.solo.io.Pagination;
  return proto.rpc.edge.gloo.solo.io.Pagination.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rpc.edge.gloo.solo.io.Pagination} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rpc.edge.gloo.solo.io.Pagination}
 */
proto.rpc.edge.gloo.solo.io.Pagination.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOffset(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rpc.edge.gloo.solo.io.Pagination.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rpc.edge.gloo.solo.io.Pagination.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rpc.edge.gloo.solo.io.Pagination} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.Pagination.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 limit = 1;
 * @return {number}
 */
proto.rpc.edge.gloo.solo.io.Pagination.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.rpc.edge.gloo.solo.io.Pagination.prototype.setLimit = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 offset = 2;
 * @return {number}
 */
proto.rpc.edge.gloo.solo.io.Pagination.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.rpc.edge.gloo.solo.io.Pagination.prototype.setOffset = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rpc.edge.gloo.solo.io.SortOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rpc.edge.gloo.solo.io.SortOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.rpc.edge.gloo.solo.io.SortOptions.displayName = 'proto.rpc.edge.gloo.solo.io.SortOptions';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rpc.edge.gloo.solo.io.SortOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.rpc.edge.gloo.solo.io.SortOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rpc.edge.gloo.solo.io.SortOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.SortOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    descending: jspb.Message.getFieldWithDefault(msg, 1, false),
    sortKey: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rpc.edge.gloo.solo.io.SortOptions}
 */
proto.rpc.edge.gloo.solo.io.SortOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rpc.edge.gloo.solo.io.SortOptions;
  return proto.rpc.edge.gloo.solo.io.SortOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rpc.edge.gloo.solo.io.SortOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rpc.edge.gloo.solo.io.SortOptions}
 */
proto.rpc.edge.gloo.solo.io.SortOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDescending(value);
      break;
    case 2:
      var value = /** @type {!proto.rpc.edge.gloo.solo.io.SortOptions.SortKey} */ (reader.readEnum());
      msg.setSortKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rpc.edge.gloo.solo.io.SortOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rpc.edge.gloo.solo.io.SortOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rpc.edge.gloo.solo.io.SortOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.SortOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDescending();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getSortKey();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.rpc.edge.gloo.solo.io.SortOptions.SortKey = {
  NAME: 0,
  NAMESPACE: 1,
  STATUS: 2
};

/**
 * optional bool descending = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.rpc.edge.gloo.solo.io.SortOptions.prototype.getDescending = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.rpc.edge.gloo.solo.io.SortOptions.prototype.setDescending = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional SortKey sort_key = 2;
 * @return {!proto.rpc.edge.gloo.solo.io.SortOptions.SortKey}
 */
proto.rpc.edge.gloo.solo.io.SortOptions.prototype.getSortKey = function() {
  return /** @type {!proto.rpc.edge.gloo.solo.io.SortOptions.SortKey} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.rpc.edge.gloo.solo.io.SortOptions.SortKey} value */
proto.rpc.edge.gloo.solo.io.SortOptions.prototype.setSortKey = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rpc.edge.gloo.solo.io.StatusFilter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rpc.edge.gloo.solo.io.StatusFilter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.rpc.edge.gloo.solo.io.StatusFilter.displayName = 'proto.rpc.edge.gloo.solo.io.StatusFilter';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rpc.edge.gloo.solo.io.StatusFilter.prototype.toObject = function(opt_includeInstance) {
  return proto.rpc.edge.gloo.solo.io.StatusFilter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rpc.edge.gloo.solo.io.StatusFilter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.StatusFilter.toObject = function(includeInstance, msg) {
  var f, obj = {
    state: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rpc.edge.gloo.solo.io.StatusFilter}
 */
proto.rpc.edge.gloo.solo.io.StatusFilter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rpc.edge.gloo.solo.io.StatusFilter;
  return proto.rpc.edge.gloo.solo.io.StatusFilter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rpc.edge.gloo.solo.io.StatusFilter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rpc.edge.gloo.solo.io.StatusFilter}
 */
proto.rpc.edge.gloo.solo.io.StatusFilter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rpc.edge.gloo.solo.io.StatusFilter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rpc.edge.gloo.solo.io.StatusFilter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rpc.edge.gloo.solo.io.StatusFilter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.StatusFilter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getState();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 state = 1;
 * @return {number}
 */
proto.rpc.edge.gloo.solo.io.StatusFilter.prototype.getState = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.rpc.edge.gloo.solo.io.StatusFilter.prototype.setState = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


goog.object.extend(exports, proto.rpc.edge.gloo.solo.io);
