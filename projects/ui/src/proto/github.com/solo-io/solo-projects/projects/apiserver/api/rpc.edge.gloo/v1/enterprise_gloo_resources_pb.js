/* eslint-disable */
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var extproto_ext_pb = require('../../../../../../../../extproto/ext_pb.js');
var github_com_solo$io_solo$apis_api_gloo_enterprise_gloo_v1_auth_config_pb = require('../../../../../../../../github.com/solo-io/solo-apis/api/gloo/enterprise.gloo/v1/auth_config_pb.js');
var github_com_solo$io_skv2_api_core_v1_core_pb = require('../../../../../../../../github.com/solo-io/skv2/api/core/v1/core_pb.js');
var github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb = require('../../../../../../../../github.com/solo-io/solo-projects/projects/apiserver/api/rpc.edge.gloo/v1/common_pb.js');
goog.exportSymbol('proto.rpc.edge.gloo.solo.io.AuthConfig', null, global);
goog.exportSymbol('proto.rpc.edge.gloo.solo.io.GetAuthConfigDetailsRequest', null, global);
goog.exportSymbol('proto.rpc.edge.gloo.solo.io.GetAuthConfigDetailsResponse', null, global);
goog.exportSymbol('proto.rpc.edge.gloo.solo.io.GetAuthConfigYamlRequest', null, global);
goog.exportSymbol('proto.rpc.edge.gloo.solo.io.GetAuthConfigYamlResponse', null, global);
goog.exportSymbol('proto.rpc.edge.gloo.solo.io.ListAuthConfigsRequest', null, global);
goog.exportSymbol('proto.rpc.edge.gloo.solo.io.ListAuthConfigsResponse', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rpc.edge.gloo.solo.io.AuthConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rpc.edge.gloo.solo.io.AuthConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.rpc.edge.gloo.solo.io.AuthConfig.displayName = 'proto.rpc.edge.gloo.solo.io.AuthConfig';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rpc.edge.gloo.solo.io.AuthConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.rpc.edge.gloo.solo.io.AuthConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rpc.edge.gloo.solo.io.AuthConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.AuthConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.ObjectMeta.toObject(includeInstance, f),
    spec: (f = msg.getSpec()) && github_com_solo$io_solo$apis_api_gloo_enterprise_gloo_v1_auth_config_pb.AuthConfigSpec.toObject(includeInstance, f),
    status: (f = msg.getStatus()) && github_com_solo$io_solo$apis_api_gloo_enterprise_gloo_v1_auth_config_pb.AuthConfigStatus.toObject(includeInstance, f),
    glooInstance: (f = msg.getGlooInstance()) && github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rpc.edge.gloo.solo.io.AuthConfig}
 */
proto.rpc.edge.gloo.solo.io.AuthConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rpc.edge.gloo.solo.io.AuthConfig;
  return proto.rpc.edge.gloo.solo.io.AuthConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rpc.edge.gloo.solo.io.AuthConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rpc.edge.gloo.solo.io.AuthConfig}
 */
proto.rpc.edge.gloo.solo.io.AuthConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.ObjectMeta;
      reader.readMessage(value,github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.ObjectMeta.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = new github_com_solo$io_solo$apis_api_gloo_enterprise_gloo_v1_auth_config_pb.AuthConfigSpec;
      reader.readMessage(value,github_com_solo$io_solo$apis_api_gloo_enterprise_gloo_v1_auth_config_pb.AuthConfigSpec.deserializeBinaryFromReader);
      msg.setSpec(value);
      break;
    case 3:
      var value = new github_com_solo$io_solo$apis_api_gloo_enterprise_gloo_v1_auth_config_pb.AuthConfigStatus;
      reader.readMessage(value,github_com_solo$io_solo$apis_api_gloo_enterprise_gloo_v1_auth_config_pb.AuthConfigStatus.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 4:
      var value = new github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef;
      reader.readMessage(value,github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef.deserializeBinaryFromReader);
      msg.setGlooInstance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rpc.edge.gloo.solo.io.AuthConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rpc.edge.gloo.solo.io.AuthConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rpc.edge.gloo.solo.io.AuthConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.AuthConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.ObjectMeta.serializeBinaryToWriter
    );
  }
  f = message.getSpec();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      github_com_solo$io_solo$apis_api_gloo_enterprise_gloo_v1_auth_config_pb.AuthConfigSpec.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      github_com_solo$io_solo$apis_api_gloo_enterprise_gloo_v1_auth_config_pb.AuthConfigStatus.serializeBinaryToWriter
    );
  }
  f = message.getGlooInstance();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef.serializeBinaryToWriter
    );
  }
};


/**
 * optional ObjectMeta metadata = 1;
 * @return {?proto.rpc.edge.gloo.solo.io.ObjectMeta}
 */
proto.rpc.edge.gloo.solo.io.AuthConfig.prototype.getMetadata = function() {
  return /** @type{?proto.rpc.edge.gloo.solo.io.ObjectMeta} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.ObjectMeta, 1));
};


/** @param {?proto.rpc.edge.gloo.solo.io.ObjectMeta|undefined} value */
proto.rpc.edge.gloo.solo.io.AuthConfig.prototype.setMetadata = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.rpc.edge.gloo.solo.io.AuthConfig.prototype.clearMetadata = function() {
  this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rpc.edge.gloo.solo.io.AuthConfig.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional enterprise.gloo.solo.io.AuthConfigSpec spec = 2;
 * @return {?proto.enterprise.gloo.solo.io.AuthConfigSpec}
 */
proto.rpc.edge.gloo.solo.io.AuthConfig.prototype.getSpec = function() {
  return /** @type{?proto.enterprise.gloo.solo.io.AuthConfigSpec} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$apis_api_gloo_enterprise_gloo_v1_auth_config_pb.AuthConfigSpec, 2));
};


/** @param {?proto.enterprise.gloo.solo.io.AuthConfigSpec|undefined} value */
proto.rpc.edge.gloo.solo.io.AuthConfig.prototype.setSpec = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.rpc.edge.gloo.solo.io.AuthConfig.prototype.clearSpec = function() {
  this.setSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rpc.edge.gloo.solo.io.AuthConfig.prototype.hasSpec = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional enterprise.gloo.solo.io.AuthConfigStatus status = 3;
 * @return {?proto.enterprise.gloo.solo.io.AuthConfigStatus}
 */
proto.rpc.edge.gloo.solo.io.AuthConfig.prototype.getStatus = function() {
  return /** @type{?proto.enterprise.gloo.solo.io.AuthConfigStatus} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$apis_api_gloo_enterprise_gloo_v1_auth_config_pb.AuthConfigStatus, 3));
};


/** @param {?proto.enterprise.gloo.solo.io.AuthConfigStatus|undefined} value */
proto.rpc.edge.gloo.solo.io.AuthConfig.prototype.setStatus = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.rpc.edge.gloo.solo.io.AuthConfig.prototype.clearStatus = function() {
  this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rpc.edge.gloo.solo.io.AuthConfig.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional core.skv2.solo.io.ObjectRef gloo_instance = 4;
 * @return {?proto.core.skv2.solo.io.ObjectRef}
 */
proto.rpc.edge.gloo.solo.io.AuthConfig.prototype.getGlooInstance = function() {
  return /** @type{?proto.core.skv2.solo.io.ObjectRef} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef, 4));
};


/** @param {?proto.core.skv2.solo.io.ObjectRef|undefined} value */
proto.rpc.edge.gloo.solo.io.AuthConfig.prototype.setGlooInstance = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.rpc.edge.gloo.solo.io.AuthConfig.prototype.clearGlooInstance = function() {
  this.setGlooInstance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rpc.edge.gloo.solo.io.AuthConfig.prototype.hasGlooInstance = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rpc.edge.gloo.solo.io.ListAuthConfigsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rpc.edge.gloo.solo.io.ListAuthConfigsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.rpc.edge.gloo.solo.io.ListAuthConfigsRequest.displayName = 'proto.rpc.edge.gloo.solo.io.ListAuthConfigsRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rpc.edge.gloo.solo.io.ListAuthConfigsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.rpc.edge.gloo.solo.io.ListAuthConfigsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rpc.edge.gloo.solo.io.ListAuthConfigsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.ListAuthConfigsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    glooInstanceRef: (f = msg.getGlooInstanceRef()) && github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef.toObject(includeInstance, f),
    pagination: (f = msg.getPagination()) && github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.Pagination.toObject(includeInstance, f),
    queryString: jspb.Message.getFieldWithDefault(msg, 3, ""),
    statusFilter: (f = msg.getStatusFilter()) && github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.StatusFilter.toObject(includeInstance, f),
    sortOptions: (f = msg.getSortOptions()) && github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.SortOptions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rpc.edge.gloo.solo.io.ListAuthConfigsRequest}
 */
proto.rpc.edge.gloo.solo.io.ListAuthConfigsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rpc.edge.gloo.solo.io.ListAuthConfigsRequest;
  return proto.rpc.edge.gloo.solo.io.ListAuthConfigsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rpc.edge.gloo.solo.io.ListAuthConfigsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rpc.edge.gloo.solo.io.ListAuthConfigsRequest}
 */
proto.rpc.edge.gloo.solo.io.ListAuthConfigsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef;
      reader.readMessage(value,github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef.deserializeBinaryFromReader);
      msg.setGlooInstanceRef(value);
      break;
    case 2:
      var value = new github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.Pagination;
      reader.readMessage(value,github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setQueryString(value);
      break;
    case 4:
      var value = new github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.StatusFilter;
      reader.readMessage(value,github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.StatusFilter.deserializeBinaryFromReader);
      msg.setStatusFilter(value);
      break;
    case 5:
      var value = new github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.SortOptions;
      reader.readMessage(value,github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.SortOptions.deserializeBinaryFromReader);
      msg.setSortOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rpc.edge.gloo.solo.io.ListAuthConfigsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rpc.edge.gloo.solo.io.ListAuthConfigsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rpc.edge.gloo.solo.io.ListAuthConfigsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.ListAuthConfigsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGlooInstanceRef();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.Pagination.serializeBinaryToWriter
    );
  }
  f = message.getQueryString();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStatusFilter();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.StatusFilter.serializeBinaryToWriter
    );
  }
  f = message.getSortOptions();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.SortOptions.serializeBinaryToWriter
    );
  }
};


/**
 * optional core.skv2.solo.io.ObjectRef gloo_instance_ref = 1;
 * @return {?proto.core.skv2.solo.io.ObjectRef}
 */
proto.rpc.edge.gloo.solo.io.ListAuthConfigsRequest.prototype.getGlooInstanceRef = function() {
  return /** @type{?proto.core.skv2.solo.io.ObjectRef} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_skv2_api_core_v1_core_pb.ObjectRef, 1));
};


/** @param {?proto.core.skv2.solo.io.ObjectRef|undefined} value */
proto.rpc.edge.gloo.solo.io.ListAuthConfigsRequest.prototype.setGlooInstanceRef = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.rpc.edge.gloo.solo.io.ListAuthConfigsRequest.prototype.clearGlooInstanceRef = function() {
  this.setGlooInstanceRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rpc.edge.gloo.solo.io.ListAuthConfigsRequest.prototype.hasGlooInstanceRef = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Pagination pagination = 2;
 * @return {?proto.rpc.edge.gloo.solo.io.Pagination}
 */
proto.rpc.edge.gloo.solo.io.ListAuthConfigsRequest.prototype.getPagination = function() {
  return /** @type{?proto.rpc.edge.gloo.solo.io.Pagination} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.Pagination, 2));
};


/** @param {?proto.rpc.edge.gloo.solo.io.Pagination|undefined} value */
proto.rpc.edge.gloo.solo.io.ListAuthConfigsRequest.prototype.setPagination = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.rpc.edge.gloo.solo.io.ListAuthConfigsRequest.prototype.clearPagination = function() {
  this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rpc.edge.gloo.solo.io.ListAuthConfigsRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string query_string = 3;
 * @return {string}
 */
proto.rpc.edge.gloo.solo.io.ListAuthConfigsRequest.prototype.getQueryString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.rpc.edge.gloo.solo.io.ListAuthConfigsRequest.prototype.setQueryString = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional StatusFilter status_filter = 4;
 * @return {?proto.rpc.edge.gloo.solo.io.StatusFilter}
 */
proto.rpc.edge.gloo.solo.io.ListAuthConfigsRequest.prototype.getStatusFilter = function() {
  return /** @type{?proto.rpc.edge.gloo.solo.io.StatusFilter} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.StatusFilter, 4));
};


/** @param {?proto.rpc.edge.gloo.solo.io.StatusFilter|undefined} value */
proto.rpc.edge.gloo.solo.io.ListAuthConfigsRequest.prototype.setStatusFilter = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.rpc.edge.gloo.solo.io.ListAuthConfigsRequest.prototype.clearStatusFilter = function() {
  this.setStatusFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rpc.edge.gloo.solo.io.ListAuthConfigsRequest.prototype.hasStatusFilter = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional SortOptions sort_options = 5;
 * @return {?proto.rpc.edge.gloo.solo.io.SortOptions}
 */
proto.rpc.edge.gloo.solo.io.ListAuthConfigsRequest.prototype.getSortOptions = function() {
  return /** @type{?proto.rpc.edge.gloo.solo.io.SortOptions} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.SortOptions, 5));
};


/** @param {?proto.rpc.edge.gloo.solo.io.SortOptions|undefined} value */
proto.rpc.edge.gloo.solo.io.ListAuthConfigsRequest.prototype.setSortOptions = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.rpc.edge.gloo.solo.io.ListAuthConfigsRequest.prototype.clearSortOptions = function() {
  this.setSortOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rpc.edge.gloo.solo.io.ListAuthConfigsRequest.prototype.hasSortOptions = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rpc.edge.gloo.solo.io.ListAuthConfigsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rpc.edge.gloo.solo.io.ListAuthConfigsResponse.repeatedFields_, null);
};
goog.inherits(proto.rpc.edge.gloo.solo.io.ListAuthConfigsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.rpc.edge.gloo.solo.io.ListAuthConfigsResponse.displayName = 'proto.rpc.edge.gloo.solo.io.ListAuthConfigsResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rpc.edge.gloo.solo.io.ListAuthConfigsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rpc.edge.gloo.solo.io.ListAuthConfigsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.rpc.edge.gloo.solo.io.ListAuthConfigsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rpc.edge.gloo.solo.io.ListAuthConfigsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.ListAuthConfigsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    authConfigsList: jspb.Message.toObjectList(msg.getAuthConfigsList(),
    proto.rpc.edge.gloo.solo.io.AuthConfig.toObject, includeInstance),
    total: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rpc.edge.gloo.solo.io.ListAuthConfigsResponse}
 */
proto.rpc.edge.gloo.solo.io.ListAuthConfigsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rpc.edge.gloo.solo.io.ListAuthConfigsResponse;
  return proto.rpc.edge.gloo.solo.io.ListAuthConfigsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rpc.edge.gloo.solo.io.ListAuthConfigsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rpc.edge.gloo.solo.io.ListAuthConfigsResponse}
 */
proto.rpc.edge.gloo.solo.io.ListAuthConfigsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rpc.edge.gloo.solo.io.AuthConfig;
      reader.readMessage(value,proto.rpc.edge.gloo.solo.io.AuthConfig.deserializeBinaryFromReader);
      msg.addAuthConfigs(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rpc.edge.gloo.solo.io.ListAuthConfigsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rpc.edge.gloo.solo.io.ListAuthConfigsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rpc.edge.gloo.solo.io.ListAuthConfigsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.ListAuthConfigsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthConfigsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.rpc.edge.gloo.solo.io.AuthConfig.serializeBinaryToWriter
    );
  }
  f = message.getTotal();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * repeated AuthConfig auth_configs = 1;
 * @return {!Array<!proto.rpc.edge.gloo.solo.io.AuthConfig>}
 */
proto.rpc.edge.gloo.solo.io.ListAuthConfigsResponse.prototype.getAuthConfigsList = function() {
  return /** @type{!Array<!proto.rpc.edge.gloo.solo.io.AuthConfig>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.rpc.edge.gloo.solo.io.AuthConfig, 1));
};


/** @param {!Array<!proto.rpc.edge.gloo.solo.io.AuthConfig>} value */
proto.rpc.edge.gloo.solo.io.ListAuthConfigsResponse.prototype.setAuthConfigsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.rpc.edge.gloo.solo.io.AuthConfig=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rpc.edge.gloo.solo.io.AuthConfig}
 */
proto.rpc.edge.gloo.solo.io.ListAuthConfigsResponse.prototype.addAuthConfigs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.rpc.edge.gloo.solo.io.AuthConfig, opt_index);
};


proto.rpc.edge.gloo.solo.io.ListAuthConfigsResponse.prototype.clearAuthConfigsList = function() {
  this.setAuthConfigsList([]);
};


/**
 * optional int32 total = 2;
 * @return {number}
 */
proto.rpc.edge.gloo.solo.io.ListAuthConfigsResponse.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.rpc.edge.gloo.solo.io.ListAuthConfigsResponse.prototype.setTotal = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rpc.edge.gloo.solo.io.GetAuthConfigYamlRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rpc.edge.gloo.solo.io.GetAuthConfigYamlRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.rpc.edge.gloo.solo.io.GetAuthConfigYamlRequest.displayName = 'proto.rpc.edge.gloo.solo.io.GetAuthConfigYamlRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rpc.edge.gloo.solo.io.GetAuthConfigYamlRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.rpc.edge.gloo.solo.io.GetAuthConfigYamlRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rpc.edge.gloo.solo.io.GetAuthConfigYamlRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.GetAuthConfigYamlRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    authConfigRef: (f = msg.getAuthConfigRef()) && github_com_solo$io_skv2_api_core_v1_core_pb.ClusterObjectRef.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rpc.edge.gloo.solo.io.GetAuthConfigYamlRequest}
 */
proto.rpc.edge.gloo.solo.io.GetAuthConfigYamlRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rpc.edge.gloo.solo.io.GetAuthConfigYamlRequest;
  return proto.rpc.edge.gloo.solo.io.GetAuthConfigYamlRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rpc.edge.gloo.solo.io.GetAuthConfigYamlRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rpc.edge.gloo.solo.io.GetAuthConfigYamlRequest}
 */
proto.rpc.edge.gloo.solo.io.GetAuthConfigYamlRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_skv2_api_core_v1_core_pb.ClusterObjectRef;
      reader.readMessage(value,github_com_solo$io_skv2_api_core_v1_core_pb.ClusterObjectRef.deserializeBinaryFromReader);
      msg.setAuthConfigRef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rpc.edge.gloo.solo.io.GetAuthConfigYamlRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rpc.edge.gloo.solo.io.GetAuthConfigYamlRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rpc.edge.gloo.solo.io.GetAuthConfigYamlRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.GetAuthConfigYamlRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthConfigRef();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_skv2_api_core_v1_core_pb.ClusterObjectRef.serializeBinaryToWriter
    );
  }
};


/**
 * optional core.skv2.solo.io.ClusterObjectRef auth_config_ref = 1;
 * @return {?proto.core.skv2.solo.io.ClusterObjectRef}
 */
proto.rpc.edge.gloo.solo.io.GetAuthConfigYamlRequest.prototype.getAuthConfigRef = function() {
  return /** @type{?proto.core.skv2.solo.io.ClusterObjectRef} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_skv2_api_core_v1_core_pb.ClusterObjectRef, 1));
};


/** @param {?proto.core.skv2.solo.io.ClusterObjectRef|undefined} value */
proto.rpc.edge.gloo.solo.io.GetAuthConfigYamlRequest.prototype.setAuthConfigRef = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.rpc.edge.gloo.solo.io.GetAuthConfigYamlRequest.prototype.clearAuthConfigRef = function() {
  this.setAuthConfigRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rpc.edge.gloo.solo.io.GetAuthConfigYamlRequest.prototype.hasAuthConfigRef = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rpc.edge.gloo.solo.io.GetAuthConfigYamlResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rpc.edge.gloo.solo.io.GetAuthConfigYamlResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.rpc.edge.gloo.solo.io.GetAuthConfigYamlResponse.displayName = 'proto.rpc.edge.gloo.solo.io.GetAuthConfigYamlResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rpc.edge.gloo.solo.io.GetAuthConfigYamlResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.rpc.edge.gloo.solo.io.GetAuthConfigYamlResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rpc.edge.gloo.solo.io.GetAuthConfigYamlResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.GetAuthConfigYamlResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    yamlData: (f = msg.getYamlData()) && github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.ResourceYaml.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rpc.edge.gloo.solo.io.GetAuthConfigYamlResponse}
 */
proto.rpc.edge.gloo.solo.io.GetAuthConfigYamlResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rpc.edge.gloo.solo.io.GetAuthConfigYamlResponse;
  return proto.rpc.edge.gloo.solo.io.GetAuthConfigYamlResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rpc.edge.gloo.solo.io.GetAuthConfigYamlResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rpc.edge.gloo.solo.io.GetAuthConfigYamlResponse}
 */
proto.rpc.edge.gloo.solo.io.GetAuthConfigYamlResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.ResourceYaml;
      reader.readMessage(value,github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.ResourceYaml.deserializeBinaryFromReader);
      msg.setYamlData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rpc.edge.gloo.solo.io.GetAuthConfigYamlResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rpc.edge.gloo.solo.io.GetAuthConfigYamlResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rpc.edge.gloo.solo.io.GetAuthConfigYamlResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.GetAuthConfigYamlResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getYamlData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.ResourceYaml.serializeBinaryToWriter
    );
  }
};


/**
 * optional ResourceYaml yaml_data = 1;
 * @return {?proto.rpc.edge.gloo.solo.io.ResourceYaml}
 */
proto.rpc.edge.gloo.solo.io.GetAuthConfigYamlResponse.prototype.getYamlData = function() {
  return /** @type{?proto.rpc.edge.gloo.solo.io.ResourceYaml} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_solo$projects_projects_apiserver_api_rpc_edge_gloo_v1_common_pb.ResourceYaml, 1));
};


/** @param {?proto.rpc.edge.gloo.solo.io.ResourceYaml|undefined} value */
proto.rpc.edge.gloo.solo.io.GetAuthConfigYamlResponse.prototype.setYamlData = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.rpc.edge.gloo.solo.io.GetAuthConfigYamlResponse.prototype.clearYamlData = function() {
  this.setYamlData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rpc.edge.gloo.solo.io.GetAuthConfigYamlResponse.prototype.hasYamlData = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rpc.edge.gloo.solo.io.GetAuthConfigDetailsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rpc.edge.gloo.solo.io.GetAuthConfigDetailsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.rpc.edge.gloo.solo.io.GetAuthConfigDetailsRequest.displayName = 'proto.rpc.edge.gloo.solo.io.GetAuthConfigDetailsRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rpc.edge.gloo.solo.io.GetAuthConfigDetailsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.rpc.edge.gloo.solo.io.GetAuthConfigDetailsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rpc.edge.gloo.solo.io.GetAuthConfigDetailsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.GetAuthConfigDetailsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    authConfigRef: (f = msg.getAuthConfigRef()) && github_com_solo$io_skv2_api_core_v1_core_pb.ClusterObjectRef.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rpc.edge.gloo.solo.io.GetAuthConfigDetailsRequest}
 */
proto.rpc.edge.gloo.solo.io.GetAuthConfigDetailsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rpc.edge.gloo.solo.io.GetAuthConfigDetailsRequest;
  return proto.rpc.edge.gloo.solo.io.GetAuthConfigDetailsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rpc.edge.gloo.solo.io.GetAuthConfigDetailsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rpc.edge.gloo.solo.io.GetAuthConfigDetailsRequest}
 */
proto.rpc.edge.gloo.solo.io.GetAuthConfigDetailsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_solo$io_skv2_api_core_v1_core_pb.ClusterObjectRef;
      reader.readMessage(value,github_com_solo$io_skv2_api_core_v1_core_pb.ClusterObjectRef.deserializeBinaryFromReader);
      msg.setAuthConfigRef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rpc.edge.gloo.solo.io.GetAuthConfigDetailsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rpc.edge.gloo.solo.io.GetAuthConfigDetailsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rpc.edge.gloo.solo.io.GetAuthConfigDetailsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.GetAuthConfigDetailsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthConfigRef();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_solo$io_skv2_api_core_v1_core_pb.ClusterObjectRef.serializeBinaryToWriter
    );
  }
};


/**
 * optional core.skv2.solo.io.ClusterObjectRef auth_config_ref = 1;
 * @return {?proto.core.skv2.solo.io.ClusterObjectRef}
 */
proto.rpc.edge.gloo.solo.io.GetAuthConfigDetailsRequest.prototype.getAuthConfigRef = function() {
  return /** @type{?proto.core.skv2.solo.io.ClusterObjectRef} */ (
    jspb.Message.getWrapperField(this, github_com_solo$io_skv2_api_core_v1_core_pb.ClusterObjectRef, 1));
};


/** @param {?proto.core.skv2.solo.io.ClusterObjectRef|undefined} value */
proto.rpc.edge.gloo.solo.io.GetAuthConfigDetailsRequest.prototype.setAuthConfigRef = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.rpc.edge.gloo.solo.io.GetAuthConfigDetailsRequest.prototype.clearAuthConfigRef = function() {
  this.setAuthConfigRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rpc.edge.gloo.solo.io.GetAuthConfigDetailsRequest.prototype.hasAuthConfigRef = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rpc.edge.gloo.solo.io.GetAuthConfigDetailsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rpc.edge.gloo.solo.io.GetAuthConfigDetailsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.rpc.edge.gloo.solo.io.GetAuthConfigDetailsResponse.displayName = 'proto.rpc.edge.gloo.solo.io.GetAuthConfigDetailsResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rpc.edge.gloo.solo.io.GetAuthConfigDetailsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.rpc.edge.gloo.solo.io.GetAuthConfigDetailsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rpc.edge.gloo.solo.io.GetAuthConfigDetailsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.GetAuthConfigDetailsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    authConfig: (f = msg.getAuthConfig()) && proto.rpc.edge.gloo.solo.io.AuthConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rpc.edge.gloo.solo.io.GetAuthConfigDetailsResponse}
 */
proto.rpc.edge.gloo.solo.io.GetAuthConfigDetailsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rpc.edge.gloo.solo.io.GetAuthConfigDetailsResponse;
  return proto.rpc.edge.gloo.solo.io.GetAuthConfigDetailsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rpc.edge.gloo.solo.io.GetAuthConfigDetailsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rpc.edge.gloo.solo.io.GetAuthConfigDetailsResponse}
 */
proto.rpc.edge.gloo.solo.io.GetAuthConfigDetailsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rpc.edge.gloo.solo.io.AuthConfig;
      reader.readMessage(value,proto.rpc.edge.gloo.solo.io.AuthConfig.deserializeBinaryFromReader);
      msg.setAuthConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rpc.edge.gloo.solo.io.GetAuthConfigDetailsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rpc.edge.gloo.solo.io.GetAuthConfigDetailsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rpc.edge.gloo.solo.io.GetAuthConfigDetailsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rpc.edge.gloo.solo.io.GetAuthConfigDetailsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthConfig();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rpc.edge.gloo.solo.io.AuthConfig.serializeBinaryToWriter
    );
  }
};


/**
 * optional AuthConfig auth_config = 1;
 * @return {?proto.rpc.edge.gloo.solo.io.AuthConfig}
 */
proto.rpc.edge.gloo.solo.io.GetAuthConfigDetailsResponse.prototype.getAuthConfig = function() {
  return /** @type{?proto.rpc.edge.gloo.solo.io.AuthConfig} */ (
    jspb.Message.getWrapperField(this, proto.rpc.edge.gloo.solo.io.AuthConfig, 1));
};


/** @param {?proto.rpc.edge.gloo.solo.io.AuthConfig|undefined} value */
proto.rpc.edge.gloo.solo.io.GetAuthConfigDetailsResponse.prototype.setAuthConfig = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.rpc.edge.gloo.solo.io.GetAuthConfigDetailsResponse.prototype.clearAuthConfig = function() {
  this.setAuthConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.rpc.edge.gloo.solo.io.GetAuthConfigDetailsResponse.prototype.hasAuthConfig = function() {
  return jspb.Message.getField(this, 1) != null;
};


goog.object.extend(exports, proto.rpc.edge.gloo.solo.io);
