package check

import (
    "context"

    "github.com/solo-io/solo-projects/projects/gloo-fed/pkg/api/fed.solo.io/v1/types"
    {{ base_group_import_name $ }} "github.com/solo-io/solo-apis/pkg/api/{{ base_proto_group_shorthand $ }}.solo.io/{{ base_group_version $ }}"
    sets "github.com/solo-io/solo-apis/pkg/api/{{ base_proto_group_shorthand $ }}.solo.io/{{ base_group_version $ }}/sets"
    types2 "github.com/solo-io/solo-apis/pkg/api/{{ base_proto_group_shorthand $ }}.solo.io/{{ base_group_version $ }}"
    "github.com/solo-io/solo-projects/projects/gloo-fed/pkg/discovery/translator/summarize"
    "github.com/solo-io/go-utils/stringutils"
    corev1 "github.com/solo-io/skv2/pkg/api/core.skv2.solo.io/v1"
)

{{- range $resource := $.Resources }}

{{- $kindLowerCamel := lower_camel $resource.Kind }}

func Get{{ $resource.Kind }}Summary(ctx context.Context, set sets.{{ $resource.Kind }}Set, watchedNamespaces []string, cluster string) *types.GlooInstanceSpec_Check_Summary {
    summary := &types.GlooInstanceSpec_Check_Summary{}

    for _, {{ $kindLowerCamel }}Iter := range set.List() {
        {{ $kindLowerCamel }} := {{ $kindLowerCamel }}Iter

        // If the resource is not in the right cluster, continue
		if {{ $kindLowerCamel }}.GetClusterName() != cluster {
			continue
		}

        // If the resource is not in a watched namespace, continue
        if len(watchedNamespaces) > 0 && !stringutils.ContainsString({{ $kindLowerCamel }}.Namespace, watchedNamespaces) {
        	continue
        }

        summary.Total += 1

        if {{ $kindLowerCamel }}.Status.GetState() == types2.{{ $resource.Kind }}Status_{{ rejected_status_name $ }} {
            summary.Errors = append(summary.Errors, &types.GlooInstanceSpec_Check_Summary_ResourceReport{
                Ref: &corev1.ObjectRef{
                    Name:      {{ $kindLowerCamel }}.Name,
                    Namespace: {{ $kindLowerCamel }}.Namespace,
                },
                Message: {{ $kindLowerCamel }}.Status.{{ status_reason_field $ }},
            })
        }

        {{ if has_warning_status $ }}
        if {{ $kindLowerCamel }}.Status.GetState() == types2.{{ $resource.Kind }}Status_Warning {
            summary.Warnings = append(summary.Warnings, &types.GlooInstanceSpec_Check_Summary_ResourceReport{
                Ref: &corev1.ObjectRef{
                    Name:      {{ $kindLowerCamel }}.Name,
                    Namespace: {{ $kindLowerCamel }}.Namespace,
                },
                Message: {{ $kindLowerCamel }}.Status.{{ status_reason_field $ }},
            })
        }
        {{ end }}
    }

    summarize.SortLists(summary)
    return summary
}

{{- end }}
