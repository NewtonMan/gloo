name: eks-scale-tests
run-name: ${{ github.actor }} Run scales tests - 20 eks clusters - 300 upstreams per cluster
on:
  workflow_dispatch:
    inputs:
      edge_enterprise_version:
        description: Edge Enterprise version
        required: false
        default: 1.13.9
      helm-version:
        description: Helm version
        required: true
        default: v3.8.2
      environment_id:
        description: Environment ID - the name of the environment you want to create
        required: true
        default: edge-scale
      destroy_infra:
        description: Destroy cloud infrastructure on completion
        type: boolean
        default: false

jobs:
  setup-environment:
    uses: solo-io/gloo-eng-test-beds/.github/workflows/build-eng-cicd-env.yaml@main
    with:
      environment: eks-developers-acct
      num-remote-clusters: 20
      job-reference: ${{ github.event.inputs.environment_id }}
      cluster-env-params: "EKS_MGMT_INSTANCE_TYPE=c6a.4xlarge EKS_WORKER_INSTANCE_TYPE=c6a.2xlarge"
      component: gloo-edge
    secrets:
      GIT_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  scale-tests:
    runs-on: ubuntu-latest
    needs: setup-environment
    environment: eks-developers-acct
    env:
      GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      KUBECONFIG_FILE: kubeconfig.cicd-${{ github.event.inputs.environment_id }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      #       Download kubeconfig from the setup-environment job:
      #       https://github.com/solo-io/gloo-eng-test-beds/blob/de4c361ed04bb514b4c5db4533f15685aadb1c6f/.github/workflows/build-eng-cicd-env.yaml#L145-L152
      - name: Download kubeconfig
        uses: actions/download-artifact@v3
        id: kubeconfig
        with:
          name: ${{ env.KUBECONFIG_FILE }}
      - run: |
          KUBECONFIG=${{ steps.kubeconfig.outputs.download-path }}/${{ env.KUBECONFIG_FILE }}
          chmod 600 ${KUBECONFIG}
          echo "KUBECONFIG=${KUBECONFIG}" >> ${GITHUB_ENV}

      - name: Install cli dependencies (helm, kubectl and istioctl)
        env:
          HELM_VERSION: ${{ github.event.inputs.helm-version }}
          GLOO_EE_VERSION: ${{ github.event.inputs.edge_enterprise_version }}
        run: |
          ./ci/eks/install-dependencies.sh

      - name: Install Edge
        env:
          GLOO_EDGE_LICENSE_KEY: ${{ secrets.LICENSE_KEY }}
          GLOO_EE_VERSION: ${{ github.event.inputs.edge_enterprise_version }}
          NUM_REMOTE_CLUSTERS: 20
        run: |
          ./ci/eks/install-edge.sh

      - name: Run Scale Tests
        id: scale
        env:
          GLOO_EDGE_LICENSE_KEY: ${{ secrets.LICENSE_KEY }}
          NUM_REMOTE_CLUSTERS: 20
          ITERATIONS: 100
        run: |
          ./ci/eks/data-creation.sh
            
      - name: Upload results file
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.event.inputs.environment_id }}-run-output.csv
          path: |
            ${{ env.POST_PROCESS_LOCATION }}
          retention-days: 7

  cleanup-environment:
    uses: solo-io/gloo-eng-test-beds/.github/workflows/cleanup-eng-env.yaml@main
    needs: scale-tests
    if: ${{ github.event.inputs.destroy_infra == 'true' }}
    with:
      environment: eks-developers-acct
      cluster-group: cicd-${{ github.event.inputs.environment_id }}
    secrets:
      GIT_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}