name: GGII Tests
on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  prepare_env:
    name: Prepare Environment
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    outputs:
      should-auto-succeed-tests: ${{ steps.run-strategy.outputs.auto_succeed }}
    steps:
    - name: Cancel Previous Actions
      uses: styfle/cancel-workflow-action@0.11.0
      with:
        access_token: ${{ github.token }}
    - id: checkout-code
      uses: actions/checkout@v3
      with:
        # We require gathering the branch and tag history since we rely on a `git diff`
        # which compares the state of two branches
        fetch-depth: 0
    - id: process-skip-directives
      uses: ./.github/workflows/composite-actions/process-skip-directives
      with:
        base-ref: ${{ github.base_ref }}
    - id: run-strategy
      name: Determine Test Run Strategy
      run: |
        skip_kube_tests=${{ steps.process-skip-directives.outputs.skip-kube-tests }}
        if [[ ! -z $skip_kube_tests && $skip_kube_tests = true ]] ; then
          echo "auto_succeed=true" >> $GITHUB_OUTPUT
        fi

  test_gloo_gateway:
    name: Build and Test Gloo Gateway
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    needs: prepare_env
    if: ${{ !github.event.pull_request.draft && needs.prepare_env.outputs.should-auto-succeed-tests != 'true' }}
    steps:
    - uses: actions/checkout@v4
    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version-file: go.mod
    - name: Build
      run: go build -v ./projects/gateway2/... ./projects/gloo/cli/cmd
    - name: Install utils for env tests
      run: make -C ./projects/gateway2/ install-go-tools
    - name: Test with the Go CLI
      run: go test ./projects/gateway2/...

  conformance:
    name: Run Gateway api conformance tests
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    needs: prepare_env
    if: ${{ !github.event.pull_request.draft && needs.prepare_env.outputs.should-auto-succeed-tests != 'true' }}
    steps:
    - uses: actions/checkout@v4
    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version-file: go.mod
    - name: Install kind
      uses: helm/kind-action@v1.5.0
      with:
        install_only: true
        version: v0.20.0
    - name: Set up cluster and helm chart
      run: ./ci/kind/setup-kind.sh
    - name: Additional cluster setup
      run: ./projects/gateway2/kind.sh
    - name: Install Gloo Gateway
      run: helm upgrade -i -n gloo-system gloo ./_test/gloo-1.0.0-ci1.tgz --create-namespace
    - name: Pre-test cleanup of resources
      run: kubectl delete rs --all
    - name: Test Conformance
      run: make -C ./projects/gateway2/ conformance
    - name: save results
      if: ${{ failure() }}
      shell: bash
      run: |
        mkdir -p _output/conformance-artifacts
        [ -f _output/conformance-artifacts/test-out.txt ] || touch _output/conformance-artifacts/test-out.txt
        echo "kubectl get pods -A" >> _output/conformance-artifacts/test-out.txt
        kubectl get pods -A >> _output/conformance-artifacts/test-out.txt
        echo "kubectl logs -n gloo-system deployment/gloo --all-containers=true" >> _output/conformance-artifacts/test-out.txt
        kubectl logs -n gloo-system deployment/gloo --all-containers=true >> _output/conformance-artifacts/test-out.txt
    - uses: actions/upload-artifact@v3
      if: ${{ failure() }}
      with:
        name: conformance-kube-dump
        path: "_output/conformance-artifacts"
        if-no-files-found: warn