name: CI
on: pull_request
jobs:
  codegen:
    name: codegen check
    runs-on: ubuntu-18.04
    steps:
      - name: Cancel Previous Actions
        uses: styfle/cancel-workflow-action@0.4.1
        with:
          access_token: ${{ github.token }}
      - name: Set up Go 1.14
        uses: actions/setup-go@v1
        with:
          go-version: 1.14
        id: go
      - name: Install Protoc
        uses: arduino/setup-protoc@v1.1.2
        with:
          version: '3.6.1'
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Configure git for private modules
        env:
          # matches the GITHUB_ACTION secret used in the cloudbuild, but named CI_ADMIN_GITHUB_TOKEN here
          # because secrets.GITHUB_ACTION is reserved in github workflows
          TOKEN: ${{ secrets.CI_ADMIN_GITHUB_TOKEN }}
        run: git config --global url."https://soloio_bot:${TOKEN}@github.com".insteadOf "https://github.com"
      - name: Yarn Install
        uses: borales/actions-yarn@v2.0.0
        with:
          cmd: --cwd projects/gloo-ui install
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Generate Code
        run: |
          ./ci/check-code-gen.sh
  regression_tests:
    name: k8s regression tests
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        kube-e2e-test-type: ['gateway', 'gateway-read-only-ui', 'gloo-mtls', 'redis-clientside-sharding', 'wasm']
    steps:
      - name: Cancel Previous Actions
        uses: styfle/cancel-workflow-action@0.4.1
        with:
          access_token: ${{ github.token }}
      - name: Clean up pre-installed tools
        # https://github.com/actions/virtual-environments/issues/1918
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/share/boost
          sudo rm -rf $AGENT_TOOLSDIRECTORY
      - name: Free disk space
        # https://github.com/actions/virtual-environments/issues/709
        run: |
          sudo apt-get clean
          df -h
      - name: Setup - gcloud / gsutil
        uses: google-github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.GLOO_EE_GCR_KEY }}
          project_id: gloo-ee
          export_default_credentials: true
      - name: Setup docker
        run: |
          gcloud auth configure-docker
      - name: Set up Go 1.14
        uses: actions/setup-go@v1
        with:
          go-version: 1.14
        id: go
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - uses: engineerd/setup-kind@v0.5.0
        with:
          name: kind
          version: v0.11.1
          image: 'kindest/node:v1.17.17@sha256:66f1d0d91a88b8a001811e2f1054af60eef3b669a9a74f9b6db871f2f1eeed00'
      - uses: azure/setup-kubectl@v1
        id: kubectl
        with:
          version: 'v1.18.0'
      - uses: azure/setup-helm@v1
        with:
          version: v3.2.0
      - name: Configure git for private modules
        env:
          # matches the GITHUB_ACTION secret used in the cloudbuild, but named CI_ADMIN_GITHUB_TOKEN here
          # because secrets.GITHUB_ACTION is reserved in github workflows
          TOKEN: ${{ secrets.CI_ADMIN_GITHUB_TOKEN }}
        run: git config --global url."https://soloio_bot:${TOKEN}@github.com".insteadOf "https://github.com"
      - name: Setup test env
        run: |
          ./ci/kind.sh
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.CI_ADMIN_GITHUB_TOKEN }}
      - name: Testing - kube e2e regression tests
        env:
          KUBE2E_TESTS: ${{ matrix.kube-e2e-test-type }}
        run: |
          make run-ci-regression-tests
      - name: Debug Info
        if: failure()
        run: |
          # see what's in the cluster if we failed
          kubectl get all -A
          kubectl get configmaps -A
