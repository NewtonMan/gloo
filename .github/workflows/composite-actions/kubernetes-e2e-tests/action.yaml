name: Kubernetes End-to-End tests

# These tests are located in the /test/kubernetes/e2e directory
description: Kubernetes End-to-End tests

inputs:
  cluster-name:
    required: true
    description: The name of the KinD cluster
  test-args:
    required: true
    description: The list of arguments passed to the test invocation
  run-regex:
    required: true
    # In the future, it would be preferable to accept this as a list of strings
    # and to then build the regex from that list
    description: The regex passed to the test invocation with the -run flag
  istio-version:
    required: true
    description: The version of Istio to use
  matrix-label:
    required: true
    description: The version of the matrix being used - used to name artifacts to prevent filename collisions
  slackbot-bearer:
    required: true
    description: The secret bearer token for the slackbot integration
  branch:
    required: false
    description: The branch from which the action was run

runs:
  using: "composite"
  steps:
  - name: Install test tools
    shell: bash
    run: make install-test-tools
  - name: Execute tests
    env:
      GO_TEST_USER_ARGS: ${{ inputs.test-args }} -run "${{ inputs.run-regex }}"
      CLUSTER_NAME: ${{ inputs.cluster-name }}
      TEST_PKG: ./test/kubernetes/e2e/tests
      ISTIO_VERSION: ${{ inputs.istio-version }}
    shell: bash
    run: make go-test
  - name: Summarize tests
    if: ${{ always() }}
    # Print out a summary of ALL tests run under this action. In the future we can use this tool
    # with the --json flag to export the results for centralized processing.
    shell: bash
    run: go run ./ci/github-actions/go-test-summary
  - name: Summarize tests as json
    if: ${{ always() }}
    # Save out a summary of ALL tests run under this action in json format for further processing
    shell: bash
    run: go run ./ci/github-actions/go-test-summary --json --out-file './_test/test_log/go-test-json'
  - name: Archive bug report directory on failure
    if: ${{ failure() }}
    uses: actions/upload-artifact@v4
    with:
      name: bug-report-${{ inputs.cluster-name }}-${{ inputs.matrix-label }}-attempt-${{ github.run_attempt }}
      path: ./_test/bug_report/${{ inputs.cluster-name }}
  - name: Archive test results
    if: ${{ always() }}
    uses: actions/upload-artifact@v4
    with:
      name: go-test-summary-${{ inputs.cluster-name }}-${{ inputs.matrix-label }}-attempt-${{ github.run_attempt }}
      path: ./_test/test_log/go-test-summary
  - name: compute-preamble
    id: compute-preamble
    shell: bash
    run: |
      echo "SLACK_CHANNEL=C04CJMXAH7A" >> $GITHUB_ENV     #edge-nightly-results by default
      if [[ ${{github.event_name == 'workflow_dispatch'}} = true ]]; then
        trigger="Gloo OSS Manual run"
        branch=${{ inputs.branch }}
        echo "SLACK_CHANNEL=C0314KESVNV" >> $GITHUB_ENV   #slack-integration-testing if manually run
      elif [[ ${{github.event.schedule == '0 5 * * *'}} = true ]]; then
        trigger="Gloo OSS nightlies"
        branch="main"
      elif [[ ${{github.event.schedule == '0 6 * * 1'}} = true ]]; then
        trigger="Gloo OSS weeklies"
        branch="v1.17.x"
      elif [[ ${{github.event.schedule == '0 7 * * 1'}} = true ]]; then
        trigger="Gloo OSS weeklies"
        branch="v1.16.x"
      elif [[ ${{github.event.schedule == '0 8 * * 1'}} = true ]]; then
        trigger="Gloo OSS nightlies"
        branch="v1.15.x"
      fi
      preamble="$trigger ($branch)"
      echo "Setting PREAMBLE as $preamble"
      echo "preamble=$preamble" >> $GITHUB_OUTPUT
  - name: Send Slack Message
    if: ${{ always() }}
    env:
      SLACKBOT_BEARER: ${{ inputs.slackbot-bearer }}
      # SLACK_CHANNEL: C04CJMXAH7A    #edge-nightly-results by default
      SLACK_CHANNEL: C0314KESVNV    #slack-integration-testing for testing
    shell: bash
    run: |
      go run .github/workflows/helpers/notify/slack_test_summary.go './_test/test_log/go-test-json'
