name: Gloo Snapshot Tests

description: Tests which run Gloo Edge classic and gateway APIs and provide inputs per test directly as a snapshot

runs:
  using: "composite"
  steps:
    - name: Run matrix for ${{ matrix.gloo-api-type }}
      shell: bash
      run: |
        echo "Running snapshot tests for ${{ matrix.gloo-api-type }}"
        echo "Kube version: ${{ matrix.kube-version.kubectl }}"
        echo "Node version: ${{ matrix.kube-version.node }}"
        echo "Kind version: ${{ matrix.kube-version.kind }}"
    - name: Prep Go Runner
      uses: ./.github/workflows/composite-actions/prep-go-runner
    - name: Install kind
      uses: helm/kind-action@v1.5.0
      with:
        install_only: true
        version: ${{ matrix.kube-version.kind }}
    - uses: azure/setup-kubectl@v3
      id: kubectl
      with:
        version: ${{ matrix.kube-version.kubectl }}
    - uses: azure/setup-helm@v3
      with:
        version: ${{ matrix.kube-version.helm }}
    - name: Setup env and run snapshot tests
      shell: bash
      env:
        CLUSTER_NAME: 'kind'
        CLUSTER_NODE_VERSION: ${{ matrix.kube-version.node }}
      run: |
        export KUBERNETES_MASTER=$HOME/.kube
        export ISTIOCTL_VERSION=1.18.2
        export ISTIO_HUB=docker.io/istio
        export VERSION=1.0.1-dev
        export ISTIO_VERSION=1.18.2
        make run-${{ matrix.gloo-api-type }}-snapshot-e2e-tests
    - name: save results
      if: ${{ failure() }}
      shell: bash
      run: mkdir -p _output/snapshot-artifacts && echo '{"url":"https://github.com/solo-io/gloo/actions/runs/${{github.run_id}}",
        "name":"${{matrix.gloo-api-type}}@k8s${{matrix.kube-version.kubectl}}"}' > _output/snapshot-artifacts/test-out.json
    - uses: actions/upload-artifact@v3
      if: ${{ failure() }}
      with:
        name: ${{matrix.gloo-api-type}}@k8s${{matrix.kube-version.kubectl}}-kube-dump
        path: "_output/snapshot-artifacts"
        if-no-files-found: warn