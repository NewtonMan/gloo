name: security-scan
on:
  release:
    types: [created]
jobs:
  release:
    name: Trivy Scan
    runs-on: "ubuntu-18.04"
    env:
      TAGGED_VERSION: ${{ github.ref }}
      IMAGE_REPO: quay.io/solo-io
      SCAN_DIR: _output/scans
      GITHUB_TOKEN: ${{ secrets.CI_ADMIN_GITHUB_TOKEN }}
    strategy:
      matrix:
        image-type: [ 'rate-limit-ee', 'gloo-ee', 'gloo-ee-envoy-wrapper', 'observability-ee', 'extauth-ee', 'gloo-fed', 'gloo-fed-apiserver', 'gloo-fed-apiserver-envoy', 'gloo-federation-console', 'gloo-fed-rbac-validating-webhook' ]
    steps:
      - name: Cancel Previous Actions
        uses: styfle/cancel-workflow-action@0.4.1
        with:
          access_token: ${{ github.token }}
      - name: Free disk space
        # https://github.com/actions/virtual-environments/issues/709
        run: |
          sudo apt-get clean
          df -h
      - name: Set up Go 1.16.3
        uses: actions/setup-go@v2
        with:
          go-version: 1.16.3
        id: go
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Configure git for private modules
        env:
          # matches the GITHUB_ACTION secret used in the cloudbuild, but named CI_ADMIN_GITHUB_TOKEN here
          # because secrets.GITHUB_ACTION is reserved in github workflows
          TOKEN: ${{ secrets.CI_ADMIN_GITHUB_TOKEN }}
        run: git config --global url."https://soloio_bot:${TOKEN}@github.com".insteadOf "https://github.com"
      - name: Setup - gcloud / gsutil
        uses: google-github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.GLOO_VULN_REPORTER }}
          project_id: solo-public
          export_default_credentials: true
      - name: Build an image from Dockerfile
        id: build-docker-image
        run: |
          go env -w GOPRIVATE=github.com/solo-io
          go mod tidy
          VERSION=$(git describe --tags | cut -c 2-)
          TAGGED_VERSION=v$(echo $VERSION) LOCAL_BUILD=true make ${{ matrix.image-type }}-docker
          echo "::set-output name=VERSION::$(echo $VERSION)"
      - name: Setup Gloo Docs Output
        run: |
          mkdir -p ${{ env.SCAN_DIR }}/${{ steps.build-docker-image.outputs.VERSION }}
      - name: Gloo Docs
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.IMAGE_REPO }}/${{ matrix.image-type }}:${{ steps.build-docker-image.outputs.VERSION }}
          format: 'template'
          template: '@hack/utils/security_scan_report/markdown.tpl'
          output: ${{ env.SCAN_DIR }}/${{ steps.build-docker-image.outputs.VERSION }}/${{ matrix.image-type }}_cve_report.docgen
          severity: 'CRITICAL,HIGH'
      - name: Publish Docs
        run: |
          VERSION=${{ steps.build-docker-image.outputs.VERSION }} SCAN_FILE=${{ matrix.image-type }}_cve_report.docgen make publish-security-scan
