name: Solo-Projects Regression Tests
description: run regression test suite
inputs:
  GLOO_EE_GCR_KEY:
    required: true
    description: access key for Google Cloud
  QUAY_IO_PASSWORD:
    required: true
    description: access key for Quay Image repository
  GITHUB_TOKEN:
    required: true
    description: access token for use in CI
  TESTSPACE_TOKEN:
    required: true
    description: access token uploading test results
  
runs:
  using: "composite"
  steps:
  - uses: ./.github/actions/standard-gloo-ee-setup
    with:
      GLOO_EE_GCR_KEY: ${{ inputs.GLOO_EE_GCR_KEY }}
      QUAY_IO_PASSWORD: ${{ inputs.QUAY_IO_PASSWORD }}
      GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
  - name: Install kind
    uses: helm/kind-action@v1.5.0
    with:
      install_only: true
      version: ${{ matrix.kube-version.kind }}
  - uses: azure/setup-kubectl@v3
    id: kubectl
    with:
      version: ${{ matrix.kube-version.kubectl }}
  - uses: azure/setup-helm@v3
    with:
      version: ${{ matrix.kube-version.helm }}
  - name: Setup test env
    shell: bash
    env:
      USE_FIPS: ${{ matrix.kube-e2e-test-type.use-fips }}
      CLUSTER_NODE_VERSION: ${{ matrix.kube-version.node }}
    run: ./ci/kind/setup-kind.sh
  - name: Testing - kube e2e regression tests
    shell: bash
    env:
      KUBE2E_TESTS: ${{ matrix.kube-e2e-test-type.test }}
      USE_FIPS: ${{ matrix.kube-e2e-test-type.use-fips }}
    run: make run-ci-regression-tests
  - uses: testspace-com/setup-testspace@v1
    with:
      domain: solo-io.testspace.com
      token: ${{ inputs.TESTSPACE_TOKEN }}
    if: ${{ always() && github.event_name == 'push' && github.ref == 'refs/heads/main' }}
  - name: Push result to Testspace server
    shell: bash
    run: testspace push --verbose "**/junit.xml"
    if: ${{ always() && github.event_name == 'push' && github.ref == 'refs/heads/main' }}
  - name: System Info
    if: always()
    shell: bash
    run: |
      df -h
      docker ps -a
      docker images
  - name: save results
    if: ${{ failure() }}
    shell: bash
    run: mkdir -p _output/kube2e-artifacts && echo '{"url":"https://github.com/solo-io/solo-projects/actions/runs/${{github.run_id}}",
            "name":"${{matrix.kube-e2e-test-type.test}}@k8s${{matrix.kube-version.kubectl}}"}' > _output/kube2e-artifacts/test-out.json
  - uses: actions/upload-artifact@v3
    if: ${{ failure() }}
    with:
      name: ${{matrix.kube-e2e-test-type.test}}@k8s${{matrix.kube-version.kubectl}}-kube-dump
      path: "_output/kube2e-artifacts"
      if-no-files-found: warn
