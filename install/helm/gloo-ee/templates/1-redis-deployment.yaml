{{- if .Values.rateLimit.enabled }}
{{- $image := merge .Values.redis.deployment.image .Values.global.image }}
{{- range $name, $spec := .Values.gloo.gatewayProxies }}
{{- $redisName := $.Values.redis.deployment.name }}
{{- if $.Values.global.extensions.dataplanePerProxy }}
{{- $redisName = printf "%s-%s" $redisName ($name | kebabcase) }}
{{- end }} # .Values.global.extensions.dataplanePerProxy
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: gloo
    gloo: {{ $redisName }}
  name: {{ $redisName }}
  namespace: {{ $.Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      gloo: {{ $redisName }}
  template:
    metadata:
      labels:
        gloo: {{ $redisName }}
    spec:
      containers:
        - image: {{template  "gloo.image" $image}}
          imagePullPolicy:  {{ $image.pullPolicy }}
          name: redis
          ports:
            - containerPort: {{ $.Values.redis.deployment.staticPort }}
          env:
            - name: MASTER
              value: "true"
          volumeMounts:
            - mountPath: /redis-master-data
              name: data
      securityContext:
        runAsNonRoot: true
        runAsGroup: {{ printf "%.0f" (float64 $.Values.redis.deployment.runAsGroup) }}
        fsGroup: {{ printf "%.0f" (float64 $.Values.redis.deployment.fsGroup) }}
        {{- if not $.Values.redis.deployment.floatingUserId }}
        runAsUser: {{ printf "%.0f" (float64 $.Values.redis.deployment.runAsUser) -}}
        {{- end }}
      volumes:
        - name: data
          emptyDir: {}
---
{{- end }} # range $name, $spec := .Values.gatewayProxies
{{- end }} # .Values.rateLimit.enabled
