{{- if .Values.gloo.gateway.rolloutJob.enabled }}
{{- $image := .Values.gloo.gateway.rolloutJob.image }}
{{- if .Values.global }}
{{- $image = merge .Values.gloo.gateway.rolloutJob.image .Values.global.image }}
{{- end }}
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: gloo
    gloo: resource-rollout
  name: gloo-ee-resource-rollout
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "3" # run this job before the gloo-resource-rollout job but after the RBAC resources are created
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
spec:
  {{- include "gloo.jobSpecStandardFields" .Values.gloo.gateway.rolloutJob | nindent 2 -}}
  template:
    metadata:
      labels:
        gloo: resource-rollout
        sidecar.istio.io/inject: "false"
        {{- if .Values.gloo.gateway.rolloutJob.extraPodLabels }}
        {{- range $key, $value := .Values.gloo.gateway.rolloutJob.extraPodLabels }}
        {{ $key | quote }}: {{ $value | quote }}
        {{- end }}
        {{- end }}
      {{- if or .Values.gloo.settings.linkerd .Values.gloo.gateway.rolloutJob.extraPodAnnotations }}
      annotations:
        {{- if .Values.gloo.settings.linkerd }}
        "linkerd.io/inject": disabled
        {{- end }}
        {{- range $key, $value := .Values.gloo.gateway.rolloutJob.extraPodAnnotations }}
        {{ $key | quote }}: {{ $value | quote }}
        {{- end }}
      {{- end }}
    spec:
      {{- include "gloo.pullSecret" $image | nindent 6 -}}
      serviceAccountName: gloo-resource-rollout
      {{- include "gloo.podSpecStandardFields" .Values.gloo.gateway.rolloutJob | nindent 6 -}}
      volumes:
        - name: custom-resource-config-volume
          configMap:
            name: gloo-ee-custom-resource-config
            items:
              - key: custom-resources
                path: custom-resources
      containers:
        - name: kubectl
          image: {{template "gloo.image" $image}}
          imagePullPolicy: {{ $image.pullPolicy }}
          env:
            - name: HAS_CUSTOM_RESOURCES
              valueFrom:
                configMapKeyRef:
                  name: gloo-ee-custom-resource-config
                  key: has-custom-resources
          volumeMounts:
            - name: custom-resource-config-volume
              mountPath: /etc/gloo-custom-resources
          securityContext:
            runAsNonRoot: true
            {{- if not .Values.gloo.gateway.rolloutJob.floatingUserId }}
            runAsUser: {{ printf "%.0f" (float64 .Values.gloo.gateway.rolloutJob.runAsUser) -}}
            {{- end }}
          {{- with .Values.gloo.gateway.rolloutJob.resources }}
          resources: {{ toYaml . | nindent 12}}
          {{- end }}
          command:
          - /bin/sh
          - -c
          - |
            {{ if and .Values.gloo.gateway.enabled .Values.gloo.gateway.validation.enabled .Values.gloo.gateway.validation.webhook.enabled -}}
            # if validation webhook is enabled, wait for deployment rollout so validation service will be available
            kubectl rollout status deployment -n {{ .Release.Namespace }} gloo
            {{- end }}

            # apply Gloo Edge Enterprise custom resources
            if [ $HAS_CUSTOM_RESOURCES == "true" ]
            then
              kubectl apply -f /etc/gloo-custom-resources/custom-resources || exit $?
            else
              echo "no custom resources to apply"
            fi
{{- end }}{{/* if .Values.gloo.gateway.rolloutJob.enabled  */}}
