apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: api-server
  namespace: {{ .Release.Namespace }}
  labels:
    gloo: {{ .Values.apiServer.service.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      gloo: {{ .Values.apiServer.service.name }}
  template:
    metadata:
      labels:
        gloo: {{ .Values.apiServer.service.name }}
    spec:
      imagePullSecrets:
        - name: solo-io-docker-secret
      containers:
        - name: apiserver-ui
          image: '{{.Values.apiServer.deployment.ui.image.repository}}:{{.Values.apiServer.deployment.ui.image.tag}}'
          imagePullPolicy: {{.Values.apiServer.deployment.ui.image.pullPolicy}}
          volumeMounts:
            - name: empty-cache
              mountPath: /var/cache/nginx
            - name: empty-run
              mountPath: /var/run
          ports:
            - name: static
{{- if .Values.apiServer.noAuth }}
              containerPort: {{.Values.apiServer.deployment.ui.staticPortNoAuth}}
{{- else }}
              containerPort: {{.Values.apiServer.deployment.ui.staticPort}}
{{- end}}
              protocol: TCP
        - name: apiserver
          image: '{{.Values.apiServer.deployment.server.image.repository}}:{{.Values.apiServer.deployment.server.image.tag}}'
          imagePullPolicy: {{.Values.apiServer.deployment.server.image.pullPolicy}}
          env:
            - name: OAUTH_CLIENT
              value: {{.Values.apiServer.deployment.server.oauth.client}}
            - name: OAUTH_SERVER
              value: {{.Values.apiServer.deployment.server.oauth.server}}
{{- if .Values.apiServer.noAuth }}
            - name: NO_AUTH
              value: "1"
{{- end}}
          ports:
            - name: graphql
              containerPort: {{.Values.apiServer.deployment.server.graphqlPort}}
              protocol: TCP
      volumes:
        - name: empty-cache
          emptyDir: {}
        - name: empty-run
          emptyDir: {}