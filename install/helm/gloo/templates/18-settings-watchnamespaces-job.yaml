{{- if .Values.settings.watchNamespacesJob.enabled }}
{{- $image := .Values.settings.watchNamespacesJob.image }}
{{- if .Values.global }}
{{- $image = merge .Values.settings.watchNamespacesJob.image .Values.global.image }}
{{- end }}
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: gloo
    gloo: watchnamespaces
  name: gloo-watchnamespaces
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "5" # default
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
spec:
  {{- include "gloo.jobSpecStandardFields" .Values.settings.watchNamespacesJob | nindent 2 -}}
  template:
    metadata:
      labels:
        gloo: watchnamespaces
        sidecar.istio.io/inject: "false"
        {{- if .Values.settings.watchNamespacesJob.extraPodLabels }}
        {{- range $key, $value := .Values.settings.watchNamespacesJob.extraPodLabels }}
        {{ $key | quote }}: {{ $value | quote }}
        {{- end }}
        {{- end }}
      {{- if or .Values.settings.linkerd .Values.settings.watchNamespacesJob.extraPodAnnotations }}
      annotations:
        {{- if .Values.settings.linkerd }}
        "linkerd.io/inject": disabled
        {{- end }}
        {{- range $key, $value := .Values.settings.watchNamespacesJob.extraPodAnnotations }}
        {{ $key | quote }}: {{ $value | quote }}
        {{- end }}
      {{- end }}
    spec:
      {{- include "gloo.pullSecret" $image | nindent 6 -}}
      serviceAccountName: gloo-watchnamespaces
      {{- include "gloo.podSpecStandardFields" .Values.settings.watchNamespacesJob | nindent 6 -}}
      containers:
        - name: kubectl
          image: {{template "gloo.image" $image}}
          imagePullPolicy: {{ $image.pullPolicy }}
          securityContext:
            runAsNonRoot: true
            {{- if not .Values.settings.watchNamespacesJob.floatingUserId }}
            runAsUser: {{ printf "%.0f" (float64 .Values.settings.watchNamespacesJob.runAsUser) -}}
            {{- end }}
          {{- with .Values.settings.watchNamespacesJob.resources }}
          resources: {{ toYaml . | nindent 12}}
          {{- end }}
          command:
            - /bin/sh
            - -c
            - |
            {{- range $.Values.settings.watchNamespaces }}
              kubectl label namespace --overwrite {{ . }} gloo.solo.io/installation-{{ $.Release.Name }}-{{ $.Release.Namespace }}=watched || true
            {{- end }}
{{- if .Values.global.glooRbac.create }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: gloo
    gloo: rbac
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "0" # must be created before watchnamespaces job
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
  name: gloo-watchnamespaces
  namespace: {{ .Release.Namespace }}
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: gloo-watchnamespaces
  namespace: {{ .Release.Namespace }}
  labels:
    app: gloo
    gloo: rbac
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "0" # must be created before watchnamespaces job
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
rules:
  - apiGroups: [""]
    resources: ["namespaces"]
    verbs: ["patch", "get"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: gloo-watchnamespaces
  namespace: {{ .Release.Namespace }}
  labels:
    app: gloo
    gloo: rbac
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "0" # must be created before watchnamespaces job
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
roleRef:
  kind: Role
  name: gloo-watchnamespaces
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: gloo-watchnamespaces
    namespace: {{ .Release.Namespace }}
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: gloo-watchnamespaces{{ include "gloo.rbacNameSuffix" . }}
  labels:
    app: gloo
    gloo: rbac
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "0" # must be created before watchnamespaces job
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
rules:
  - apiGroups: [""]
    resources: ["namespaces"]
    verbs: ["patch", "get"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: gloo-watchnamespaces{{ include "gloo.rbacNameSuffix" . }}
  labels:
    app: gloo
    gloo: rbac
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "0" # must be created before watchnamespaces job
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
roleRef:
  kind: ClusterRole
  name: gloo-watchnamespaces{{ include "gloo.rbacNameSuffix" . }}
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: gloo-watchnamespaces
    namespace: {{ .Release.Namespace }}
{{- end }}{{/* if .Values.global.glooRbac.create */}}
{{- end }}{{/* if .Values.settings.watchNamespaces  */}}
